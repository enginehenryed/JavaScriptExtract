var position = this . position ;:==:var transform:==:this . transform ;
var express = require ( ' express ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var minute = this . minute ;:==:var hour:==:this . hour ;
var compress = options . compress  |  |  false ;:==:var obfuscate:==:options . obfuscate  |  |  false ;
var d1 = _ addDiv ( ' d1 ' ) , d2 = _ addDiv ( ' d2 ' ) , d3 = _ addDiv ( ' d3 ' ) ;:==:var c:==:_ jsPlumb . connect ( source : d1 , target : d2 ) ;
var context = frameState . context ;:==:var vertexBuffersToCreate:==:loadResources . vertexBuffersToCreate ;
var layout = imports . layout ;:==:var Divider:==:imports . Divider ;
var exchange = _ . find ( exchanges , function ( e ) return e . slug = = = slug ) ;:==:var name:==:exchange . name ;
var errors = get ( ' mass - spec - errors ' ) ;:==:var failures:==:get ( ' mass - spec - failures ' ) ;
var modelName = context . modelName ;:==:var methodNames:==:context . methodNames ;
var blessed = require ( ' blessed ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var anchor = posToIndex ( cm , sel . anchor ) ;:==:var head:==:posToIndex ( cm , sel . head ) ;
var derivedDataProperty = ' derivedDataProperty ' ;:==:var f:==:' f ' ;
var async = require ( ' async ' ) ;:==:var uglify:==:require ( ' uglify - js ' ) ;
var balloon1 = BABYLON . Mesh . createSphere ( ' balloon1 ' , 10 , 2 . 0 , scene ) ;:==:var balloon2:==:babylon . mesh . createSphere ( ' balloon2 ' , 10 , 2 . 0 , scene ) ;
var co = require ( ' co ' ) ;:==:var assert:==:require ( ' power - assert ' ) ;
var wait = think . await ;:==:var reject:==:think . reject ;
var sel = select . selectedIndex ;:==:var i d:==:select . options [ sel ] . i d ;
var pixelFormat = defaultValue ( options . pixelFormat , pixelFormat . rgb ) ;:==:var framebufferxOffset:==:defaultValue ( options . framebufferxOffset , 0 ) ;
var buffer = attribute . buffer ;:==:var type:==:attribute . type ;
var dependencies = options . dependencies ;:==:var arch:==:options . arch ;
var polylineBuckets = collection . _ polylineBuckets = ;:==:var polylines:==:collection . _ polylines ;
var shapes = powerbi . visuals . shapes ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var drawingBufferHeight = context . drawingBufferHeight ;:==:var distance:==:camera . distanceToBoundingSphere ( sphere ) ;
var maxHeight = options . maxHeight  |  |  10 . 0 ;:==:var updatable:==:options . updatable ;
var p = autoEl : i d : this . i d , cls : this . groupCls , layout : ' column ' , renderTo : j , bufferResize : false ;:==:var a:==:xtype : ' container ' , defaultType : this . defaultType , layout : ' form ' , defaults : hideLabel : true , anchor : ' 100% ' ;
var util = require ( ' util ' ) ;:==:var conf:==:env . conf . eventDumper  |  |  ;
var unicodeBidiService = require ( ' unicodeBidiService ' ) ;:==:var nullthrows:==:require ( ' nullthrows ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var range = math . range ;:==:var ceil:==:math . ceil ;
var quality = getValue ( options . quality , 50 ) ;:==:var destinationType:==:getValue ( options . destinationType , camera . destinationType . file_uri ) ;
var dynCall_vii = Module [ ' dynCall_vii ' ] = asm [ ' dynCall_vii ' ] ;:==:var dynCall_iii:==:Module [ ' dynCall_iii ' ]    asm [ ' dynCall_iii ' ] ;
var viewManagement = windows . ui . viewManagement ;:==:var applicationView:==:viewManagement . applicationView ;
var parentShape = labelPoint . parentShape ;:==:var validPositions:==:parentShape . validPositions ;
var defineGetter = scope . defineGetter ;:==:var mixin:==:scope . mixin ;
var dangerousStyleValue = require ( ' dangerousStyleValue ' ) ;:==:var getComponentName:==:require ( ' getComponentName ' ) ;
var xAxisModel = foundCpts . xAxisModel ;:==:var yAxisModel:==:foundCpts . yAxisModel ;
var scene = layout [ sceneIds [ i ] ] ;:==:var cameraposition:==:scene . cameraposition ;
var moduleRequire = traceur . syntax . trees . moduleRequire ;:==:var moduleSpecifier:==:traceur . syntax . trees . moduleSpecifier ;
var width = options . width  |  |  options . size  |  |  1 ;:==:var height:==:options . height  |  |  options . size  |  |  1 ;
var isName = corePrimitives . isName ;:==:var ascii85Stream:==:coreStream . ascii85Stream ;
var metadata = imports . metadata ;:==:var installer:==:imports . installer ;
var w = parseInt ( svgRoot . getAttribute ( ' width ' ) ) ;:==:var h:==:parseInt ( svgRoot . getAttribute ( ' height ' ) ) ;
var registerWrapper = scope . registerWrapper ;:==:var setInnerhtml:==:scope . setInnerhtml ;
var vfile = require ( ' vfile ' ) ;:==:var trough:==:require ( ' trough ' ) ;
var paddingLeft = this . _ paddingLeft ;:==:var minWidth:==:this . _ minWidth ;
var connect = require ( ' gulp - connect ' ) ;:==:var eslint:==:require ( ' gulp - eslint ' ) ;
var . . . x = z ;:==:var . . . a:==:a : 1 ;
var textContext = settings . textContext ;:==:var referenceContext:==:settings . referenceContext ;
var sourceErrorHandler = struct ( ' sourceErrorHandler ' ) ;:==:var stream:==:struct ( ' stream ' ) ;
var condition = this . transformAny ( tree . condition ) ;:==:var body:==:this . transformAny ( tree . body ) ;
var b = this . body_b ;:==:var surface_vr:==:this . surface_vr ;
var path = require ( ' path ' ) ;:==:var jsdom:==:require ( ' jsdom ' ) ;
var Observer = scope . Observer ;:==:var parser:==:scope . parser ;
var x = temp . x ;:==:var y:==:temp . y ;
var item = openList . index [ workingAddress ] . item ;:==:var small:==:item . querySelector ( ' small ' ) ;
var interactivityUtils = powerbi . visuals . interactivityUtils ;:==:var yAxisPosition:==:powerbi . visuals . yAxisPosition ;
var FOR_INIT_KEYS = exports . FOR_INIT_KEYS = [ ' left ' , ' init ' ] ;:==:var COMMENT_KEYS:==:exports . COMMENT_KEYS    [ ' leadingComments ' , ' trailingComments ' , ' innerComments ' ] ;
var message = _ ref6 . message ;:==:var assert:==:_ ref6 . assert ;
var args = inExpr . args ;:==:var values:==:inExpr . values ;
var b = tree . b = sr2 . firstChild ;:==:var shadow:==:tree . shadow    b . firstChild ;
var idDelta = idDeltaParser . parseShort ( ) ;:==:var idRangeOffset:==:idRangeOffsetParser . parseuShort ( ) ;
var Symbol = traceur . semantics . symbols . Symbol ;:==:var evaluateStringLiteral:==:traceur . util . evaluateStringLiteral ;
var z = this . x * q1 . y - this . y * q1 . x + this . z * q1 . w + this . w * q1 . z ;:==:var w:==:-this . x * q1 . x - this . y * q1 . y - this . z * q1 . z + this . w * q1 . w ;
var prevTok = this . prevTok ;:==:var lexState:==:this . lexState ;
var jscs = require ( ' gulp - jscs ' ) ;:==:var mocha:==:require ( ' gulp - spawn - mocha ' ) ;
var headerLinks = require ( ' headerLinks ' ) ;:==:var metadata:==:require ( ' metadata ' ) ;
var hw_name    = zombie_array [ index ] [ ' hw_name ' ] ;:==:var hw_icon:==:zombie_array [ index ] [ ' hw_icon ' ] ;
var repulsion = params . repulsion  |  |  400 . 0 ;:==:var damping:==:params . damping  |  |  0 . 5 ;
var p = self . pointAlongPathFrom ( location , distance ) ;:==:var m:==:segmentGradients [ p . segmentInfo . index ] ;
var username = options . username ;:==:var email:==:options . email ;
var target = this . targetPosition ;:==:var poleTarget:==:this . poleTargetPosition ;
var height = shape . height ;:==:var width:==:shape . width ;
var Node = scope . wrappers . Node ;:==:var getElementsByInterface:==:scope . getElementsByInterface ;
var startCol = this . startCol ;:==:var startLine:==:this . startLine ;
var dest = options . dest  |  |  new uint8Array ( destw * desth * 4 ) ;:==:var quality:==:options . quality      undefined ? 3 : options . quality ;
var cyanA200 = exports . cyanA200 = ' # 18ffff ' ;:==:var cyanA400:==:exports . cyanA400    ' # 00e5ff ' ;
var Person = db . model ( ' gh4284 ' , personSchema ) ;:==:var blogPost:==:db . model ( ' gh4284_0 ' , blogPostSchema ) ;
var x = 100 + 90 * ix ;:==:var y:==:100 + 100 * iy + 100 - 50 * ( ix % 2 ) ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var test:==:require ( ' tap ' ) . test ;
var chain = pendingFetch . chain ;:==:var deferred:==:pendingFetch . deferred ;
var casper = require ( ' casper ' ) . create ( ) ;:==:var dump:==:require ( ' utils ' ) . dump ;
var name = obj . name ;:==:var prefix:==:obj . prefix ;
var onTitleTouchTap = _ props . onTitleTouchTap ;:==:var showMenuIconButton:==:_ props . showMenuIconButton ;
var store = new datastore ( tests . data . readOnlyItemFileTestTemplates . getTestData ( ' geography_hierarchy_small ' ) ) ;:==:var d:==:new doh . deferred ( ) ;
var min = _ getSlideBoundaries . min ;:==:var max:==:_ getSlideBoundaries . max ;
var createParameterReference = parseTreeFactory . createParameterReference ;:==:var createPromise:==:parseTreeFactory . createPromise ;
var syntheticWheelEvent = require ( ' syntheticWheelEvent ' ) ;:==:var getEventCharCode:==:require ( ' getEventCharCode ' ) ;
var glob = require ( ' glob ' ) ;:==:var join:==:require ( ' path ' ) . join ;
var nodeCount = this . nodeCount ;:==:var nodeFieldCount:==:this . _ nodeFieldCount ;
var opts = _ _ alloyId6 . opts  |  |  ;:==:var models:==:_ _ alloyId5 . models ;
var keyParseError = errs . keyParseError ;:==:var keyEncryptedError:==:errs . keyEncryptedError ;
var regexp = spec . regexp ;:==:var matchFilter:==:spec . matchFilter ;
var nconf = require ( ' nconf ' ) ;:==:var express:==:require ( ' express ' ) ;
var expandable = _ props . expandable ;:==:var showExpandableButton:==:_ props . showExpandableButton ;
var t = self . time ( ) ;:==:var l:==:( gp ) ? t+gp : self . lasttime ;
var path = require ( ' path ' ) ;:==:var jade:==:require ( ' jade ' ) ;
var head = document . getElementsByTagName ( ' head ' ) [ 0 ]  |  |  document . documentElement ;:==:var script:==:document . createElement ( ' script ' ) ;
var semVerRegExp = system . semVerRegExp _ ( ) ;:==:var m:==:semVerRegExp . exec ( ' 1 . 2 . 3-a . b . c . 5 . d . 100 ' ) ;
var h = parseInt ( sheetsAcrossInput . value ) ;:==:var v:==:parseInt ( sheetsDownInput . value ) ;
var o = options  |  |  ;:==:var prefix:==:typeof o . prefix     ' undefined ' & & ' assert '  |  |  o . prefix ;
var info = imports . info ;:==:var auth:==:imports . auth ;
var s = OIMO . sin ( rad ) ;:==:var c:==:OIMO . cos ( rad ) ;
var closeTag = config . closeTag ;:==:var openTag:==:config . openTag ;
var x = queryNumericValue ( iconNode , ' x ' , namespaces . gx ) ;:==:var y:==:queryNumericValue ( iconNode , ' y ' , namespaces . gx ) ;
var createOperatorToken = parseTreeFactory . createOperatorToken ;:==:var createVariableStatement:==:parseTreeFactory . createVariableStatement ;
var arrowHead = math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;:==:var rounded:==:mxUtils . getValue ( this . style , ' rounded ' , ' 0 ' ) ;
var generateDepthBuffer = options . generateDepthBuffer = = = undefined ? true : options . generateDepthBuffer ;:==:var generateStencilBuffer:==:options . generateStencilBuffer      undefined ? false : options . generateStencilBuffer ;
var editorClient = firepad . editorClient ;:==:var entityManager:==:firepad . entityManager ;
var gulp    = require ( ' gulp ' ) ;:==:var plugins:==:require ( ' gulp - load - plugins ' ) ( ) ;
var a = rejectSoon ( ' rejected - a ' , 40 ) ;:==:var b:==:rejectSoon ( ' rejected - b ' , 30 ) ;
var setInnerhtml = require ( ' setInnerhtml ' ) ;:==:var shouldUpdateReactComponent:==:require ( ' shouldUpdateReactComponent ' ) ;
var hsep = opts . hsep = = = undefined ? ' ' : opts . hsep ;:==:var align:==:opts . align  |  |  [ ] ;
var height = image . height ;:==:var canvas:==:document . createElement ( ' canvas ' ) ;
var wasm = config . wasm ;:==:var bundle:==:config . bundles [ key ] ;
var timezone = config . timezone ;:==:var lang:==:this . page . lang  |  |  this . page . language  |  |  config . language ;
var binding = bindings [ i ] ;:==:var handler:==:binding . handler ;
var Accessory = require ( ' hap - nodejs ' ) . Accessory ;:==:var Service:==:require ( ' hap - nodejs ' ) . Service ;
var end = this . end ;:==:var scheduler:==:this . scheduler ;
var callExpression = _ optionsParser . _ callExpression ;:==:var identifierExpression:==:_ optionsParser . _ identifierExpression ;
var el = this . el ;:==:var a:==:document . createElement ( ' a ' ) ;
var encode = typeof options . encode = = = ' boolean ' ? options . encode : defaults . encode ;:==:var encoder:==:typeof options . encoder      ' function ' ? options . encoder : defaults . encoder ;
var index = state . index ;:==:var hasError:==:state . hasError ;
var lastRow = config . lastRow ;:==:var session:==:this . session ;
var err = test . err ;:==:var message:==:err . message  |  |  '' ;
var module = entry . module = getOrCreateModuleRecord ( entry . name , moduleRecords ) ;:==:var exports:==:entry . module . exports ;
var createParameterList = traceur . codegeneration . parseTreeFactory . createParameterList ;:==:var createParameterReference:==:traceur . codegeneration . parseTreeFactory . createParameterReference ;
var preWidth = curAttrs . preWidth  |  |  curAttrs . width ;:==:var preHeight:==:curAttrs . preHeight  |  |  curAttrs . height ;
var y = this . y ;:==:var z:==:this . z ;
var reactUpdates = require ( ' reactUpdates ' ) ;:==:var reactNativeStackInspector:==:require ( ' reactNativeStackInspector ' ) ;
var afterCompleteDocOpen = helpers . afterCompleteDocOpen ;:==:var afterCompleteOpen:==:helpers . afterCompleteOpen ;
var abbrev = require ( ' abbrev ' ) ;:==:var mout:==:require ( ' mout ' ) ;
var repeat = require ( ' repeat - string ' ) ;:==:var trim:==:require ( ' trim ' ) ;
var isopackCache = options . isopackCache ;:==:var includeCordovaUnibuild:==:options . includeCordovaUnibuild ;
var body = dom . getDocument ( ) . body ;:==:var active:==:dom . getDocument ( ) . activeElement  |  |  body ;
var link = titleModel . get ( ' link ' ) ;:==:var sublink:==:titleModel . get ( ' sublink ' ) ;
var getSlotSegmentContainer = t . getSlotSegmentContainer ;:==:var getHoverListener:==:t . getHoverListener ;
var fs = require ( ' fs ' ) ;:==:var path:==:paths [ 0 ] ;
var assert = util . assert ;:==:var cursor:==:util . Module ( ' cursor ' ) ;
var sortOrder = userFieldsRes . sortOrder ;:==:var index:==:findBestMatchingIndex ( selector , userFields , sortOrder , indexes , request . use_index ) ;
var source = rawActivity . source ;:==:var data:==:source . data ;
var chalk = require ( ' chalk ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var models = _ _ alloyId16 . models ;:==:var len:==:models . length ;
var dim = _ dim  |  |  false ;:==:var label:==:_ label  |  |  ' Success ' ;
var left = bottom_left [ 0 ] ;:==:var right:==:top_right [ 0 ] ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var parseTreeType:==:traceur . syntax . trees . parseTreeType ;
var outlineWidth = ellipsoid . outlineWidth ;:==:var subdivisions:==:ellipsoid . subdivisions ;
var HAS_BOOLEAN_VALUE = domProperty . injection . has_boolean_value ;:==:var has_side_effects:==:domProperty . injection . has_side_effects ;
var version = _ ref$browserInfo . version ;:==:var css:==:_ ref . prefix . css ;
var Token = cst . Token ;:==:var Program:==:cst . types . Program ;
var cert = fs . readFileSync ( join ( _ _ dirname , ' . . ' , ' certs ' , ' agent2-cert . pem ' ) ) ;:==:var key:==:fs . readFileSync ( join ( _ _ dirname , ' . . ' , ' certs ' , ' agent2-key . pem ' ) ) ;
var wrap = scope . wrap ;:==:var wrapIfNeeded:==:scope . wrapIfNeeded ;
var sourceRoot = util . getArg ( sourceMap , ' sourceRoot ' , null ) ;:==:var mappings:==:util . getArg ( sourceMap , ' mappings ' ) ;
var name = fn . name ;:==:var stack:==:new Error ( ) . stack ;
var _ strncasecmp = Module [ ' _ strncasecmp ' ] = asm [ ' _ strncasecmp ' ] ;:==:var _ strcat:==:Module [ ' _ strcat ' ]    asm [ ' _ strcat ' ] ;
var styles = _ props . styles ;:==:var willEnter:==:_ props . willEnter ;
var frames = this . frames ;:==:var bone:==:skeleton . bones [ this . boneIndex ] ;
var x = this . x - center . x ;:==:var y:==:this . y - center . y ;
var lastIdealStyle = _ state . lastIdealStyle ;:==:var lastIdealVelocity:==:_ state . lastIdealVelocity ;
var m00 = this . m00 _ ;:==:var m10:==:this . m10 _ ;
var login = imports . login ;:==:var api:==:imports . api ;
var valueCollection = values . valueCollection ;:==:var functionValue:==:values . functionValue ;
var timeZone = goog . require ( ' goog . i18n . timeZone ' ) ;:==:var array:==:goog . require ( ' goog . array ' ) ;
var exchange = $ scope . exchange ;:==:var currency:==:ripple . Currency . from_human ( exchange . currency_name ) ;
var express = require ( ' express ' ) ;:==:var http:==:require ( ' http ' ) ;
var options = this . options ;:==:var width:==:options . width ;
var layer = this . map . layers [ i ] ;:==:var c:==:this . layers . charAt ( i ) ;
var parent = this . parent ;:==:var retried:==:this . retried ;
var l = $ ( target ) . offset ( ) . left+10 ;:==:var t:==:$ ( target ) . offset ( ) . top + $ ( target ) . offset ( ) . height-10 ;
var member = members [ m ] ;:==:var size:==:sizeOf ( member . type ) ;
var e = scenes . $ g . firstChild ;:==:var s:==:scenes [ 0 ] ;
var semiMajorAxis = property . getValueOrUndefined ( ellipse . semiMajorAxis , time ) ;:==:var semiMinorAxis:==:property . getValueOrUndefined ( ellipse . semiMinorAxis , time ) ;
var output = operation . output ;:==:var payload:==:output . payload ;
var expandMemberExpression = traceur . codegeneration . expandMemberExpression ;:==:var expandMemberLookupExpression:==:traceur . codegeneration . expandMemberLookupExpression ;
var $ scope = this . $ scope ;:==:var $ attrs:==:this . $ attrs ;
var a = mobx . observable ( 2 ) ;:==:var b:==:mobx . observable ( 3 ) ;
var POSITION_SIZE_INDEX = Polyline . POSITION_SIZE_INDEX ;:==:var DISTANCE_DISPLAY_CONDITION:==:Polyline . DISTANCE_DISPLAY_CONDITION ;
var rampTime = rampTime  |  |  0 ;:==:var tFromNow:==:tFromNow  |  |  0 ;
var UA = localStorage . getItem ( ' ua ' )  |  |  defaultua ;:==:var headers:==:localStorage . getItem ( ' headers ' ) ;
var repeat = require ( ' repeat - string ' ) ;:==:var extend:==:require ( ' extend ' ) ;
var assign = Object . assign  |  |  require ( ' object . assign ' ) ;:==:var notify:==:require ( ' gulp - notify ' ) ;
var touches = originalEvent . touches & & originalEvent . touches . length ? originalEvent . touches : [ originalEvent ] ;:==:var e:==:touches [ 0 ] ;
var key = scope . generateUidIdentifier ( ' key ' ) ;:==:var len:==:scope . generateUidIdentifier ( ' len ' ) ;
var month = o . defaultViewDate . month  |  |  0 ;:==:var day:==:o . defaultViewDate . day  |  |  1 ;
var Divider = imports . Divider ;:==:var save:==:imports . save ;
var tempVarTransformer = traceur . codegeneration . tempVarTransformer ;:==:var createAssignmentExpression:==:parseTreeFactory . createAssignmentExpression ;
var tx = ( childTransform . tx * renderSession . resolution ) + renderSession . shakex ;:==:var ty:==:( childTransform . ty * renderSession . resolution ) + renderSession . shakey ;
var loadJSON = p5 . prototype . loadJSON ;:==:var loadStrings:==:p5 . prototype . loadStrings ;
var hat = require ( ' hat ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var Surface = ReactART . Surface ;:==:var Transform:==:ReactART . Transform ;
var diameter = options . diameter  |  |  1 ;:==:var thickness:==:options . thickness  |  |  0 . 5 ;
var React = require ( ' React ' ) ;:==:var recordingModule:==:require ( ' nativeModules ' ) . timePickerDialogRecordingModule ;
var selection = instance . selection ;:==:var selectedHeader:==:selection . selectedHeader ;
var h = int ( match [ 4 ]  |  | 0 ) - tzHour ;:==:var m:==:int ( match [ 5 ]  |  | 0 ) - tzMin ;
var zmin = options . zmin  |  |  -1 . 0 ;:==:var xmax:==:options . xmax  |  |  1 . 0 ;
var max   = $ ( this ) . attr ( ' maxvalue ' ) ;:==:var ajax_branch:==:$ ( this ) . attr ( ' ajax_branch ' ) ;
var properties = featureObj . properties ;:==:var geo:==:featureObj . geometry ;
var f = math . fraction ( 2,3 ) ;:==:var b:==:math . bignumber ( f ) ;
var panels = imports . panels ;:==:var scm:==:imports . scm ;
var joinClasses = require ( ' joinClasses ' ) ;:==:var translatedomPositionxy:==:require ( ' translatedomPositionxy ' ) ;
var env = opts . env  |  |  process . env ;:==:var platform:==:opts . platform  |  |  process . platform ;
var left = offset . left ;:==:var scrollTop:==:$ window . scrollTop ( ) ;
var metadata = this . model . get ( ' metadata ' )  |  |  ;:==:var lang:==:metadata & & metadata . lang ? metadata . lang : ' en ' ;
var common = parent . _ _ common ;:==:var frameId:==:window . _ _ frameId ;
var babel = require ( ' broccoli - babel - transpiler ' ) ;:==:var path:==:require ( ' path ' ) ;
var itemBox = that . _ view . items . itemBoxFrom ( item ) ;:==:var selected:==:item . getAttribute ( ' aria - selected ' )      ' true ' ;
var $ child = $ ( $ children [ c ] ) ;:==:var child:==:this . item ( $ child ) ;
var number = group . number ;:==:var type:==:group . type ;
var freeze = require ( ' . . ' ) . freeze ;:==:var liven:==:require ( ' . . ' ) . liven ;
var expression = this . transformAny ( tree . expression ) ;:==:var isYieldFor:==:tree . isYieldFor ;
var d = _ d ;:==:var s2:==:_ s2 ;
var stringify = _ _ webpack_require _ _ ( 11 ) . stringify ;:==:var isSafeMethod:==:_ _ webpack_require _ _ ( 17 ) . isSafeMethod ;
var debug = imports [ ' debugger ' ] ;:==:var fs:==:imports [ ' fs ' ] ;
var fn = klass . fn ;:==:var _ _ init _ _:==:klass . _ _ init _ _ ;
var camera = this . _ camera ;:==:var frustum:==:camera . frustum ;
var exists = require ( ' fs ' ) . existsSync ;:==:var engine:==:require ( ' engine . io ' ) ;
var DIRECTION_LEFT = gestureDetector . direction_left = ' left ' ;:==:var direction_up:==:gestureDetector . direction_up    ' up ' ;
var from = shape . dockers [ obj . from ] ;:==:var to:==:shape . dockers [ obj . to ] ;
var isDefault = this . cli . command ( ' output ' ) . isDefault ( this . argv . output ) ;:==:var folder:==:this . test_settings . output_folder  |  |  this . settings . output_folder ;
var page = parseInt ( req . query . page , 10 )  |  |  1 ;:==:var topicsPerPage:==:meta . config . topicsPerPage  |  |  20 ;
var decorations = session . $ decorations ;:==:var firstLineNumber:==:session . $ firstLineNumber ;
var showPlayBtn = showControl & & controlModel . get ( ' showPlayBtn ' , true ) ;:==:var showPrevBtn:==:showControl & & controlModel . get ( ' showPrevBtn ' , true ) ;
var transformToRoot = n . transformToRoot ;:==:var commands:==:n . commands ;
var utils = client . utils ;:==:var translate:==:client . translate ;
var correctOrientation = ! ! options . correctOrientation ;:==:var saveToPhotoAlbum:==:! ! options . saveToPhotoAlbum ;
var gpsifdLengthDataSection = ifDlengths . gpsifdLengthDataSection ;:==:var interoperabilityifdLength:==:ifDlengths . interoperabilityifdLength ;
var content = tree . content = a . firstChild ;:==:var sr2:==:tree . sr2    a . createShadowRoot ( ) ;
var g = Number ( regExpResultArray [ 2 ] ) ;:==:var b:==:number ( regExpResultArray [ 3 ] ) ;
var Child = Parse . Object . extend ( ' Child ' ) ;:==:var Parent:==:Parse . Object . extend ( ' Parent ' ) ;
var labelCollection = this . _ labelCollection ;:==:var modelMatrix:==:labelCollection . modelMatrix ;
var View = require ( ' View ' ) ;:==:var Recording:==:require ( ' nativeModules ' ) . recording ;
var selector = ( options & & typeof options . selector ! = ' undefined ' ) ? options . selector : that . selector ;:==:var scope:==:( options & & typeof options . scope !   ' undefined ' ) ? options . scope : that . scope ;
var values = attribute . values ;:==:var view:==:views [ name ] ;
var annotations = this . transformList ( tree . annotations ) ;:==:var typeParameters:==:this . transformAny ( tree . typeParameters ) ;
var firstDayOfWeek = this . dateLocale . firstDayOfWeek ;:==:var shortDays:==:this . dateLocale . shortDays ;
var createAssignmentExpression = parseTreeFactory . createAssignmentExpression ;:==:var createAssignmentStatement:==:parseTreeFactory . createAssignmentStatement ;
var after = new Blockly . fieldLabel ( ' after ' ) ;:==:var between:==:new blockly . fieldLabel ( ' between ' ) ;
var statePropsPrecalculationError = this . statePropsPrecalculationError ;:==:var renderedElement:==:this . renderedElement ;
var stats = testSet . stats ;:==:var treeNode:==:testSet . treeNode ;
var loadFilesAtInit = options . loadFilesAtInit ;:==:var ideProviderName:==:options . ideProviderName  |  |  ' cloud9 ' ;
var noRespond = options & & options . noRespond ;:==:var client:==:this . getClient ( clientId ) ;
var htmlElement = scope . wrappers . htmlElement ;:==:var registerWrapper:==:scope . registerWrapper ;
var powerbi = window . powerbi ;:==:var powerbitests:==:window . powerbitests ;
var f = m . f ;:==:var g:==:m . g ;
var filters = require ( ' pug - filters ' ) ;:==:var link:==:require ( ' pug - linker ' ) ;
var active = e . detail . active ;:==:var switchInProgress:==:e . detail . switchInProgress ;
var y = style . y  |  |  0 ;:==:var text:==:style . text ;
var realOut = this . realOut = [ ] ;:==:var unexpectedOut:==:this . unexpectedOut    null ;
var xs = _ xs ;:==:var n:==:_ n ;
var x = sprite . x ;:==:var y:==:sprite . y ;
var path = require ( ' path ' ) ;:==:var mout:==:require ( ' mout ' ) ;
var transformTemplate = options . transformTemplate  |  |  angular . identity ;:==:var bindToController:==:options . bindToController ;
var r = parseInt ( matches [ 1 ] ) - 1 ;:==:var c:==:parseInt ( matches [ 2 ] ) - 1 ;
var reactTestMount = require ( ' reactTestMount ' ) ;:==:var reactTestReconcileTransaction:==:require ( ' reactTestReconcileTransaction ' ) ;
var message = options . message  |  |  ' ' ;:==:var close:==:options . close  |  |  gettext ( ' Close ' ) ;
var assert = require ( ' assert ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' loopback : connector : mail ' ) ;
var Wil = Wil + Wi16l ;:==:var Wih:==:Wih + Wi16h + ( ( Wil > > > 0 ) < ( Wi16l > > > 0 ) ? 1 : 0 ) ;
var elementSize = this . elementSize ;:==:var faces:==:result . faces ;
var onclick = options . onclick ;:==:var submenu:==:options . submenu ;
var e = $ ( ' # firstname ' ) ;:==:var v:==:$ ( ' # testForm1 ' ) . validate ( ) ;
var slice = Array . prototype . slice ;:==:var push:==:Array . prototype . push ;
var Iterable = Immutable . Iterable ;:==:var Iterator:==:Iterable . Iterator ;
var upperCanvasEl = canvas . upperCanvasEl ;:==:var lowerCanvasEl:==:canvas . lowerCanvasEl ;
var el = this . el ;:==:var geometry:==:el . getObject3d ( ' mesh ' ) . geometry ;
var skirtHeight = options . skirtHeight ;:==:var isGeographic:==:defaultValue ( options . isGeographic , true ) ;
var intensity = lparams . intensity ;:==:var distance:==:lparams . distance ;
var inherits = util . inherits ;:==:var notEnumerableProp:==:util . notEnumerableProp ;
var opts = _ _ alloyId27 . opts  |  |  ;:==:var models:==:_ _ alloyId26 . models ;
var clipboard = imports . clipboard ;:==:var tree:==:imports . tree ;
var cid = req . query . cid ;:==:var filter:==:req . params . filter  |  |  '' ;
var params = this . params  |  |  ;:==:var body:==:this . body  |  |  ;
var texture = textureLoader . load ( getImage ( surface . init_from ) ) ;:==:var extra:==:textureObject . extra ;
var Renderer = Hilo . Renderer ;:==:var Matrix:==:Hilo . Matrix ;
var util = imports . util ;:==:var Plugin:==:imports . Plugin ;
var yieldStatement = traceur . syntax . trees . yieldStatement ;:==:var createBindingIdentifier:==:traceur . codegeneration . parseTreeFactory . createBindingIdentifier ;
var rect = this . _ rect ;:==:var axes:==:this . _ axesMap ;
var keys = this . keys ;:==:var params:==:this . params ;
var BAR = docSet . getByLongname ( ' bar ' ) [ 0 ] ;:==:var baz:==:docSet . getByLongname ( ' baz ' ) [ 0 ] ;
var fclone = require ( ' fclone ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var subscriber = state . subscriber ;:==:var period:==:state . period ;
var metadata = request . metadata ;:==:var msg_type:==:header . msg_type ;
var express = require ( ' express ' ) ;:==:var cheerio:==:require ( ' cheerio ' ) ;
var plugins = this . plugins ;:==:var verbose:==:this . verbose ;
var getLabelFormattedText = powerbi . visuals . dataLabelUtils . getLabelFormattedText ;:==:var objectEnumerationBuilder:==:powerbi . visuals . objectEnumerationBuilder ;
var url = require ( ' url ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var index = s . indexOf ( ' ' ) ;:==:var s:==:s ;
var coth = math . coth ;:==:var complex:==:math . complex ;
var iframe = plugin . activeSession . iframe ;:==:var editor:==:plugin . activeSession . editor ;
var start = section_start [ name ] ;:==:var end:==:section_end [ name ] ;
var x = xy . x + Blockly . SNAP_RADIUS * ( this . RTL ? -1 : 1 ) ;:==:var y:==:xy . y + Blockly . SNAP_RADIUS * 2 ;
var fixedRowsBottom = this . wot . getSetting ( ' fixedRowsBottom ' ) ;:==:var fixedRowsTop:==:this . wot . getSetting ( ' fixedRowsTop ' ) ;
var updatable = options . updatable ;:==:var sideOrientation:==:options . sideOrientation  |  |  babylon . mesh . defaultside ;
var target = evt . target ;:==:var type:==:evt . type ;
var Person = db . model ( ' Person1907 ' , personSchema ) ;:==:var band:==:db . model ( ' band1907 ' , bandSchema ) ;
var _ i64Subtract = module [ ' _ i64Subtract ' ] = asm [ ' _ i64Subtract ' ] ;:==:var _ strcpy:==:module [ ' _ strcpy ' ]    asm [ ' _ strcpy ' ] ;
var perPositionHeight = polygonGeometry . _ perPositionHeight ;:==:var closeTop:==:polygonGeometry . _ closeTop ;
var multiIframeLoadMonitor = goog . require ( ' goog . net . multiIframeLoadMonitor ' ) ;:==:var promise:==:goog . require ( ' goog . promise ' ) ;
var host = a . host ;:==:var protocol:==:a . protocol ;
var next = item . next ;:==:var prev:==:item . prev ;
var entities = this . _ entitiesToVisualize ;:==:var modelHash:==:this . _ modelHash ;
var polylines = collection . _ polylines ;:==:var length:==:polylines . length ;
var bullet = nv . models . bullet ( ) ;:==:var tooltip:==:nv . models . tooltip ( ) ;
var browser_name   = zombie_array [ index ] [ ' browser_name ' ] ;:==:var browser_version:==:zombie_array [ index ] [ ' browser_version ' ] ;
var sinon = require ( ' sinon ' ) ;:==:var when:==:require ( ' when ' ) ;
var etag = payloadMetadata . etag ;:==:var uri:==:payloadMetadata . uri ;
var stepPlot = g . getBooleanOption ( ' stepPlot ' , setName ) ;:==:var color:==:colors [ setIdx ] ;
var cm     = this . cm ;:==:var settings:==:this . settings ;
var continuous = opts . continuous  |  |  false ;:==:var batch_size:==:opts . batch_size  |  |  1 ;
var shouldHighlight = this . opts . shouldHighlight ;:==:var renderAll:==:this . opts . renderAll ;
var indexBuffers = tileTerrain . mesh . indices . indexBuffers  |  |  ;:==:var indexBuffer:==:indexBuffers [ context . i d ] ;
var ignoreAccents = _ props . ignoreAccents ;:==:var ignoreCase:==:_ props . ignoreCase ;
var foldWidgets = this . $ showFoldWidgets & & session . foldWidgets ;:==:var diffStates:==:session . bgTokenizer . diffStates ;
var bind = require ( ' component - bind ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' socket . io - client : socket ' ) ;
var blueA400 = exports . blueA400 = ' # 2979ff ' ;:==:var blueA700:==:exports . blueA700    ' # 2962ff ' ;
var start = this . remote . startDate ;:==:var end:==:this . remote . endDate ;
var container = pos . container ( ) ;:==:var offset:==:pos . offset ( ) ;
var portKey = document . getElementById ( ' portKey ' ) . value ;:==:var portValue:==:document . getElementById ( ' portValue ' ) . value ;
var start = settings . start ;:==:var end:==:settings . end ;
var dur = + conf . dur ;:==:var len:==:+ conf . len ;
var iframe = angular . element ( ' < iframe name='iframeTransport ' + date . now ( ) + ' ' > ' ) ;:==:var input:==:item . _ input ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var reactNativeContainerInfo:==:require ( ' reactNativeContainerInfo ' ) ;
var data = this . data ;:==:var series:==:this . data . series ;
var segments = options . segments  |  |  32 ;:==:var diameterX:==:options . diameterX  |  |  options . diameter  |  |  1 ;
var assets = document . createElement ( ' a - assets ' ) ;:==:var entity:==:document . createElement ( ' a - entity ' ) ;
var createPromiseCapability = sharedUtil . createPromiseCapability ;:==:var error:==:sharedUtil . error ;
var helperNode1 = helper . getNode ( ' helperNode1 ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var s = this . _ createHostViewInContainerScope ( ) ;:==:var protoView:==:view_ref_1 . internalProtoView ( protoViewRef ) ;
var localVideo = document . getElementById ( ' localVideo ' ) ;:==:var remoteVideo:==:document . getElementById ( ' remoteVideo ' ) ;
var breakState = traceur . codegeneration . generator . breakState ;:==:var continueState:==:traceur . codegeneration . generator . continueState ;
var verbose = grunt . verbose ;:==:var _:==:grunt . util . _ ;
var defaultSelectionEnd = t . defaultSelectionEnd ;:==:var renderSelection:==:t . renderSelection ;
var proxy_server_proc = unblock_youku . default_proxy_server_proc ;:==:var proxy_server_addr:==:unblock_youku . default_proxy_server_addr ;
var startButton = document . querySelector ( ' button#startButton ' ) ;:==:var callButton:==:document . querySelector ( ' button#callButton ' ) ;
var cookie = node . cookie ;:==:var domain:==:cookie . domain ( ) ;
var b = genModule ( ' module - big - async ' , 5 , 2 , 9 , 2 , [ ] ) ;:==:var c:==:genModule ( ' module - broad - async ' , 3 , 3 , 20 , 10 , [ ] ) ;
var component = el . components [ componentName ] ;:==:var schema:==:component & & component . schema ;
var wrappedOperation = firepad . wrappedOperation ;:==:var cursor:==:firepad . cursor ;
var processData = _ ref . processData ;:==:var cleanup:==:_ ref . cleanup ;
var backdrop = new Animation ( ele . querySelector ( ' ion - backdrop ' ) ) ;:==:var wrapper:==:new animation ( ele . querySelector ( ' . picker - wrapper ' ) ) ;
var spreadExpression = traceur . syntax . trees . spreadExpression ;:==:var spreadPatternElement:==:traceur . syntax . trees . spreadPatternElement ;
var decode = types . decode ;:==:var encode:==:types . encode ;
var show = calendarModel . get ( ' splitLine . show ' ) ;:==:var lineWidth:==:lineStyleModel . lineWidth ;
var length = children . length ;:==:var child:==:children . shift ( ) ;
var observableArray = babylon . observableArray ;:==:var arrayChanged:==:babylon . arrayChanged ;
var cloudinaryImageMultipleFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' cloudinaryImageMultipleFieldTestObject ' ) ) ;:==:var textFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;
var allocationNode = this . _ allocationNode ;:==:var target:==:this . _ dataGrid . target ( ) ;
var a = ' dc99c646fa4cb7c24314bb6f4ca2d391297acd0dacb0430a13bbf1e37dcf8071 ' ;:==:var b:==:' cf878e00c9f2b6aa48a10f66df9706e64fef2ca399f396d65f5b0a27cb8ae237 ' ;
var htmlTemplateElement = window . htmlTemplateElement ;:==:var nodeFilter:==:window . nodeFilter ;
var uvs1    = opts & & opts . uvs1 ! = = undefined ? opts . uvs1 : null ;:==:var indices:==:opts & & opts . indices !    undefined ? opts . indices : null ;
var Root = db . model ( ' gh4681 ' , rootSchema ) ;:==:var root:==:new root ( rootName : ' root ' , nested : [   ] ) ;
var collab = imports . collab ;:==:var cloneObject:==:c9Util . cloneObject ;
var dirtyPath = this . _ _ dirtyPath ;:==:var paths:==:this . shape . paths ;
var isDict = corePrimitives . isDict ;:==:var isStream:==:corePrimitives . isStream ;
var xMin = lineDefSet . xMin ;:==:var xMax:==:lineDefSet . xMax ;
var unwrap = scope . unwrap ;:==:var unwrapIfNeeded:==:scope . unwrapIfNeeded ;
var setTimeout = window . setTimeout ;:==:var setInterval:==:window . setInterval ;
var message = mockMessage ( messageId : presidentialId ) ;:==:var handler:==:handlerStub . withArgs ( ' cellbroadcast - received ' ) . args [ 0 ] [ 1 ] ;
var sp = env [ env_sp ] ;:==:var state:==:env [ env_state ] ;
var Readable = stream . Readable ;:==:var Writable:==:stream . Writable ;
var row = e . getDocumentPosition ( ) . row ;:==:var session:==:editor . session ;
var domNamespaces = require ( ' domNamespaces ' ) ;:==:var setInnerhtml:==:require ( ' setInnerhtml ' ) ;
var index = this . lastMarker . index ;:==:var line:==:this . lastMarker . lineNumber ;
var value = options . value ;:==:var value2:==:options . value2 ;
var reactUpdates = require ( ' reactUpdates ' ) ;:==:var reactTestTextComponent:==:require ( ' reactTestTextComponent ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var p0 = segment . p0 ;:==:var p1:==:segment . p1 ;
var f8Header = require ( ' f8Header ' ) ;:==:var interactionManager:==:require ( ' interactionManager ' ) ;
var modules = taffy ( members . modules ) ;:==:var namespaces:==:taffy ( members . namespaces ) ;
var e = this . _ parts . hostname . length - this . domain ( ) . length ;:==:var sub:==:this . _ parts . hostname . substring ( 0 , e ) ;
var fieldName2 = comparator . fieldName2 ;:==:var ascending1:==:comparator . ascending1 ;
var fs = require ( ' fs ' ) ;:==:var istanbul:==:require ( ' rollup - plugin - istanbul ' ) ;
var head = document . querySelector ( ' head ' ) ;:==:var script:==:document . createElement ( ' script ' ) ;
var keys = o . keys . slice ( 0 ) ;:==:var keypad:==:this . _ keypad ;
var node = this . results [ this . resultIndex ] . node ;:==:var elem:==:this . results [ this . resultIndex ] . elem ;
var header = request . header ;:==:var content:==:request . content ;
var labels = this . _ labels ( ' event ' , name , customLabels ) ;:==:var category:==:track . category ( ) ;
var CANCELLED = ' CANCELLED ' ;:==:var FLUSH:==:' FLUSH ' ;
var core = require ( ' core ' ) ;:==:var daysBetween:==:calc . daysBetween ;
var nodeFrom = adj . nodeFrom ;:==:var nodeTo:==:adj . nodeTo ;
var locals = options . locals  |  |  ;:==:var transformTemplate:==:options . transformTemplate  |  |  angular . identity ;
var createIdentifierToken = parseTreeFactory . createIdentifierToken ;:==:var createNumberLiteral:==:parseTreeFactory . createNumberLiteral ;
var parseTreeVisitor = traceur . syntax . parseTreeVisitor ;:==:var moduleSymbol:==:traceur . semantics . symbols . moduleSymbol ;
var l = lines . length ;:==:var row:==:delta . start . row ;
var traits = identify . traits ( ) ;:==:var email:==:identify . email ( ) ;
var endCap = ( settings . endCap = = null ) ? 0 : settings . endCap ;:==:var closed:==:( settings . closed     null ) ? false : settings . closed ;
var cx = parseFloat ( dockerElem . getAttributens ( oryx . config . namespace_oryx , ' cx ' ) ) ;:==:var cy:==:parseFloat ( dockerElem . getAttributens ( oryx . config . namespace_oryx , ' cy ' ) ) ;
var minCanvasWidth = number ( options . minCanvasWidth )  |  |  0 ;:==:var minCanvasHeight:==:number ( options . minCanvasHeight )  |  |  0 ;
var geometries = extractFromCache ( meta . geometries ) ;:==:var materials:==:extractFromCache ( meta . materials ) ;
var createCallExpression = parseTreeFactory . createCallExpression ;:==:var createExpressionStatement:==:parseTreeFactory . createExpressionStatement ;
var northeastCornerCartesian = this . northeastCornerCartesian ;:==:var westNormal:==:this . westNormal ;
var email = identify . email ( ) ;:==:var name:==:identify . name ( ) ;
var leftMarker = document . createTextNode ( leftMarkerChar ) ;:==:var rightMarker:==:document . createTextNode ( rightMarkerChar ) ;
var cull = defaultValue ( rs . cull , ) ;:==:var polygonOffset:==:defaultValue ( rs . polygonOffset , ) ;
var maxBG = opts . maxBG  |  |  400 ;:==:var minBG:==:opts . minBG  |  |  40 ;
var apply = functionPrototype . apply ;:==:var max:==:math . max ;
var util = require ( ' util ' ) ;:==:var toFixed:==:fn . toFixed ;
var options = this . options ;:==:var scale:==:Math . pow ( viewport . _ scale , options . scaleResponse ) ;
var winston = require ( ' winston ' ) ;:==:var templates:==:require ( ' templates . js ' ) ;
var O = ES . toObject ( this ) ;:==:var len:==:es . toLength ( o . length ) ;
var localVideo = document . querySelector ( ' div#localVideo video ' ) ;:==:var remoteVideo:==:document . querySelector ( ' div#remoteVideo video ' ) ;
var checkSymlinks = options . checkSymlinks ;:==:var sandbox:==:options . sandbox ;
var platform = require ( ' os ' ) . platform ( ) ;:==:var moment:==:require ( ' moment ' ) ;
var exec = require ( ' child_process ' ) . exec ;:==:var logger:==:require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;
var replace = require ( ' gulp - replace ' ) ;:==:var octophant:==:require ( ' octophant ' ) ;
var tab = e . tab ;:==:var undoManager:==:tab . document . undoManager ;
var name = ' ' + categories [ i ] . name ;:==:var short_name:==:categories [ i ] . short_name ;
var path = require ( ' path ' ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var FORWARD_DEFAULT_EXPORT = ' FORWARD_DEFAULT_EXPORT ' ;:==:var FUNCTION_BODY:==:' FUNCTION_BODY ' ;
var bax = trace . baxis ;:==:var a:==:trace . _ a    trace . a ;
var isArray = zrUtil . isArray ;:==:var indexOf:==:zrUtil . indexOf ;
var IDENTITY_MATRIX = sharedUtil . identity_matrix ;:==:var unsupported_features:==:sharedUtil . unsupported_features ;
var options = that . options ;:==:var resizable:==:options . resizable ;
var html = element . html ( ) ;:==:var name:==:attr . name ;
var item = e . item ;:==:var dataItem:==:that . listView . dataItemByIndex ( that . listView . getElementIndex ( item ) ) ;
var fs = imports . fs ;:==:var Plugin:==:imports . Plugin ;
var coordsArr = this . coordsArr ;:==:var shadingType:==:this . shadingType ;
var p = p : 123 ;:==:var o:==:_ _ proto _ _ : p ;
var d = Promise . defer ( ) ;:==:var promise:==:d . promise ;
var scrollView = require ( ' scrollView ' ) ;:==:var text:==:require ( ' text ' ) ;
var h = this . _ indexToValueInSpace ( hash , this . _ hueSpace ) ;:==:var s:==:this . _ indexToValueInSpace ( hash , this . _ satSpace ) ;
var type = buffer . getOctetArray ( typeLen ) ;:==:var i d:==:buffer . getOctetArray ( idLen ) ;
var crypto = require ( ' crypto ' ) ;:==:var sshpk:==:require ( ' sshpk ' ) ;
var length = commands . length ;:==:var shadowsEnabled:==:scene . frameState . shadowHints . shadowsEnabled ;
var profile = options . profile  |  |  ;:==:var driver:==:options . driver  |  |  Marionette . Drivers . tcpSync ;
var Size = goog . math . Size ;:==:var getMarginBox:==:goog . style . getMarginBox ;
var column = this . s . columns [ cell . colIdx ] ;:==:var read:==:column . read . call ( column , cell . node ) ;
var resolve = path . resolve ;:==:var extname:==:path . extname ;
var createYieldStatement = traceur . codegeneration . parseTreeFactory . createYieldStatement ;:==:var createIdentifierExpression:==:traceur . codegeneration . parseTreeFactory . createIdentifierExpression ;
var bind = utils . bind ;:==:var isIOS:==:utils . device . isIOS ( ) ;
var transaction = database . transaction ( [ objStoreName ] , ' readwrite ' ) ;:==:var objectStore:==:transaction . objectStore ( objStoreName ) ;
var d = b . segment_hdr _ . num_segments _ ;:==:var e:==:Arr ( be , int ) ;
var denyExt = getExtRegex ( this . settings . denyExt ) ;:==:var allowMime:==:getMimeRegex ( this . settings . allowMime ) ;
var offset = el . offset ( ) ;:==:var left:==:offset . left - ( origin ? origin . left : 0 ) ;
var w = this . width * pd ;:==:var h:==:this . height * pd ;
var exportStarBinding = $ _ _ 9 . exportStarBindings [ index ] ;:==:var moduleBinding:==:$ _ _ 9 . moduleBindings [ index ] ;
var touchmove = isTouch ? ' touchmove ' : ' mousemove ' ;:==:var touchend:==:isTouch ? ' touchend ' : ' mouseup ' ;
var intrinsicFuncs = wordRegexp ( intrinsicFuncsWords ) ;:==:var command:==:wordRegexp ( commandKeywords ) ;
var bufferView = gltfRuntime . bufferViews [ sourceExt . bufferView ] ;:==:var buffer:==:gltf1 . gltfUtils . getBufferFromBufferView ( gltfRuntime , bufferView , 0 , bufferView . byteLength , gltf1 . eComponentType . unsigned_byte ) ;
var blending = renderState . blending ;:==:var enabled:==:( defined ( passState . blendingEnabled ) ) ? passState . blendingEnabled : blending . enabled ;
var contactCardTabKind = contacts . contactCardTabKind ;:==:var placement:==:windows . ui . popups . placement ;
var withStatement = traceur . syntax . trees . withStatement ;:==:var yieldStatement:==:traceur . syntax . trees . yieldStatement ;
var ui = $ . summernote . ui ;:==:var options:==:context . options ;
var cellOffset = _ ref . cellOffset ;:==:var cellSize:==:_ ref . cellSize ;
var runners = util . cloneObject ( options . runners ) ;:==:var testing:==:options . testing ;
var initClass = isIn ? initClasses [ 0 ] : initClasses [ 1 ] ;:==:var activeClass:==:isIn ? activeClasses [ 0 ] : activeClasses [ 1 ] ;
var points = e . points ;:==:var setName:==:e . setName ;
var yn1 = helper . getNode ( ' yn1 ' ) ;:==:var yn2:==:helper . getNode ( ' yn2 ' ) ;
var atNameDeclaration = traceur . syntax . trees . atNameDeclaration ;:==:var awaitStatement:==:traceur . syntax . trees . awaitStatement ;
var emitter = scene . getLastEntryByid ( parsedLensFlareSystem . emitterId ) ;:==:var lensFlareSystem:==:new lensFlareSystem ( ' lensFlareSystem # ' + parsedLensFlareSystem . emitterId , emitter , scene ) ;
var visualMapModel = this . visualMapModel ;:==:var padding:==:formatUtil . normalizeCssArray ( visualMapModel . get ( ' padding ' )  |  |  0 ) ;
var data = this . data ;:==:var el:==:this . el ;
var add = node . addr  |  |  msg . ip  |  |  ' ' ;:==:var por:==:node . port  |  |  msg . port  |  |  0 ;
var connect = require ( ' connect ' ) ;:==:var assert:==:require ( ' chai ' ) . assert ;
var fillColor = style . fillColor ;:==:var title:==:style . title  |  |  style . graphicTitle ;
var minificationFilter = sampler . minificationFilter ;:==:var magnificationFilter:==:sampler . magnificationFilter ;
var xml2js = require ( ' xml2js ' ) ;:==:var ejs:==:require ( ' ejs ' ) ;
var Class = kendo . Class ;:==:var support:==:kendo . support ;
var x = c . x ;:==:var y:==:c . y ;
var grey300 = exports . grey300 = ' # e0e0e0 ' ;:==:var grey400:==:exports . grey400    ' # bdbdbd ' ;
var ARRAY = traceur . syntax . predefinedName . array ;:==:var call:==:traceur . syntax . predefinedName . call ;
var event = args . event ;:==:var ui:==:args . ui ;
var HORIZONTAL_ORIGIN_INDEX = Billboard . HORIZONTAL_ORIGIN_INDEX = 4 ;:==:var VERTICAL_ORIGIN_INDEX:==:Billboard . VERTICAL_ORIGIN_INDEX    5 ;
var textures = hitDetection ? this . hitDetectionTextures _ : this . textures _ ;:==:var groupIndices:==:hitDetection ? this . hitDetectionGroupIndices _ : this . groupIndices _ ;
var popoverOptions = getValue ( options . popoverOptions , null ) ;:==:var cameraDirection:==:getValue ( options . cameraDirection , camera . direction . back ) ;
var referee = require ( ' referee ' ) ;:==:var assert:==:referee . assert ;
var assign = require ( ' object - assign ' ) ;:==:var parse5:==:require ( ' parse5 ' ) ;
var nodeCommands = this . _ nodeCommands ;:==:var length:==:nodeCommands . length ;
var target = this . vexpr ( ge . target , nexti ) ;:==:var n:==:ge . ifs . length ;
var db = this . _ db ;:==:var transaction:==:this . _ db . transaction ( [ ' icons ' , ' bookmarks ' , ' visits ' ] , ' readwrite ' ) ;
var $ dataSpans = that . $ dataSpans = $ datatable . children ( ' . datatable - head , . datatable - rows ' ) . find ( ' . datatable - span ' ) ;:==:var $ rowsSpans:==:that . $ rowsSpans    $ datatable . children ( ' . datatable - rows ' ) . children ( ' . datatable - rows - span ' ) ;
var createIdentifierExpression = parseTreeFactory . createIdentifierExpression ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var modifiers = dir . modifiers ;:==:var tag:==:el . tag ;
var depth = segmentData . depth ;:==:var geometry:==:segmentData . geometry ;
var from = Math . max ( visible . from - cm . options . viewportMargin , doc . first ) ;:==:var to:==:math . min ( end , visible . to + cm . options . viewportMargin ) ;
var sum = Fn . sum ;:==:var toFixed:==:fn . toFixed ;
var error = utils . debug ( ' components : text : error ' ) ;:==:var shaders:==:coreShader . shaders ;
var c = computed ( function ( ) return String ( a . get ( ) * b . get ( ) ) ) ;:==:var buf:==:buffer ( ) ;
var mongoose = require ( ' mongoose ' ) ;:==:var User:==:mongoose . model ( ' User ' ) ;
var children = _ props3 . children ;:==:var onRowClick:==:_ props3 . onRowClick ;
var dummy = toString : goog . functions . constant ( ' [ object dummy ] ' ) ;:==:var sentinel:==:toString : goog . functions . constant ( ' [ object sentinel ] ' ) ;
var error = new Error ( ' some error ' ) ;:==:var operation:==:retry . operation ( retries : 3 , forever : true ) ;
var numComps = this . context . numComps ;:==:var bitsPerComponent:==:this . context . bitsPerComponent ;
var min = bbox . minimumWorld ;:==:var max:==:bbox . maximumWorld ;
var unitToSatoshi = config . settings . unitToSatoshi ;:==:var unitDecimals:==:config . settings . unitDecimals ;
var treeWriter = traceur . outputgeneration . treeWriter ;:==:var moduleRequireVisitor:==:traceur . codegeneration . module . moduleRequireVisitor ;
var height = options . height  |  |  1 ;:==:var subdivisions:==:options . subdivisions  |  |  1 ;
var debug = _ dereq _ ( ' debug ' ) ( ' socket . io - parser ' ) ;:==:var json:==:_ dereq _ ( ' json3 ' ) ;
var texturePath = this . texturePath  |  |  three . loader . prototype . extractUrlBase ( url ) ;:==:var binaryPath:==:this . binaryPath  |  |  three . loader . prototype . extractUrlBase ( url ) ;
var filter = require ( ' gulp - filter ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var homography = require ( ' ndarray - homography ' ) ;:==:var fill:==:require ( ' ndarray - fill ' ) ;
var x = this . x , y = this . y ;:==:var w:==:this . w , h    this . h ;
var scissorTest = renderState . scissorTest ;:==:var enabled:==:( defined ( passState . scissorTest ) ) ? passState . scissorTest . enabled : scissorTest . enabled ;
var deltaZ = defaultValue ( options . deltaz , 0 ) ;:==:var deltaMode:==:defaultValue ( options . deltaMode , 0 ) ;
var c = this . m_constraints [ i ] ;:==:var bodyA:==:c . bodyA ;
var dimensions = model . dimensions ;:==:var canvasPixelRatio:==:model . canvasPixelRatio ;
var win = plt . win ( ) ;:==:var clientTop:==:ele . clientTop  |  |  body . clientTop  |  |  0 ;
var scene = transitioner . _ scene ;:==:var camera:==:scene . camera ;
var path   = require ( ' path ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var maxTrySeriesLength = options . maxTrySeriesLength  |  |  3 ;:==:var maxTrySeriesTime:==:options . maxTrySeriesTime  |  |  10000 ;
var generatorComprehensionTransformer = traceur . codegeneration . generatorComprehensionTransformer ;:==:var generatorTransformPass:==:traceur . codegeneration . generatorTransformPass ;
var horizontalOrigin = label . _ horizontalOrigin ;:==:var verticalOrigin:==:label . _ verticalOrigin ;
var height = chart . height ;:==:var width:==:chart . width ;
var timestep = this . timestep ;:==:var forces:==:this . physicsBody . forces ;
var dstRGB = ( ' dstRGB ' in value ? value . dstRGB : value . dst ) ;:==:var dstAlpha:==:( ' dstAlpha ' in value ? value . dstAlpha : value . dst ) ;
var Plugin = imports . Plugin ;:==:var automate:==:imports . automate ;
var graph = document . getElementById ( ' graph_div ' ) ;:==:var width:==:parseInt ( graph . style . width , 10 ) ;
var f = false ;:==:var t:==:true ;
var dots = this . dots = options . dots ;:==:var areas:==:this . areas    options . areas ;
var dfa = this . stack [ this . stack . length - 1 ] . dfa ;:==:var state:==:this . stack [ this . stack . length - 1 ] . state ;
var rotr32 = utils . rotr32 ;:==:var rotl32:==:utils . rotl32 ;
var startTimeElt = startTimeElts [ i ] ;:==:var date:==:parseInt ( startTimeElt . dataset . date , 10 ) ;
var converterHelper = powerbi . visuals . converterHelper ;:==:var selectionIdBuilder:==:powerbi . visuals . selectionIdBuilder ;
var activeStyle = _ props2 . activeStyle ;:==:var onlyActiveOnIndex:==:_ props2 . onlyActiveOnIndex ;
var renderAll = this . opts . renderAll ;:==:var renderPhoto:==:this . opts . renderPhoto ;
var resolve = require ( ' path ' ) . resolve ;:==:var basename:==:require ( ' path ' ) . basename ;
var getSampleStateForTesting = require ( ' getSampleStateForTesting ' ) ;:==:var removeEntitiesAtEdges:==:require ( ' removeEntitiesAtEdges ' ) ;
var viewMode = options . viewMode ;:==:var container:==:this . container ;
var key = KEY_MODS [ hashId ] + keyString ;:==:var command:==:this . commandKeyBinding [ key ] ;
var exportVisitor = traceur . codegeneration . module . exportVisitor ;:==:var importStarVisitor:==:traceur . codegeneration . module . importStarVisitor ;
var sunburst = nv . models . sunburst ( ) ;:==:var tooltip:==:nv . models . tooltip ( ) ;
var confirmDownloadController = _ appJsControllersConfirmDownloadController [ ' default ' ] ;:==:var deviceNameController:==:_ appJsControllersDeviceNameController [ ' default ' ] ;
var billboards = this . _ billboards ;:==:var length:==:billboards . length ;
var x = x0 ;:==:var y:==:y0 ;
var field = generateAccessor ( fields [ i ] , accessors , cls ) ;:==:var parameter:==:' parameter _ ' + field ;
var emissive = this . emissive ? this . emissive . buildCode ( builder , ' c ' , slot : ' emissive ' ) : undefined ;:==:var environment:==:this . environment ? this . environment . buildCode ( builder , ' c ' , slot : ' environment ' ) : undefined ;
var rotation = defaultValue ( options . rotation , 0 . 0 ) ;:==:var extrudedHeight:==:options . extrudedHeight ;
var args = operation . args ;:==:var fn:==:operation . fn ;
var brushType = this . _ brushType ;:==:var brushMode:==:this . _ brushMode ;
var options = this . options ;:==:var $ element:==:this . $ element ;
var length = math . max ( FORMATS_SEQUENCE . length , STANDARD_FORMATS . length ) ;:==:var patterns:==:culture . calendar . patterns ;
var rows = _ props . rows ;:==:var rowsMax:==:_ props . rowsMax ;
var onclose = options . onclose  |  |  undefined ;:==:var onshow:==:options . onshow  |  |  undefined ;
var _ im_get_candidate = Module [ ' _ im_get_candidate ' ] = asm [ ' _ im_get_candidate ' ] ;:==:var _ im_enable_shm_as_szm:==:Module [ ' _ im_enable_shm_as_szm ' ]    asm [ ' _ im_enable_shm_as_szm ' ] ;
var url = require ( ' url ' ) ;:==:var net:==:require ( ' net ' ) ;
var slice = array . slice ;:==:var splice:==:array . splice ;
var chargingTime = battery . chargingTime ;:==:var dischargingTime:==:battery . dischargingTime ;
var p1 = symbol . _ _ p1 ;:==:var p2:==:symbol . _ _ p2 ;
var meshes = this . parseList ( json . meshes , this . parseMesh ) ;:==:var materials:==:this . parseList ( json . materials , this . parseMaterial ) ;
var minimumAlpha = defaultValue ( options . minimumAlpha , 0 ) ;:==:var maximumAlpha:==:defaultValue ( options . maximumAlpha , 1 . 0 ) ;
var preview = panels . preview ;:==:var parent:==:preview . parentNode ;
var tpl = this . tpl ;:==:var key:==:this . key ;
var longitude = document . getElementById ( ' longitude ' ) ;:==:var latitude:==:document . getElementById ( ' latitude ' ) ;
var labelKey = _ ref5 . labelKey ;:==:var valueKey:==:_ ref5 . valueKey ;
var brown600 = exports . brown600 = ' # 6d4c41 ' ;:==:var brown700:==:exports . brown700    ' # 5d4037 ' ;
var changeset = msg . changeset ;:==:var author:==:( msg . author  |  |  '' ) ;
var designWidth = parseFloat ( params . designWidth ) ;:==:var designUnit:==:parseFloat ( params . designUnit ) ;
var query = req . uri . query ;:==:var path:==:query & & query . path + ' ' ;
var JSX_ELEMENT = ' JSX_ELEMENT ' ;:==:var JSX_ELEMENT_NAME:==:' JSX_ELEMENT_NAME ' ;
var container = this . els . container ;:==:var seekBar:==:this . els . seekBar ;
var childStyle = _ props . childStyle ;:==:var enterDelay:==:_ props . enterDelay ;
var config = utils . pkg . config ( packageJSON ) ;:==:var npmIgnore:==:config & & config . npmIgnore ;
var edgeInsetsPropType = require ( ' edgeInsetsPropType ' ) ;:==:var activityIndicator:==:require ( ' activityIndicator ' ) ;
var rowContainer = $ scope . rowContainer = grid . renderContainers [ $ scope . rowContainerName ] ;:==:var colContainer:==:$ scope . colContainer    grid . renderContainers [ $ scope . colContainerName ] ;
var options = _ state . options ;:==:var value:==:_ state . value ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var inherits:==:require ( ' util ' ) . inherits ;
var cellToDate = t . cellToDate ;:==:var cellToCellOffset:==:t . cellToCellOffset ;
var page4 = element ( by . i d ( ' page4 ' ) ) ;:==:var status:==:element ( by . i d ( ' status ' ) ) ;
var s = this . orientation . s ;:==:var x:==:this . orientation . x ;
var concat = require ( ' concat - stream ' ) ;:==:var path:==:require ( ' path ' ) ;
var bufferLength = this . bufferLength ;:==:var buffer:==:this . ensureBuffer ( bufferLength + blockLen ) ;
var cardSizes = opts . cardSizes  |  |  [ ' 6x6 ' ] ;:==:var initialResults:==:opts . initialResults  |  |  resources . length ;
var key = this . keys [ i ] ;:==:var value:==:this . values [ i ] ;
var property = context . property ;:==:var entityAspect:==:context . entityAspect ;
var Lax = db . model ( ' embeddedLax ' , new schema ( dox : [ lax ] , strict : false ) , ' embdoc ' + random ( ) ) ;:==:var strict:==:db . model ( ' embeddedStrict ' , new schema ( dox : [ strict ] , strict : false ) , ' embdoc ' + random ( ) ) ;
var cancellationError = errors . cancellationError ;:==:var timeoutError:==:errors . timeoutError ;
var faces = geometry . faces ;:==:var morphColors:==:json . morphColors [ 0 ] . colors ;
var onlyFullyVisible = priv . onlyFullyVisible ;:==:var overrideFn:==:priv . overrideFn ;
var when = require ( ' when ' ) ;:==:var cors:==:require ( ' cors ' ) ;
var i = this . ij [ 0 ] ;:==:var j:==:this . ij [ 1 ] ;
var command = e . command ;:==:var editor:==:e . editor ;
var getTestDocument = require ( ' getTestDocument ' ) ;:==:var getNodeForCharacterOffset:==:require ( ' getNodeForCharacterOffset ' ) ;
var calendar = owners . calendar ;:==:var account:==:owners . account ;
var STATUS_LOADING_AGENTS = exports . STATUS_LOADING_AGENTS = 2 ;:==:var STATUS_ACTIVE:==:exports . STATUS_ACTIVE      3 ;
var http = require ( ' http ' ) ;:==:var mime:==:require ( ' mime ' ) ;
var width = $ ( window ) . width ( ) ;:==:var breakpoints:==:this . c . breakpoints ;
var arrayExtensions = jsCommon . arrayExtensions ;:==:var stringExtensions:==:jsCommon . stringExtensions ;
var legendPosition = powerbi . visuals . legendPosition ;:==:var axisScale:==:powerbi . visuals . axisScale ;
var obj = node . object ;:==:var prop:==:node . property ;
var table = doc . createElement ( ' table ' ) ;:==:var tbody:==:doc . createElement ( ' tbody ' ) ;
var coord = this . _ _ coord  |  |  [ 0 , 0 , 0 , 0 ] ;:==:var co:==:this . drawVars . co ;
var x = geometry . x ;:==:var y:==:-geometry . y ;
var axon   = require ( ' pm2-axon ' ) ;:==:var os:==:require ( ' os ' ) ;
var from = grid . getCellNodeBox ( range . fromRow , range . fromCell ) ;:==:var to:==:grid . getCellNodeBox ( range . toRow , range . toCell ) ;
var inherit = powerbi . Prototype . inherit ;:==:var inheritSingle:==:powerbi . prototype . inheritSingle ;
var requireg = require ( ' requireg ' ) ;:==:var resolve:==:require ( ' resolve ' ) ;
var selector = $ ( ' . selector - holder ' , element . closest ( ' li ' ) ) ;:==:var trigger:==:$ ( ' a . trigger ' , selector ) ;
var isFunction = util . isFunction ;:==:var isObject:==:util . isObject ;
var Class = Hilo . Class ;:==:var eventMixin:==:hilo . eventMixin ;
var history = flags . history  |  |  undefined ;:==:var limit:==:flags . limit  |  |  undefined ;
var current = formatTagNumber ( currentVersion ) ;:==:var saved:==:formatTagNumber ( savedVersion ) ;
var asyncConditionalTestCase = asyncConditionalTestCase  |  |  conditionalTestCase ;:==:var jstestdriver:==:jstestdriver  |  |  ;
var i d = elem . getAttribute ( ' data - l10n - id ' ) ;:==:var args:==:elem . getAttribute ( ' data - l10n - args ' ) ;
var hoursFormat = $ dateFormatter . hoursFormat ( format ) ;:==:var timeSeparator:==:$ dateFormatter . timeSeparator ( format ) ;
var expertSubsetCharset = coreCharsets . expertSubsetCharset ;:==:var fontRendererFactory:==:coreFontRenderer . fontRendererFactory ;
var promise = Promise . reject ( new Error ( ' think . error promise ' ) ) ;:==:var reject:==:think . reject ;
var FONT_IDENTITY_MATRIX = sharedUtil . font_identity_matrix ;:==:var fontType:==:sharedUtil . fontType ;
var canvasRenderer = hilo . canvasRenderer ;:==:var domRenderer:==:hilo . domRenderer ;
var _ realloc = Module [ ' _ realloc ' ] = asm [ ' _ realloc ' ] ;:==:var _ strncasecmp:==:Module [ ' _ strncasecmp ' ]    asm [ ' _ strncasecmp ' ] ;
var options = that . options ;:==:var timeView:==:that . timeView ;
var semver = require ( ' semver ' ) ;:==:var express:==:require ( ' express ' ) ;
var i d = data . i d ;:==:var url:==:data . url ;
var debugPanel = imports . debugPanel ;:==:var settings:==:imports . settings ;
var tabPosition = this . options . tabPosition ;:==:var h:==:math . floor ( outerHeight ( element , true ) ) + ( tabPosition      ' left '  |  |  tabPosition      ' right ' ? 2 : this . tabsHeight ) ;
var hexadecimal = require ( ' is - hexadecimal ' ) ;:==:var alphanumerical:==:require ( ' is - alphanumerical ' ) ;
var stream = evt . stream ;:==:var connection:==:provider . getConnection ( peerId , connectionId ) ;
var events = require ( ' events ' ) ;:==:var exists:==:Fs . exists  |  |  Path . exists ;
var options = self . options ;:==:var container:==:self . container ;
var o = this . options ;:==:var helper:==:$ . isFunction ( o . helper ) ? $ ( o . helper . apply ( this . element [ 0 ] , [ event ] ) ) : ( o . helper     ' clone ' ? this . element . clone ( ) . removeAttr ( ' i d ' ) : this . element ) ;
var dataPoints = data . dataPoints ;:==:var categoryLabels:==:data . categoryLabels ;
var providers = that . providers ;:==:var providerInfo:==:defaultValue ( dbRoot . providerInfo , [ ] ) ;
var range = this . _ range . slice ( ) ;:==:var axisModel:==:coordInfo . axisModels [ 0 ] ;
var COLOR_INDEX = Billboard . COLOR_INDEX ;:==:var ROTATION_INDEX:==:Billboard . ROTATION_INDEX ;
var m = SIMD . Uint16x8 . fromInt32x4Bits ( simd . int32x4 ( 0x3f800000 , 0x40000000 , 0x40400000 , 0x40800000 ) ) ;:==:var n:==:simd . int32x4 . fromUint16x8Bits ( m ) ;
var dayNamesMin = this . _ get ( inst , ' dayNamesMin ' ) ;:==:var monthNames:==:this . _ get ( inst , ' monthNames ' ) ;
var offset = TIFF_HEADER_LENGTH + entries_length + ifd_offset + values . length ;:==:var b:==:_ value_to_bytes ( raw_value , value_type , offset ) ;
var name = formData [ i ] . name ;:==:var value:==:formData [ i ] . value ;
var field = scope . field ( ) ;:==:var attributes:==:field . attributes ( ) ;
var properties = params . properties ;:==:var elements:==:params . elements ;
var constructor = obj . constructor ;:==:var proto:==:( _ . isFunction ( constructor ) & & constructor . prototype )  |  |  objProto ;
var onSelect = _ ref . onSelect ;:==:var optionClassName:==:_ ref . optionClassName ;
var key = fiber . key ;:==:var ref:==:fiber . ref ;
var layout = this . layout ;:==:var stride:==:this . stride ;
var aabb = this . aabb ;:==:var l:==:aabb . lowerBound ;
var content = this . content [ 0 ] ;:==:var scrollTop:==:content . scrollTop ;
var command = commands [ j ] ;:==:var derivedCommand:==:( shadowsEnabled & & command . receiveShadows ) ? command . derivedCommands . oit . shadows . translucentCommand : command . derivedCommands . oit . translucentCommand ;
var glob = require ( ' glob ' ) ;:==:var arrify:==:require ( ' arrify ' ) ;
var db = BrowserDB . db . _ db ;:==:var transaction:==:db . transaction ( ' visits ' , ' readwrite ' ) ;
var path = require ( ' path ' ) ;:==:var redis:==:require ( ' redis ' ) ;
var geocoder = viewer . _ geocoder ;:==:var homeButton:==:viewer . _ homeButton ;
var editorState = require ( ' editorState ' ) ;:==:var getContentStateFragment:==:require ( ' getContentStateFragment ' ) ;
var vx = this . vx * damping + ( gravity . x + this . f . x * this . m_inv ) * dt ;:==:var vy:==:this . vy * damping + ( gravity . y + this . f . y * this . m_inv ) * dt ;
var reactdomStackInjection = require ( ' reactdomStackInjection ' ) ;:==:var reactGenericBatching:==:require ( ' reactGenericBatching ' ) ;
var Span = firepad . Span ;:==:var utils:==:firepad . utils ;
var answer = get_answer ( ) ;:==:var fuzz_answer:==:get_fuzz_answer ( ) ;
var mout = require ( ' mout ' ) ;:==:var archy:==:require ( ' archy ' ) ;
var values = categorical & & categorical . values ;:==:var grouped:==:values & & values . grouped ( ) ;
var compression = require ( ' compression ' ) ;:==:var favicon:==:require ( ' serve - favicon ' ) ;
var clientY = defaultValue ( options . clienty , 0 ) ;:==:var button:==:defaultValue ( options . button , 0 ) ;
var nodeFieldCount = this . _ nodeFieldCount ;:==:var edgeFieldsCount:==:this . _ edgeFieldsCount ;
var extend = _ Vue$util . extend ;:==:var isArray:==:_ vue$util . isArray ;
var protectedDate = goog . testing . testCase . protectedDate _ ;:==:var d:==:new protectedDate ( ) ;
var points = this . points ;:==:var point:==:( points . length - 1 ) * t ;
var Eventful = docSet . getByLongname ( ' eventful ' ) [ 0 ] ;:==:var mixin:==:docSet . getByLongname ( ' anotherMixin ' ) [ 0 ] ;
var left = this . transformTypeofOperand _ ( tree . left ) ;:==:var right:==:tree . right ;
var hoverColor = _ props . hoverColor ;:==:var onMouseLeave:==:_ props . onMouseLeave ;
var computed = mobx . computed ;:==:var transaction:==:mobx . transaction ;
var dx2 = Math . max ( 0 , Math . min ( parseFloat ( mxUtils . getValue ( this . state . style , ' dx3 ' , 0 ) ) , parseFloat ( mxUtils . getValue ( this . state . style , ' dx2 ' , 0 ) ) ) ) ;:==:var dy2:==:math . max ( 0 , math . min ( 100 , parseFloat ( mxUtils . getValue ( this . state . style , ' dy2 ' , 0 ) ) ) ) ;
var wildCard = node . getAttribute ( ' wildCard ' ) ;:==:var singleChar:==:node . getAttribute ( ' singleChar ' ) ;
var utils = elliptic . utils ;:==:var assert:==:utils . assert ;
var form = this . form ;:==:var value:==:this . editField . value ;
var incomingMessage = require ( ' http ' ) . incomingMessage ;:==:var muk:==:require ( ' muk ' ) ;
var state = this . model . get ( ' state ' ) ;:==:var streamInfo:==:this . model . get ( ' streamInfo ' ) ;
var l = 0 + ( sleft ? pleft . size + ( pleft . resizable ? this . spacer : this . padding ) : 0 ) ;:==:var t:==:0 + ( stop ? ptop . size + ( ptop . resizable ? this . spacer : this . padding ) : 0 ) ;
var e = event  |  |  window . event ;:==:var target:==:e . target  |  |  e . srcElement ;
var sfField     = sfBuilderProvider . builders . sfField ;:==:var ngModel:==:sfBuilderProvider . builders . ngModel ;
var t = HTMLCSS . TeX . rule_thickness * scale ;:==:var h:==:( sub |  | presub ) . bbox . h , d    ( sup |  | presup ) . bbox . d ;
var fs = imports . fs ;:==:var proc:==:imports . proc ;
var newProperty = ' newProperty ' ;:==:var toString:==:' toString ' ;
var isArray = angular . isArray ;:==:var forEach:==:angular . forEach ;
var defaultAlpha = parameters . defaultAlpha ! = = undefined ? parameters . defaultAlpha : 1 . 0 ;:==:var defaultKeepAlive:==:parameters . defaultKeepAlive !    undefined ? parameters . defaultKeepAlive : false ;
var comment = env . store . peekRecord ( ' comment ' , 1 ) ;:==:var post:==:env . store . peekRecord ( ' post ' , 2 ) ;
var value = element ( by . binding ( ' value  |  date : ' yyyy - Www ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var argumentIndex = parsedPattern . argumentIndex ;:==:var argumentOffset:==:parsedPattern . argumentOffset ;
var column = this . column ;:==:var start:==:range . start ;
var O_CREAT = constants . O_CREAT  |  |  0 ;:==:var O_DIRECTORY:==:constants . O_DIRECTORY  |  |  0 ;
var data = this . props . data ;:==:var status:==:data . get ( ' status ' ) ;
var anims = imports . anims ;:==:var settings:==:imports . settings ;
var width = img . width ;:==:var height:==:img . height ;
var minId = event . data . minId ;:==:var maxId:==:event . data . maxId ;
var ascending1 = comparator . ascending1 ;:==:var ascending2:==:comparator . ascending2 ;
var callback = data . callback  |  |  ' jsonp ' + ( + + scriptLoader . _ count ) ;:==:var win:==:window ;
var accountId = identify . proxy ( ' traits . accountId ' ) ;:==:var paymentProviderId:==:identify . proxy ( ' traits . paymentProviderId ' ) ;
var start = leaf . get ( ' start ' ) ;:==:var end:==:leaf . get ( ' end ' ) ;
var x = this . dragOffset . x + e . pagex ;:==:var y:==:this . dragOffset . y + e . pagey ;
var logscale = this . attributes _ . getForAxis ( ' logscale ' , i ) ;:==:var includeZero:==:this . attributes _ . getForAxis ( ' includeZero ' , i ) ;
var curr = state . tokens . curr ;:==:var next:==:state . tokens . next ;
var _ _ GLOBAL__I_a = Module [ ' _ _ GLOBAL__I_a ' ] = asm [ ' _ _ GLOBAL__I_a ' ] ;:==:var _ memset:==:Module [ ' _ memset ' ]    asm [ ' _ memset ' ] ;
var path = require ( ' path ' ) ;:==:var gulp:==:require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;
var contentTypeInfo = $ tw . config . contentTypeInfo [ tiddlerType ]  |  |  ;:==:var extension:==:contentTypeInfo . extension  |  |  ' . tid ' ;
var path = uiSourceCode . path ( ) ;:==:var sourceFileId:==:this . _ sourceFileId ( uiSourceCode ) ;
var totalX = totalXl + abs ( x - xl ) ;:==:var totaly:==:totalYl + abs ( y - yl ) ;
var fixedDataTable = require ( ' fixedDataTable . react ' ) ;:==:var fixedDataTableCellDefault:==:require ( ' fixedDataTableCellDefault . react ' ) ;
var def = this . props . def ;:==:var doc:==:def . doc  |  |  ;
var globalObject = options . globalObject  |  |  window ;:==:var log:==:options . log  |  |  console . log . bind ( console ) ;
var minute = parseInt ( this . container . find ( ' . right . minuteselect ' ) . val ( ) , 10 ) ;:==:var second:==:this . timePickerSeconds ? parseInt ( this . container . find ( ' . right . secondselect ' ) . val ( ) , 10 ) : 0 ;
var stepMonths = this . _ get ( inst , ' stepMonths ' ) ;:==:var i d:==:' # ' + inst . i d ;
var string = _ react$PropTypes . string ;:==:var object:==:_ react$PropTypes . object ;
var ARRAY_TYPE = ' ARRAY_TYPE ' ;:==:var ARROW_FUNCTION:==:' ARROW_FUNCTION ' ;
var previousRadius = this . previousRadius ;:==:var sliceWidthRatio:==:this . sliceWidthRatio ;
var minY = origin [ 1 ] + tileRange . miny * tileSize [ 1 ] * resolution ;:==:var maxy:==:origin [ 1 ] + ( tileRange . maxy + 1 ) * tileSize [ 1 ] * resolution ;
var FS = o . FS ! = = undefined ? o . FS : ' , ' , fs = FS . charCodeAt ( 0 ) ;:==:var rs:==:o . rs !    undefined ? o . rs : ' \n ' , rs    rs . charCodeAt ( 0 ) ;
var mousemove = Rx . Observable . fromEvent ( document , ' mousemove ' ) ;:==:var mousedown:==:rx . observable . fromEvent ( dragTarget , ' mousedown ' ) ;
var groupedItems = this . _ groupedItems ;:==:var groupedItem:==:groupedItems [ key ] ;
var cos = Math . cos ( angle ) ;:==:var sin:==:Math . sin ( angle ) ;
var containmentEdges = this . containmentEdges ;:==:var strings:==:this . strings ;
var r = vec2 . create ( ) ;:==:var t:==:vec2 . create ( ) ;
var should = require ( ' should ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var Stream = require ( ' stream ' ) . Stream ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var fromSegment = fromSegments [ i ] ;:==:var toSegment:==:toSegments [ i ] ;
var a = new nodeTestName ( expr . substr ( 1 ) ) ;:==:var b:==:new stepExpr ( ' attribute ' , a ) ;
var createObjectFreeze = parseTreeFactory . createObjectFreeze ;:==:var createObjectLiteralExpression:==:parseTreeFactory . createObjectLiteralExpression ;
var exp = expected . keyPath ;:==:var act:==:actual . keyPath ;
var parent = runtime . gltf . nodes [ parentID ] ;:==:var children:==:parent . children ;
var offset = data . getLayout ( ' offset ' ) ;:==:var size:==:data . getLayout ( ' size ' ) ;
var yAxisLeft = this . linegraph . yAxisLeft ;:==:var yAxisRight:==:this . linegraph . yAxisRight ;
var group = this . group ;:==:var layoutInfo:==:seriesModel . layoutInfo ;
var ui = imports . ui ;:==:var dirname:==:require ( ' path ' ) . dirname ;
var c = Math . cos ( angle ) , s = Math . sin ( angle ) ;:==:var x:==:this . x - center . x ;
var favorites = imports [ ' tree . favorites ' ] ;:==:var tabManager:==:imports . tabManager ;
var origin = this . _ origin ;:==:var xAxis:==:this . _ xAxis ;
var costControl = window . parent . costControl ;:==:var simManager:==:window . parent . simManager ;
var online = require ( ' online ' ) ;:==:var redis:==:require ( ' redis ' ) ;
var setZoom = content . getAttribute ( ' data - setZoom ' )  |  |  17 ;:==:var icon:==:content . getAttribute ( ' data - icon ' ) ;
var g = ( color . g * 255 )  |  0 ;:==:var b:==:( color . b * 255 )  |  0 ;
var after = _ dereq _ ( ' after ' ) ;:==:var utf8:==:_ dereq _ ( ' utf8 ' ) ;
var options = context . options ;:==:var lang:==:options . langInfo ;
var layout = imports . layout ;:==:var fs:==:imports . fs ;
var panini = require ( ' panini ' ) ;:==:var sequence:==:require ( ' run - sequence ' ) ;
var nodes = this . _ animation . _ nodes ;:==:var duration:==:this . _ animation . duration ;
var assert = util . assert ;:==:var startup:==:util . Module ( ' startup ' ) ;
var appState = alloy . models . appState ;:==:var heroes:==:alloy . collections . heroes ;
var options = this . _ options ;:==:var center:==:Property . getValueOrUndefined ( entity . position , time , options . center ) ;
var socket = root . openSignalingChannel ( socketConfig ) ;:==:var isofferer:==:_ config . isofferer ;
var fs = require ( ' fs ' ) ;:==:var nconf:==:require ( ' nconf ' ) ;
var d = m . d ;:==:var tx:==:m . tx ;
var _ _ GLOBAL__I_a = Module [ ' _ _ GLOBAL__I_a ' ] = asm [ ' _ _ GLOBAL__I_a ' ] ;:==:var runPostSets:==:module [ ' runPostSets ' ]    asm [ ' runPostSets ' ] ;
var i d = i d  |  |  dimensions . values ( ) . length ;:==:var dimension:==:model_dimension ( ) ;
var img = document . createElement ( ' img ' ) ;:==:var system:==:this . system ;
var view = endUserOptions . view ;:==:var source:==:endUserOptions . source ;
var word = options & & options . word  |  |  WORD ;:==:var range:==:options & & options . range  |  |  RANGE ;
var w = latestChange . boundingClientRect . width ;:==:var h:==:latestChange . boundingClientRect . height ;
var position = shadowMapCamera . positionwc ;:==:var direction:==:shadowMapCamera . directionwc ;
var fs = require ( ' fs ' ) ;:==:var pager:==:require ( ' default - pager ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var height = _ ref2 . height ;:==:var scrollLeft:==:_ ref2 . scrollLeft ;
var semanticFilter = powerbi . data . semanticFilter ;:==:var urlUtils:==:jsCommon . urlUtils ;
var scrollLeft = _ state2 . scrollLeft ;:==:var scrollTop:==:_ state2 . scrollTop ;
var get = Object . getOwnPropertyDescriptor ( foo ( ) , ' callee ' ) . get ;:==:var set:==:object . getOwnPropertyDescriptor ( foo ( ) , ' callee ' ) . set ;
var basename = p . basename ;:==:var join:==:p . join ;
var tab = tabManager . findTab ( data . path ) ;:==:var doc:==:tab & & tab . document ;
var replace = require ( ' gulp - replace ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var scriptId = this . _ scriptIdForuiSourceCode . get ( uiSourceCode ) ;:==:var script:==:this . _ debuggerModel . scriptForId ( scriptId ) ;
var sFilter = blanket . options ( ' sap - ui - cover - only ' )  |  |  sFilterAttr ;:==:var sAntiFilter:==:blanket . options ( ' sap - ui - cover - never ' )  |  |  sAntiFilterAttr ;
var stun = iceRestrictions . stun ;:==:var turn:==:iceRestrictions . turn ;
var exportMapping = traceur . syntax . trees . exportMapping ;:==:var exportMappingList:==:traceur . syntax . trees . exportMappingList ;
var ace = this . ace ;:==:var row:==:ace . getCursorPosition ( ) . row ;
var styleSheetValidation = require ( ' styleSheetValidation ' ) ;:==:var flatten:==:require ( ' flattenStyle ' ) ;
var namespace = organized . namespace ;:==:var facts:==:organized . facts ;
var controller = this . controller ;:==:var controllerEuler:==:this . controllerEuler ;
var glob = require ( ' glob ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var data = $ . data ( current . el , ' pp - rwdrag ' ) ;:==:var left:==:( current . oleft + ( e . pageX  |  |  e . clientX ) - current . ox ) ;
var moment = require ( ' moment - timezone ' ) ;:==:var isMoment:==:moment . isMoment ;
var choice = + this . doc . get_classname_numeric_suffix ( dragitemhome , ' choice ' ) ;:==:var group:==:+ this . doc . get_classname_numeric_suffix ( dragitemhome , ' group ' ) ;
var head = $ $ ( ' tr ' , ' goog - date - picker - head ' ) [ 0 ] ;:==:var month:==:$ $ ( ' button ' , ' goog - date - picker - month ' , head . firstChild ) [ 0 ] ;
var Editor = imports . Editor ;:==:var Tree:==:imports . Tree ;
var n = new accessorNode ( a , new indexNode ( [ b , c ] ) ) ;:==:var e:==:new constantNode ( 5 ) ;
var proc = imports . proc ;:==:var fs:==:require ( ' fs ' ) ;
var startTime = tasks [ firstTaskIndex ] . startTime ( ) ;:==:var endTime:==:tasks [ lastTaskIndex ] . endTime ( ) ;
var binaryOperator = traceur . syntax . trees . binaryOperator ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var rect = data . rect ;:==:var view:==:pdfPage . view ;
var fontDirection = current . fontDirection ;:==:var charSpacing:==:current . charSpacing ;
var dy = h * 0 . 5 * Math . max ( 0 , Math . min ( 1 , parseFloat ( mxUtils . getValue ( this . style , ' dy ' , this . dy ) ) ) ) ;:==:var dx:==:math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;
var matrix = math . matrix ;:==:var sparse:==:math . sparse ;
var contentState = require ( ' contentState ' ) ;:==:var editorState:==:require ( ' editorState ' ) ;
var msup = cTop . createElement ( ' msup ' ) ;:==:var arg:==:( args . length ) ? args [ 0 ] : cTop . createElement ( ' mrow ' ) ;
var Subscribable = require ( ' Subscribable ' ) ;:==:var View:==:reactNative ;
var leftDelimiter = parserConf . leftDelimiter  |  |  ' ' ;:==:var version:==:parserConf . version  |  |  2 ;
var addCommas = formatUtil . addCommas ;:==:var encodehtml:==:formatUtil . encodehtml ;
var Linearization = coreParser . linearization ;:==:var calculatemd5:==:coreCrypto . calculatemd5 ;
var search = location . search ;:==:var state:==:location . state ;
var cssmin = require ( ' gulp - cssmin ' ) ;:==:var del:==:require ( ' del ' ) ;
var bind = utils . bind ;:==:var warn:==:utils . debug ( ' core : a - node : warn ' ) ;
var req = this . req ;:==:var app:==:req . app ;
var y = this . y ;:==:var z:==:this . hasAxis ( az ) ? this . z : 1 ;
var ui = imports . ui ;:==:var proc:==:imports . proc ;
var address = document . getElementById ( ' address ' ) ;:==:var version:==:document . getElementById ( ' version ' ) ;
var removeRangeFromContentState = require ( ' removeRangeFromContentState ' ) ;:==:var splitBlockInContentState:==:require ( ' splitBlockInContentState ' ) ;
var windowOpacity = _ options . windowOpacity ;:==:var edgeStyle:==:_ options . edgeStyle ;
var change = changes [ changes . length - 1 ] ;:==:var idAttr:==:this . options . idAttr ;
var valueFormatter = powerbi . visuals . valueFormatter ;:==:var selectionId:==:powerbi . visuals . selectionId ;
var isOpaque = this . props . isOpaque ;:==:var verticalTop:==:this . props . verticalTop  |  |  0 ;
var isArray = _ vue$util . isArray ;:==:var defineReactive:==:_ vue$util . defineReactive ;
var colors = this . colors ;:==:var positions:==:this . positions ;
var b = this . begin [ i ] ;:==:var f:==:this . finish [ i ] ;
var text = el . select ( ' text ' ) ;:==:var x:==:parseFloat ( text . attr ( ' x ' )  |  |  0 ) ;
var prev = this . b1Link . prev ;:==:var next:==:this . b1Link . next ;
var notes = treatment . notes  |  |  '' ;:==:var enteredBy:==:treatment . enteredBy  |  |  '' ;
var editor    = this . editor ;:==:var settings:==:this . settings ;
var bendPath = options . bendPath ;:==:var extrudePath:==:options . extrudePath ;
var $ = browser . $ ;:==:var element:==:browser . element ;
var hotUpdateChunkFilename = this . outputOptions . hotUpdateChunkFilename ;:==:var hotUpdateMainFilename:==:this . outputOptions . hotUpdateMainFilename ;
var width = dom . width ;:==:var height:==:dom . height ;
var dynCall_iiiiiii = Module [ ' dynCall_iiiiiii ' ] = asm [ ' dynCall_iiiiiii ' ] ;:==:var dynCall_viiiiiiiii:==:Module [ ' dynCall_viiiiiiiii ' ]    asm [ ' dynCall_viiiiiiiii ' ] ;
var disabled = _ props . disabled ;:==:var disableKeyboardFocus:==:_ props . disableKeyboardFocus ;
var uniforms = template . uniforms ;:==:var materials:==:template . materials ;
var model = models [ modelType ]  |  |  ;:==:var type:==:model . definition & & model . definition . type ? model . definition . type : ' object ' ;
var x = euler . x , y = euler . y , z = euler . z ;:==:var a:==:Math . cos ( x ) , b    Math . sin ( x ) ;
var nodeFrom = viz . graph . getNode ( adj . nodeFrom . i d ) ;:==:var nodeTo:==:viz . graph . getNode ( adj . nodeTo . i d ) ;
var cos = Math . cos ( rotation ) ;:==:var sin:==:Math . sin ( rotation ) ;
var APN_SETTINGS_KEY = apnConst . apn_settings_key ;:==:var default_apn_settings_key:==:apnConst . default_apn_settings_key ;
var right = this . get ( ' right ' ) ;:==:var left:==:this . get ( ' left ' ) ;
var x1 = layer . x1  |  |  layer . frame . x ;:==:var y1:==:layer . y1  |  |  layer . frame . y ;
var itemContainer = fragment  |  |  this . els . itemContainer ;:==:var itemsIndom:==:this . els . itemsIndom ;
var loc = $ location ;:==:var s:==:$ scope ;
var root = new KM . minderNode ( ' root ' ) ;:==:var first:==:new km . minderNode ( ' first ' ) ;
var edges = this [ ' edges ' ] ;:==:var normals:==:this [ ' normals ' ] ;
var dragonBonesData = buildArmatureDataPackage . dragonBonesData ;:==:var armatureData:==:buildArmatureDataPackage . armatureData ;
var type = elem . type ;:==:var nodeName:==:elem . nodeName ;
var wait = ( options & & options . wait )  |  |  4000 ;:==:var service:==:this . services [ name ] ;
var anchor = new domPosition ( sel . anchorNode , sel . anchorOffset ) ;:==:var focus:==:new domPosition ( sel . focusNode , sel . focusOffset ) ;
var radii = ellipsoid . radii ;:==:var show:==:ellipsoid . show ;
var should = require ( ' should ' ) ;:==:var versions:==:require ( ' apidoc - example ' ) . versions ;
var top = offset . top + this . height ;:==:var left:==:offset . left ;
var optionLabelText = this . _ optionLabelText ( ) ;:==:var span:==:this . span ;
var bucketCount = ( opts & & opts . bucketCount )  |  |  4 ;:==:var bucketMins:==:( opts & & opts . bucketMins )  |  |  5 ;
var height = jpxImage . height ;:==:var componentsCount:==:jpxImage . componentsCount ;
var visible = options . visible = = null  |  |  options . visible ;:==:var index:==:options . index  |  |  100 ;
var cartOrder = dataservice . cartOrder ;:==:var draftOrder:==:dataservice . draftOrder ;
var accessorNode = math . expression . node . accessorNode ;:==:var indexNode:==:math . expression . node . indexNode ;
var bindingIdentifier = traceur . syntax . trees . bindingIdentifier ;:==:var block:==:traceur . syntax . trees . block ;
var _ bitshift64Shl = module [ ' _ bitshift64Shl ' ] = asm [ ' _ bitshift64Shl ' ] ;:==:var _ testSetjmp:==:module [ ' _ testSetjmp ' ]    asm [ ' _ testSetjmp ' ] ;
var debug = require ( ' debug ' ) ( ' pm2 : paths ' ) ;:==:var p:==:require ( ' path ' ) ;
var timeout = _ timeout  |  |  50000 ;:==:var label:==:_ label  |  |  ' Loading . . . ' ;
var balloon2 = BABYLON . Mesh . createSphere ( ' balloon2 ' , 10 , 2 . 0 , scene ) ;:==:var balloon3:==:babylon . mesh . createSphere ( ' balloon3 ' , 10 , 2 . 0 , scene ) ;
var send = require ( ' send ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var db = this . _ db ;:==:var transaction:==:db . transaction ( DBOS_BOOKMARKS ) ;
var createIdentifierToken = parseTreeFactory . createIdentifierToken ;:==:var createCatch:==:parseTreeFactory . createCatch ;
var karma = require ( ' karma ' ) . server ;:==:var merge:==:require ( ' merge - stream ' ) ;
var eastHemisphereGeometry = instance . eastHemisphereGeometry ;:==:var westHemisphereGeometry:==:instance . westHemisphereGeometry ;
var delimiter = typeof options . delimiter = = = ' undefined ' ? defaults . delimiter : options . delimiter ;:==:var strictNullHandling:==:typeof options . strictNullHandling      ' boolean ' ? options . strictNullHandling : defaults . strictNullHandling ;
var d = bn . fromBits ( h . toBits ( vectors [ i ] . d ) ) ;:==:var x:==:bn . fromBits ( h . toBits ( vectors [ i ] . qx ) ) ;
var viewRefreshMode = queryStringValue ( link , ' viewRefreshMode ' , namespaces . kml ) ;:==:var viewBoundScale:==:defaultValue ( queryStringValue ( link , ' viewBoundScale ' , namespaces . kml ) , 1 . 0 ) ;
var readdir = Promise . promisify ( require ( ' recursive - readdir ' ) ) ;:==:var ejs:==:require ( ' ejs ' ) ;
var elementRef = this . elementRef ;:==:var parentView:==:view_ref_1 . internalView ( elementRef . parentView ) ;
var m = particle . mass ;:==:var n:==:this . options . normal ;
var edgeToNodeOffset = this . _ edgeToNodeOffset ;:==:var edgeTypeOffset:==:this . _ edgeTypeOffset ;
var surface = this . _ surface ;:==:var tileProvider:==:surface . tileProvider ;
var vcard = presence . c ( ' x ' , xmlns : ' vcard - temp : x : update ' ) ;:==:var photo:==:vcard . c ( ' photo ' ) ;
var width = element . width ;:==:var height:==:element . height ;
var symbol = definition . symbol ;:==:var color:==:object . color  |  |  definition . color  |  |  ' # fff ' ;
var layout = imports . layout ;:==:var Menu:==:imports . Menu ;
var joinClasses = require ( ' joinClasses ' ) ;:==:var shallowEqual:==:require ( ' shallowEqual ' ) ;
var yaw = parseFloat ( e . yaw ) ;:==:var radius:==:parseFloat ( e . radius ) ;
var fixedDataTableRow = require ( ' fixedDataTableRow . react ' ) ;:==:var cx:==:require ( ' cx ' ) ;
var file = path . join ( testPackage , ' new - file ' ) ;:==:var dir:==:path . join ( testPackage , ' new - dir ' ) ;
var format = this . h ( ' format ' ) ;:==:var className:==:this . h ( ' className ' ) ;
var callback = $ . data ( this , ' numeric . callback ' ) ;:==:var negative:==:$ . data ( this , ' numeric . negative ' ) ;
var sourceURL = styleSheetHeader . resourceurl ( ) ;:==:var lineNumber:==:styleSheetHeader . lineNumberInSource ( ruleLocation . startLine ) ;
var hintColor = props . muiTheme . textField . hintColor ;:==:var show:==:props . show ;
var e = events [ events . length - 1 ] ;:==:var d:==:e . detail ;
var db = new PouchDB ( dbs . name ) ;:==:var doc:==:_ i d : ' adoc ' ;
var ui = imports . ui ;:==:var installer:==:imports . installer ;
var mustache = require ( ' mustache ' ) ;:==:var querystring:==:require ( ' querystring ' ) ;
var config = this . config ;:==:var multitree:==:config . multitree ;
var i d = this . i d ;:==:var name:==:this . options . data . name ;
var unaryExpression = traceur . syntax . trees . unaryExpression ;:==:var variableDeclarationList:==:traceur . syntax . trees . variableDeclarationList ;
var assertion = Parsers . assertion ;:==:var node:==:Parsers . node ;
var width = this . width = options . width  |  |  1 ;:==:var height:==:this . height    options . height  |  |  1 ;
var newChild = unwrap ( newChildWrapper ) ;:==:var refChild:==:refChildWrapper ? unwrap ( refChildWrapper ) : null ;
var a = new Date ;:==:var c:==:clone ( a ) ;
var offset = options . offset ;:==:var sideOrientation:==:meshBuilder . updateSideOrientation ( options . sideOrientation , scene ) ;
var CLASS_EXPRESSION = ' CLASS_EXPRESSION ' ;:==:var COMMA_EXPRESSION:==:' COMMA_EXPRESSION ' ;
var lazyLoader = window . wrappedjsObject . lazyLoader ;:==:var data:==:window . wrappedjsObject . data ;
var toFixed = fn . toFixed ;:==:var uint16:==:fn . uint16 ;
var atan = Math . atan ;:==:var atan2:==:Math . atan2 ;
var paypro = $ scope . paypro ;:==:var toAddress:==:$ scope . toAddress ;
var clientX = e . clientX - pos . left + scrollLeft ;:==:var clienty:==:e . clienty - pos . top + scrollTop ;
var tmpdir = require ( ' os ' ) . tmpdir ( ) ;:==:var fs:==:require ( ' fs ' ) ;
var f8Colors = require ( ' f8Colors ' ) ;:==:var react:==:require ( ' react ' ) ;
var z = e . heading . z ;:==:var magneticHeading:==:e . heading . magneticHeading ;
var doBrowserify = buildUtils . doBrowserify ;:==:var writeFile:==:buildUtils . writeFile ;
var angle = this . angle ;:==:var phase:==:this . phase ;
var contactPhone = contacts . contactPhone ;:==:var contactPhoneKind:==:contacts . contactPhoneKind ;
var createEnumType = powerbi . createEnumType ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var unicodeBidiDirection = require ( ' unicodeBidiDirection ' ) ;:==:var getElementPosition:==:require ( ' getElementPosition ' ) ;
var cancel = options . cancel  |  |  function ( ) ;:==:var timeout:==:options . timeout  |  |  2000 ;
var redirect_uri = _ ref . redirect_uri ;:==:var data:==:_ ref . data ;
var set = Ember . set ;:==:var attr:==:DS . attr ;
var line = lineAtHeight ( cm . view . doc , my ) ;:==:var gutter:==:cm . options . gutters [ i ] ;
var tangent = line . tangentAt ( halfPercent ) ;:==:var n:==:[ tangent [ 1 ] , -tangent [ 0 ] ] ;
var positionRangeForPathAsync = exports . positionRangeForPathAsync = promisifySyncFn ( positionRangeForPath ) ;:==:var getLineNumberForPathAsync:==:exports . getLineNumberForPathAsync    promisifySyncFn ( getLineNumberForPath ) ;
var rounded = _ props . rounded ;:==:var style:==:_ props . style ;
var bgColor = opts . bgColor ;:==:var container:==:opts . container ;
var office = this . office ;:==:var veeam:==:this . veeam ;
var cardState = card . cardState ;:==:var lockType:==:this . lockTypeMap [ cardState ] ;
var proto = protocol = = = ' https ' ? https : http ;:==:var log:==:config . logger  |  |  debug ;
var config = options . config  |  |  ' ide ' ;:==:var settings:==:options . settings  |  |  ' devel ' ;
var reactFiberHostContext = require ( ' reactFiberHostContext ' ) ;:==:var reactFiberHydrationContext:==:require ( ' reactFiberHydrationContext ' ) ;
var path = options . path ;:==:var radius:==:options . radius  |  |  1 ;
var height = shape . height ;:==:var radius:==:shape . radius ;
var delegateConfig = instance . get ( ' delegateConfig ' ) ;:==:var proxy:==:instance . get ( ' proxy ' ) ;
var Widget = ui . Widget ;:==:var keys:==:kendo . keys ;
var rect = this . _ rect ;:==:var style:==:this . style ;
var collection = db . collection ( ' fs . files ' ) ;:==:var count:==:yield collection . count ( ) ;
var fail = grunt . fail ;:==:var verbose:==:grunt . verbose ;
var fork = require ( ' child_process ' ) . fork ;:==:var env:==:process . env ;
var detail = e . detail ;:==:var direction:==:detail . direction ;
var stylish = require ( ' jshint - stylish ' ) ;:==:var tar:==:require ( ' gulp - tar ' ) ;
var   TABLE = 17 ;:==:var   LENLENS:==:18 ;
var min = version . min ;:==:var max:==:version . max ;
var selector = rule . selector ;:==:var content:==:rule . content ;
var points = shape . points ;:==:var smooth:==:shape . smooth ;
var sampleCoverage = renderState . sampleCoverage ;:==:var enabled:==:sampleCoverage . enabled ;
var input = this . $ element . querySelector ( ' input ' ) ;:==:var button:==:this . $ element . querySelector ( ' button ' ) ;
var beforeShowDay = this . _ get ( inst , ' beforeShowDay ' ) ;:==:var showOtherMonths:==:this . _ get ( inst , ' showOtherMonths ' ) ;
var task = angular . element ( ui . item [ 0 ] ) . scope ( ) . task ;:==:var startIndex:==:ui . item . data ( ' startIndex ' ) ;
var isScrolling = _ state2 . isScrolling ;:==:var scrollLeft:==:_ state2 . scrollLeft ;
var _ require = _ _ webpack_require _ _ ( 1 ) ;:==:var propTypes:==:_ require . propTypes ;
var direction = camera . direction ;:==:var up:==:camera . up ;
var edit = evt . getProperty ( ' edit ' ) ;:==:var changes:==:edit . changes ;
var threadId = node . dataset . threadId ;:==:var draftId:==:node . dataset . draftId ;
var child_process = require ( ' child_process ' ) ;:==:var PNG:==:require ( ' pngjs ' ) . PNG ;
var naturalWidth = canvas . naturalWidth ;:==:var naturalHeight:==:canvas . naturalHeight ;
var lime800 = exports . lime800 = ' # 9e9d24 ' ;:==:var lime900:==:exports . lime900    ' # 827717 ' ;
var overlayText = app . overlayText ;:==:var cameraButton:==:app . cameraButton ;
var word = definitions [ 0 ] . word ;:==:var q:==:DDG . get_query ( ) ;
var lightBlue700 = exports . lightBlue700 = ' # 0288d1 ' ;:==:var lightBlue800:==:exports . lightBlue800    ' # 0277bd ' ;
var subdivisionsX = options . subdivisionsX  |  |  options . subdivisions  |  |  1 ;:==:var subdivisionsY:==:options . subdivisionsY  |  |  options . subdivisions  |  |  1 ;
var page = data . page ;:==:var pages:==:data . pages ;
var async = require ( ' async ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var skipCurrent = options . skipCurrent ! = false ;:==:var range:==:options . range ;
var name = element . getAttribute ( ' data - name ' ) ;:==:var aliases:==:element . getAttribute ( ' data - aliases ' )  |  |  '' ;
var x = Math . min ( rectx1 , prevrectx1 ) ;:==:var y:==:Math . min ( recty1 , prevrecty1 ) ;
var c = new Tracker . Dependency ;:==:var d:==:new Tracker . Dependency ;
var exceptSingleline = this . _ exceptSingleline ;:==:var exceptMultiline:==:this . _ exceptMultiline ;
var orderId = track . orderId ( ) ;:==:var products:==:track . products ( ) ;
var uglify   = require ( ' gulp - uglify ' ) ;:==:var sass:==:require ( ' gulp - sass ' ) ;
var key = String ( log [ i ] . params [ ' key ' ] ) ;:==:var value:==:String ( log [ i ] . params [ ' value ' ] ) ;
var message = messages [ i ] ;:==:var rawLocation:==:this . _ rawLocation ( message ) ;
var bitField = follower . _ bitField ;:==:var fulfill:==:follower . _ fulfillmentHandler0 ;
var x = options [ ' x ' ] ;:==:var y:==:options [ ' y ' ] ;
var size = sizes [ index ] . size ;:==:var url:==:sizes [ index ] . formats [ 0 ] . preview_url ;
var cp1 = symbol . _ _ cp1 ;:==:var t:==:symbol . _ _ t ;
var ext = self . ext ;:==:var realpath:==:this . realpath    _ . isAbsolute ( self . fullname ) & & _ . exists ( self . fullname ) ? _ ( self . fullname ) : _ . realpathSafe ( self . fullname ) ;
var data = params . data ;:==:var rect:==:params . options . rect ;
var crypto = require ( ' crypto ' ) ;:==:var request:==:require ( ' request ' ) ;
var gridStyle = _ props . gridStyle ;:==:var headerHeight:==:_ props . headerHeight ;
var patch = patches [ 0 ] ;:==:var diffs:==:patch . diffs ;
var printStyle = _ _ webpack_require _ _ ( 29 ) . printStyle ;:==:var allOptions:==:_ _ webpack_require _ _ ( 59 ) . allOptions ;
var src = scripts [ i ] . src ;:==:var len:==:src . length ;
var map = zrUtil . map ;:==:var merge:==:zrUtil . merge ;
var tx = ( wt . tx * renderSession . resolution ) + renderSession . shakex ;:==:var ty:==:( wt . ty * renderSession . resolution ) + renderSession . shakey ;
var fs = require ( ' fs ' ) ;:==:var rollup:==:require ( ' rollup ' ) ;
var encodeHTML = formatUtil . encodehtml ;:==:var bind:==:zrUtil . bind ;
var authorizationUrl = security . authorizationUrl ;:==:var tokenUrl:==:security . tokenUrl ;
var deps = mod . deps ;:==:var callback:==:mod . callback ;
var hDocEscKey = instance . _ hDocEscKeyEv ;:==:var hDocMouseDown:==:instance . _ hDocMouseDownEv ;
var stringToBytes = sharedUtil . stringToBytes ;:==:var utf8StringToString:==:sharedUtil . utf8StringToString ;
var tileProvider = primitive . _ tileProvider ;:==:var occluders:==:primitive . _ occluders ;
var assignmentNode = math . expression . node . assignmentNode ;:==:var symbolNode:==:math . expression . node . symbolNode ;
var h = texture . height ;:==:var c:==:texture . channels ;
var whitelist = options . whitelist ;:==:var blacklist:==:options . blacklist ;
var component = exports . component = internalPropTypes . component ;:==:var components:==:exports . components    internalPropTypes . components ;
var bone1 = this . _ bone1 ;:==:var target:==:this . targetPosition ;
var canvasWidth = self . canvasWidth ;:==:var canvasHeight:==:self . canvasHeight ;
var start = Dom . cursorFromBoundaryPoint ( range . startContainer , range . startOffset ) ;:==:var end:==:dom . cursorFromBoundaryPoint ( range . endContainer , range . endOffset ) ;
var file = ' file ' ;:==:var type:==:' type ' ;
var yYexit = caml_exceptions . create ( ' parsing . yYexit ' ) ;:==:var parse_error:==:caml_exceptions . create ( ' parsing . parse_error ' ) ;
var isInteger = math . isInteger ;:==:var bignumber:==:math . bignumber ;
var block1 = blockManager . getBlock ( jQuery ( ' # block1 ' , testContainer ) ) ;:==:var block2:==:blockManager . getBlock ( jQuery ( ' # block2 ' , testContainer ) ) ;
var ref = this . props . node . get ( ' ref ' ) ;:==:var state:==:this . props . node . get ( ' state ' ) ;
var l = $ ( target ) . offset ( ) . left ;:==:var t:==:$ ( target ) . offset ( ) . top ;
var x = this . x + 1 ;:==:var y:==:this . ydisp + this . y ;
var s = d3 . select ( this ) ;:==:var trace:==:calcTrace [ 0 ] . trace ;
var bufPtr = alias ( ' bufPtr ' , voidPtr ) ;:==:var str:==:alias ( ' str ' , ptr ( u8 ) ) ;
var NUMBER   = C . NUMBER   = 0xb ;:==:var START:==:C . START    0x11 ;
var querystring = require ( ' querystring ' ) ;:==:var request:==:require ( ' request ' ) ;
var plan = this . index . plan ( this . root , sink , options ) ;:==:var future:==:afuture ( ) ;
var functionInfos = this . _ functionInfos ;:==:var idToTopDownNode:==:this . _ idToTopDownNode ;
var createIdentifierExpression = parseTreeFactory . createIdentifierExpression ;:==:var createIfStatement:==:parseTreeFactory . createIfStatement ;
var doc = global . document ;:==:var addEvent:==:addEventEasy ;
var x = box . x  |  0 ;:==:var y:==:box . y  |  0 ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var newDataLabelUtils:==:powerbi . visuals . newDataLabelUtils ;
var mustache = require ( ' gulp - mustache ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var currentOffset = _ ref3 . currentOffset ;:==:var targetIndex:==:_ ref3 . targetIndex ;
var w = width ;:==:var h:==:height ;
var util = require ( ' util ' ) ;:==:var ease:==:require ( ' ease - component ' ) ;
var getOwnPropertyNames = object . getOwnPropertyNames ;:==:var defineProperty:==:object . defineProperty ;
var ui = imports . ui ;:==:var debug:==:imports . debugger ;
var range = math . range ;:==:var log10:==:math . log10 ;
var a = base ( 12 ) ;:==:var b:==:base ( 13 ) ;
var zlib = require ( ' zlib ' ) ;:==:var request:==:require ( ' request ' ) ;
var a = processStyle ( aFill ? this . fillStyle : this . strokeStyle ) ;:==:var color:==:a . color ;
var x = positions [ i ] + center . x ;:==:var y:==:positions [ i + 1 ] + center . y ;
var attribute = attributes [ attributeIndex ] ;:==:var componentsPerAttribute:==:attribute . componentsPerAttribute ;
var isEventResizable = t . isEventResizable ;:==:var reportEventElement:==:t . reportEventElement ;
var pointers = self . pointers ;:==:var canvas:==:self . canvas ;
var path = require ( ' path ' ) ;:==:var Server:==:require ( ' karma ' ) . Server ;
var util = require ( ' util ' ) ;:==:var express:==:require ( ' express ' ) ;
var htmlmin = require ( ' gulp - htmlmin ' ) ;:==:var typescriptCompiler:==:typescriptCompiler  |  |  null ;
var fullContactCardOptions = contacts . fullContactCardOptions ;:==:var viewSizePreference:==:windows . ui . viewManagement . viewSizePreference ;
var keepLess = options . keepLess  |  |  false ;:==:var config:==:options . config  |  |  ' ide ' ;
var flat = flatten ( array ) ;:==:var len:==:flat . length ;
var showMinorLabels = this . options . showMinorLabels ;:==:var showMajorLabels:==:this . options . showMajorLabels ;
var fs = require ( ' fs ' ) ;:==:var replace:==:require ( ' gulp - replace ' ) ;
var liven = require ( ' . . ' ) . liven ;:==:var getType:==:require ( ' . . ' ) . getType ;
var relTarget = $ ( ' # relTargetId ' ) [ 0 ] ;:==:var goodTarget:==:$ ( ' # goodTargetId ' ) [ 0 ] ;
var outOfBoundsClass = constraint . outOfBoundsClass ;:==:var pinnedClass:==:constraint . pinnedClass ;
var fork = require ( ' child_process ' ) . fork ;:==:var assert:==:require ( ' assert ' ) ;
var latitudeBands = opts & & opts . latitudeBands ! = = undefined ? opts . latitudeBands : 16 ;:==:var longitudeBands:==:opts & & opts . longitudeBands !    undefined ? opts . longitudeBands : 16 ;
