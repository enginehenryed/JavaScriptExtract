var scrollDirectionVertical = state . scrollDirectionVertical ;:==:var scrollLeft:==:state . scrollLeft ;
var src = o . src ;:==:var dst:==:o . dst ;
var nodeNativeType = this . _ nodeNativeType ;:==:var nodeCodeType:==:this . _ nodeCodeType ;
var memberExpression = this . transformAny ( left . memberExpression ) ;:==:var right:==:this . transformAny ( tree . right ) ;
var fulfilled = adapter . fulfilled ;:==:var rejected:==:adapter . rejected ;
var url = require ( ' url ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' keystone : storage : adapter : fs ' ) ;
var w = ( width + originX > image . width ) ? image . width - originX : width ;:==:var h:==:( height + originY > image . height ) ? image . height - originY : height ;
var col = db . collection ( ' insert_one_with_generators ' ) ;:==:var r:==:yield col . insertOne ( a : 1 ) ;
var matrix = math . matrix ;:==:var range:==:math . range ;
var sparseMatrix = type . sparseMatrix ;:==:var denseMatrix:==:type . denseMatrix ;
var body = resp . httpResponse . body  |  |  '' ;:==:var headers:==:resp . httpResponse . headers  |  |  ;
var start = getTextNodeAndOffsetOf ( $ startLine , startOffset ) ;:==:var end:==:getTextNodeAndOffsetOf ( $ endLine , endOffset ) ;
var $ wrap = self . $ wrap ;:==:var logoNotice:==:self . logoNotice ;
var text = that . options . text ;:==:var value:==:that . options . value ;
var title = document . getElementById ( ' title - pin ' ) ;:==:var screen:==:document . getElementById ( ' cp - pin - screen ' ) ;
var c = ca [ n ] . command ;:==:var p:==:ca [ n ] . points ;
var tileProvider = primitive . _ tileProvider ;:==:var tilesToRender:==:primitive . _ tilesToRender ;
var notImplementedException = sharedUtil . notImplementedException ;:==:var missingDataException:==:sharedUtil . missingDataException ;
var tap = require ( ' tap ' ) ;:==:var test:==:tap . test ;
var a = new largeObject ( 1 ) ;:==:var b:==:new largeObject ( 2 ) ;
var rowCount = _ props . rowCount ;:==:var threshold:==:_ props . threshold ;
var safeApply = leafletHelpers . safeApply ;:==:var eventsHelper:==:leafletEventsHelpersFactory ;
var dateToCell = t . dateToCell ;:==:var rangeToSegments:==:t . rangeToSegments ;
var elementFromPoint = scope . elementFromPoint ;:==:var forwardMethodsToWrapper:==:scope . forwardMethodsToWrapper ;
var breakContinueTransformer = traceur . codegeneration . generator . breakContinueTransformer ;:==:var catchState:==:traceur . codegeneration . generator . catchState ;
var server = opts . server ;:==:var printLog:==:opts . printLog ;
var crypto = require ( ' crypto ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var lab = exports . lab = Lab . script ( ) ;:==:var expect:==:Code . expect ;
var b = ref . b ;:==:var min:==:Math . min ( r , g , b ) ;
var optimist = require ( ' optimist ' ) ;:==:var async:==:require ( ' async ' ) ;
var Subscribable = require ( ' Subscribable ' ) ;:==:var Text:==:require ( ' f8Text ' ) ;
var x = Math . pow ( 1 - t , 3 ) * origin . x + 3 . 0 * Math . pow ( 1 - t , 2 ) * t * control1 . x + 3 . 0 * ( 1 - t ) * t * t * control2 . x + t * t * t * destination . x ;:==:var y:==:Math . pow ( 1 - t , 3 ) * origin . y + 3 . 0 * Math . pow ( 1 - t , 2 ) * t * control1 . y + 3 . 0 * ( 1 - t ) * t * t * control2 . y + t * t * t * destination . y ;
var initPTS = this . _ initPTS ;:==:var initDTS:==:this . _ initDTS ;
var fill = Bytes . fill ;:==:var blit:==:Bytes . blit_string ;
var c9 = imports . c9 ;:==:var Form:==:imports . Form ;
var Category = hexo . model ( ' Category ' ) ;:==:var Post:==:hexo . model ( ' Post ' ) ;
var blue = Color . floatToByte ( this . blue ) ;:==:var alpha:==:color . floatToByte ( this . alpha ) ;
var modules = script . getAttribute ( ' data - modules ' ) ;:==:var composite:==:script . getAttribute ( ' data - composite ' )  |  |  false ;
var Calendar = Globalization . Calendar ;:==:var calendarIdentifiers:==:globalization . calendarIdentifiers ;
var data_path = obj [ ' data_path ' ] ;:==:var items:==:obj [ ' items ' ] ;
var btnPerf = document . getElementById ( ' btnPerf ' ) ;:==:var miscCounters:==:document . getElementById ( ' miscCounters ' ) ;
var Plugin = imports . Plugin ;:==:var remote:==:imports . remote ;
var targets = primitive . targets ;:==:var morphAttributes:==:geometry . morphAttributes ;
var events = this . options . events ;:==:var event:==:track . event ( ) ;
var getUserName = togetherjs . config . get ( ' getUserName ' ) ;:==:var getUserColor:==:togetherjs . config . get ( ' getUserColor ' ) ;
var path = require ( ' path ' ) ;:==:var assert:==:global . assert    require ( ' chai ' ) . assert ;
var minSize = this . minSize ;:==:var isHorizontal:==:this . isHorizontal ( ) ;
var target = event . target ;:==:var events:==:target . getData ( ' events ' ) ;
var tooltipBuilder = powerbi . visuals . tooltipBuilder ;:==:var dataViewObjects:==:powerbi . dataViewObjects ;
var cMapFactory = corecMap . cMapFactory ;:==:var identitycMap:==:corecMap . identitycMap ;
var curve = sjcl . ecc . curves [ ' c'+curvenum ] ;:==:var sha:==:sjcl . hash [ ' sha'+shanum ] ;
var readable = opts . readable  |  |  ( opts . readable ! = = false & & stream . readable ) ;:==:var writable:==:opts . writable  |  |  ( opts . writable !    false & & stream . writable ) ;
var right = frustum . right ;:==:var left:==:frustum . left ;
var a = $ scope . editor . getCanvas ( ) . node . getScreenctm ( ) ;:==:var absolutexy:==:selectedShape . absolutexy ( ) ;
var vertices = intersectCache . vertices ;:==:var positive:==:intersectCache . positive ;
var classNames = cssSelector . classNames ;:==:var attrs:==:cssSelector . attrs ;
var registerWrapper = scope . registerWrapper ;:==:var renderAllPending:==:scope . renderAllPending ;
var offsetCenter = titleModel . get ( ' offsetCenter ' ) ;:==:var x:==:posInfo . cx + parsePercent ( offsetCenter [ 0 ] , posInfo . r ) ;
var index = store . getIndex ( ' index ' ) ;:==:var uniqueIndex:==:store . getIndex ( ' uniqueIndex ' ) ;
var getCellsPerWeek = t . getCellsPerWeek ;:==:var formatDate:==:calendar . formatDate ;
var type = this . type ;:==:var base:==:this . data [ this . base ] ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var _ llvm_ctlz_i32:==:Module [ ' _ llvm_ctlz_i32 ' ]    asm [ ' _ llvm_ctlz_i32 ' ] ;
var x = xAnchor ;:==:var y:==:yAnchor + ( i * height ) ;
var value = this . bindings . value . get ( ) ;:==:var text:==:options . text  |  |  ' ' ;
var latitude = isLatitudeValid ? parseFloat ( latitudeString ) : -1 ;:==:var longitude:==:isLongitudeValid ? parseFloat ( longitudeString ) : -1 ;
var divisor = divisors [ i ] ;:==:var div:==:int32Div ( divisor ) ;
var viewMode = self . options . viewMode ;:==:var container:==:self . container ;
var graph = this . editor . graph ;:==:var paste:==:this . actions . get ( ' paste ' ) ;
var editor = this . editor ;:==:var uploadImg:==:editor . uploadImg ;
var cli     = require ( ' cli ' ) ;:==:var path:==:require ( ' path ' ) ;
var components = this . subtable . table . components ;:==:var ligatureList:==:this . subtable . table . ligatureList ;
var metadata = vuvuzela . parse ( item . metadata ) ;:==:var data:==:unstringifyDoc ( item . data , metadata . i d , item . rev ) ;
var getCell = window . getCell ;:==:var getColumnHeader:==:window . getColumnHeader ;
var advanceWidth = glyph . advanceWidth  |  |  0 ;:==:var leftSideBearing:==:glyph . leftSideBearing  |  |  0 ;
var path = require ( ' path ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var xslt = document . getElementById ( ' xslt ' ) ;:==:var result:==:document . getElementById ( ' result ' ) ;
var Channel = goog . labs . net . webChannel . channel ;:==:var channelRequest:==:goog . labs . net . webChannel . channelRequest ;
var fs = require ( ' fs ' ) ;:==:var whitelist:==:options . whitelist ;
var Editor = imports . Editor ;:==:var editors:==:imports . editors ;
var appVersion = ( navigator & & navigator . appVersion  |  |  '' ) . toLowerCase ( ) ;:==:var userAgent:==:( navigator & & navigator . userAgent  |  |  '' ) . toLowerCase ( ) ;
var x = this . sprite . x ;:==:var y:==:this . sprite . y ;
var layer = selection . selectAll ( ' . layer - hit ' ) ;:==:var mode:==:context . mode ( ) ;
var bind = zrUtil . bind ;:==:var each:==:zrUtil . each ;
var scrollHeight = _ ref . scrollHeight ;:==:var scrollLeft:==:_ ref . scrollLeft ;
var supportConstantColor = exports . supportConstantColor = ' aqua | black | blue | fuchsia | gray | green | lime | maroon | navy | olive | orange | purple | red | silver | teal | white | yellow ' ;:==:var supportConstantFonts:==:exports . supportConstantFonts    ' arial | century | comic | courier | cursive | fantasy | garamond | georgia | helvetica | impact | lucida | symbol | system | tahoma | times | trebuchet | utopia | verdana | webdings | sans - serif | serif | monospace ' ;
var position = this . position ;:==:var scale:==:this . scale ;
var points = this . points [ setIdx ] ;:==:var setName:==:this . setNames [ setIdx ] ;
var util = require ( ' hexo - util ' ) ;:==:var Pattern:==:util . Pattern ;
var prev = this . s1Link . prev ;:==:var next:==:this . s1Link . next ;
var getEntityKeyForSelection = require ( ' getEntityKeyForSelection ' ) ;:==:var getTextContentFromFiles:==:require ( ' getTextContentFromFiles ' ) ;
var count = drawCommand . _ count ;:==:var instanceCount:==:drawCommand . instanceCount ;
var textOp = firepad . textOp ;:==:var utils:==:firepad . utils ;
var min = stdlib . Math . min ;:==:var max:==:stdlib . Math . max ;
var r = convertRGB ( this . r ) ;:==:var g:==:convertRGB ( this . g ) ;
var mapper = def . mapper ;:==:var reducer:==:def . reducer ;
var trailTime = property . getValueOrUndefined ( pathGraphics . _ trailTime , time ) ;:==:var availability:==:entity . _ availability ;
var wifiService = _ appJsServicesWifiService [ ' default ' ] ;:==:var shareSummaryView:==:_ appJsViewsShareSummaryView [ ' default ' ] ;
var r = rgba [ 0 ] ;:==:var g:==:rgba [ 1 ] ;
var multi = this . multiple & & isArray ( value ) ;:==:var options:==:el . options ;
var dy3 = h * 0 . 5 * Math . max ( 0 , Math . min ( 1 , parseFloat ( mxUtils . getValue ( this . style , ' dy3 ' , this . dy3 ) ) ) ) ;:==:var dx3:==:math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx3 ' , this . dx3 ) ) ) ) ;
var error = this . error ;:==:var scheduler:==:this . scheduler ;
var run = imports . run ;:==:var fs:==:imports . fs ;
var filters = this . target . filters ;:==:var w:==:this . _ drawWidth ;
var lib = require ( ' library ' ) ;:==:var framework:==:require ( ' framework ' ) ;
var getMinTime = t . getMinTime ;:==:var getMaxTime:==:t . getMaxTime ;
var path   = require ( ' path ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var colContentRight = t . colContentRight ;:==:var cellToDate:==:t . cellToDate ;
var normalizeKey = pouchCollate . normalizeKey ;:==:var toIndexableString:==:pouchCollate . toIndexableString ;
var endParam = firstDefined ( source . endParam , options . endParam ) ;:==:var timezoneParam:==:firstDefined ( source . timezoneParam , options . timezoneParam ) ;
var useTimeout = ! ! scope . $ eval ( attrs . useTimeout ) ;:==:var timeoutTime:==:scope . $ eval ( attrs . timeoutTime )  |  |  0 ;
var style = this . style ;:==:var x:==:style . x  |  |  0 ;
var imageryProvider = layer . _ imageryProvider ;:==:var tilingScheme:==:imageryProvider . tilingScheme ;
var l = 0 + ( sleft ? pleft . size + ( pleft . resizable ? this . spacer : this . padding ) : 0 ) ;:==:var t:==:this . height - ( sbottom ? pbottom . size + ( pbottom . resizable ? this . spacer : this . padding ) : 0 ) - pprev . size ;
var error = require ( ' http - error ' ) ;:==:var https:==:require ( ' https ' ) ;
var source = powerbi . dataViewObjects . getValue ( dataViewObjects , scriptResultMapping . script . source ) ;:==:var provider:==:powerbi . dataViewObjects . getValue ( dataViewObjects , scriptResultMapping . script . provider ) ;
var layout = imports . layout ;:==:var debug:==:imports . debugger ;
var enumExtensions = jsCommon . enumExtensions ;:==:var createClassAndSelector:==:jsCommon . cssConstants . createClassAndSelector ;
var argumentList = traceur . syntax . trees . argumentList ;:==:var arrayLiteralExpression:==:traceur . syntax . trees . arrayLiteralExpression ;
var index = opt_index  |  |  0 ;:==:var stroke:==:strokes [ index ] ;
var rename = require ( ' gulp - rename ' ) ;:==:var replace:==:require ( ' gulp - replace ' ) ;
var scale = crs . scale ( path . _ map . getZoom ( ) ) ;:==:var projection:==:crs . projection ;
var x = this . xAxisProperties . scale ( dataPoints [ index ] . x ) ;:==:var y:==:this . yAxisProperties . scale ( dataPoints [ index ] . y ) ;
var commands = imports . commands ;:==:var anims:==:imports . anims ;
var firstRow = config . firstRow ;:==:var lastRow:==:config . lastRow ;
var Dispatcher = require ( ' flux ' ) . Dispatcher ;:==:var payloadSources:==:appConstants . payloadSources ;
var vm = require ( ' vm ' ) ;:==:var test:==:require ( ' tap ' ) . test ;
var map1 = createMap ( ' map1 ' ) ;:==:var map2:==:createMap ( ' map2 ' ) ;
var i d = $ target . attr ( ' i d ' ) ;:==:var val:==:$ target . val ( ) ;
var beforeStar = this . _ beforeStar ;:==:var afterStar:==:this . _ afterStar ;
var dataIndex = payload . dataIndex ;:==:var coordSysAxesInfo:==:ecModel . getComponent ( ' axisPointer ' ) . coordSysAxesInfo ;
var word = line . children [ wordKey ] ;:==:var x:==:textGroup . x + line . x + word . x ;
var left = ( cell_pos . left + cm_pos . left + edge_left ) + ' px ' ;:==:var top:==:( cell_pos . top + cm_pos . top + head . bottom + 10 ) + ' px ' ;
var button = this . mapping [ ' button ' + evt . detail . i d ] ;:==:var buttonMeshes:==:this . buttonMeshes ;
var enteringView = this . enteringView ;:==:var leavingView:==:this . leavingView ;
var hboxUploadNoFolders = plugin . getElement ( ' hboxUploadNoFolders ' ) ;:==:var hboxUploadWithFolders:==:plugin . getElement ( ' hboxUploadWithFolders ' ) ;
var i d = options . i d ;:==:var mockOpenClose:==:options . mockOpenClose ;
var c9 = imports . c9 ;:==:var alert:==:imports [ ' dialog . alert ' ] . show ;
var globe = scene . globe ;:==:var ellipsoid:==:globe . ellipsoid ;
var ellipsoid = Ellipsoid . clone ( parameters . ellipsoid ) ;:==:var exaggeration:==:parameters . exaggeration ;
var clientX = getCoord ( ' clientx ' , e ) ;:==:var clienty:==:getCoord ( ' clienty ' , e ) ;
var repl = require ( ' repl ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var geo = featureObj . geometry ;:==:var coordinates:==:geo . coordinates ;
var util = imports . util ;:==:var tabManager:==:imports . tabManager ;
var sourceRange = traceur . util . sourceRange ;:==:var token:==:traceur . syntax . token ;
var content = reply . content ;:==:var metadata:==:reply . metadata ;
var File = source . File ;:==:var postAsset:==:hexo . model ( ' postAsset ' ) ;
var getopt = require ( ' posix - getopt ' ) ;:==:var restify:==:require ( ' restify ' ) ;
var button = angular . element ( this . buttonEl ) ;:==:var handleClick:==:this . handleClick ;
var w = $ cont . css ( ' overflow','visible ' ) . width ( ) ;:==:var h:==:$ cont . height ( ) ;
var M = new errorCorrectionLevel ( 1 , 0x00 , ' m ' ) ;:==:var q:==:new errorCorrectionLevel ( 2 , 0x03 , ' q ' ) ;
var xa = c0 . xa ;:==:var ya:==:c0 . ya ;
var Landing = reporters . Landing ;:==:var Base:==:reporters . Base ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var stringDecoder:==:require ( ' string_decoder ' ) . stringDecoder ;
var Model = registry . getModel ( ' model ' ) ;:==:var persistedModel:==:model . extend ( ' persistedModel ' ) ;
var OUTLINE_COLOR_INDEX = pointPrimitive . outline_color_index = 3 ;:==:var outline_width_index:==:pointPrimitive . outline_width_index    4 ;
var isEmpty = require ( ' isEmpty ' ) ;:==:var merge:==:require ( ' merge ' ) ;
var path    = require ( ' path ' ) ;:==:var async:==:require ( ' async ' ) ;
var width = this . gaugeVisualProperties . width ;:==:var radius:==:this . gaugeVisualProperties . radius ;
var Lexer = coreParser . lexer ;:==:var linearization:==:coreParser . linearization ;
var anchor = options . anchor ;:==:var forceFunction:==:options . forceFunction ;
var startDate = dateSrc . startDate ;:==:var endDate:==:dateSrc . endDate ;
var POINTER_TOUCH = gestureDetector . pointer_touch = ' touch ' ;:==:var pointer_pen:==:gestureDetector . pointer_pen    ' pen ' ;
var dragLeftItem = this . touchParams . dragLeftItem ;:==:var dragRightItem:==:this . touchParams . dragRightItem ;
var xAlign = vm . xAlign ;:==:var yAlign:==:vm . yAlign ;
var trace = calcTrace [ 0 ] . trace ;:==:var connectgaps:==:trace . connectgaps ;
var p2 = $ ( ' p2 ' ) ;:==:var testEl2:==:$ ( ' testEl2 ' ) ;
var worldForce = body_applylocalforce_worldforce ;:==:var worldPoint:==:body_applylocalforce_worldpoint ;
var index = state . index ;:==:var subscriber:==:state . subscriber ;
var defineWrapGetter = scope . defineWrapGetter ;:==:var assert:==:scope . assert ;
var left = chooser . find ( ' select . left ' ) ;:==:var right:==:chooser . find ( ' select . right ' ) ;
var nativeModules = require ( ' nativeModules ' ) ;:==:var react:==:require ( ' react ' ) ;
var xstep = this . xstep ;:==:var ystep:==:this . ystep ;
var camera = scene . camera ;:==:var center:==:Matrix4 . multiplyByPoint ( model . modelMatrix , model . boundingSphere . center , new cartesian3 ( ) ) ;
var predefinedName = traceur . syntax . predefinedName ;:==:var stateMachine:==:traceur . syntax . trees . stateMachine ;
var reportEventElement = t . reportEventElement ;:==:var showEvents:==:t . showEvents ;
var objectEnumerationBuilder = powerbi . visuals . objectEnumerationBuilder ;:==:var valueFormatter:==:powerbi . visuals . valueFormatter ;
var video1 = document . querySelector ( ' video#video1 ' ) ;:==:var video2:==:document . querySelector ( ' video#video2 ' ) ;
var i d = payload . i d  |  |  payload [ 0 ] . i d ;:==:var method:==:payload . method  |  |  payload [ 0 ] . method ;
var slen1 = tables . SFLEN_TABLE [ channel . scalefac_compress ] . slen1 ;:==:var slen2:==:tables . SFLEN_TABLE [ channel . scalefac_compress ] . slen2 ;
var exec = require ( ' child_process ' ) . exec ;:==:var browserify:==:require ( ' browserify ' ) ;
var f8Button = require ( ' f8Button ' ) ;:==:var navigator:==:require ( ' navigator ' ) ;
var nconf = require ( ' nconf ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var transitionEasing = getOption ( ' transitionEasing ' ) ;:==:var transitionDuration:==:getOption ( ' transitionDuration ' ) ;
var debug = require ( ' debug ' ) ( ' server ' ) ;:==:var path:==:require ( ' path ' ) ;
var acos = math . acos ;:==:var cos:==:math . cos ;
var clipboardData = e . clipboardData  |  |  e . originalEvent . clipboardData  |  |  ;:==:var items:==:clipboardData . items ;
var accessToken = res . accessToken ;:==:var accountId:==:res . accountId ;
var EXPORT_DEFAULT = ' EXPORT_DEFAULT ' ;:==:var EXPORT_SPECIFIER:==:' EXPORT_SPECIFIER ' ;
var targetHeight = getValue ( options . targetHeight , -1 ) ;:==:var encodingType:==:getValue ( options . encodingType , camera . encodingType . jpeg ) ;
var daysInWeek = calc . daysInWeek ;:==:var getDayId:==:calc . getDayId ;
var DOCUMENT_POSITION_DISCONNECTED = Node . DOCUMENT_POSITION_DISCONNECTED ;:==:var DOCUMENT_POSITION_PRECEDING:==:Node . DOCUMENT_POSITION_PRECEDING ;
var tags = post . tags . map ( mapName ) ;:==:var categories:==:post . categories . map ( mapName ) ;
var y = o . y ;:==:var r:==:o . r  |  |  2 ;
var cropBox = this . cropBox ;:==:var isLimited:==:this . isLimited ;
var ReactDOM = require ( ' ReactDOM ' ) ;:==:var reactTestUtils:==:require ( ' reactTestUtils ' ) ;
var dateRange = goog . require ( ' goog . date . dateRange ' ) ;:==:var dateTime:==:goog . require ( ' goog . date . dateTime ' ) ;
var stopwatch = priv . get ( this ) . stopwatch ;:==:var node:==:this . nodes . laps ;
var path = require ( ' path ' ) ;:==:var readdir:==:require ( ' recursive - readdir ' ) ;
var d = goog . dom . getOwnerDocument ( this . getElement ( ) ) ;:==:var w:==:goog . dom . getWindow ( d ) ;
var addr = isDTOA ? pinValue : ( isPin ? opts : opts . addr ) ;:==:var type:==:opts . type  |  |  ( isAnalogInput ? ' analog ' : ' digital ' ) ;
var connect = document . getElementById ( ' connect ' ) ;:==:var address:==:document . getElementById ( ' address ' ) ;
var denom = this . _ denominators = new Array ( order + 1 ) ;:==:var xTable:==:this . _ xTable    new array ( order + 1 ) ;
var text = element ( by . binding ( ' url . text ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var i = findChunkIndex ( chunks , mid , isOrig ) ;:==:var ch:==:chunks [ i ] ;
var fixedColumnsLeft = this . wot . getSetting ( ' fixedColumnsLeft ' ) ;:==:var totalRows:==:this . wot . getSetting ( ' totalRows ' ) ;
var service = request . service ;:==:var bucketRegionCache:==:service . bucketRegionCache ;
var moduleExpression = this . transformAny ( tree . moduleExpression ) ;:==:var importSpecifierSet:==:this . transformList ( tree . importSpecifierSet ) ;
var productImageBasePath = config . productImageBasePath ;:==:var productUnknownImage:==:config . productUnknownImage ;
var crypto = require ( ' crypto ' ) ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var s = [ ] , ss ;:==:var sst:==:data . match ( sstr0 ) ;
var rpc    = require ( ' pm2-axon - rpc ' ) ;:==:var axon:==:require ( ' pm2-axon ' ) ;
var Site = require ( ' Site ' ) ;:==:var slugify:==:require ( ' slugify ' ) ;
var xml = new activexObject ( ' msxml2 . domDocument . 3 . 0 ' ) ;:==:var div:==:document . createElement ( ' div ' ) ;
var placeholder = el [ 0 ] . querySelector ( ' . md - placeholder ' ) ;:==:var label:==:el . find ( ' label ' ) [ 0 ] ;
var bufferUsage = defaultValue ( options . bufferUsage , bufferUsage . dynamic_draw ) ;:==:var attributeLocations:==:defaultValue ( options . attributeLocations , defaultValue . empty_object ) ;
var parentNode = unwrap ( parentNodeWrapper ) ;:==:var child:==:unwrap ( childWrapper ) ;
var sum64_4_lo = utils . sum64_4_lo ;:==:var sum64_5_hi:==:utils . sum64_5_hi ;
var l = n . left ;:==:var r:==:n . right ;
var hub = this . hub ;:==:var server:==:this . options . signalr . server ;
var $ ref = resolveUrl ( baseId , schema . $ ref ) ;:==:var res:==:resolveSchema . call ( this , root , $ ref ) ;
var dx = document . getElementById ( ' dx ' ) ;:==:var dy:==:document . getElementById ( ' dy ' ) ;
var mData = _ fnGetObjectDataFn ( mDataSrc ) ;:==:var mRender:==:oCol . mRender ? _ fnGetObjectDataFn ( oCol . mRender ) : null ;
var describe = lab . describe ;:==:var it:==:lab . it ;
var architect = require ( ' architect ' ) ;:==:var optimist:==:require ( ' optimist ' ) ;
var onClick = _ props3 . onClick ;:==:var onFocus:==:_ props3 . onFocus ;
var destination = this . destination ;:==:var project:==:this . project ;
var fromId = transferEdge . fromId ;:==:var toId:==:transferEdge . toId ;
var listeningTo = this . _ listeningTo  |  |  ( this . _ listeningTo = ) ;:==:var listening:==:listeningTo [ i d ] ;
var mime = require ( ' mime ' ) ;:==:var archiver:==:require ( ' archiver ' ) ;
var refute = referee . refute ;:==:var fail:==:referee . fail ;
var sel = $ ( this ) . selectedValues ( ) ;:==:var a:==:typeof ( ascending )     ' undefined ' ? true : ! ! ascending ;
var timeStamp = ev . timeStamp  |  |  date . now ( ) ;:==:var elapsedTime:==:parseFloat ( ev . elapsedTime . toFixed ( 3 ) ) ;
var f8InfoView = require ( ' f8InfoView ' ) ;:==:var f8MapView:==:require ( ' f8MapView ' ) ;
var startSym = $ interpolate . startSymbol ( ) ;:==:var endSym:==:$ interpolate . endSymbol ( ) ;
var deltaX = e . deltaX ;:==:var deltaY:==:-1 * e . deltaY ;
var y = shape . cy ;:==:var a:==:shape . rx ;
var l = pixel [ 2 ] ;:==:var a:==:Math . cos ( h ) * c ;
var i d = e . getAttribute ( ' i d ' ) ;:==:var from:==:e . getAttribute ( ' from ' ) ;
var prefix = options . prefix ! = = undefined ? options . prefix : ' ^ ' ;:==:var suffix:==:options . suffix !    undefined ? options . suffix : ' \\b ' ;
var size = options . size ;:==:var height:==:options . height ;
var defaults = Chart . defaults ;:==:var helpers:==:Chart . helpers ;
var semaphore = event . data . semaphore ;:==:var timeout:==:event . data . timeout  |  |  15000 ;
var l1 = _ l1 ;:==:var accu:==:_ accu ;
var breakpointItems = this . _ storage . breakpointItems ( this . _ sourceFileId ( uiSourceCode ) ) ;:==:var provisionalBreakpoints:==:this . _ provisionalBreakpointsForSourceFileId ( sourceFileId ) ;
var seleniumAddress = grunt . option ( ' seleniumAddress ' ) ;:==:var seleniumHost:==:grunt . option ( ' seleniumHost ' ) ;
var config = textLayer . config ;:==:var session:==:textLayer . session ;
var x = ( lon * ax ) + bx ;:==:var y:==:( lat * ay ) + by ;
var rimraf = require ( ' rimraf ' ) ;:==:var stream:==:require ( ' stream ' ) ;
var interveningWhitespace = this . interveningWhitespace ;:==:var interveningWhitespacePos:==:this . interveningWhitespacePos ;
var namespace = stencilSet . namespace ( ) ;:==:var stencils:==:stencilSet . stencils ( ) ;
var forEach = angular . forEach ;:==:var requestAnimationFrame:==:$ window . requestAnimationFrame  |  |  $ window . setTimeout ;
var remotes = this . remotes ( ) ;:==:var handler:==:this . _ handlers [ type ]    remotes . handler ( type , options ) ;
var MNC_SETTINGS_KEY = apnConst . mnc_settings_key ;:==:var apn_props:==:apnConst . apn_props ;
var lte = semver . lte ;:==:var satisfies:==:semver . satisfies ;
var Catch = traceur . syntax . trees . Catch ;:==:var functionDeclaration:==:traceur . syntax . trees . functionDeclaration ;
var clientLeft = element . clientLeft  |  |  document . body . clientLeft  |  |  0 ;:==:var scrollTop:==:window . pageyOffset  |  |  element . scrollTop  |  |  document . body . scrollTop ;
var rethrow = _ _ dependency6 _ _ . rethrow ;:==:var defer:==:_ _ dependency7 _ _ . defer ;
var x = extractNumber ( props . x , 0 ) ;:==:var y:==:extractNumber ( props . y , 0 ) ;
var indices = this . indices ;:==:var colors:==:this . colors ;
var transform = options . transform ;:==:var separator:==:options . separator  |  |  ' ' ;
var bytes = this . bytes ;:==:var bytesPos:==:this . bytesPos ;
var userAgent = navigator . userAgent . toLowerCase ( ) ;:==:var productSub:==:navigator . productSub ;
var Pool   = loadClass ( ' pool ' ) ;:==:var poolConfig:==:loadClass ( ' poolConfig ' ) ;
var device = options . device ;:==:var sourceCubemap:==:options . sourceCubemap ;
var position = Cartesian3 . clone ( camera . position ) ;:==:var right:==:Cartesian3 . clone ( camera . right ) ;
var decoders = decoder . decoders ;:==:var len:==:decoders . length ;
var service = services [ serviceName ] ;:==:var ports:==:service . ports ;
var layout = g . layout _ ;:==:var area:==:e . dygraph . plotter _ . area ;
var prefix = opts . prefix  |  |  ' _ _ jp ' ;:==:var param:==:opts . param  |  |  ' callback ' ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , simpleData , ) ;
var net = require ( ' net ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var borderDash = helpers . getValueOrDefault ( gridLines . borderDash , globalDefaults . borderDash ) ;:==:var borderDashOffset:==:helpers . getValueOrDefault ( gridLines . borderDashOffset , globalDefaults . borderDashOffset ) ;
var bignumber = math . bignumber ;:==:var complex:==:math . complex ;
var listController = _ jsControllerListController [ ' default ' ] ;:==:var uploadView:==:_ jsViewUploadViewJs [ ' default ' ] ;
var right = this . _ getPropertyValueAsPx ( computedStyle , componentName + ' -right ' + suffix ) ;:==:var bottom:==:this . _ getPropertyValueAsPx ( computedStyle , componentName + ' -bottom ' + suffix ) ;
var lime200 = exports . lime200 = ' # e6ee9c ' ;:==:var lime300:==:exports . lime300    ' # dce775 ' ;
var createMemberExpression = parseTreeFactory . createMemberExpression ;:==:var createParenExpression:==:parseTreeFactory . createParenExpression ;
var startContainer = result . startContainer . childNodes [ result . startOffset = = = 0 ? 0 : result . startOffset - 1 ] ;:==:var endContainer:==:result . endContainer . childNodes [ result . endOffset ] ;
var obj = object  |  |  ;:==:var config:==:configs [ type ] ;
var viewPropTypes = require ( ' viewPropTypes ' ) ;:==:var colorPropType:==:require ( ' colorPropType ' ) ;
var attrName = goog . isString ( opt_attrname ) ? opt_attrname : null ;:==:var attrValue:==:goog . isString ( opt_attrvalue ) ? opt_attrvalue : null ;
var debug = require ( ' debug ' ) ( ' setting ' ) ;:==:var model:==:require ( ' model ' ) ;
var sources = util . getArg ( sourceMap , ' sources ' ) ;:==:var names:==:util . getArg ( sourceMap , ' names ' , [ ] ) ;
var version = match . version ;:==:var min:==:version & & version . min ;
var atNameMemberTransformer = traceur . codegeneration . atNameMemberTransformer ;:==:var blockBindingTransformer:==:traceur . codegeneration . blockBindingTransformer ;
var context = options . context ;:==:var indexDatatype:==:options . indexDatatype ;
var action = ui . actions . get ( ' find ' ) ;:==:var graph:==:ui . editor . graph ;
var height = Math . floor ( bb . height ( ) ) ;:==:var filter:==:element . style ( ' filter ' ) . value ;
var fillColor = data . fillColor  |  0 ;:==:var lineColor:==:data . lineColor  |  0 ;
var createEmptyArgumentList = parseTreeFactory . createEmptyArgumentList ;:==:var createErrback:==:parseTreeFactory . createErrback ;
var resolve = require ( ' path ' ) . resolve ;:==:var slice:==:Array . prototype . slice ;
var amberA400 = exports . amberA400 = ' # ffc400 ' ;:==:var amberA700:==:exports . amberA700    ' # ffab00 ' ;
var label = $ ( input ) . next ( ' label ' ) ;:==:var text:==:label . text ( ) ;
var gulp = require ( ' gulp ' ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var arrayChanged = babylon . arrayChanged ;:==:var propertyChangedBase:==:babylon . propertyChangedBase ;
var right = ( this . right - origx ) * ratio + origx ;:==:var top:==:( this . top - origy ) * ratio + origy ;
var size = options . size ! = = undefined ? options . size : 10 ;:==:var sizeRandomness:==:options . sizeRandomness !    undefined ? options . sizeRandomness : 0 ;
var nextCellSize = _ ref . nextCellSize ;:==:var nextScrollToIndex:==:_ ref . nextScrollToIndex ;
var child1 = new goog . structs . treeNode ( ' child1 ' , null ) ;:==:var child2:==:new goog . structs . treeNode ( ' child2 ' , null ) ;
var util = require ( ' util ' ) ;:==:var statuses:==:require ( ' statuses ' ) ;
var parameters = technique . parameters ;:==:var attributes:==:technique . attributes ;
var instance = self . instance ;:==:var current:==:instance . current ;
var npmIgnore = config & & config . npmIgnore ;:==:var npmDependencies:==:config & & config . npmDependencies ;
var validateFindRequest = localUtils . validateFindRequest ;:==:var validateSort:==:localUtils . validateSort ;
var scaleX = this . _ scaleX + this . _ betweenScalex * percent ;:==:var scaley:==:this . _ scaley + this . _ betweenScaley * percent ;
var start = moment ( body . range . start ) ;:==:var end:==:moment ( body . range . end ) ;
var remote = imports . remote ;:==:var watcher:==:imports . watcher ;
var createNumberLiteral = parseTreeFactory . createNumberLiteral ;:==:var createParameterList:==:parseTreeFactory . createParameterList ;
var reactHostComponent = require ( ' reactHostComponent ' ) ;:==:var reactTestMount:==:require ( ' reactTestMount ' ) ;
var component = tile . components [ c ] ;:==:var codingStyleParameters:==:component . codingStyleParameters ;
var Component = _ require . Component ;:==:var propTypes:==:_ require . propTypes ;
var ws = require ( ' ws ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var sockjs = require ( ' sockjs ' ) ;:==:var events:==:require ( ' events ' ) ;
var gl = this . _ gl ;:==:var textureUnitIndex:==:gl . texture0 + this . textureUnitIndex ;
var literalToken = tree . value . literalToken ;:==:var v:==:literalToken . value ;
var type = cfg . type  |  |  Physics . SHAPE_RECT ;:==:var group:==:cfg . group      undefined?0 : cfg . group ;
var isIOS = platformInfo . isios ;:==:var isAndroid:==:platformInfo . isAndroid ;
var depthTest = renderState . depthTest ;:==:var enabled:==:depthTest . enabled ;
var userId = _ ref . userId ;:==:var onSubmitUserId:==:_ ref . onSubmitUserId ;
var wordBreaker = jsCommon . wordBreaker ;:==:var createClassAndSelector:==:jsCommon . cssConstants . createClassAndSelector ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var createBlock:==:parseTreeFactory . createBlock ;
var fillStyle = state . fillStyle ;:==:var strokeStyle:==:state . strokeStyle ;
var isFunction = _ _ dependency1 _ _ . isFunction ;:==:var isNonThenable:==:_ _ dependency1 _ _ . isNonThenable ;
var saveState = options . saveState ;:==:var go:==:options . go ;
var r0 = computeImpulseDenominator_r0 ;:==:var c0:==:computeImpulseDenominator_c0 ;
var mouse = createVector ( mousex , mousey ) ;:==:var flee:==:this . flee ( mouse ) ;
var io = require ( ' socket . io ' ) ( server ) ;:==:var redis:==:require ( ' socket . io - redis ' ) ;
var fAsync = o . fAsync ;:==:var getOwnPropertyNames:==:object . getOwnPropertyNames ( o ) ;
var pair = pairsToProcess . next ( ) ;:==:var node:==:pair . node ;
var ui = imports . ui ;:==:var api:==:imports . api ;
var output = script . output ;:==:var code:==:script . code ;
var o = new functionNode ( ' outputScope ' , [ x ] ) ;:==:var n:==:new functionAssignmentNode ( ' f ' , [ ' x ' ] , o ) ;
var charCode = charCodes [ i ] ;:==:var charCodeToGlyphId:==:newMapping . charCodeToGlyphId ;
var encoding = terrainEncoding . clone ( parameters . encoding ) ;:==:var hasVertexNormals:==:encoding . hasVertexNormals ;
var data = this . _ data ;:==:var records:==:this . _ records ;
var key   = event . keyCode ;:==:var shiftKey:==:event . shiftKey ;
var receiveShadows = shadowMode . receiveShadows ( model . shadows ) ;:==:var nodeCommands:==:model . _ nodeCommands ;
var toProperty = $ traceurRuntime . toProperty ;:==:var hasOwnProperty:==:object . prototype . hasOwnProperty ;
var arrowHead = math . max ( 0 , math . min ( bounds . height , parseFloat ( mxUtils . getValue ( this . state . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( arrowHead , parseFloat ( mxUtils . getValue ( this . state . style , ' dy ' , this . dy ) ) ) ) ;
var flowStartLevels = timelineData . flowStartLevels ;:==:var flowEndLevels:==:timelineData . flowEndLevels ;
var vertices = objGeometry . vertices ;:==:var faces:==:objGeometry . faces ;
var f8Colors = require ( ' f8Colors ' ) ;:==:var image:==:require ( ' image ' ) ;
var label = this . label ;:==:var closeLink:==:this . closeLink ;
var item = this . props . item ;:==:var type:==:item . type ;
var worldDiff = orbitCameraInputTouch . worldDiff ;:==:var camera:==:this . entity . camera ;
var d3 = require ( ' d3 ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var n1 = new redNode ( i d : ' n1',type : ' abc',wires : [ [ [ ' n2 ' ] , [ ' n3 ' ] ] ] ) ;:==:var n2:==:new redNode ( i d : ' n2',type : ' abc ' ) ;
var item = data . item ;:==:var text:==:item . text ;
var address = device . address ;:==:var bytes:==:device . bytes ;
var iterations = options . iterations  |  |  20000 ;:==:var errorThresh:==:options . errorThresh  |  |  0 . 005 ;
var adapter = global . adapter ;:==:var fulfilled:==:adapter . fulfilled ;
var x = p * fx ;:==:var y:==:p * fy ;
var eap = panel . querySelector ( ' li . eap select ' ) ;:==:var certificate:==:panel . querySelector ( ' li . server - certificate select ' ) ;
var React = require ( ' React ' ) ;:==:var recordingModule:==:require ( ' nativeModules ' ) . shareRecordingModule ;
var fontSize = this . parent . style ( ' font - size ' ) . numValueOrDefault ( svg . font . parse ( svg . ctx . font ) . fontSize ) ;:==:var fontStyle:==:this . parent . style ( ' font - style ' ) . valueOrDefault ( svg . font . parse ( svg . ctx . font ) . fontStyle ) ;
var longDateFormat = intlHelper . get ( ' longDateFormat ' ) ;:==:var shortTimeFormat:==:intlHelper . get ( ' shortTimeFormat ' ) ;
var castShadows = shadowMode . castShadows ( model . _ shadows ) ;:==:var receiveShadows:==:shadowMode . receiveShadows ( model . _ shadows ) ;
var entityAspect = context . entityAspect ;:==:var entityManager:==:entityAspect . entityManager ;
var observable = ko . observable ( ' a ' ) ;:==:var evalSpy:==:jasmine . createSpy ( ' evalSpy ' ) ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var connect:==:require ( ' connect ' ) ;
var zip = require ( ' gulp - zip ' ) ;:==:var exec:==:require ( ' child - process - promise ' ) . exec ;
var skeleton = object . skeleton ;:==:var bones:==:skeleton . bones ;
var params = options [ ' params ' ]  |  |  ;:==:var includeFields:==:options [ ' includeFields ' ]  |  |  this . fieldsIncludedWithJsonPost ;
var lookup = FS . lookupPath ( path ) ;:==:var stat:==:fs . stat ( path ) ;
var group = groups [ isOpaquePass ? groups . length - 1 - i : i ] ;:==:var source:==:this . style . sources [ group . source ] ;
var shaders = coreShader . shaders ;:==:var warn:==:utils . debug ( ' components : text : warn ' ) ;
var afterNoCompleteOpen = helpers . afterNoCompleteOpen ;:==:var afterCompleteDocOpen:==:helpers . afterCompleteDocOpen ;
var page2 = element ( by . i d ( ' page2 ' ) ) ;:==:var status:==:element ( by . i d ( ' status ' ) ) ;
var _ i d = this . _ i d ;:==:var oElement:==:node . one ( p_oelement ) ;
var _ bitshift64Shl = module [ ' _ bitshift64Shl ' ] = asm [ ' _ bitshift64Shl ' ] ;:==:var _ i64Subtract:==:module [ ' _ i64Subtract ' ]    asm [ ' _ i64Subtract ' ] ;
var strokeStyle = state . strokeStyle ;:==:var lineCap:==:state . lineCap ;
var doc = docInfo . data ;:==:var metadata:==:docInfo . metadata ;
var scrollX = this . _ scrollX  |  0 ;:==:var scrollY:==:this . _ scrollY  |  0 ;
var DOCUMENT_TYPE_NODE    = nodeType . document_type_node    = 10 ;:==:var document_fragment_node:==:nodeType . document_fragment_node     11 ;
var filter = angular . isDefined ( options . filter ) ? options . filter : defaults . filter ;:==:var limit:==:options . limit  |  |  defaults . limit ;
var scheduler = instance . get ( ' scheduler ' ) ;:==:var viewDate:==:scheduler . get ( ' viewDate ' ) ;
var options = self . options ;:==:var viewMode:==:options . viewMode ;
var param = this . params [ i ] ;:==:var conversion:==:param . conversions [ 0 ] ;
var targetSettings = this . targetSettings ;:==:var target:==:targetSettings . target ;
var outlineWidth = cylinder . outlineWidth ;:==:var numberOfVerticalLines:==:cylinder . numberOfVerticalLines ;
var path = getPath ( descriptor . path ) ;:==:var notify:==:notifyFunction ( object , name ) ;
var nameFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' nameFieldTestObject ' ) ) ;:==:var emailFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' emailFieldTestObject ' ) ) ;
var s = TO_STRING ( this ) ;:==:var n:==:TO_INTEGER ( count ) ;
var progress = require ( ' request - progress ' ) ;:==:var request:==:require ( ' request ' ) ;
var n = this [ ' n ' ] ;:==:var d:==:this [ ' d ' ] ;
var languages = handler . languages ;:==:var extensions:==:handler . extensions ;
var transparent = exports . transparent = ' rgba ( 0 , 0 , 0 , 0 ) ' ;:==:var fullBlack:==:exports . fullBlack    ' rgba ( 0 , 0 , 0 , 1 ) ' ;
var frameState = scene . _ frameState ;:==:var shadowMaps:==:frameState . shadowMaps ;
var needLocalTransform = this . needLocalTransform ( ) ;:==:var m:==:this . transform ;
var cli = imports [ ' vim . cli ' ] ;:==:var c9:==:imports . c9 ;
var undefinedError = utils . undefinedError ;:==:var isArray:==:utils . isArray ;
var language = imports . language ;:==:var menus:==:imports . menus ;
var spy = sinon . spy ( wsdl , ' open_wsdl ' ) ;:==:var options:==:_ . assign ( disableCache : true , meta . options ) ;
var workspace = imports [ ' collab . workspace ' ] ;:==:var bubble:==:imports [ ' notification . bubble ' ] ;
var splitEditor = window . splitEditor = util . createSplitEditor ( ' editor ' ) ;:==:var editor1:==:window . editor1    splitEditor . editor0 ;
var i = findChunkIndex ( this . chunks , row , orig ) ;:==:var chunk:==:this . chunks [ i + dir ]  |  |  this . chunks [ i ] ;
var target = this . target ;:==:var index:==:this . index ;
var glob = require ( ' glob ' ) ;:==:var path:==:require ( ' path ' ) ;
var spec = jEl . data ( ' spec ' ) ;:==:var uqids:==:jEl . data ( ' uqids ' )  |  |  [ ] ;
var node = cmd . _ node ;:==:var texture:==:node . _ texture  |  |  ( node . _ spriteFrame ? node . _ spriteFrame . _ texture : null ) ;
var appearToClass = ref . appearToClass ;:==:var appearActiveClass:==:ref . appearActiveClass ;
var xtend = require ( ' xtend ' ) ;:==:var inherits:==:require ( ' inherits ' ) ;
var View = require ( ' View ' ) ;:==:var requireNativeComponent:==:require ( ' requireNativeComponent ' ) ;
var script = scripts [ i ] ;:==:var src:==:script . src  |  |  script . getAttribute ( ' src ' ) ;
var t = getAll ( target ) ;:==:var s:==:getAll ( src ) ;
var minimumCollisionTerrainHeight = screenSpaceCameraController . minimumCollisionTerrainHeight ;:==:var minimumZoomDistance:==:screenSpaceCameraController . minimumZoomDistance ;
var Key = _ elementUtilities . key ;:==:var keyCode:==:eventObject . keyCode ;
var options = that . options ;:==:var cascade:==:options . cascadeFrom ;
var previous = this . _ elementFromHandle ( previousHandle ) ;:==:var next:==:this . _ elementFromHandle ( nextHandle ) ;
var before_close = ( $ . isFunction ( params . before_close ) ) ? params . before_close : function ( ) ;:==:var after_close:==:( $ . isFunction ( params . after_close ) ) ? params . after_close : function ( ) ;
var isSparklines = this . isSparklines ( ) ;:==:var isHidingPercentBars:==:this . isHidingPercentBars ( ) ;
var includeFields = options [ ' includeFields ' ]  |  |  this . fieldsIncludedWithJsonPost ;:==:var url:==:urlOrForm ;
var iccId = window . navigator . mozIccManager . iccIds [ 0 ] ;:==:var icc:==:window . navigator . mozIccManager . getIccById ( iccId ) ;
var Node = scope . wrappers . Node ;:==:var domTokenList:==:scope . wrappers . domTokenList ;
var pkgInfo = globalSystem . npmContext . pkgInfo ;:==:var pkg:==:pkgInfo [ pkgInfo . length - 1 ] ;
var async = require ( ' async ' ) ;:==:var timeago:==:require ( ' timeago ' ) ;
var lineNumber = this . profileNode . lineNumber ? this . profileNode . lineNumber - 1 : 0 ;:==:var columnNumber:==:this . profileNode . columnNumber ? this . profileNode . columnNumber - 1 : 0 ;
var a = shape . bounds . a ;:==:var b:==:shape . bounds . b ;
var skip = this . newBlock ( type + ' comp skip ' ) ;:==:var anchor:==:this . newBlock ( type + ' comp anchor ' ) ;
var pink200 = exports . pink200 = ' # f48fb1 ' ;:==:var pink300:==:exports . pink300    ' # f06292 ' ;
var dist = this . centerPos . distanceTo ( this . mouse ) ;:==:var angle:==:this . centerPos . angleTo ( this . mouse ) ;
var counters = metrics . counters ;:==:var timers:==:metrics . timers ;
var Package = Protocol . Package = ;:==:var Message:==:Protocol . Message    ;
var dy = Math . min ( h - 20 , Math . max ( 20 , h * Math . max ( 0 , Math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' dy ' , this . dy ) ) ) ) ) ) ;:==:var fillColor:==:mxUtils . getValue ( this . style , ' fillColor ' , ' # ffffff ' ) ;
var javascript = safeForhtml ( bin . javascript  |  |  '' ) ;:==:var processors:==:bin . processors ;
var blackPoint = params . blackPoint ;:==:var fill:==:params . fill ;
var probe = pmx . probe ( ) ;:==:var http:==:require ( ' http ' ) ;
var children = _ props2 . children ;:==:var disabled:==:_ props2 . disabled ;
var components = this . components ;:==:var defaultComponents:==:this . defaultComponents ;
var originalLight = light . userData . originalLight ;:==:var uniforms:==:light . material . uniforms ;
var URI = channel . URI ;:==:var channelData:==:this . channelDataFromChannel ( channel ) ;
var dayNames = settings . dayNames  |  |  this . local . dayNames ;:==:var parseMonth:==:settings . parseMonth  |  |  this . local . parseMonth ;
var deferred = options . deferred  |  |  Q . defer ( ) ;:==:var chain:==:options . chain  |  |  deferred . promise ;
var face = node . getAttribute ( ' face ' ) ;:==:var color:==:node . getAttribute ( ' color ' ) ;
var target = args . target ;:==:var verb:==:args . verb ;
var deepOrange50 = exports . deepOrange50 = ' # fbe9e7 ' ;:==:var deepOrange100:==:exports . deepOrange100    ' # ffccbc ' ;
var u = params . uuids ? params . uuids [ index ] : null ;:==:var e:==:_ newEndpoint ( paintStyle : es , hoverPaintStyle : ehs , endpoint : ep , connections : [ self ] , uuid : u , anchor : a , source : element ) ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var reactUpdateQueue:==:require ( ' reactUpdateQueue ' ) ;
var sw = node . _ sw & & rectangleContainsPosition ( node . _ sw . extent , position ) ;:==:var se:==:node . _ se & & rectangleContainsPosition ( node . _ se . extent , position ) ;
var db = this . _ db ;:==:var transaction:==:db . transaction ( [ DBOS_TABS ] ) ;
var clipList = this . _ clipList ;:==:var animation:==:this . animation ;
var lhost = hash . substring ( hash . indexOf ( ' lhost= ' ) + 6 , hash . indexOf ( ' & ' ) ) ;:==:var lport:==:hash . substring ( hash . indexOf ( ' lport ' ) + 6 , hash . length ) ;
var vel1 = calcRollingFriction_vel1 ;:==:var vel2:==:calcRollingFriction_vel2 ;
var request = node . request ( ) ;:==:var resourceType:==:request . resourceType ( ) ;
var cssPropertyOperations = require ( ' cssPropertyOperations ' ) ;:==:var domPropertyOperations:==:require ( ' domPropertyOperations ' ) ;
var normals = file . body . normals  |  |  [ ] ;:==:var uv:==:file . body . uvMaps ? file . body . uvMaps [ 0 ] . uv : [ ] ;
var viewStylePropTypes = require ( ' viewStylePropTypes ' ) ;:==:var flattenStyle:==:require ( ' flattenStyle ' ) ;
var tileNotification = windows . ui . notifications . tileNotification ;:==:var tileUpdateManager:==:windows . ui . notifications . tileUpdateManager ;
var templates = require ( ' templates . js ' ) ;:==:var nodemailer:==:require ( ' nodemailer ' ) ;
var host = hostAndPort . host ;:==:var port:==:hostAndPort . port ;
var foo = sce . trustAsCss ( ' foo ' ) ;:==:var bar:==:sce . trustAsCss ( ' bar ' ) ;
var importStarVisitor = traceur . codegeneration . module . importStarVisitor ;:==:var moduleDeclarationVisitor:==:traceur . codegeneration . module . moduleDeclarationVisitor ;
var getter = this . reflector . getter ( i d ) ;:==:var setter:==:this . reflector . setter ( i d ) ;
var FUNCTION_TYPE = ' FUNCTION_TYPE ' ;:==:var GENERATOR_COMPREHENSION:==:' GENERATOR_COMPREHENSION ' ;
var isRowLoaded = _ ref3 . isRowLoaded ;:==:var minimumBatchSize:==:_ ref3 . minimumBatchSize ;
var x = source . x + 10 ;:==:var y:==:source . y + 10 ;
var child = children [ i ] ;:==:var hitArea:==:child . hitArea ;
var Thingy = docSet . getByLongname ( ' thingy ' ) [ 0 ] ;:==:var thingy2:==:docSet . getByLongname ( ' thingy2 ' ) [ 0 ] ;
var initRowActions = window . initRowActions ;:==:var fakeSumRow:==:window . fakeSumRow ;
var anonymize = opts . anonymizeIp ;:==:var domain:==:opts . domain ;
var step = goog . isDef ( opt_step ) ? opt_step : 1 ;:==:var iter:==:new goog . iter . iterator ( ) ;
var domLazyTree = require ( ' domLazyTree ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var Mult = Tone_signal_Multiply ;:==:var Scale:==:Tone_signal_Scale ;
var image = this . image ;:==:var aspectRatio:==:image . aspectRatio ;
var startDate = recorder . get ( ' startDate ' ) ;:==:var duration:==:recorder . get ( ' duration ' ) ;
var reactErrorUtils = require ( ' reactErrorUtils ' ) ;:==:var accumulateInto:==:require ( ' accumulateInto ' ) ;
var options = this . options . options ;:==:var token:==:this . options . token ;
var className = state . className ;:==:var superClass:==:state . superClass ;
var async = require ( ' async ' ) ;:==:var querystring:==:require ( ' querystring ' ) ;
var geometries = primitive . _ geometries ;:==:var scene3dOnly:==:frameState . scene3dOnly ;
var isHorizontal = cartesian . getBaseAxis ( ) . isHorizontal ( ) ;:==:var x:==:math . min ( xExtent [ 0 ] , xExtent [ 1 ] ) ;
var primitive = this . _ primitive ;:==:var outlinePrimitive:==:this . _ outlinePrimitive ;
var width = tooltipSize . width ;:==:var height:==:tooltipSize . height ;
var direct = handlers . direct ;:==:var delegated:==:handlers . delegated ;
var node1 = new goog . ui . tree . treeNode ( ' node1 ' ) ;:==:var nodea:==:new goog . ui . tree . treeNode ( ' nodea ' ) ;
var msecs = options . msecs ! = null ? options . msecs : new Date ( ) . getTime ( ) ;:==:var nsecs:==:options . nsecs !   null ? options . nsecs : _ lastnSecs + 1 ;
var commands = imports . commands ;:==:var tooltip:==:imports . tooltip ;
var draftOffsetKey = require ( ' draftOffsetKey ' ) ;:==:var editorState:==:require ( ' editorState ' ) ;
var valueFormatter = powerbi . visuals . valueFormatter ;:==:var objectEnumerationBuilder:==:powerbi . visuals . objectEnumerationBuilder ;
var generateRandomKey = require ( ' generateRandomKey ' ) ;:==:var insertIntoList:==:require ( ' insertIntoList ' ) ;
var lastFrameAlpha = this . lastFrameAlpha ;:==:var dpr:==:this . dpr ;
var placeholder = that . options . draggable . placeholder ;:==:var dataItem:==:that . dataItem ( draggedElement ) ;
var tokenType = traceur . syntax . tokenType ;:==:var createAssignmentExpression:==:parseTreeFactory . createAssignmentExpression ;
var r = s : r : 0,c : 0,e : r : 0,c : 0 ;:==:var o:==:opts !   null ? opts : ;
var annotationType = sharedUtil . annotationType ;:==:var util:==:sharedUtil . util ;
var frontdoor = require ( ' frontdoor ' ) ;:==:var error:==:require ( ' http - error ' ) ;
var west = rectangle . west ;:==:var north:==:rectangle . north ;
var backward = laneDirections . backward ;:==:var bothways:==:laneDirections . bothways ;
var col = object . columns [ i ] ;:==:var search:==:col . searchable ;
var table = $ ( ' table ' , frame_element ) ;:==:var state:==:$ ( ' # state ' , frame_element ) ;
var getHostComponentFromComposite = require ( ' getHostComponentFromComposite ' ) ;:==:var instantiateReactComponent:==:require ( ' instantiateReactComponent ' ) ;
var xj = ContactEquation_getImpactVelocityAlongNormal_xj ;:==:var relVel:==:contactequation_getimpactvelocityalongnormal_relvel ;
var target = generator . target ;:==:var data:==:generator . data ;
var evidence = _ ref . evidence ;:==:var name:==:_ ref . name ;
var getAsync = request . getAsync ;:==:var postAsync:==:request . postAsync ;
var s0 = Cartesian2 . fromArray ( texCoords , i0 * 2 , s0Scratch ) ;:==:var s1:==:cartesian2 . fromArray ( texCoords , i1 * 2 , s1Scratch ) ;
var winAnsiEncoding = coreEncodings . winAnsiEncoding ;:==:var standardEncoding:==:coreEncodings . standardEncoding ;
var Frame = debug . Frame ;:==:var Source:==:debug . Source ;
var eastSkirtHeight = isEastChild ? this . _ eastSkirtHeight : ( shortestSkirt * 0 . 5 ) ;:==:var northSkirtHeight:==:isNorthChild ? this . _ northSkirtHeight : ( shortestSkirt * 0 . 5 ) ;
var width = this . viewport . width ;:==:var height:==:this . viewport . height ;
var crypto = _ dereq _ ( ' crypto ' ) ;:==:var md5:==:_ dereq _ ( ' md5-jkmyers ' ) ;
var captureCallbacks = this . _ captureCallbacks [ type ]  |  |  [ ] ;:==:var bubbleCallbacks:==:this . _ bubbleCallbacks [ type ]  |  |  [ ] ;
var site = that . _ site ;:==:var measuringPromise:==:that . _ measuringPromise ;
var nodeList = scope . wrappers . nodeList ;:==:var defineWrapGetter:==:scope . defineWrapGetter ;
var installGetter = utils . installGetter ;:==:var internalArray:==:utils . internalArray ;
var ctrlKey = event . ctrlKey ;:==:var shiftKey:==:event . shiftKey ;
var tooltipContent = this . _ tooltipContent ;:==:var formatter:==:tooltipModel . get ( ' formatter ' ) ;
var inherits = require ( ' util ' ) . inherits ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var retried = this . retried ;:==:var count:==:this . count ;
var teal100 = exports . teal100 = ' # b2dfdb ' ;:==:var teal200:==:exports . teal200    ' # 80cbc4 ' ;
var faces = this . faces ;:==:var length:==:faces . length ;
var bottom = ( this . bottom - origy ) * ratio + origy ;:==:var right:==:( this . right - origx ) * ratio + origx ;
var prefix = new Blockly . fieldLabel ( ' prefix ' ) ;:==:var between:==:new blockly . fieldLabel ( ' between ' ) ;
var startDateTime = geofenceValues . startDateTime ;:==:var durationTimeSpan:==:geofenceValues . durationTimeSpan ;
var assert = require ( ' assert ' ) ;:==:var webdriver:==:require ( ' selenium - webdriver ' ) ;
var w = pointRect . width ;:==:var h:==:pointRect . height ;
var firstTouch = session . firstTouch ;:==:var firstMultiTouch:==:session . firstMultiTouch ;
var isAndroid = platformInfo . isAndroid ;:==:var isios:==:platformInfo . isios ;
var before = ' before ' + section ;:==:var after:==:' after ' + section ;
var angleAxis = this . _ angleAxis ;:==:var radiusAxis:==:this . _ radiusAxis ;
var STATUS_ERROR    = exports . STATUS_ERROR = -1 ;:==:var STATUS_INACTIVE:==:exports . STATUS_INACTIVE    0 ;
var c9 = imports . c9 ;:==:var vfs:==:imports . vfs ;
var media = callbacks . media ;:==:var pluginHandle:==:pluginHandles [ handleId ] ;
var principal = constraint . principal ;:==:var dependent:==:constraint . dependent ;
var hash = $ liHeadsa . get ( key ) . hash . slice ( 1 ) ;:==:var i d:==:_ _ webpack_imported_module_0_jquery___default ( ) ( value ) . attr ( ' i d ' )  |  |  _ _ webpack_require _ _ . i ( _ _ webpack_imported_module_2__foundation_util_core _ _ [ ' getYoDigits ' ] ) ( 6 , ' accordion ' ) ;
var isString = leafletHelpers . isString ;:==:var addMarkerWatcher:==:leafletMarkersHelpers . addMarkerWatcher ;
var average = results [ ' average ' ] ;:==:var standardDeviation:==:results [ ' standardDeviation ' ] ;
var state = element ( by . i d ( ' current - state ' ) ) ;:==:var page:==:element ( by . css ( ' . page__content ' ) ) ;
var neighborsSignificance = this . neighborsSignificance ;:==:var significanceState:==:this . significanceState ;
var longnameToUrl = exports . longnameToUrl = linkMap . longnameToUrl ;:==:var longnameToId:==:exports . longnameToId    linkMap . longnameToId ;
var children = vnode . children ;:==:var tag:==:vnode . tag ;
var url = result . address . url ;:==:var isUnixSocket:==:result . address . isUnixSocket ;
var createGeometryResults = packedParameters . createGeometryResults ;:==:var length:==:createGeometryResults . length ;
var wrapper = angular . element ( element [ 0 ] . getElementsByClassName ( ' md - slider - wrapper ' ) ) ;:==:var content:==:angular . element ( element [ 0 ] . getElementsByClassName ( ' md - slider - content ' ) ) ;
var list = item . parents ( ' . accordion - list ' ) . eq ( 0 ) ;:==:var content:==:item . children ( ' . accordion - item - content ' ) ;
var parseqs = require ( ' parseqs ' ) ;:==:var inherit:==:require ( ' component - inherit ' ) ;
var numIcons = home . numIcons ;:==:var numDividers:==:home . numDividers ;
var x = this . x ;:==:var y:==:this . y ;
var options = this . options ;:==:var imports:==:options . imports ;
var fontFlags = coreFonts . fontFlags ;:==:var font:==:coreFonts . font ;
var propTypes = require ( ' react ' ) . propTypes ;:==:var createStrictShapeTypeChecker:==:require ( ' createStrictShapeTypeChecker ' ) ;
var wrap = scope . wrap ;:==:var arraySplice:==:scope . arraySplice ;
var change = changes [ i ] ;:==:var from:==:offsetPos ( change . from , oldPrev , newPrev ) ;
var textColor = _ context$muiTheme$tex . textColor ;:==:var disabledTextColor:==:_ context$muiTheme$tex . disabledTextColor ;
var castError = mongooseError . castError ;:==:var validatorError:==:mongooseError . validatorError ;
var children = parent . children ;:==:var length:==:children . length ;
var dynCall_iiiiii = Module [ ' dynCall_iiiiii ' ] = asm [ ' dynCall_iiiiii ' ] ;:==:var dynCall_dii:==:Module [ ' dynCall_dii ' ]    asm [ ' dynCall_dii ' ] ;
var content = data . content ;:==:var ncells:==:this . ncells ( ) ;
var pkgMeta = entry . pkgMeta ;:==:var version:==:pkgMeta . version  |  |  pkgMeta . _ target ;
var t = this . getItem ( node . i d ) ;:==:var n:==:node . cloneNode ( true ) ;
var debug = require ( ' debug ' ) ( ' marionette - js - runner : hostmanager ' ) ;:==:var prettyjson:==:require ( ' prettyjson ' ) ;
var createLegend = powerbi . visuals . createLegend ;:==:var getAnimationDuration:==:powerbi . visuals . animatorCommon . getAnimationDuration ;
var metadata = result . metadata ;:==:var ctx:==:result . ctx ;
var root = previousSizeMap . root ;:==:var sizes:==:previousSizeMap . sizes ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactFeatureFlags:==:require ( ' reactFeatureFlags ' ) ;
var browser = goog . require ( ' goog . labs . userAgent . browser ' ) ;:==:var verifier:==:goog . require ( ' goog . labs . useragent . verifier ' ) ;
var setName = options . setName  |  |  ' rs ' ;:==:var replicasetName:==:options . replicasetName  |  |  ' rs ' ;
var b = Ti . UI . createView ( borderColor : ' # 133899',borderWidth : 6,borderRadius : 2,backgroundColor : ' purple',width : 100,height : 100,top : 115,right : 40,name : ' view b ' ) ;:==:var c:==:ti . ui . createView ( borderColor : ' # 133899',borderWidth : 6,borderRadius : 2,backgroundColor : ' red',width : 100,height : 100,top : 115,left : 40,name : ' view c ' ) ;
var tty = require ( ' tty ' ) ;:==:var diff:==:require ( ' diff ' ) ;
var filterInclusiveStart = localUtils . filterInclusiveStart ;:==:var promise:==:utils . promise ;
var curMatrix = this . curMatrix ;:==:var ctx:==:this . ctx ;
var leftOverlay = wot . wtOverlays . leftOverlay ;:==:var wtTable:==:wot . wtTable ;
var rollup = require ( ' rollup ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var min = element . querySelector ( ' limits min ' ) ? parseFloat ( element . querySelector ( ' limits min ' ) . textContent ) : -360 ;:==:var max:==:element . querySelector ( ' limits max ' ) ? parseFloat ( element . querySelector ( ' limits max ' ) . textContent ) : 360 ;
var height = parseInt ( frag . getAttribute ( ' data - height ' ) , 10 )  |  |  0 ;:==:var allow_maximize:==:frag . getAttribute ( ' data - allow_maximize ' ) ;
var btnMax = o . buttons . btnMax ;:==:var btnClose:==:o . buttons . btnClose ;
var color = data . getItemVisual ( dataIndex , ' color ' ) ;:==:var opacity:==:data . getItemVisual ( dataIndex , ' opacity ' ) ;
var node = _ ref . node ;:==:var wrapAwait:==:_ ref2 . wrapAwait ;
var name = descriptor . name ;:==:var config:==:descriptor . config ;
var clipPaths = this . _ _ clipPaths ;:==:var style:==:this . style ;
var viewState = frameState . viewState ;:==:var replayGroup:==:this . replayGroup _ ;
var a = document . createElement ( ' script ' ) ;:==:var m:==:document . getElementsByTagName ( ' script ' ) [ 0 ] ;
var tabManager = imports . tabManager ;:==:var info:==:imports . info ;
var name = currentAttachment . name ;:==:var blob:==:currentAttachment . blob ;
var width = this . width = computeDimension ( context . canvas,'Width ' )  |  |  context . canvas . width ;:==:var height:==:this . height    computeDimension ( context . canvas,'Height ' )  |  |  context . canvas . height ;
var totalRows = wot . getSetting ( ' totalRows ' ) ;:==:var totalColumns:==:wot . getSetting ( ' totalColumns ' ) ;
var end = segment . end ;:==:var delta:==:segment . delta ;
var controllers = this . app . controllers ;:==:var app:==:this . app ;
var timestamp = data . timestamp  |  |  Date . now ( ) ;:==:var isMain:==:data . isMain  |  |  false ;
var editor = this . editor ;:==:var toolbars:==:this . toolbars  |  |  [ ] ;
var path = uiSourceCode . project ( ) . i d ( ) + ' : ' + uiSourceCode . path ( ) ;:==:var networkurl:==:webInspector . networkMapping . networkurl ( uiSourceCode ) ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var optimist:==:require ( ' optimist ' ) ;
var underlineDisabledStyle = _ props2 . underlineDisabledStyle ;:==:var underlineFocusStyle:==:_ props2 . underlineFocusStyle ;
var getDocument = dom . getDocument ;:==:var comparePoints:==:dom . comparePoints ;
var purple100 = exports . purple100 = ' # e1bee7 ' ;:==:var purple200:==:exports . purple200    ' # ce93d8 ' ;
var show = powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . show , this . legend . isVisible ( ) ) ;:==:var showTitle:==:powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . showTitle , true ) ;
var cql = document . getElementById ( ' cql ' ) ;:==:var output:==:document . getElementById ( ' output ' ) ;
var Divider = imports . Divider ;:==:var tabManager:==:imports . tabManager ;
var open = options . interpolation . open ;:==:var close:==:options . interpolation . close ;
var Person = db . model ( ' gh4928 ' , personSchema ) ;:==:var collection:==:db . model ( ' gh4928_0 ' , collectionSchema ) ;
var index = attributes [ ' index ' ] ;:==:var position:==:attributes [ ' position ' ] ;
var user = this . analytics . user ( ) ;:==:var events:==:this . events ( event ) ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var massageSort = localUtils . massageSort ;:==:var getValue:==:localUtils . getValue ;
var objectHasOwnProperty = utils . importNow ( ' objectHasOwnProperty ' ) ;:==:var overrideFunction:==:utils . overrideFunction ;
var menus = imports . menus ;:==:var join:==:require ( ' path ' ) . join ;
var async = require ( ' async ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' test ' ) ;
var inquirer = require ( ' inquirer ' ) ;:==:var path:==:require ( ' path ' ) ;
var params = options . params , vars = options . vars , callBacks = options . callBacks ;:==:var properties:==:$ extend ( height : options . height , width : options . width , options . properties ) ;
var collabDoc = editor . session . collabDoc ;:==:var cursorLayer:==:collabDoc & & collabDoc . cursorLayer ;
var tops = this . tops ;:==:var bottoms:==:this . bottoms ;
var get = Ember . get ;:==:var attr:==:DS . attr ;
var section = this . treeOutline ? this . treeOutline . section : null ;:==:var skipProto:==:section ? section . _ skipProto : true ;
var bubble = imports [ ' notification . bubble ' ] ;:==:var panels:==:imports . panels ;
var cos = spine . mathUtils . cosDeg ( rotation ) ;:==:var sin:==:spine . mathUtils . sinDeg ( rotation ) ;
var cookie = require ( ' cookie ' ) ;:==:var extend:==:require ( ' extend ' ) ;
var circle = circles [ i ] ;:==:var d:==:dist ( x , y , circle . x , circle . y ) ;
var from = ( opts & & typeof opts . from ! = ' undefined ' ) ? opts . from : that . from ;:==:var to:==:( opts & & typeof opts . to !   ' undefined ' ) ? opts . to : that . to ;
var granularity = corridor . granularity ;:==:var width:==:corridor . width ;
var dict = params . dict ;:==:var data:==:this . data ;
var mouse = require ( ' mouse ' ) ;:==:var pagestack:==:require ( ' pagestack ' ) ;
var tabIndex = _ props3 . tabIndex ;:==:var type:==:_ props3 . type ;
var fixedRows = this . hot . getSettings ( ) . fixedRowsTop ;:==:var countRows:==:this . hot . countRows ( ) ;
var left = $ ( ' < div > ' , ' class ' : ' label left ' ) ;:==:var right:==:$ ( ' < div > ' , ' class ' : ' label right ' ) ;
var expect = require ( ' expect . js ' ) ;:==:var path:==:require ( ' path ' ) ;
var series = require ( ' stream - series ' ) ;:==:var lazypipe:==:require ( ' lazypipe ' ) ;
var div = document . body . appendChild ( document . createElement ( ' div ' ) ) ;:==:var span:==:div . appendChild ( document . createElement ( ' span ' ) ) ;
var Selection = scope . wrappers . Selection ;:==:var selectorsInterface:==:scope . selectorsInterface ;
var options = optionsIn  |  |  ;:==:var pane:==:_ getPane ( paneId ) ;
var pixelConverter = jsCommon . pixelConverter ;:==:var selectionId:==:powerbi . visuals . selectionId ;
var direction = options . direction ;:==:var isRtl:==:kendo . support . isRtl ( that . wrapper ) ;
var def = this . definition ( ) ;:==:var s:==:this . scope ;
var error = console . error . bind ( console ) ;:==:var warn:==:console . warn . bind ( console ) ;
var debug = config . debug ;:==:var silent:==:config . silent ;
var lvalue = this . transformAny ( tree . lvalue ) ;:==:var initializer:==:this . transformAny ( tree . initializer ) ;
var isAssociative = util . isAssociative ;:==:var flatten:==:util . flatten ;
var pos = this . _ position ? this . position : ( this . layoutAreaPos  |  |  prim2dbase_1 . _ v0 ) ;:==:var postScale:==:this . _ postScale ;
var text = fs . readFileSync ( path . join ( context , fname ) , ' utf8 ' ) , m ;:==:var server:==:new tern . server ( serverOptions ( context , text ) ) ;
var util = require ( ' util ' ) ;:==:var format:==:require ( ' util ' ) . format ;
var linkToPage = getStyleProperty ( item , styleContextStack , ' linkToPage ' , null ) ;:==:var noWrap:==:getStyleProperty ( item , styleContextStack , ' noWrap ' , null ) ;
var left = measureChar ( cm , copy , 0 , measure , ' left ' ) ;:==:var right:==:measureChar ( cm , copy , 99 , measure , ' right ' ) ;
var svgRoot = this . _ svgRoot ;:==:var visibleList:==:this . _ visibleList ;
var path = require ( ' path ' ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var sessionDescription = w . mozrtcSessionDescription  |  |  w . rtcSessionDescription ;:==:var iceCandidate:==:w . mozrtcIceCandidate  |  |  w . rtcIceCandidate ;
var destinationType = getValue ( options . destinationType , camera . destinationType . file_uri ) ;:==:var sourceType:==:getValue ( options . sourceType , camera . pictureSourceType . camera ) ;
var helpArea = options . helpArea ;:==:var relocator:==:options . relocator ;
var coordinates = readCoordinates ( coordinatesNode ) ;:==:var extrude:==:queryBooleanValue ( geometryNode , ' extrude ' , namespaces . kml ) ;
var timings = elementData . timings ;:==:var stagger:==:elementData . stagger ;
var properties = definition . properties ;:==:var additionalProperties:==:definition . additionalProperties ;
var utils = PouchDB . utils . mapReduceUtils ;:==:var promise:==:pouchdb . utils . promise ;
var a = fulfillSoon ( ' a ' , 40 ) ;:==:var b:==:fulfillSoon ( ' b ' , 30 ) ;
var textLayer = renderer . $ textLayer ;:==:var config:==:textLayer . config ;
var replayGroup = this . replayGroup _ ;:==:var size:==:frameState . size ;
var secret = getParameterByName ( ' secret ' , data ) ;:==:var email:==:getParameterByName ( ' email ' , data ) ;
var firstBatch = new buffer ( ' firstBatch ' , ' utf8 ' ) ;:==:var nextBatch:==:new buffer ( ' nextBatch ' , ' utf8 ' ) ;
var variableStatement = traceur . syntax . trees . variableStatement ;:==:var alphaRenamer:==:traceur . codegeneration . alphaRenamer ;
var level2 = db . model ( ' level_2 ' , level2Schema ) ;:==:var level1:==:db . model ( ' level_1 ' , level1Schema ) ;
var timelineData = this . _ timelineData ( ) ;:==:var timeWindowRight:==:this . _ timeWindowRight ;
var template = el . attr ( ' data - template ' ) ;:==:var location:==:el . attr ( ' data - location ' ) ;
var event = this . events _ [ i ] ;:==:var eventTime:==:event . eventTime ;
var spacing = _ muiTheme . spacing ;:==:var fontFamily:==:_ muiTheme . fontFamily ;
var y = posInfo . cy + parsePercent ( offsetCenter [ 1 ] , posInfo . r ) ;:==:var width:==:parsePercent ( detailModel . get ( ' width ' ) , posInfo . r ) ;
var patch = new CS . Solver . Step ( stepBaseName + ' _ patch ' ) ;:==:var rest:==:new cs . solver . step ( stepBaseName + ' _ rest ' ) ;
var dynCall_viiiiiii = Module [ ' dynCall_viiiiiii ' ] = asm [ ' dynCall_viiiiiii ' ] ;:==:var dynCall_viiiiiiiii:==:Module [ ' dynCall_viiiiiiiii ' ]    asm [ ' dynCall_viiiiiiiii ' ] ;
var parameter = this . transformAny ( tree . parameter ) ;:==:var body:==:this . transformFunctionBody ( tree . body ) ;
var device = this . device ;:==:var scene:==:this . scene ;
var button = this . button ;:==:var menu:==:this . menu ;
var domain = require ( ' domain ' ) ;:==:var d:==:domain . create ( ) ;
var magneticHeading = e . heading . magneticHeading ;:==:var accuracy:==:e . heading . accuracy ;
var options = this . options ;:==:var now:==:$ . now ( ) ;
var top = this . createChar ( scale , ( delim . top |  | delim . ext ) , font ) ;:==:var bot:==:this . createChar ( scale , ( delim . bot |  | delim . ext ) , font ) ;
var getTreeScope = scope . getTreeScope ;:==:var mixin:==:scope . mixin ;
var gl = this . glplot . gl ;:==:var w:==:gl . drawingBufferWidth ;
var a = ' 11433856eed2f1285fb3aa11136718c1198ed5647875096952c66bf8cb976306 ' ;:==:var b:==:' 91433856eed2f1285fb3aa11136718c1198ed5647875096952c66bf8cb976306 ' ;
var level = frame [ ' @level ' ] ;:==:var line:==:frame [ ' @lineno ' ] - 1 ;
var installer = imports . installer ;:==:var c9:==:imports . c9 ;
var pixTolerance = _ pixTolerance & & _ pixTolerance > = 0 & & _ pixTolerance < = 1 ? _ pixTolerance : 0 ;:==:var frameTolerance:==:_ frameTolerance & & _ frameTolerance >   0 & & _ frameTolerance <   1 ? _ frameTolerance : 0 ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var cssmin:==:require ( ' gulp - cssmin ' ) ;
var i = this . injectorStrategy ;:==:var p:==:i . protoStrategy ;
var clone = _ _ webpack_require _ _ ( 5 ) . clone ;:==:var format:==:_ _ webpack_require _ _ ( 11 ) . format ;
var transparency = powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . transparency , trendLineHelper . defaults . transparency ) ;:==:var style:==:powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . style , trendLineHelper . defaults . lineStyle ) ;
var    DIST = 23 ;:==:var    DISTEXT:==:24 ;
var nodesMap = this . _ nodesMap ;:==:var edgesMap:==:this . _ edgesMap ;
var domProperty = require ( ' domProperty ' ) ;:==:var must_use_property:==:domProperty . injection . must_use_property ;
var createCallback = parseTreeFactory . createCallback ;:==:var createEmptyArgumentList:==:parseTreeFactory . createEmptyArgumentList ;
var ifIgnoreOnTick = axisBuilder . ifIgnoreOnTick ;:==:var getInterval:==:axisBuilder . getInterval ;
var hash = i d . hashCode ( ) ;:==:var h:==:this . _ indexToValueInSpace ( hash , this . _ hueSpace ) ;
var reactdomEventListener = require ( ' reactdomEventListener ' ) ;:==:var svgdomPropertyConfig:==:require ( ' svgdomPropertyConfig ' ) ;
var granularity = defaultValue ( options . granularity , cesiumMath . radians_per_degree ) ;:==:var ellipsoid:==:defaultValue ( options . ellipsoid , ellipsoid . wgs84 ) ;
var pt = fmtpObj . pt ;:==:var params:==:fmtpObj . params ;
var title = tokens [ idx ] . title ? ( ' title= ' ' + escapeHtml ( replaceEntities ( tokens [ idx ] . title ) ) + ' ' ' ) : '' ;:==:var target:==:tokens [ idx ] . target ? ( ' target ' ' + escapeHtml ( tokens [ idx ] . target ) + ' ' ' ) : '' ;
var extraData = rule . extraData ;:==:var extraDataDynamic:==:rule . extraDataDynamic ;
var style = flattenStyle ( this . props . style )  |  |  ;:==:var margin:==:resolveBoxStyle ( ' margin ' , style ) ;
var identifierExpression = traceur . syntax . trees . identifierExpression ;:==:var literalExpression:==:traceur . syntax . trees . literalExpression ;
var cancelable = defaultValue ( options . cancelable , true ) ;:==:var alpha:==:defaultValue ( options . alpha , 0 . 0 ) ;
var fixedHeight = _ props4 . fixedHeight ;:==:var keepCollapsedContent:==:_ props4 . keepCollapsedContent ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var react:==:require ( ' react ' ) ;
var tr = $ ( ' < tr > ' ) ;:==:var select:==:$ ( ' < select > ' ) . attr ( ' class','pe_selectabletime ' ) . attr ( ' id',e . prefix+'_from_'+i ) ;
var p = svgExporter . prototype ;:==:var c:==:createjs ;
var addSyncIcon = createLinks ? addSyncIconWithLink : addIcon ;:==:var addPublishIcon:==:createLinks ? addPublishIconWithLink : addIcon ;
var compare = Caml_string . caml_string_compare ;:==:var fill:==:Bytes . fill ;
var d1 = _ addDraggableDiv ( _ jsPlumb , ' d1 ' , null , null,50 , 50 , 100 , 100 ) ;:==:var d2:==:_ addDraggableDiv ( _ jsPlumb , ' d2 ' , null , null,250 , 250 , 100 , 100 ) ;
var switchStatement = traceur . syntax . trees . switchStatement ;:==:var tokenType:==:traceur . syntax . tokenType ;
var startLine = parsedScriptParams . startLine ;:==:var endLine:==:parsedScriptParams . endLine ;
var w = _ _ browserGetter . availWidth ( this . _ frame ) ;:==:var h:==:_ _ browserGetter . availHeight ( this . _ frame ) ;
var extend = require ( ' util ' ) . _ extend ;:==:var fs:==:require ( ' fs - extra ' ) ;
var takeDoc = type . _ takeDoc ;:==:var append:==:type . _ append ;
var Platform = require ( ' Platform ' ) ;:==:var actionSheetios:==:require ( ' actionSheetios ' ) ;
var path = utils . url_path_join ( that . notebook_path , filename ) ;:==:var filedata:==:item . data ( ' filedata ' ) ;
var fs = require ( ' fs ' ) ;:==:var through:==:require ( ' through2 ' ) ;
var delimiters = template . setDelimiters ( options . delimiters ) ;:==:var data:==:object . create ( options . data  |  |  grunt . config . data  |  |  ) ;
var warn = sharedUtil . warn ;:==:var isStream:==:corePrimitives . isStream ;
var expect = chai . expect ;:==:var vm:==:require ( ' vm ' ) ;
var vm = require ( ' vm ' ) ;:==:var temp:==:require ( ' temp ' ) ;
var tag = selector . match ( Selectors . regExps . tag ) ;:==:var i d:==:selector . match ( selectors . regExps . i d ) ;
var width = Base . window . width * . 75  |  0 ;:==:var nyanCatWidth:==:this . nyanCatWidth    11 ;
var root = this . _ root ;:==:var use:==:this . _ use ;
var prev = ( this . prevClass ! = null ? this . prevClass : mml . texclass . none ) ;:==:var tex:==:( this . get ( ' texClass ' )  |  |  mml . texclass . ord ) ;
var trim = ref . trim ;:==:var number:==:ref . number ;
var desiredCapabilities = parameters [ ' desiredCapabilities ' ] ;:==:var requiredCapabilities:==:parameters [ ' requiredCapabilities ' ] ;
var x0 = this . x0 ;:==:var y0:==:this . y0 ;
var height = image . height ;:==:var x:==:Math . round ( uv . x * width ) % width ;
var test = document . getElementById ( ' test ' ) ;:==:var element:==:document . getElementById ( ' element ' ) ;
var type = data . type ;:==:var leaveClass:==:data . leaveClass ;
var args = command_obj . args ;:==:var command:==:command_obj . command ;
var head = this . head ;:==:var buffer:==:this . buffer ;
var flipX = options [ ' flipX ' ] ;:==:var flipY:==:options [ ' flipY ' ] ;
var callback = task . callback ;:==:var args:==:task . args ;
var fs   = require ( ' fs ' ) ;:==:var async:==:require ( ' async ' ) ;
var region = drop . get ( ' node ' ) . get ( ' region ' ) ;:==:var mouseXY:==:drag . mouseXY ;
var y = obj . y = = null ? 0 : obj . y ;:==:var y2:==:obj . y2     null ? 0 : obj . y2 ;
var contexts = this . contexts ;:==:var destination:==:this . destination ;
var tooltipBuilder = powerbi . visuals . tooltipBuilder ;:==:var getInvalidValueWarnings:==:powerbi . visuals . getInvalidValueWarnings ;
var length = faces . length ;:==:var planes:==:result . planes ;
var parenthesis = ( options & & options . parenthesis ) ? options . parenthesis : ' keep ' ;:==:var expr:==:this . expr . toString ( options ) ;
var highlighter = config . highlighter  |  |  codeMirrorHighlighter ;:==:var showdown:==:config . showdown  |  |  new showdown . converter ( ) ;
var dragTarget = document . getElementById ( ' dragTarget ' ) ;:==:var mouseup:==:rx . observable . fromEvent ( dragTarget , ' mouseup ' ) ;
var clearOnDrop = defaultValue ( options . clearOnDrop , true ) ;:==:var dropTarget:==:defaultValue ( options . dropTarget , viewer . container ) ;
var before = new Blockly . fieldLabel ( ' before ' ) ;:==:var after:==:new blockly . fieldLabel ( ' after ' ) ;
var webglStub = argv . webglStub ? argv . webglStub : false ;:==:var release:==:argv . release ? argv . release : false ;
var max = Math . max ;:==:var min:==:Math . min ;
var bridge = imports . bridge ;:==:var tabManager:==:imports . tabManager ;
var textOperation = firepad . textOperation ;:==:var firebaseAdapter:==:firepad . firebaseAdapter ;
var dirname = path . dirname ( fileObj . path ) ;:==:var extname:==:path . extname ( fileObj . path ) ;
var testPanel = imports . testPanel ;:==:var settings:==:imports . settings ;
var edgeTypeOffset = this . _ edgeTypeOffset ;:==:var nodeCount:==:this . nodeCount ;
var onFocus = _ props2 . onFocus ;:==:var style:==:_ props2 . style ;
var attribute = spec . attribute ;:==:var value:==:spec . value ;
var o = rows [ i ] ;:==:var l:==:o . length ;
var c = rejectBuiltInSoon ( ' rejected - c ' , 10 ) ;:==:var d:==:rejectBuiltInSoon ( ' rejected - d ' , 20 ) ;
var db = BrowserDB . db . _ db ;:==:var transaction:==:db . transaction ( ' search_engines ' , ' readwrite ' ) ;
var element = this . element . createChild ( ' span ' , ' status - bar - counter - item ' ) ;:==:var icon:==:element . createChild ( ' label ' , ' ' , ' dt - icon - label ' ) ;
var columns = _ ref . columns ;:==:var index:==:_ ref . index ;
var Plugin = imports . Plugin ;:==:var Document:==:imports . Document ;
var name = req . params . name ;:==:var page:==:Number ( req . query . page )  |  |  1 ;
var font = parameters . font ! = = undefined ? parameters . font : ' helvetiker ' ;:==:var weight:==:parameters . weight !    undefined ? parameters . weight : ' normal ' ;
var run = test . runId ( ) ;:==:var coll:==:new mongo . collection ( ' livedata_upsert_errorparse_collection_'+run , collectionOptions ) ;
var textMeasurementService = powerbi . textMeasurementService ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var fs = imports . fs ;:==:var layout:==:imports . layout ;
var pre = buildLineContent ( cm , line , null , true ) . pre ;:==:var end:==:pre . appendChild ( zeroWidthElement ( cm . display . measure ) ) ;
var jade = require ( ' jade ' ) ;:==:var util:==:require ( ' util ' ) ;
var extent = ol . extent . createOrUpdate ( 1 , 2 , 3 , 4 ) ;:==:var clone:==:ol . extent . clone ( extent ) ;
var timescale = sidx . timescale ;:==:var time:==:sidx . earliest_presentation_time ;
var symbolicName = r . symbolicName ;:==:var keyId:==:r . keyIdentifier ;
var string = ' string ' ;:==:var bool:==:' boolean ' ;
var installer = imports . installer ;:==:var bashBin:==:options . bashBin  |  |  ' bash ' ;
var route = this . route ;:==:var keys:==:Object . keys ( generators ) ;
var min = Math . min ( selectionMgr . selectionStart , selectionMgr . selectionEnd ) ;:==:var max:==:math . max ( selectionMgr . selectionStart , selectionMgr . selectionEnd ) ;
var o = open [ k ] = ' \u001b [ ' + backgroundColorNums [ k ] + ' m ' ;:==:var c:==:close [ k ]    ' \u001b [ 49 m ' ;
var secret = this . req . secret ;:==:var signed:==:options . signed ;
var frame = infoRender . frame ;:==:var geometry:==:object . geometry ;
var width = node . width  |  |  0 ;:==:var height:==:node . height  |  |  0 ;
var Plugin = imports . Plugin ;:==:var http:==:imports . http ;
var parentSelector = conf . tearPage . parentSelector  |  |  ' div [ alog - alias = p-1 ] ' ;:==:var body:==:$ ( document . body ) ;
var zr = this . _ _ zr ;:==:var storage:==:this . _ _ storage ;
var bounds = camera2 . bounds ;:==:var x:==:bounds . x * _ width * _ pixelRatio ;
var crypto = require ( ' crypto ' ) ;:==:var querystring:==:require ( ' querystring ' ) ;
var isMap   = immutable . map . isMap ;:==:var list:==:immutable . list ;
var appView = _ appJsViewsAppView [ ' default ' ] ;:==:var confirmDownloadView:==:_ appJsViewsConfirmDownloadView [ ' default ' ] ;
var topBoundary = this . _ topBoundary ;:==:var bottomBoundary:==:this . _ bottomBoundary ;
var authAttribs = doc . authAttribs ;:==:var starRevNums:==:doc . starRevNums ;
var i d = this . i d = options . i d  |  |  this . instance ;:==:var container:==:document . i d ( options . container ) ;
var ctx = this . ctx ;:==:var c:==:this . canvas ;
var nonElementParentNodeInterface = scope . nonElementParentNodeInterface ;:==:var selection:==:scope . wrappers . selection ;
var redA100 = exports . redA100 = ' # ff8a80 ' ;:==:var redA200:==:exports . redA200    ' # ff5252 ' ;
var profile = client . sbx . data . profile ;:==:var report_plugins:==:Nightscout . report_plugins ;
var name = path . substring ( 0 , path . length - extname . length ) ;:==:var views:==:this . views [ name ] ;
var y = center . y ;:==:var z:==:center . z ;
var arrayExtensions = jsCommon . arrayExtensions ;:==:var inheritSingle:==:powerbi . prototype . inheritSingle ;
var colors = this . colors = params . get ( ' Colors ' )  |  |  1 ;:==:var bits:==:this . bits    params . get ( ' bitsPerComponent ' )  |  |  8 ;
var keys = Object . keys ( defaultValues ) ;:==:var indices:==:( recordTypePrototype . _ indices    ) ;
var returnStatement = exports . returnStatement = buildLabelStatement ( ' return ' , ' argument ' ) ;:==:var breakStatement:==:exports . breakStatement    buildLabelStatement ( ' break ' ) ;
var dataZoomModel = this . dataZoomModel ;:==:var showDataShadow:==:dataZoomModel . get ( ' showDataShadow ' ) ;
var user = stackoverflow_data . user ;:==:var badge_count:==:user . badge_counts . bronze + user . badge_counts . silver + user . badge_counts . gold ;
var u = uv [ 0 ] ;:==:var v:==:uv [ 1 ] ;
var gulp = require ( ' gulp ' ) ;:==:var webpack:==:require ( ' webpack - stream ' ) ;
var f = function ( x ) return x * x ;:==:var m:==:functionUtils . memoize ( f ) ;
var GENERATOR_COMPREHENSION = ' GENERATOR_COMPREHENSION ' ;:==:var GET_ACCESSOR:==:' GET_ACCESSOR ' ;
var i d = $ ( this ) . parent ( ' . button - container ' ) . find ( ' . _ i d ' ) . val ( ) ;:==:var overlay:==:$ ( ' # overlay ' ) . clone ( ) ;
var assert = require ( ' assert ' ) ;:==:var adapter:==:global . adapter ;
var PORT = common . PORT ;:==:var cluster:==:require ( ' cluster ' ) ;
var ui = imports . ui ;:==:var confirm:==:imports [ ' dialog . confirm ' ] . show ;
var ownerID = _ treeSnapshot$instanc . ownerid ;:==:var owner:==:treeSnapshot [ ownerid ] ;
var STRING5 = C . STRING5 = 0x65 ;:==:var STRING6:==:C . STRING6    0x66 ;
var west = rectangleScratch . west ;:==:var north:==:rectangleScratch . north ;
var contactCardHeaderKind = contacts . contactCardHeaderKind ;:==:var placement:==:windows . ui . popups . placement ;
var elementRef = this . elementRefs [ boundElementIndex ] ;:==:var view:==:view_ref_1 . internalView ( elementRef . parentView ) ;
var red400 = exports . red400 = ' # ef5350 ' ;:==:var red500:==:exports . red500    ' # f44336 ' ;
var faintBlack = exports . faintBlack = ' rgba ( 0 , 0 , 0 , 0 . 12 ) ' ;:==:var fullWhite:==:exports . fullWhite    ' rgba ( 255 , 255 , 255 , 1 ) ' ;
var input = goog . dom . getElement ( ' hidden - input ' ) ;:==:var iframe:==:goog . dom . getElement ( ' hidden - iframe ' ) ;
var o = TO_OBJECT ( locales ) ;:==:var len:==:TO_LENGTH ( o . length ) ;
var lat = latlong [ 0 ] ;:==:var lon:==:latlong [ 1 ] ;
var custom = arc & & arc . custom  |  |  ;:==:var getValueAtIndexOrDefault:==:helpers . getValueAtIndexOrDefault ;
var channel = animation . channels [ channelId ] ;:==:var sampler:==:animation . samplers [ channel . sampler ] ;
var variableStatement = traceur . syntax . trees . variableStatement ;:==:var createArgumentList:==:parseTreeFactory . createArgumentList ;
var requestStats = goog . labs . net . webChannel . requestStats ;:==:var webChannelDebug:==:goog . labs . net . webChannel . webChannelDebug ;
var setupTestHooks = blueprintHelpers . setupTestHooks ;:==:var emberNew:==:blueprintHelpers . emberNew ;
var leftCurlyCount = this . leftCurlyCount ;:==:var rightCurlyCount:==:this . rightCurlyCount ;
var edgeNameOffset = this . _ edgeNameOffset ;:==:var edgeFieldsCount:==:this . _ edgeFieldsCount ;
var totalRows = priv . totalRows ;:==:var viewportHeight:==:priv . viewportHeight ;
var url = data . url ;:==:var title:==:data . title ;
var IS_TEST_MODE = ! ! process . env . IS_TEST_MODE ;:==:var Emitter:==:require ( ' events ' ) . eventEmitter ;
var TRUE1 = C . TRUE1 = 0x21 ;:==:var TRUE2:==:C . TRUE2    0x22 ;
var identifiers = parserConf . identifiers |  |  new regExp ( ' ^ [ _ a - za - z ] [ _ a - za - z0 - 9 ] * ' ) ;:==:var hangingIndent:==:parserConf . hangingIndent  |  |  parserConf . indentUnit ;
var addClass = _ tetherBase$Utils . addClass ;:==:var removeClass:==:_ tetherBase$Utils . removeClass ;
var x2 = shape . x2 ;:==:var y2:==:shape . y2 ;
var constant = Parsers . constant ;:==:var mapResult:==:parsers . mapResult ;
var pi = math . pi ;:==:var complex:==:math . complex ;
var drawMonth = inst . drawMonth - showCurrentAtPos ;:==:var drawYear:==:inst . drawYear ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var buffer:==:require ( ' vinyl - buffer ' ) ;
var identityToUnicodeMap = coreFonts . identityToUnicodeMap ;:==:var toUnicodeMap:==:coreFonts . toUnicodeMap ;
var material = materials [ primitive . material ] ;:==:var technique:==:techniques [ material . technique ] ;
var tagName = e . tagName . toLowerCase ( ) ;:==:var type:==:e . type ;
var replace = require ( ' gulp - replace ' ) ;:==:var size:==:require ( ' gulp - size ' ) ;
var capture = _ props2 . capture ;:==:var target:==:_ props2 . target ;
var alt = ev . altKey ;:==:var shift:==:ev . shiftKey ;
var width = image . width ;:==:var pixelsToCheck:==:options . pixelsToCheck ;
var util = require ( ' util ' ) ;:==:var passport:==:require ( ' passport ' ) ;
var Name = corePrimitives . name ;:==:var stream:==:coreStream . stream ;
var mrow = cTop . createElement ( ' mrow ' ) ;:==:var mo:==:cTop . createElement ( ' mo ' ) ;
var height = $ ( window ) . height ( ) - header . offsetHeight ;:==:var width:==:$ ( ' # terminado - container ' ) . width ( ) ;
var items = this . itemsData . get ( ) ;:==:var fieldId:==:this . itemsData . _ fieldId ;
var models = _ _ alloyId19 . models ;:==:var len:==:models . length ;
var granularity = params . granularity ;:==:var positions:==:params . positions ;
var http = require ( ' http ' ) ;:==:var gaze:==:require ( ' gaze ' ) ;
var characterSpacing = getStyleProperty ( , styleContextStack , ' characterSpacing ' , 0 ) ;:==:var font:==:this . fontProvider . provideFont ( fontName , bold , italics ) ;
var through = require ( ' through ' ) ;:==:var hyperglue:==:require ( ' hyperglue ' ) ;
var _ llvm_ctlz_i32 = Module [ ' _ llvm_ctlz_i32 ' ] = asm [ ' _ llvm_ctlz_i32 ' ] ;:==:var _ bitshift64Shl:==:module [ ' _ bitshift64Shl ' ]    asm [ ' _ bitshift64Shl ' ] ;
var element = that . element [ 0 ] ;:==:var value:==:element . value ;
var names = o . names  |  |  [ o . name ] ;:==:var type:==:getOptionType ( o . type ) ;
var View = require ( ' View ' ) ;:==:var f8Colors:==:require ( ' f8Colors ' ) ;
var settings = imports . settings ;:==:var immediate:==:imports . immediate ;
var getSlotHeight = t . getSlotHeight ;:==:var getSlotDuration:==:t . getSlotDuration ;
var Agenda = Parse . Object . extend ( ' Agenda ' ) ;:==:var Attendance:==:Parse . Object . extend ( ' Attendance ' ) ;
var a = new constantNode ( 1 ) ;:==:var b:==:new symbolNode ( ' epsilon ' ) ;
var element = this . _ . element ;:==:var definition:==:this . definition ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , zero_to_fifty , valueRange : [ 0,50 ] ) ;
var miscCounters = document . getElementById ( ' miscCounters ' ) ;:==:var help01:==:document . getElementById ( ' help01 ' ) ;
var renderStatic = this . renderStatic ;:==:var height:==:this . state . height ;
var path = require ( ' path ' ) ;:==:var firebase:==:require ( ' firebase ' ) ;
var geometry = options . geometry ;:==:var shadowVolume:==:options . shadowVolume ;
var axis = joint . axis ;:==:var transforms:==:jointData . transforms ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var _ main:==:Module [ ' _ main ' ]    asm [ ' _ main ' ] ;
var reflectivity = this . reflectivity ? this . reflectivity . buildCode ( builder , ' fv1 ' ) : undefined ;:==:var light:==:this . light ? this . light . buildCode ( builder , ' v3 ' , cache : ' light ' ) : undefined ;
var Complex = math . type . Complex ;:==:var resultSet:==:math . type . resultSet ;
var fs = require ( ' fs - extra ' ) ;:==:var async:==:require ( ' async ' ) ;
var warn = sharedUtil . warn ;:==:var fontFaceObject:==:displayFontLoader . fontFaceObject ;
var parser = require ( ' engine . io - parser ' ) ;:==:var inherit:==:require ( ' component - inherit ' ) ;
var isNumber = number . isNumber ;:==:var isInteger:==:number . isInteger ;
var MODULE = ' MODULE ' ;:==:var MODULE_SPECIFIER:==:' MODULE_SPECIFIER ' ;
var opts = _ _ alloyId24 . opts  |  |  ;:==:var models:==:_ _ alloyId23 . models ;
var scrollView = options . scrollView ;:==:var transclude:==:options . transclude ;
var chromeBar = this . chromeBar ;:==:var titleBar:==:this . titleBar ;
var observable = ko . observable ( ' original ' ) . extend ( deferred : true ) ;:==:var notifySpy:==:jasmine . createSpy ( ' notifySpy ' ) ;
var hosts = document . getElementById ( ' hosts ' ) ;:==:var port:==:document . getElementById ( ' port ' ) ;
var dynCall_ii = Module [ ' dynCall_ii ' ] = asm [ ' dynCall_ii ' ] ;:==:var dynCall_viii:==:Module [ ' dynCall_viii ' ]    asm [ ' dynCall_viii ' ] ;
var project = this . loader . project ;:==:var tree:==:this . tree ;
var AFTER_COUPON_ID = nconf . get ( ' AFTER_COUPON_ID ' ) ;:==:var BEFORE_COUPON_ID:==:nconf . get ( ' BEFORE_COUPON_ID ' ) ;
var x = Math . round ( uv . x * width ) % width ;:==:var y:==:Math . round ( uv . y * height ) % height ;
var indigo700 = exports . indigo700 = ' # 303f9f ' ;:==:var indigo800:==:exports . indigo800    ' # 283593 ' ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var _ strlen:==:Module [ ' _ strlen ' ]    asm [ ' _ strlen ' ] ;
var videoRecvBitrate = options . videoRecvBitrate ;:==:var videoSendBitrate:==:options . videoSendBitrate ;
var lineDash = style . lineDash ;:==:var lineDashOffset:==:style . lineDashOffset ;
var second = calendar . month . second ( ) ;:==:var daysInMonth:==:moment ( [ year , month ] ) . daysInMonth ( ) ;
var right = region . right + dest . x ;:==:var bottom:==:region . bottom + dest . y ;
var crawl = require ( ' npm - crawl ' ) ;:==:var convert:==:require ( ' npm - convert ' ) ;
var sourceCode = job . sourceCode , basePos = job . basePos ;:==:var sourceNode:==:job . sourceNode ;
var p = this . properties ;:==:var w:==:p . width ? s . width : 0 ;
var entity = geometryUpdater . _ entity ;:==:var wall:==:entity . wall ;
var getSampleStateForTesting = require ( ' getSampleStateForTesting ' ) ;:==:var removeRangeFromContentState:==:require ( ' removeRangeFromContentState ' ) ;
var contentBox = instance . get ( ' contentBox ' ) ;:==:var children:==:instance . get ( ' children ' ) ;
var brightness = params . brightness ;:==:var blackPoint:==:params . blackPoint ;
var y = Math . max ( frame . y , otherFrame . y ) ;:==:var height:==:math . min ( frame . y + frame . height , otherFrame . y + otherFrame . height ) ;
var lightGreen400 = exports . lightGreen400 = ' # 9ccc65 ' ;:==:var lightGreen500:==:exports . lightGreen500    ' # 8bc34a ' ;
var isLoading = _ state . isLoading ;:==:var options:==:_ state . options ;
var foregroundElement = this . elements . foregroundElement ;:==:var backgroundElement:==:this . elements . backgroundElement ;
var a = this . agents [ j ] ;:==:var d:==:a . p . dist_from ( it . p ) ;
var util = imports . util ;:==:var save:==:imports . save ;
var alphabetical = require ( ' is - alphabetical ' ) ;:==:var decimal:==:require ( ' is - decimal ' ) ;
var win = processRules ( path . join ( _ _ dirname , ' doc . keybindings . win . json ' ) ) ;:==:var osx:==:processRules ( path . join ( _ _ dirname , ' doc . keybindings . osx . json ' ) ) ;
var tab = element ( by . i d ( ' tab3 ' ) ) ;:==:var page3:==:element ( by . i d ( ' page3 ' ) ) ;
var height = hl_lh_hh . height ;:==:var items:==:hl_lh_hh . items ;
var total = data . total ;:==:var pages:==:data . pages ;
var dataView = this . dataView = options . dataViews [ 0 ] ;:==:var viewport:==:options . viewport ;
var piece = pieceList [ i ] ;:==:var interval:==:piece . interval ;
var context = scene . context ;:==:var uniformState:==:context . uniformState ;
var transition = this . stylesheet . transition  |  |  ;:==:var layers:==:this . _ updates . allPaintProps ? this . _ layers : this . _ updates . paintProps ;
var React = require ( ' React ' ) ;:==:var Platform:==:require ( ' Platform ' ) ;
var rangeNode = math . expression . node . rangeNode ;:==:var complex:==:math . type . complex ;
var applyFuncToAll = graphDataWindow . applyFuncToAll . createDelegate ( graphDataWindow ) ;:==:var applyFuncToEach:==:graphDataWindow . applyFuncToEach . createDelegate ( graphDataWindow ) ;
var i d = item . i d ;:==:var module:==:get_module_details ( id , token ) ;
var glob = require ( ' glob ' ) ;:==:var Readable:==:require ( ' readable - stream ' ) . Readable ;
var width = view . width * view . scaleX ;:==:var height:==:view . height * view . scaleY ;
var li = document . createElement ( ' li ' ) ;:==:var timestamp:==:+ record . timestamp ;
var Identify = require ( ' facade ' ) . Identify ;:==:var clone:==:require ( ' clone ' ) ;
var backupText = $ scope . formData . backupText ;:==:var password:==:$ scope . formData . password ;
var getSelectionOffsetKeyForNode = require ( ' getSelectionOffsetKeyForNode ' ) ;:==:var getUpdatedSelectionState:==:require ( ' getUpdatedSelectionState ' ) ;
var sliced = require ( ' sliced ' ) ;:==:var mpath:==:require ( ' mpath ' ) ;
var dirname = require ( ' path ' ) . dirname ;:==:var VFSROOT:==:terminal . VFSROOT ;
var buffer   = require ( ' vinyl - buffer ' ) ;:==:var wrap:==:require ( ' gulp - wrap ' ) ;
var firstEdgeIndexes = snapshot . _ firstEdgeIndexes ;:==:var nodeFieldCount:==:snapshot . _ nodeFieldCount ;
var continueState = traceur . codegeneration . generator . continueState ;:==:var state:==:traceur . codegeneration . generator . state ;
var x = typeof pos . x = = = ' string ' ? this . edges [ pos . x ] : ( pos . x  |  |  0 ) ;:==:var y:==:typeof pos . y      ' string ' ? this . edges [ pos . y ] : ( pos . y  |  |  0 ) ;
var ui = imports . ui ;:==:var util:==:imports . util ;
var dateTimeFormatting = windows . globalization . dateTimeFormatting ;:==:var dateTimeFormatter:==:dateTimeFormatting . dateTimeFormatter ;
var box   = $ ( this . box ) ;:==:var grid:==:$ ( this . box ) . find ( ' > div . w2ui - grid - box ' ) ;
var w = this . width = visibleRect . width ;:==:var h:==:this . height    visibleRect . height ;
var continueState = traceur . codegeneration . generator . continueState ;:==:var endState:==:traceur . codegeneration . generator . endState ;
var src = e . src ;:==:var div:==:document . createElement ( ' div ' ) ;
var impulse1 = this . impulse1 ;:==:var impulse2:==:this . impulse2 ;
var objectId = instance . data ( ' objectId ' ) ;:==:var object:==:this . paper . getById ( objectId ) ;
var length = rawStrings . length ;:==:var other:==:other . raw ;
var alreadyRooted = options . alreadyRooted ;:==:var checkSymlinks:==:options . checkSymlinks ;
var el = helpers . entityFactory ( ) ;:==:var cursorEl:==:this . cursorEl    document . createElement ( ' a - cursor ' ) ;
var dom = api . dom ;:==:var util:==:api . util ;
var assert = require ( ' assert ' ) ;:==:var assign:==:require ( ' object - assign ' ) ;
var pending = this . pending _ ;:==:var modules:==:this . modules _ ;
var getAccessor = traceur . syntax . trees . getAccessor ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var scope = picker . $ scope ;:==:var options:==:picker . $ options ;
var rect = this . camera . rect ;:==:var width:==:Math . floor ( rect . z * this . app . graphicsDevice . width * this . renderTargetScale ) ;
var visualDataRoleKind = powerbi . visualDataRoleKind ;:==:var valueFormatter:==:powerbi . visuals . valueFormatter ;
var date = this . _ validate ( year , this . minMonth , this . minDay , main . local . invalidYear ) ;:==:var year:==:this . _ t2gYear ( date . year ( ) ) ;
var y = point . y ;:==:var z:==:point . z ;
var sourceEl = this . sourceEl ;:==:var targetEl:==:this . targetEl ;
var stringTopdfString = sharedUtil . stringTopdfString ;:==:var stringToutf8String:==:sharedUtil . stringToutf8String ;
var bounds = globe . bounds ( view ) ;:==:var velocityScale:==:bounds . height * primaryGrid . particles . velocityScale ;
var skin = skins [ i d ] ;:==:var accessor:==:accessors [ skin . inverseBindMatrices ] ;
var asciiIdentifierStartTable = unicodeData . asciiIdentifierStartTable ;:==:var asciiIdentifierPartTable:==:unicodeData . asciiIdentifierPartTable ;
var Scrollbar = require ( ' Scrollbar . react ' ) ;:==:var fixedDataTableBufferedRows:==:require ( ' fixedDataTableBufferedRows . react ' ) ;
var x = Math . min ( sourcePos [ 0 ] , targetPos [ 0 ] ) - xo ;:==:var y:==:math . min ( sourcePos [ 1 ] , targetPos [ 1 ] ) - yo ;
var PROPERTY_NAME_ASSIGNMENT = ' PROPERTY_NAME_ASSIGNMENT ' ;:==:var PROPERTY_NAME_SHORTHAND:==:' PROPERTY_NAME_SHORTHAND ' ;
var all = Ember . RSVP . all ;:==:var hash:==:Ember . RSVP . hash ;
var dynCall_di = Module [ ' dynCall_di ' ] = asm [ ' dynCall_di ' ] ;:==:var dynCall_iiiiiiiiiii:==:Module [ ' dynCall_iiiiiiiiiii ' ]    asm [ ' dynCall_iiiiiiiiiii ' ] ;
var fixedDataTableColumnResizeHandle = require ( ' fixedDataTableColumnResizeHandle . react ' ) ;:==:var fixedDataTableRow:==:require ( ' fixedDataTableRow . react ' ) ;
var params = ob . params ;:==:var validateUserForMgmtReadapi:==:ob . validateUserForMgmtReadapi ;
var e = end + 1 ;:==:var s:==:start - 1 ;
var c = ( ( x + 1 ) * ( locGridSize . height + 1 ) + ( y + 1 ) ) ;:==:var d:==:( x * ( locGridSize . height + 1 ) + ( y + 1 ) ) ;
var foo = new accessorNode ( a , new indexNode ( [ new constantNode ( ' foo ' ) ] ) ) ;:==:var bar:==:new accessorNode ( foo , new indexNode ( [ new constantNode ( ' bar ' ) ] ) ) ;
var ctx = this . ctx ;:==:var fillColor:==:this . current . fillColor ;
var r = Math . floor ( color . r * 255 ) ;:==:var g:==:Math . floor ( color . g * 255 ) ;
var currentFrame = ( this . _ timelineData . frameList [ this . _ currentFrameIndex ] ) ;:==:var nextFrame:==:( this . _ timelineData . frameList [ nextFrameIndex ] ) ;
var save = imports . save ;:==:var build:==:imports . build ;
var documentElement = doc . documentElement ;:==:var scrollLeft:==:body . scrollLeft  |  |  documentElement . scrollLeft ;
var total = track . total ( )  |  |  track . revenue ( )  |  |  0 ;:==:var orderId:==:track . orderId ( ) ;
var borderSize = current . theme . borderSize ;:==:var topMargin:==:current . theme . topMargin ;
var test = imports . test ;:==:var all:==:imports [ ' test . all ' ] ;
var f1 = ' f1 ' ;:==:var f2:==:' f2 ' ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var logger:==:require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;
var selectionIdBuilder = powerbi . visuals . selectionIdBuilder ;:==:var axisHelper:==:powerbi . visuals . axisHelper ;
var b = document . body ;:==:var d:==:document . documentElement ;
var path = require ( ' path ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' sockjs - client : test - server : main ' ) ;
var photoOrientation = windows . storage . fileProperties . photoOrientation ;:==:var sensors:==:windows . devices . sensors ;
var y = translation . y ;:==:var z:==:translation . z ;
var data = info . data ;:==:var internalformat:==:info . internalformat ;
var logPeriod = options . logPeriod  |  |  10 ;:==:var learningRate:==:options . learningRate  |  |  this . learningRate  |  |  0 . 3 ;
var messageId = message . messageId ;:==:var cdmaServiceCategory:==:message . cdmaServiceCategory ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var falafel:==:require ( ' falafel ' ) ;
var component = components . get ( utils . getParentComponent ( ) ) ;:==:var usedPropTypes:==:component & & component . usedPropTypes  |  |  [ ] ;
var defaultLabelPrecision = visuals . dataLabelUtils . defaultLabelPrecision ;:==:var defaultLabelColor:==:visuals . dataLabelUtils . defaultLabelColor ;
var assert = require ( ' assert - diff ' ) ;:==:var async:==:require ( ' async ' ) ;
var path = require ( ' path ' ) ;:==:var through2:==:require ( ' through2 ' ) ;
var options = this . _ options ;:==:var positions:==:Property . getValueOrUndefined ( wall . positions , time , options . positions ) ;
var CACHE_FRIENDS_KEY = Utils . CACHE_FRIENDS_KEY = ' numFacebookFriends ' ;:==:var last_updated_key:==:utils . last_updated_key    ' lastUpdatedTime ' ;
var proc = require ( ' child_process ' ) ;:==:var path:==:require ( ' path ' ) ;
var file = opts . file ;:==:var hash:==:opts . hash ;
var arrayViews = buffer . arrayViews ;:==:var length:==:arrayViews . length ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var socket:==:require ( ' net ' ) . socket ;
var assert = util . assert ;:==:var Deferred:==:util . Deferred ;
var d = new operatorNode ( ' * ' , ' add ' , [ new symbolNode ( ' x ' ) , new constantNode ( 3 ) ] ) ;:==:var e:==:new operatorNode ( ' * ' , ' add ' , [ new symbolNode ( ' x ' ) , new constantNode ( 2 ) , new constantNode ( 4 ) ] ) ;
var assetRegistry = require ( ' assetRegistry ' ) ;:==:var platform:==:require ( ' platform ' ) ;
var amount = parsedAmount . amount ;:==:var currency:==:parsedAmount . currency ;
var screenshot = require ( ' screenshot ' ) ;:==:var utils:==:require ( ' utils ' ) ;
var code = document . createElement ( ' code ' ) ;:==:var pre:==:document . createElement ( ' pre ' ) ;
var style = elem . style . left ;:==:var runtimeStyle:==:elem . runtimeStyle . left ;
var data = err . data ;:==:var textStatus:==:err . textStatus ;
var window = _ ref . window ;:==:var context:==:_ ref . context ;
var dynCall_iiiiiiii = Module [ ' dynCall_iiiiiiii ' ] = asm [ ' dynCall_iiiiiiii ' ] ;:==:var dynCall_iiiiiiddi:==:Module [ ' dynCall_iiiiiiddi ' ]    asm [ ' dynCall_iiiiiiddi ' ] ;
var min = Math . min ( red , green , blue ) ;:==:var max:==:Math . max ( red , green , blue ) ;
var steps = options . steps ! = = undefined ? options . steps : 1 ;:==:var bendPath:==:options . bendPath ;
var clone = require ( ' clone ' ) ;:==:var each:==:require ( ' each ' ) ;
var replace = require ( ' gulp - replace ' ) ;:==:var jshint:==:require ( ' gulp - jshint ' ) ;
var visualDataViews = options . visualDataViews ;:==:var dataRoles:==:options . dataRoles ;
var helpers = this . helpers ;:==:var version:==:helpers . set ( ' version ' ) ;
var width = view . _ originalDesignResolutionSize . width ;:==:var height:==:view . _ originalDesignResolutionSize . height ;
var iccId = navigator . mozIccManager . iccIds [ cardIndex ] ;:==:var icc:==:navigator . mozIccManager . getIccById ( iccId ) ;
var constantNode = math . expression . node . constantNode ;:==:var node:==:math . expression . node . node ;
var IS_DEV = constants . IS_DEV ;:==:var ROOT:==:constants . ROOT ;
var kind = feature . get ( ' kind ' ) ;:==:var railway:==:feature . get ( ' railway ' ) ;
var container = self . container ;:==:var canvas:==:self . canvas ;
var allOptions = _ _ webpack_require _ _ ( 145 ) . allOptions ;:==:var configureOptions:==:_ _ webpack_require _ _ ( 145 ) . configureOptions ;
var tiltY = defaultValue ( options . tilty , 0 ) ;:==:var pointerId:==:defaultValue ( options . pointerId , 1 ) ;
var message = error . message  |  |  error ;:==:var next:==:domLib ( el ) . next ( ' . ' + class_invalid ) ;
var ngModel = this . ngModel ;:==:var $ attrs:==:this . $ attrs ;
var backLink = jQuery . sap . byId ( i d + ' --backLink ' ) . toggleClass ( ' sapUiLnk ' , ! isFirst ) . toggleClass ( ' sapUiLnkDsbl ' , isFirst ) ;:==:var forwardLink:==:jQuery . sap . byId ( i d + ' --forwardLink ' ) . toggleClass ( ' sapUiLnk ' , ! isLast ) . toggleClass ( ' sapUiLnkDsbl ' , isLast ) ;
var elementMultiplier = structure . elementMultiplier ;:==:var isBigEndian:==:structure . isBigEndian ;
var DEBUGGING = window . parent . DEBUGGING ;:==:var debug:==:window . parent . debug ;
var afterAppear = data . afterAppear ;:==:var appearCancelled:==:data . appearCancelled ;
var checkFocus = window . checkFocus ;:==:var setFocusOutsideOfTable:==:window . setFocusOutsideOfTable ;
var isScrolling = state . isScrolling ;:==:var scrollDirectionHorizontal:==:state . scrollDirectionHorizontal ;
var options = self . buildRequest ( rurl , data , exheaders , exoptions ) ;:==:var headers:==:options . headers ;
var defineProperty = object . defineProperty ;:==:var hasOwnProperty:==:object . hasOwnProperty ;
var axisModel = this . axisModel ;:==:var axis:==:axisModel . axis ;
var filter = require ( ' gulp - filter ' ) ;:==:var through2:==:require ( ' through2 ' ) ;
var ui = imports . ui ;:==:var ace:==:imports . ace ;
var propertyPath = this . propertyPath ;:==:var isDesc:==:this . isDesc ;
var inherit = require ( ' component - inherit ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' engine . io - client : polling ' ) ;
var binaryOperator = traceur . syntax . trees . binaryOperator ;:==:var bindThisParameter:==:traceur . syntax . trees . bindThisParameter ;
var BUILD = ! ! options . BUILD ;:==:var TEST:==:! ! options . TEST ;
var i d = data . i d ;:==:var value:==:data . value ;
var context = this . context _ ;:==:var contextStrokeState:==:this . contextStrokeState _ ;
var linkService = this . linkService ;:==:var pdfPage:==:this . pdfPage ;
var spdy = require ( ' spdy ' ) ;:==:var uuid:==:require ( ' uuid ' ) ;
var rtcPeerConnection = window . mozrtcPeerConnection  |  |  window . webkitrtcPeerConnection ;:==:var rtcSessionDescription:==:window . mozrtcSessionDescription  |  |  window . rtcSessionDescription ;
var faces = geometry . faces ;:==:var vertices:==:geometry . vertices ;
var r = Math . round ;:==:var abs:==:Math . abs ;
var progress = typeof opts . progress = = = ' function ' ? opts . progress : null ;:==:var isolated:==:! ! opts . isolated ;
var w = ( c . width - x * 16 ) ;:==:var h:==:( c . height - y * 16 ) ;
var l = _ l ;:==:var k:==:_ k ;
var sc = graph . view . scale ;:==:var tr:==:graph . view . translate ;
var strings = this . strings ;:==:var edgeToNodeOffset:==:this . _ edgeToNodeOffset ;
var pow = Math . pow ;:==:var random:==:Math . random ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var zip:==:require ( ' gulp - zip ' ) ;
var uglify = require ( ' uglify - js ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) . sync ;
var createScopedExpression = parseTreeFactory . createScopedExpression ;:==:var createStringLiteral:==:parseTreeFactory . createStringLiteral ;
var extend = _ angular . extend ;:==:var forEach:==:_ angular . forEach ;
var times = options . times ;:==:var firstInnerQuadrangle:==:options . firstInnerQuadrangle ;
var React = require ( ' React ' ) ;:==:var Site:==:require ( ' Site ' ) ;
var helperNode2 = helper . getNode ( ' helperNode2 ' ) ;:==:var helperNode3:==:helper . getNode ( ' helperNode3 ' ) ;
var videoSendBitrate = options . videoSendBitrate ;:==:var videoSendInitialBitrate:==:options . videoSendInitialBitrate ;
var dirname = require ( ' path ' ) . dirname ;:==:var staticPrefix:==:options . staticPrefix ;
var c = rejectThenableSoon ( ' rejected - c ' , 10 ) ;:==:var d:==:rejectThenableSoon ( ' rejected - d ' , 20 ) ;
var calendar = t . calendar ;:==:var opt:==:t . opt ;
var utils = require ( ' index ' ) . utils ;:==:var diff:==:utils . diff ;
var exec = require ( ' child_process ' ) . exec ;:==:var readFileSync:==:require ( ' fs ' ) . readFileSync ;
var height = readState . height  |  |  gl . drawingBufferHeight ;:==:var framebuffer:==:readState . framebuffer ;
var pos = this . pos ;:==:var startPos:==:this . startPos ;
var direction = ray . direction ;:==:var planePointToFrom:==:intersectplane_planepointtofrom ;
var should = require ( ' chai ' ) . should ( ) ;:==:var mockery:==:require ( ' mockery ' ) ;
var url = require ( ' url ' ) ;:==:var zlib:==:require ( ' zlib ' ) ;
var bottomRadius = options . bottomRadius ;:==:var slices:==:defaultValue ( options . slices , 128 ) ;
var sources = this . sources ;:==:var len:==:sources . length ;
var Plugin = imports . Plugin ;:==:var immediate:==:imports . immediate ;
var createExpressionStatement = parseTreeFactory . createExpressionStatement ;:==:var createFalseLiteral:==:parseTreeFactory . createFalseLiteral ;
var applicableDataViewMappings = options . applicableDataViewMappings ;:==:var roleKindByQueryRef:==:options . roleKindByQueryRef ;
var chart = me . chart ;:==:var data:==:chart . data ;
var Dimensions = require ( ' Dimensions ' ) ;:==:var elementBox:==:require ( ' elementBox ' ) ;
var g = gSlider . value ( ) ;:==:var b:==:bSlider . value ( ) ;
var touches = event . touches & & event . touches . length ? event . touches : [ event ] ;:==:var e:==:( event . changedTouches & & event . changedTouches [ 0 ] )  |  |  touches [ 0 ] ;
var flattenStyle = require ( ' flattenStyle ' ) ;:==:var merge:==:require ( ' merge ' ) ;
var h = window . innerHeight > document . body . clientHeight ? window . innerHeight - document . body . clientHeight + 10 : undefined ;:==:var s:==:document . body . scrollHeight ;
var a = parseInt ( data . a  |  |  0 ) ;:==:var b:==:parseInt ( data . b  |  |  0 ) ;
var list = new fastList ( listContainer , source ) ;:==:var scheduler:==:fastList . scheduler ;
var log = require ( dirs . core + ' log ' ) ;:==:var async:==:require ( ' async ' ) ;
var helpers = Chart . helpers ;:==:var plugins:==:Chart . plugins ;
var dictionaryPrevCodes = lzwState . dictionaryPrevCodes ;:==:var codeLength:==:lzwState . codeLength ;
var uiSelect = angular . element ( element [ 0 ] . querySelector ( ' . ui - select - container ' ) ) . controller ( ' uiSelect ' ) ;:==:var choices:==:angular . element ( element [ 0 ] . querySelector ( ' . ui - select - choices ' ) ) ;
var object = options . object ;:==:var property:==:options . property ;
var NULL    = C . NULL    = 0x9 ;:==:var STRING:==:C . STRING     0xa ;
var filename = options . filename  |  |  ' xmind . xmind ' ;:==:var form:==:document . createElement ( ' form ' ) ;
var clone = require ( ' clone ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var l = utils . readuInt32be ( inp , inOff ) ;:==:var r:==:utils . readuInt32be ( inp , inOff + 4 ) ;
var sinon = require ( ' sinon ' ) ;:==:var util:==:require ( ' util ' ) ;
var loc = moznode . loc , start = loc & & loc . start ;:==:var range:==:moznode . range ;
var orangeA700 = exports . orangeA700 = ' # ff6d00 ' ;:==:var deepOrange50:==:exports . deepOrange50    ' # fbe9e7 ' ;
var create = panel . nodes . create ;:==:var nodes:==:panel . picker . nodes ;
var s = c . sqlinfo ;:==:var tree:==:quadtree ( 0 , 0 , c . gameWidth , c . gameHeight ) ;
var parse = propertyTypes . selector . parse ;:==:var stringify:==:propertyTypes . selector . stringify ;
var from = new Date ( queryString . from ) ;:==:var until:==:new date ( queryString . until ) ;
var pbStreamParser = goog . require ( ' goog . net . streams . pbStreamParser ' ) ;:==:var streamParser:==:goog . require ( ' goog . net . streams . streamParser ' ) ;
var body = document . body ;:==:var clientTop:==:el . clientTop  |  |  body . clientTop  |  |  0 ;
var settings = imports . settings ;:==:var question:==:imports [ ' dialog . question ' ] ;
var c = a . enc _ ;:==:var d:==:c . dqm _ [ a . mb _ [ a . mb_off ] . segment _ ] ;
var username = ( msg . msgData . username   ? msg . msgData . username : null ) ;:==:var credential:==:( msg . msgData . credential ? msg . msgData . credential : null ) ;
var tokenType = traceur . syntax . tokenType ;:==:var assert:==:traceur . assert ;
var body = dialog . find ( ' . modal - body ' ) ;:==:var buttons:==:options . buttons ;
var before = lab . before ;:==:var after:==:lab . after ;
var nakBin = vfsOptions . nakBin ;:==:var nodeBin:==:vfsOptions . nodeBin & & vfsOptions . nodeBin [ 0 ] ;
var path = require ( ' path ' ) ;:==:var minimatch:==:require ( ' minimatch ' ) ;
var orangeA100 = exports . orangeA100 = ' # ffd180 ' ;:==:var orangeA200:==:exports . orangeA200    ' # ffab40 ' ;
var sources = item . sources ;:==:var androidhls:==:model . get ( ' androidhls ' ) ;
var x0 = vertices [ index0 ] ;:==:var x1:==:vertices [ index1 ] ;
var FALSE4 = C . FALSE4 = 0x34 ;:==:var NULL1:==:C . NULL1    0x41 ;
var setTimeout = window . setTimeout ;:==:var clearTimeout:==:window . clearTimeout ;
var FUNCTION_DECLARATION = ' FUNCTION_DECLARATION ' ;:==:var FUNCTION_EXPRESSION:==:' FUNCTION_EXPRESSION ' ;
var options = options  |  |  ;:==:var zindex:==:options . zindex  |  |  beef . dom . getHighestZindex ( ) + 1 ;
var reactTypeOfSideEffect = require ( ' reactTypeOfSideEffect ' ) ;:==:var reactTypeOfWork:==:require ( ' reactTypeOfWork ' ) ;
var feature = features . item ( i ) ;:==:var index:==:selected . indexOf ( feature ) ;
var visibleGroupContainer = this . visibleGroupContainer ;:==:var totalRows:==:this . _ totalRows ;
var pattern = asset . pattern ;:==:var source:==:hexo . source ;
var vsindex = privateDict . vsindex ;:==:var variationProcessor:==:this . _ font . _ variationProcessor ;
var position = Cartesian3 . clone ( camera . position ) ;:==:var up:==:Cartesian3 . clone ( camera . up ) ;
var dfx = cx1 * 0 . 3 + tmpx + dddfx * 0 . 16666667 , dfy = cy1 * 0 . 3 + tmpy + dddfy * 0 . 16666667 ;:==:var i:==:frameIndex * curveTimeline . bezier_size ;
var input = $ ( ' # input ' ) . val ( ) ;:==:var delim:==:$ ( ' # delimiter ' ) . val ( ) ;
var dynCall_viidddddd = Module [ ' dynCall_viidddddd ' ] = asm [ ' dynCall_viidddddd ' ] ;:==:var dynCall_iiiiiiiiii:==:Module [ ' dynCall_iiiiiiiiii ' ]    asm [ ' dynCall_iiiiiiiiii ' ] ;
var matrixWorld = this . matrixWorld ;:==:var threshold:==:raycaster . params . points . threshold ;
var cap = options . cap  |  |  BABYLON . Mesh . NO_CAP ;:==:var invertUV:==:options . invertUV  |  |  false ;
var fieldName = processingState [ stateIndex ] . fieldName ;:==:var col:==:processingState [ stateIndex ] . col ;
var ui = kendo . ui ;:==:var Widget:==:ui . Widget ;
var util = require ( ' util ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var isContentEditableFalse = nodeType . isContentEditableFalse ;:==:var isContentEditableTrue:==:nodeType . isContentEditableTrue ;
var sources = data . sources ;:==:var vertices:==:data . vertices ;
var minimumHeights = wallGeometry . _ minimumHeights ;:==:var maximumHeights:==:wallGeometry . _ maximumHeights ;
var denseMatrix = math . type . denseMatrix ;:==:var complex:==:math . type . complex ;
var data = require ( ' data ' ) ;:==:var jquery:==:require ( ' jquery ' ) ;
var startPixel = this . startPixel _ ;:==:var endPixel:==:this . endPixel _ ;
var element = this . element , that = this , new_step = this . _ currentStep - 1 ;:==:var o:==:this . options ;
var clearCoatRoughness = this . clearCoatRoughness ? this . clearCoatRoughness . buildCode ( builder , ' fv1 ' ) : undefined ;:==:var reflectivity:==:this . reflectivity ? this . reflectivity . buildCode ( builder , ' fv1 ' ) : undefined ;
var baz = ' baz inner ' ;:==:var goo:==:' goo ' ;
var members = imports . members ;:==:var chat:==:imports . chat ;
var mass = cell . mass ;:==:var t:==:Math . PI * Math . PI ;
var a = Fn . bitValue ( 0 ) ;:==:var b:==:fn . bitValue ( 2 ) ;
var adoc = ' _ i d ' : ' adoc ' ;:==:var newdoc:==:' _ i d ' : ' newdoc ' ;
var Util = sharedUtil . util ;:==:var info:==:sharedUtil . info ;
var phase = this . phase ;:==:var pcm:==:this . pcm . samples [ ch ] ;
var simManager = window . parent . simManager ;:==:var common:==:window . parent . common ;
var enumExtensions = jsCommon . enumExtensions ;:==:var pixelConverter:==:jsCommon . pixelConverter ;
var length = this . length ;:==:var _ input:==:this . _ input ;
var session = e . session ;:==:var iframe:==:session . iframe ;
var expensiveChecks = options . expensiveChecks ;:==:var getterFnCache:==:( expensiveChecks ? getterFnCacheExpensive : getterFnCacheDefault ) ;
var join = require ( ' path ' ) . join ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var Seq = Immutable . Seq ;:==:var Map:==:Immutable . Map ;
var scrollLeft = _ props2 . scrollLeft ;:==:var scrollToColumn:==:_ props2 . scrollToColumn ;
var custom_proxy_proc = $ ( ' # custom_proxy_proc ' ) . val ( ) ;:==:var custom_proxy_addr:==:$ ( ' # custom_proxy_addr ' ) . val ( ) ;
var fps = option . fps ;:==:var container:==:option . container ;
var comprehensionList = this . transformList ( tree . comprehensionList ) ;:==:var expression:==:this . transformAny ( tree . expression ) ;
var connectSeparated = this . dygraph _ . getOption ( ' connectSeparatedPoints ' , setName ) ;:==:var axis:==:this . dygraph _ . axisPropertiesForSeries ( setName ) ;
var tokenType = traceur . syntax . tokenType ;:==:var createArgumentList:==:parseTreeFactory . createArgumentList ;
var x = xOff ;:==:var y:==:yOff + p . map ( v , 0 , vAligns . length - 1 , 10 , p . height - 10 ) ;
var htmlContentElement = scope . wrappers . htmlContentElement ;:==:var htmlShadowElement:==:scope . wrappers . htmlShadowElement ;
var child = children [ i ] ;:==:var attributes:==:child . attributes ;
var modelMatrix = billboardCollection . modelMatrix ;:==:var position:==:this . _ position ;
var r = from . r + ( to . r - from . r ) * p . progress ;:==:var g:==:from . g + ( to . g - from . g ) * p . progress ;
var name = $ interpolate ( attrs . uiView  |  |  attrs . name  |  |  '' ) ( scope ) ;:==:var inherited:==:element . inheritedData ( ' $ uiView ' ) ;
var event = track . event ( ) ;:==:var category:==:this . _ category  |  |  props . category  |  |  ' All ' ;
var Unit = math . type . Unit ;:==:var Fraction:==:math . type . Fraction ;
var apiCredentials = this . apiCredentials ;:==:var url:==:apiCredentials . user_info . url ;
var shader = renderSession . shaderManager . stripShader ;:==:var drawMode:==:( this . drawMode      phaser . rope . triangle_strip ) ? gl . triangle_strip : gl . triangles ;
var container = instance . get ( ' container ' ) ;:==:var contentBox:==:instance . get ( ' contentBox ' ) ;
var async = require ( ' async ' ) ;:==:var http:==:require ( ' http ' ) ;
var createReturnStatement = parseTreeFactory . createReturnStatement ;:==:var createThisExpression:==:parseTreeFactory . createThisExpression ;
var magnitudeSquared = cartesian3 . magnitudeSquared ( scaledSpacePosition ) ;:==:var magnitude:==:math . sqrt ( magnitudeSquared ) ;
var entities = dataSource . entities . values ;:==:var polygon:==:entities [ 0 ] . polygon ;
var assert = util . assert ;:==:var walkthrough:==:util . Module ( ' walkthrough ' ) ;
var attr = props . attr ;:==:var one:==:props . one ;
var mongoose = start . mongoose ;:==:var Schema:==:mongoose . Schema ;
var touchstart = fakeDispatch ( ' touchstart ' , 100 , 0 ) ;:==:var touchmove:==:fakeDispatch ( ' touchmove ' , 100 , 2 ) ;
var form = createElement ( ' form ' ) ;:==:var input:==:createElement ( ' input ' ) ;
var path = require ( ' path ' ) ;:==:var grunt:==:require ( ' grunt ' ) ;
var basename = require ( ' path ' ) . basename ;:==:var windowManager:==:window . server . windowManager ;
var filter = this . filter [ ch ] ;:==:var phase:==:this . phase ;
var texture = child . texture ;:==:var frame:==:texture . frame ;
var instancePrefix = _ ref . instancePrefix ;:==:var labelKey:==:_ ref . labelKey ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var textArrayFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' textArrayFieldTestObject ' ) ) ;
var Range = math . type . Range ;:==:var index:==:math . index ;
var lightGreen100 = exports . lightGreen100 = ' # dcedc8 ' ;:==:var lightGreen200:==:exports . lightGreen200    ' # c5e1a5 ' ;
var FLATTENABLE_KEYS = exports . FLATTENABLE_KEYS = [ ' body ' , ' expressions ' ] ;:==:var FOR_INIT_KEYS:==:exports . FOR_INIT_KEYS    [ ' left ' , ' init ' ] ;
var cols = dispPos . cols ;:==:var rows:==:dispPos . rows ;
var System = this . baseSystem ;:==:var loader:==:this . loader    system . clone ( ) ;
var clockIdentifiers = globalization . clockIdentifiers ;:==:var dateTimeFormatter:==:globalization . dateTimeFormatting . dateTimeFormatter ;
var superExpression = traceur . syntax . trees . superExpression ;:==:var superTransformer:==:traceur . codegeneration . superTransformer ;
var edgeInternalType = snapshot . _ edgeInternalType ;:==:var edgeFieldsCount:==:snapshot . _ edgeFieldsCount ;
var parseqs = _ dereq _ ( ' parseqs ' ) ;:==:var inherit:==:_ dereq _ ( ' component - inherit ' ) ;
var atNameExpression = traceur . syntax . trees . atNameExpression ;:==:var awaitStatement:==:traceur . syntax . trees . awaitStatement ;
var stringify = _ _ webpack_require _ _ ( 11 ) . stringify ;:==:var extend:==:_ _ webpack_require _ _ ( 5 ) . extend ;
var bridge = imports . bridge ;:==:var client:==:imports [ ' bridge . client ' ] ;
var isScrollingChange = _ props7 . isScrollingChange ;:==:var width:==:_ props7 . width ;
var type = result . type ;:==:var value:==:result . value  |  |  ;
var clone = require ( ' clone ' ) ;:==:var fs:==:require ( ' co - fs - extra ' ) ;
var theme = params . theme ;:==:var i d:==:params . i d ;
var os = require ( ' os ' ) ;:==:var platform:==:os . platform ( ) ;
var origin = definition . origin ;:==:var align:==:definition . align ;
var update = aggregator . _ update ;:==:var movement:==:aggregator . _ movement ;
var yellow600 = exports . yellow600 = ' # fdd835 ' ;:==:var yellow700:==:exports . yellow700    ' # fbc02d ' ;
var object = goog . require ( ' goog . object ' ) ;:==:var testSuite:==:goog . require ( ' goog . testing . testSuite ' ) ;
var list = Parsers . list ;:==:var seq:==:Parsers . seq ;
var isGlobalModerator = results . isGlobalModerator ;:==:var isModerator:==:results . isModerator ;
var i d = normalizeModule ( parentId , i d ) ;:==:var module:==:require . modules [ i d ] ;
var column = options . column ;:==:var path:==:options . path ;
var green = Color . floatToByte ( this . green ) ;:==:var blue:==:color . floatToByte ( this . blue ) ;
var decodeOffsets = decodeParams . decodeOffsets ;:==:var decodeScales:==:decodeParams . decodeScales ;
var srcRGB = ( ' srcRGB ' in value ? value . srcRGB : value . src ) ;:==:var srcAlpha:==:( ' srcAlpha ' in value ? value . srcAlpha : value . src ) ;
var Menu = imports . Menu ;:==:var ace:==:imports . ace ;
var matrix = math . matrix ;:==:var partitionSelect:==:math . partitionSelect ;
var y2 = this . y2 _ ;:==:var align:==:this . align _ ;
var debug = require ( ' debug ' ) ( ' dcf ' ) ;:==:var format:==:require ( ' format ' ) ;
var account = this . account = Factory ( ' account ' , accOverrides ) ;:==:var calendar:==:this . calendar    factory ( ' calendar ' , calOverrides ) ;
var config = this . viz . config ;:==:var offset:==:config . offset ;
var candle = _ . first ( candles ) ;:==:var spy:==:sinon . spy ( ) ;
var settings = imports . settings ;:==:var experimental:==:imports [ ' preferences . experimental ' ] ;
var ui = imports . ui ;:==:var Plugin:==:imports . Plugin ;
var holderSettings = renderSettings . holderSettings ;:==:var engineSettings:==:renderSettings . engineSettings ;
var axisIndex = seriesModel . get ( dimNames . axisIndex ) ;:==:var axisId:==:seriesModel . get ( dimNames . axisId ) ;
var type = message . type ;:==:var payload:==:message . payload ;
var data = this . data ;:==:var viewport:==:options . viewport ;
var nextCode = lzwState . nextCode ;:==:var dictionaryValues:==:lzwState . dictionaryValues ;
var debug = require ( ' debug ' ) ( ' analytics . js : normalize ' ) ;:==:var defaults:==:require ( ' defaults ' ) ;
var errors = require ( ' restify - errors ' ) ;:==:var filed:==:require ( ' filed ' ) ;
var before = helper . before ;:==:var test:==:helper . test ;
var isCompressed = ( texture & & texture . isCompressedTexture ) ;:==:var isDataTexture:==:( texture . image [ 0 ] & & texture . image [ 0 ] . isDataTexture ) ;
var g = ASN1HEX . getVbyList ( info . algparam , 0 , [ 2 ] , ' 02 ' ) ;:==:var y:==:asn1hex . gethexofv_atobj ( info . keyhex , 0 ) ;
var size = settings . size ;:==:var font:==:' bold ' + ( settings . mSize * size ) + ' px ' + settings . fontname ;
var cache = imports [ ' vfs . cache ' ] ;:==:var passport:==:imports . passport ;
var height = rect . height ;:==:var width:==:rect . width ;
var cos = Math . cos ( radians ) ;:==:var sin:==:Math . sin ( radians ) ;
var frameState = scene . frameState ;:==:var camera:==:scene . camera ;
var isFile = _ . isFile ;:==:var readFileSync:==:fs . readFileSync ;
var datefield = TICK_PLACEMENT [ granularity ] . datefield ;:==:var step:==:TICK_PLACEMENT [ granularity ] . step ;
var predefinedName = traceur . syntax . predefinedName ;:==:var setAccessor:==:traceur . syntax . trees . setAccessor ;
var store = cursorTx . objectStore ( ' store ' ) ;:==:var index:==:store . getIndex ( ' index ' ) ;
var groupItems = this . _ groupItems ;:==:var groupKeys:==:this . _ groupKeys ;
var key = this . keyFromPublic ( pub ) ;:==:var h:==:this . hashInt ( sig . rencoded ( ) , key . pubBytes ( ) , message ) ;
var y = defaultValue ( viewport . y , 0 . 0 ) ;:==:var width:==:defaultValue ( viewport . width , 0 . 0 ) ;
var legendItem = legenditems_1 [ _ i ] ;:==:var dataPoint:==:legendItem . dataPoint ;
var center = geometry . boundingSpherecv . center ;:==:var x:==:center . x ;
var util = imports . util ;:==:var metrics:==:imports . metrics ;
var normals   = opts & & opts . normals ! = = undefined ? opts . normals : null ;:==:var tangents:==:opts & & opts . tangents !    undefined ? opts . tangents : null ;
var jsdoc = require ( ' gulp - jsdoc3 ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var docs = o . docs ;:==:var rawIds:==:o . rawIds ;
var key = ' a - cache - key ' ;:==:var gltfCache:==:model . _ gltfCache ;
var v1Comp = v1CompParser . exec ( v1Sub )  |  |  [ '' , '' , '' ] ;:==:var v2Comp:==:v2CompParser . exec ( v2Sub )  |  |  [ '' , '' , '' ] ;
var center = viewState . center ;:==:var projection:==:viewState . projection ;
var stream = this . _ font . stream ;:==:var pos:==:stream . pos ;
var FOR_STATEMENT = ' FOR_STATEMENT ' ;:==:var FORMAL_PARAMETER:==:' FORMAL_PARAMETER ' ;
var v = $ ( ' # testForm12 ' ) . validate ( ) ;:==:var e:==:$ ( ' # testForm12text ' ) ;
var b = element . find ( ' b ' ) ;:==:var i:==:element . find ( ' i ' ) ;
var suffix = options . suffix  |  |  '' ;:==:var separator:==:options . hasOwnProperty ( ' separator ' ) ? options . separator : ' , ' ;
var w = shape . getAttribute ( ' w ' ) ;:==:var h:==:shape . getAttribute ( ' h ' ) ;
var inherit = _ dereq _ ( ' component - inherit ' ) ;:==:var debug:==:_ dereq _ ( ' debug ' ) ( ' engine . io - client : websocket ' ) ;
var default_proxy_server_proc = background . unblock_youku . default_proxy_server_proc ;:==:var default_proxy_server_addr:==:background . unblock_youku . default_proxy_server_addr ;
var max = cfg . max  |  |  1 ;:==:var from:==:cfg . from  |  |  [ ] ;
var child = ( childLinks [ i ] . source = = = n ) ? childLinks [ i ] . target : childLinks [ i ] . source ;:==:var i d:==:child . i d ;
var utils = des . utils ;:==:var Cipher:==:des . Cipher ;
var debug = require ( ' debug ' ) ( ' nodemon ' ) ;:==:var path:==:require ( ' path ' ) ;
var session = manager . session ;:==:var pointers:==:input . pointers ;
var module = this . props . module ;:==:var member:==:this . props . member ;
var appearCancelled = ref . appearCancelled ;:==:var duration:==:ref . duration ;
var codeMirror = global . codeMirror ;:==:var ace:==:global . ace ;
var dx3 = Math . max ( parseFloat ( mxUtils . getValue ( this . state . style , ' dx2 ' , 0 ) ) , math . min ( parseFloat ( mxUtils . getValue ( this . state . style , ' dx4 ' , 0 ) ) , parseFloat ( mxUtils . getValue ( this . state . style , ' dx3 ' , 0 ) ) ) ) ;:==:var dy3:==:math . max ( 0 , math . min ( 100 , parseFloat ( mxUtils . getValue ( this . state . style , ' dy3 ' , 0 ) ) ) ) ;
var positions = options . positions ;:==:var width:==:options . width ;
var a = foo : 123 , bar : 456 ;:==:var b:==:bar : 789 ;
var O_NOFOLLOW = constants . O_NOFOLLOW  |  |  0 ;:==:var O_RDONLY:==:constants . O_RDONLY  |  |  0 ;
var reactBaseClasses = require ( ' reactBaseClasses ' ) ;:==:var reactChildren:==:require ( ' reactChildren ' ) ;
var nodeFieldCount = this . _ nodeFieldCount ;:==:var containmentEdges:==:this . containmentEdges ;
var path = req . path ;:==:var method:==:req . method ;
var sqExprConverter = powerbi . data . sqExprConverter ;:==:var selector:==:powerbi . data . selector ;
var a = this . curve . a ;:==:var tinv:==:this . curve . tinv ;
var entityName = self . entityName ;:==:var manager:==:self . manager ;
var attribute = node . attributes [ i ] ;:==:var nodeName:==:normalizeAttributeName ( attribute . nodeName ) ;
var dirs = util . dirs ( ) ;:==:var log:==:require ( util . dirs ( ) . core + ' log ' ) ;
var tmp = require ( ' tmp ' ) ;:==:var async:==:require ( ' async ' ) ;
var blue300 = exports . blue300 = ' # 64b5f6 ' ;:==:var blue400:==:exports . blue400    ' # 42a5f5 ' ;
var setAttribute = proto . setAttribute ;:==:var has:==:object . prototype . hasOwnProperty ;
var mode = modes [ kind ]  |  |  modes . html ;:==:var localState:==:last ( state . localStates ) ;
var distanceDisplayConditionProperty = this . _ geometryUpdater . distanceDisplayConditionProperty ;:==:var distanceDisplayCondition:==:distanceDisplayConditionProperty . getValue ( time ) ;
var width = this . attribute ( ' width ' ) . Length . toPixels ( ' x ' ) ;:==:var height:==:this . attribute ( ' height ' ) . length . toPixels ( ' y ' ) ;
var stRotation = polygon . stRotation ;:==:var outlineWidth:==:polygon . outlineWidth ;
var capabilities = this . api . capabilities  |  |  ;:==:var browserName:==:( capabilities . browserName & & capabilities . browserName . toUpperCase ( ) )  |  |  '' ;
var rimraf = require ( ' rimraf ' ) ;:==:var fs:==:require ( ' graceful - fs ' ) ;
var channel = value . channel ;:==:var priority:==:value . priority ;
var expect = require ( ' chai ' ) . expect ;:==:var rollup:==:require ( ' rollup ' ) . rollup ;
var button = this . mapping [ this . data . hand ] . buttons [ evt . detail . i d ] ;:==:var buttonMeshes:==:this . buttonMeshes ;
var atNameExpression = traceur . syntax . trees . atNameExpression ;:==:var atNameDeclaration:==:traceur . syntax . trees . atNameDeclaration ;
var viewPropTypes = require ( ' viewPropTypes ' ) ;:==:var scrollView:==:require ( ' scrollView ' ) ;
var minY = r1 . _ minY < r2 . _ minY ? r1 . _ minY : r2 . _ minY ;:==:var maxX:==:r1 . _ maxX > r2 . _ maxX ? r1 . _ maxX : r2 . _ maxX ;
var unified = require ( ' unified ' ) ;:==:var parse:==:require ( ' remark - parse ' ) ;
var jbig2Image = coreJbig2 . jbig2Image ;:==:var jpegImage:==:coreJpg . jpegImage ;
var frames = this . channel _ . peerWindowObject _ . frames ;:==:var length:==:frames . length ;
var exec = bbPromise . promisify ( child_process . exec ) ;:==:var fs:==:bbPromise . promisifyAll ( require ( ' fs ' ) ) ;
var unwrap = shadowdomPolyfill . unwrap ;:==:var visual:==:shadowdomPolyfill . visual ;
var hoverElements = this . _ hoverElements ;:==:var len:==:hoverElements . length ;
var marked    = editormd . $ marked ;:==:var markdownToc:==:this . markdownToc    [ ] ;
var path = require ( ' path ' ) ;:==:var file:==:require ( ' file ' ) ;
var path = paths [ 0 ] ;:==:var name:==:Path . basename ( path ) ;
var A = db . model ( ' A ' , n : [ age : ' number ' ] ) ;:==:var a:==:new A ( n : [ age : ' 47 ' ] ) ;
var direction = opts . direction  |  |  ' outgoing ' ;:==:var lines:==:parsers . lines ( media ) ;
var lang   = this . lang ;:==:var editor:==:this . editor ;
var symbolRepeat = itemModel . get ( ' symbolRepeat ' ) ;:==:var symbolClip:==:itemModel . get ( ' symbolClip ' ) ;
var x = cx + startOffset [ 0 ] * r ;:==:var y:==:cy + startOffset [ 1 ] * r ;
var left = Math . max ( rect . left * zoomFactor + this . _ margins . left , bodyRect . left * zoomFactor ) ;:==:var top:==:math . max ( rect . top * zoomFactor + this . _ margins . top , bodyRect . top * zoomFactor ) ;
var language = imports . language ;:==:var complete:==:imports [ ' language . complete ' ] ;
var normal = this . normal ? this . normal . buildCode ( builder , ' v3 ' ) : undefined ;:==:var normalScale:==:this . normalScale & & this . normal ? this . normalScale . buildCode ( builder , ' v2 ' ) : undefined ;
var scheduler = instance . get ( ' scheduler ' ) ;:==:var currentTime:==:scheduler . get ( ' currentTimeFn ' ) ;
var decorationColor = getStyleProperty ( item , styleContextStack , ' decorationColor ' , null ) ;:==:var decorationStyle:==:getStyleProperty ( item , styleContextStack , ' decorationStyle ' , null ) ;
var program = gltfRuntime . programs [ technique . program ] ;:==:var states:==:technique . states ;
var output = document . querySelector ( ' output ' ) ;:==:var textarea:==:document . querySelector ( ' textarea ' ) ;
var Interpolation = require ( ' Interpolation ' ) ;:==:var nativeAnimatedHelper:==:require ( ' nativeAnimatedHelper ' ) ;
var thickness = options . thickness  |  |  0 . 5 ;:==:var tessellation:==:options . tessellation  |  |  16 ;
var sprite = sound . _ sprite ;:==:var loop:==:! ! ( sound . _ loop  |  |  self . _ sprite [ sprite ] [ 2 ] ) ;
var force = _ ref9 . force ;:==:var group:==:_ ref9 . group ;
var dynCall_fii = Module [ ' dynCall_fii ' ] = asm [ ' dynCall_fii ' ] ;:==:var dynCall_iii:==:Module [ ' dynCall_iii ' ]    asm [ ' dynCall_iii ' ] ;
var layout = imports . layout ;:==:var Area:==:imports [ ' panels . Area ' ] ;
var a2 = field : ' a2 ' , field2 : 33 ;:==:var a3:==:field : ' a3 ' ;
var w = node . getData ( ' width ' ) ;:==:var h:==:node . getData ( ' height ' ) ;
var colCoordCache = this . colCoordCache ;:==:var slatCoordCache:==:this . slatCoordCache ;
var should = require ( ' should ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var Plugin = imports . Plugin ;:==:var preview:==:imports . preview ;
var PORT = process . env . PORT  |  |  2403 ;:==:var ENV:==:process . env . NODE_ENV  |  |  ' development ' ;
var startcol = tileLayout . startcol ;:==:var startrow:==:tileLayout . startrow ;
var tmp = path . join ( os . tmpdir ? os . tmpdir ( ) : os . tmpDir ( ) , user ) ;:==:var home:==:osenv . home ( ) ;
var gulp = require ( ' gulp ' ) ;:==:var path:==:require ( ' path ' ) ;
var el = this . el ;:==:var geometry:==:this . geometry ;
var output = document . getElementById ( ' output ' ) ;:==:var flag:==:document . getElementById ( ' flag ' ) ;
var template = node . getAttribute ( ' template ' ) ;:==:var resourceType:==:node . getAttribute ( ' resourceType ' ) ;
var d1 = _ addDiv ( ' d1 ' ) , d2 = _ addDiv ( ' d2 ' ) ;:==:var c:==:_ jsPlumb . connect ( source : d1 , target : d2 ) ;
var save = imports . save ;:==:var menus:==:imports . menus ;
var RUNTIME = traceur . syntax . predefinedName . runtime ;:==:var traceur:==:traceur . syntax . predefinedName . traceur ;
var delta = document . querySelector ( ' # delta ' ) ;:==:var buffer:==:document . querySelector ( ' # buffer ' ) ;
var scrollDirection = _ ref . scrollDirection ;:==:var startIndex:==:_ ref . startIndex ;
var pos = w . _ position ;:==:var dim:==:w . _ dimension ;
var pos = geometry . attributes . position . array ;:==:var col:==:geometry . attributes . color . array ;
var type = data . type ;:==:var target:==:data . target ;
var getRangeClientRects = require ( ' getRangeClientRects ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var textStylePropTypes = require ( ' textStylePropTypes ' ) ;:==:var unimplementedView:==:require ( ' unimplementedView ' ) ;
var at = options & & options . at ;:==:var sort:==:( ( options & & options . sort )     null ? true : options . sort ) ;
var columnCount = _ props . columnCount ;:==:var width:==:_ props . width ;
var minute = parseInt ( this . container . find ( ' . left . minuteselect ' ) . val ( ) , 10 ) ;:==:var second:==:this . timePickerSeconds ? parseInt ( this . container . find ( ' . left . secondselect ' ) . val ( ) , 10 ) : 0 ;
var callbackArguments = getChangingValue ( stub , ' callbackArguments ' ) ;:==:var callbackContext:==:getChangingValue ( stub , ' callbackContexts ' ) ;
var store = core . storeFactory . get ( ' event ' ) ;:==:var provider:==:yield store . providerFor ( event ) ;
var height = _ ref3 . height ;:==:var isScrolling:==:_ ref3 . isScrolling ;
var closed = defaultValue ( options . closed , false ) ;:==:var flat:==:defaultValue ( options . flat , false ) ;
var path = args . path ;:==:var target:==:args . target ;
var navigator = window . navigator ;:==:var arrayBuffer:==:window . arrayBuffer ;
var w = Math . max ( 1 , img . width ) ;:==:var h:==:Math . max ( 1 , img . height ) ;
var assert = referee . assert ;:==:var refute:==:referee . refute ;
var httpServerService = _ appJsServicesHttpServerService [ ' default ' ] ;:==:var shareService:==:_ appJsServicesShareService [ ' default ' ] ;
var util = TogetherJS . require ( ' util ' ) ;:==:var storage:==:TogetherJS . require ( ' storage ' ) ;
var touchstart = isTouch ? ' touchstart ' : ' mousedown ' ;:==:var touchmove:==:isTouch ? ' touchmove ' : ' mousemove ' ;
var Mirror = global . Mirror ;:==:var valueMirror:==:global . valueMirror ;
var pmx = require ( ' pmx ' ) . init ( ) ;:==:var http:==:require ( ' http ' ) ;
var bodyA = this . bodyA ;:==:var bodyB:==:this . bodyB ;
var groupOp = savedFilters [ filterName ] . groupOp ;:==:var rules:==:savedFilters [ filterName ] . rules ;
var moduleVisitor = traceur . codegeneration . module . moduleVisitor ;:==:var exportSymbol:==:traceur . semantics . symbols . exportSymbol ;
var linkButton = _ props3 . linkButton ;:==:var touchRippleColor:==:_ props3 . touchRippleColor ;
var next = this . newBlock ( ' next branch of if ' ) ;:==:var test:==:this . vexpr ( s . test ) ;
var o = other . attributes ;:==:var distance:==:Trig . distance ( x , y , o . x , o . y ) ;
var empty = require ( ' is - empty - object ' ) ;:==:var format:==:require ( ' util ' ) . format ;
var Divider = imports . Divider ;:==:var merge:==:imports . threewaymerge ;
var source = link . source ;:==:var target:==:link . target ;
var createBinaryOperator = parseTreeFactory . createBinaryOperator ;:==:var createBlock:==:parseTreeFactory . createBlock ;
var secondaryTile = windows . ui . startScreen . secondaryTile ;:==:var uri:==:windows . foundation . uri ;
var barHeight = this . _ barHeight ;:==:var timeToPosition:==:this . _ timeToPosition . bind ( this ) ;
var array = ' array ' ;:==:var date:==:' date ' ;
var querystring = require ( ' querystring ' ) ;:==:var async:==:require ( ' async ' ) ;
var Source = debug . Source ;:==:var Breakpoint:==:debug . Breakpoint ;
var assert = require ( ' assert - plus ' ) ;:==:var formidable:==:require ( ' formidable ' ) ;
var dimensions = this . dimensions ;:==:var dimensionInfos:==:this . _ dimensionInfos ;
var Uri = Windows . Foundation . Uri ;:==:var badgeUpdateManager:==:windows . ui . notifications . badgeUpdateManager ;
var fixedDataTableRow = require ( ' fixedDataTableRow . react ' ) ;:==:var fixedDataTableScrollHelper:==:require ( ' fixedDataTableScrollHelper ' ) ;
var evalExpr = ' evalExpr ( ' + args . path + ' . condition , model : model , ' + ' ' arrayIndex ' : $ index , ' + ' ' arrayIndices ' : arrayIndices , ' + ' ' path ' : path , ' + ' ' $ i ' : $ i , ' + ' ' $ index ' : $ index , ' + ' ' modelValue ' : ' + strModel + ' ) ' ;:==:var children:==:args . fieldFrag . children  |  |  args . fieldFrag . childNodes ;
var range = math . range ;:==:var fix:==:math . fix ;
var fs    = require ( ' fs ' ) ;:==:var p:==:require ( ' path ' ) ;
var rect = type : ' rect ' , x : 10 , y : 10 ;:==:var ellipse:==:type : ' ellipse ' , x : 10 , y : 10 ;
var assert = require ( ' assert ' ) ;:==:var pathval:==:require ( ' pathval ' ) ;
var gltf = model . gltf ;:==:var bufferView:==:gltf . bufferViews [ shader . bufferView ] ;
var assert = common . assert ;:==:var fake:==:common . fake . create ( ) ;
var radiusX = p . radiusX ! = null ? p . radiusX : p . radius ;:==:var radiusY:==:p . radiusY !   null ? p . radiusY : p . radius ;
var is = require ( ' is ' ) ;:==:var iso:==:require ( ' to - iso - string ' ) ;
var process = Promise . method ( processor . process ) . bind ( hexo ) ;:==:var source:==:hexo . source ;
var i d = options . i d ;:==:var scale:==:options . scale ;
var x = this . cx + r * Math . cos ( angle ) ;:==:var y:==:this . cy - r * Math . sin ( angle ) ;
var createBreakStatement = parseTreeFactory . createBreakStatement ;:==:var createCallExpression:==:parseTreeFactory . createCallExpression ;
var f = format . substr ( p , 1 ) ;:==:var c:==:fcase . substr ( p , 1 ) ;
var adapter = global . adapter ;:==:var pending:==:adapter . pending ;
var image = images [ i ] ;:==:var width:==:image . width , height    image . height ;
var button = document . createElement ( ' button ' ) ;:==:var state:==:( applet . state      ' 1f01 ' ) ? ' active ' : ' not active ' ;
var num_htrees = out . num_htrees = decodeVarLenUint8 ( br ) + 1 ;:==:var context_map:==:out . context_map    new uint8Array ( context_map_size ) ;
var name = _ ref . name ;:==:var author:==:_ ref . author ;
var x = ( left . x < right . x ) ? left . x : right . x ;:==:var y:==:( left . y < right . y ) ? left . y : right . y ;
var format = _ _ webpack_require _ _ ( 11 ) . format ;:==:var lazy:==:_ _ webpack_require _ _ ( 5 ) . lazy ;
var switchClause = traceur . codegeneration . generator . switchClause ;:==:var tryState:==:traceur . codegeneration . generator . tryState ;
var s1 = helper . getNode ( ' s1 ' ) ;:==:var n2:==:helper . getNode ( ' n2 ' ) ;
var to = codeMirror . indexFromPos ( change . to ) ;:==:var text:==:change . text . join ( ' \n ' ) ;
var Pattern = require ( ' hexo - util ' ) . Pattern ;:==:var moment:==:require ( ' moment - timezone ' ) ;
var buffer = require ( ' vinyl - buffer ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var levelup = _ interopDefault ( require ( ' levelup ' ) ) ;:==:var sublevel:==:_ interopDefault ( require ( ' sublevel - pouchdb ' ) ) ;
var includeSpinner = this . includeSpinner ;:==:var includeBar:==:this . includeBar ;
var sunrise = new Date ( data . sys . sunrise * 1000 ) ;:==:var sunset:==:new Date ( data . sys . sunset * 1000 ) ;
var tracks = item . tracks ;:==:var len:==:tracks & & tracks . length ;
var root = convertPath ( options . root ) ;:==:var args:==:options . args ;
var dynCall_vii = Module [ ' dynCall_vii ' ] = asm [ ' dynCall_vii ' ] ;:==:var dynCall_viiiiiiiii:==:Module [ ' dynCall_viiiiiiiii ' ]    asm [ ' dynCall_viiiiiiiii ' ] ;
var superBlock = challengeSpec . superBlock ;:==:var superOrder:==:challengeSpec . superOrder ;
var headers = ref . headers ;:==:var status:==:ref . status ;
var rowStyle = _ props3 . rowStyle ;:==:var scrollbarWidth:==:this . state . scrollbarWidth ;
var center = [ centerX , centerY ] ;:==:var callback:==:options . callback ? options . callback : ol . nullFunction ;
var length = opt_length  |  |  bytes . length ;:==:var seed:==:opt_seed  |  |  goog . crypt . hash32 . SEED32 ;
var createMemberLookupExpression = parseTreeFactory . createMemberLookupExpression ;:==:var createParenExpression:==:parseTreeFactory . createParenExpression ;
var i d = opts . process_id ;:==:var signal:==:opts . signal ;
var transaction = db . transaction ( this . storeName , ' readwrite ' ) ;:==:var store:==:transaction . objectStore ( this . storeName ) ;
var nameGap = this . get ( ' nameGap ' ) ;:==:var triggerEvent:==:this . get ( ' triggerEvent ' ) ;
var getDomain = promise . _ getDomain ;:==:var async:==:promise . _ async ;
var domRange = api . domRange ;:==:var getBody:==:dom . getBody ;
var dynCall_iiiddddiii = Module [ ' dynCall_iiiddddiii ' ] = asm [ ' dynCall_iiiddddiii ' ] ;:==:var dynCall_viiiiiiiiiii:==:Module [ ' dynCall_viiiiiiiiiii ' ]    asm [ ' dynCall_viiiiiiiiiii ' ] ;
var x = obj . x = = null ? 0 : obj . x ;:==:var x2:==:obj . x2     null ? 1 : obj . x2 ;
var createPostfixExpression = parseTreeFactory . createPostfixExpression ;:==:var createReturnStatement:==:parseTreeFactory . createReturnStatement ;
var escape = utils . escape ;:==:var Date:==:global . Date ;
var stack = new Error ( ) . stack ;:==:var split:==:stack . split ( rline ) ;
var ssl = self . ssl ;:==:var now:==:Timer . now ( ) ;
var canvas = this . canvas ;:==:var ctx:==:this . ctx ;
var gender = req . fields . gender ;:==:var bio:==:req . fields . bio ;
var after = require ( ' after ' ) ;:==:var each:==:require ( ' each ' ) ;
var blockMapBuilder = require ( ' blockMapBuilder ' ) ;:==:var characterMetadata:==:require ( ' characterMetadata ' ) ;
var Deferred = goog . async . Deferred ;:==:var eventHandler:==:goog . events . eventHandler ;
var Gq = this . computeGq ( ) ;:==:var giMf:==:this . computeGiMf ( ) ;
var job = e . job ;:==:var dir:==:path . dirname ( job . fullPath ) ;
var pooledClass = require ( ' pooledClass ' ) ;:==:var reactReconciler:==:require ( ' reactReconciler ' ) ;
var text = _ text  |  |  ' Warning ' ;:==:var position:==:_ position  |  |  ' center ' ;
var notification = require ( ' notification ' ) ;:==:var router:==:require ( ' router ' ) ;
var selection = sample . selectionState ;:==:var empty:==:characterMetadata . empty ;
var firstRowIndex = ( oldState & & oldState . firstRowIndex )  |  |  0 ;:==:var firstRowOffset:==:( oldState & & oldState . firstRowOffset )  |  |  0 ;
var workspace = imports . workspace ;:==:var proc:==:imports . proc ;
var b = math . bignumber ( 2 ) . div ( 3 ) ;:==:var f:==:math . fraction ( b ) ;
var commands = imports . commands ;:==:var analytics:==:imports [ ' c9 . analytics ' ] ;
var modify = require ( ' gulp - modify ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var encoder = typeof options . encoder = = = ' function ' ? options . encoder : defaults . encoder ;:==:var sort:==:typeof options . sort      ' function ' ? options . sort : null ;
var host = url . host ;:==:var path:==:url . path ;
var e = _ e ;:==:var m:==:_ m ;
var jid = this . context . jid ;:==:var wait:==:this . wait ;
var isVisible = evt . detail . isVisible ;:==:var timer:==:this . timer ;
var schema = this . model . schema  |  |  ;:==:var consumes:==:this . model . consumes  |  |  [ ] ;
var ctx = _ bindings$event$i . ctx ;:==:var once:==:_ bindings$event$i . once ;
var options = that . options ;:==:var orientation:==:options . orientation ;
var no = _ no ;:==:var yes:==:_ yes ;
var operatorNode = math . expression . node . operatorNode ;:==:var rangeNode:==:math . expression . node . rangeNode ;
var defineGetter = scope . defineGetter ;:==:var defineWrapGetter:==:scope . defineWrapGetter ;
var line = d3 . svg . line ( ) . interpolate ( ' basis ' ) ;:==:var path:==:g . append ( ' path ' ) . attr ( ' fill ' , ' none ' ) ;
var containedStencil = this . containedStencil ;:==:var connectedShape:==:this . connectedShape ;
var cubicExtrema = curve . cubicExtrema ;:==:var cubicAt:==:curve . cubicAt ;
var name = packageSource . name ;:==:var version:==:packageSource . version ;
var totalWeight = node . totalWeight * samplingRate ;:==:var selfWeight:==:node . selfWeight * samplingRate ;
var assert = require ( ' assert ' ) ;:==:var constantinople:==:require ( ' constantinople ' ) ;
var outputTexture = computeCommand . outputTexture ;:==:var width:==:outputTexture . width ;
var ARROW_FUNCTION_EXPRESSION = ' ARROW_FUNCTION_EXPRESSION ' ;:==:var ASSIGNMENT_ELEMENT:==:' ASSIGNMENT_ELEMENT ' ;
var Given = this . Given = ;:==:var When:==:this . When    ;
var wiredep = require ( ' wiredep ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var bpc = this . bpc ;:==:var needsDecode:==:this . needsDecode ;
var pins = io . pins . slice ( ) ;:==:var length:==:pins . length ;
var gulp = require ( ' gulp ' ) ;:==:var run:==:require ( ' run - sequence ' ) ;
var legendPosition = powerbi . visuals . legendPosition ;:==:var colorHelper:==:powerbi . visuals . colorHelper ;
var animation = this . _ animation ;:==:var paused:==:this . paused ;
var message = angular . element ( dom [ 0 ] . querySelector ( ' . md - input - message - animation ' ) ) ;:==:var messages:==:$ $ mdInput . messages . getElement ( message ) ;
var COLOR_INDEX = pointPrimitive . color_index ;:==:var outline_color_index:==:pointPrimitive . outline_color_index ;
var assert = require ( ' assert ' ) ;:==:var net:==:require ( ' net ' ) ;
var contexts = this . contexts ;:==:var len:==:contexts . length ;
var path = require ( ' path ' ) ;:==:var s:==:require ( ' underscore . string ' ) ;
var domException = api . domException ;:==:var isCharacterDataNode:==:dom . isCharacterDataNode ;
var proto = testSet [ i ] . proto ;:==:var funcs:==:testSet [ i ] . funcs ;
var _ memset = Module [ ' _ memset ' ] = asm [ ' _ memset ' ] ;:==:var runPostSets:==:module [ ' runPostSets ' ]    asm [ ' runPostSets ' ] ;
var height = el . height ( ) ;:==:var width:==:el . width ( ) ;
var loadStrings = p5 . prototype . loadStrings ;:==:var loadxml:==:p5 . prototype . loadxml ;
var eventEmitter = exports . eventEmitter = function ( ) ;:==:var toString:==:object . prototype . toString ;
var success = options . success ;:==:var attributes:==:this . attributes ;
var offsetNF = this . morph . _ offsetNF ;:==:var offsetTF:==:this . morph . _ offsetTF ;
var assert = require ( ' assert - plus ' ) ;:==:var restify:==:require ( ' restify ' ) ;
var topic_id = _ . trim ( req . body . topic_id ) ;:==:var title:==:_ . trim ( req . body . title ) ;
var text = el . textContent ;:==:var serviceToPlugin:==:architectApp . serviceToPlugin ;
var fs = require ( ' then - fs ' ) ;:==:var path:==:require ( ' path ' ) ;
var spy = sinon . spy ( ) ;:==:var marker:==:L . marker ( [ 0 , 0 ] , icon : new L . divIcon ( ) ) . addTo ( map ) ;
var setName = this . setNames [ setIdx ] ;:==:var connectSeparated:==:this . dygraph _ . getOption ( ' connectSeparatedPoints ' , setName ) ;
var rot = array [ j ] . rotation ;:==:var interpolation:==:array [ j ] . interpolation ;
var a = this . a ;:==:var b:==:this . b ;
var tolerance = opts . tolerance = = = undefined ? 0 . 001 : opts . tolerance ;:==:var threshold:==:opts . threshold      undefined ? 0 . 1 : opts . threshold ;
var secondary = props . secondary ;:==:var style:==:props . style ;
var motionArgs = inputState . motionArgs  |  |  ;:==:var operator:==:inputState . operator ;
var $ element = this . $ element ;:==:var $ attrs:==:this . $ attrs ;
var tok = decodeCss ( tokens [ i ] ) ;:==:var len:==:tok . length ;
var tryCatch = tryCatchUtils . tryCatch , errorObj = tryCatchUtils . errorObj ;:==:var inherits:==:require ( ' inherits ' ) ;
var unflattenl = util . unflattenl ;:==:var createMakeNodeFunction:==:util . createMakeNodeFunction ;
var clone = require ( ' gulp - clone ' ) ;:==:var plumber:==:require ( ' gulp - plumber ' ) ;
var unsafeUnwrap = scope . unsafeUnwrap ;:==:var wrap:==:scope . wrap ;
var changed = this . changed ;:==:var prev:==:this . _ previousAttributes ;
var width = parseInt ( $ ( this . box ) . width ( ) ) ;:==:var height:==:parseInt ( $ ( this . box ) . height ( ) ) ;
var should = require ( ' should ' ) ;:==:var mm:==:require ( ' mm ' ) ;
var mcc = self . _ iccSettings . mcc ;:==:var mnc:==:self . padLeft ( self . _ iccSettings . mnc , 2 ) ;
var y = this . y ;:==:var cos:==:Math . cos ( radians ) ;
var rowsMax = _ props . rowsMax ;:==:var shadowStyle:==:_ props . shadowStyle ;
var name = input . name ;:==:var pkg:==:input . pkg ;
var magFilter = ( data . magFilter ) ? data . magFilter : gl . linear ;:==:var minFilter:==:( data . minFilter ) ? data . minFilter : gl . linear ;
var rtcSessionDescription = window . mozrtcSessionDescription  |  |  window . rtcSessionDescription ;:==:var rtcIceCandidate:==:window . mozrtcIceCandidate  |  |  window . rtcIceCandidate ;
var _ memmove = Module [ ' _ memmove ' ] = asm [ ' _ memmove ' ] ;:==:var _ memset:==:Module [ ' _ memset ' ]    asm [ ' _ memset ' ] ;
var b = new functionNode ( a , [ new symbolNode ( ' y ' ) ] ) ;:==:var n:==:new functionAssignmentNode ( ' f ' , [ ' x ' , ' y ' ] , b ) ;
var Status = goog . net . streams . xhrStreamReader . status ;:==:var readyState:==:goog . net . xmlHttp . readyState ;
var pow = stdlib . Math . pow ;:==:var imul:==:stdlib . Math . imul ;
var uuid = require ( ' node - uuid ' ) ;:==:var mongoose:==:require ( ' mongoose ' ) ;
var res = result . rows . item ( i ) ;:==:var metadata:==:JSON . parse ( res . metadata ) ;
var number = util . number ;:==:var isArray:==:array . isArray ;
var x = q . x ( ) ;:==:var y:==:q . y ( ) ;
var canvas = this . canvas ;:==:var stage:==:this . stage ;
var _ main = Module [ ' _ main ' ] = asm [ ' _ main ' ] ;:==:var _ testSetjmp:==:module [ ' _ testSetjmp ' ]    asm [ ' _ testSetjmp ' ] ;
var models = _ _ alloyId14 . models ;:==:var len:==:models . length ;
var Easing = require ( ' Easing ' ) ;:==:var nativeMethodsMixin:==:require ( ' nativeMethodsMixin ' ) ;
var groups = this . style . _ groups ;:==:var isOpaquePass:==:options . isOpaquePass ;
var s = this . canvas . getSize ( ) ;:==:var w:==:s . width , h    s . height ;
var color = this . color ;:==:var canvasGraphicsFactory:==:this . canvasGraphicsFactory ;
var button = _ context$muiTheme . button ;:==:var raisedButton:==:_ context$muiTheme . raisedButton ;
var bottomMarginLimit = this . bottomMarginLimit ;:==:var leftRightMarginLimit:==:this . leftRightMarginLimit ;
var element = animationDetails . element ;:==:var event:==:animationDetails . event ;
var invalidAlgorithmError = errs . invalidAlgorithmError ;:==:var keyParseError:==:errs . keyParseError ;
var trigger = this . arg ( ' trigger ' ) ;:==:var layout:==:this . arg ( ' layout ' )  |  |  ' standard ' ;
var dirty = this . _ dirtyStyleProperties  |  |  ( this . _ dirtyStyleProperties = ) ;:==:var style:==:this . element . style ;
var u = ( ( Math . abs ( uv . x * uvScale . x + uvOffset . x ) * heightMapWidth ) % heightMapWidth )  |  0 ;:==:var v:==:( ( math . abs ( uv . y * uvScale . y + uvOffset . y ) * heightMapHeight ) % heightMapHeight )  |  0 ;
var Service = _ fxosMvcDistMvc . service ;:==:var app:==:_ appJsModelsApp [ ' default ' ] ;
var watcher = imports . watcher ;:==:var reportError:==:imports . error_handler . reportError ;
var ensurePositiveDelayProps = require ( ' ensurePositiveDelayProps ' ) ;:==:var processColor:==:require ( ' processColor ' ) ;
var visualMin = nodeModel . get ( ' visualMin ' ) ;:==:var visualMax:==:nodeModel . get ( ' visualMax ' ) ;
var feature = features [ f ] ;:==:var geometry:==:feature . geometry ;
var mime = require ( ' mime - types ' ) ;:==:var asynckit:==:require ( ' asynckit ' ) ;
var content = info . content ;:==:var gradients:==:this . gradientsFromcssProperty ( content , caret ) ;
var template = angular . element ( templates [ i ] ) ;:==:var i d:==:template . attr ( ' i d ' ) ;
var titleColor = _ props . titleColor ;:==:var titleStyle:==:_ props . titleStyle ;
var importDeclaration = traceur . syntax . trees . importDeclaration ;:==:var labelledStatement:==:traceur . syntax . trees . labelledStatement ;
var upgradeWithDefinition = scope . upgradeWithDefinition ;:==:var implementPrototype:==:scope . implementPrototype ;
var stripHTML = util . stripHTML ;:==:var escapeHTML:==:util . escapeHTML ;
var mockmatchers = goog . require ( ' goog . testing . mockmatchers ' ) ;:==:var parallelClosureTestSuite:==:goog . require ( ' goog . testing . parallelClosureTestSuite ' ) ;
var f8Colors = require ( ' f8Colors ' ) ;:==:var f8InfoView:==:require ( ' f8InfoView ' ) ;
var img = self . data [ idx ] [ 7 ]  |  |  self . img_sets [ img_set ] . path + idx + ' . png ' + self . img_suffix ;:==:var title:==:self . include_title ? ' title ' ' + ( actual  |  |  self . data [ idx ] [ 3 ] [ 0 ] ) + ' ' ' : '' ;
var torrent = that . model . get ( ' torrent ' ) ;:==:var file:==:parseInt ( $ ( e . currentTarget ) . attr ( ' data - file ' ) ) ;
var name = attr . name ;:==:var value:==:attr . value ;
var fmt = require ( ' fmt ' ) ;:==:var foldl:==:require ( ' foldl ' ) ;
var southeastChild = tile . southeastChild ;:==:var northwestChild:==:tile . northwestChild ;
var touchRippleOpacity = _ props3 . touchRippleOpacity ;:==:var onBlur:==:_ props3 . onBlur ;
var length = entryStartTimes . length ;:==:var minimumBoundary:==:this . _ dataProvider . minimumBoundary ( ) ;
var h = div2 . height ( ) ;:==:var w:==:div2 . width ( ) ;
var COMMENT_NODE     = nodeType . comment_node     = 8 ;:==:var document_node:==:nodeType . document_node       9 ;
var block = this . block _ ;:==:var blockLength:==:this . blockLength _ ;
var count = Math . max ( 0 , parseInt ( countEl . attr ( ' data - replies ' ) , 10 ) + inc ) ;:==:var timestamp:==:replyCount . find ( ' . timeago ' ) . attr ( ' title ' , post . timestampiso ) ;
var createGeometryResults = parameters . createGeometryResults ;:==:var length:==:createGeometryResults . length ;
var Person = db . model ( ' gh4261 ' , personSchema ) ;:==:var blogPost:==:db . model ( ' gh4261_0 ' , blogPostSchema ) ;
var isObject = angular . isObject ;:==:var isUndefined:==:angular . isUndefined ;
var path = require ( ' path ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var BINARY_EXPRESSION = ' BINARY_EXPRESSION ' ;:==:var BINDING_ELEMENT:==:' BINDING_ELEMENT ' ;
var isClockWise = shapeUtils . isClockWise ;:==:var subPaths:==:this . subPaths ;
var path = require ( ' path ' ) ;:==:var temp:==:require ( ' temp ' ) . track ( ) ;
var hyperglue = require ( ' hyperglue ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var REJECTED = [ ' REJECTED ' ] ;:==:var FULFILLED:==:[ ' FULFILLED ' ] ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var align = dom . align . value ;:==:var baseline:==:dom . baseline . value ;
var createCatch = parseTreeFactory . createCatch ;:==:var createDefaultClause:==:parseTreeFactory . createDefaultClause ;
var p = playPropsConfig . prototype = ;:==:var s:==:playPropsConfig ;
var components = material . _ template . components ;:==:var source:==:material . _ template . source ;
var IMPORT_LINK_TYPE = scope . IMPORT_LINK_TYPE ;:==:var IMPORT_SELECTOR:==:scope . IMPORT_SELECTOR ;
var prefilteredCubeMap128 = this . prefilteredCubeMap128  |  |  globalSky128 ;:==:var prefilteredCubeMap64:==:this . prefilteredCubeMap64  |  |  globalSky64 ;
var w = c . width ;:==:var h:==:c . height ;
var option = document . createElement ( ' option ' ) ;:==:var streamResolution:==:new streamResolutionHelper ( properties ) ;
var elementIndex = directiveRecord . directiveIndex . elementIndex ;:==:var t:==:new bindingTarget ( directive , elementIndex , propertyName , null , ast . toString ( ) ) ;
var settings    = this . settings ;:==:var toolbar:==:this . toolbar ;
var pub = keys . pub ;:==:var sec:==:keys . sec ;
var change = changes . pop ( ) ;:==:var fileDesc:==:change . fileDesc ;
var r = require ;:==:var vertx:==:r ( ' vertx ' ) ;
var row = row_col [ 0 ] ;:==:var col:==:row_col [ 1 ] ;
var isDefined = leafletHelpers . isDefined ;:==:var isFunction:==:leafletHelpers . isFunction ;
var eventListener = require ( ' eventListener ' ) ;:==:var cancelAnimationFramePolyfill:==:require ( ' cancelAnimationFramePolyfill ' ) ;
var r1 = this . r1 ;:==:var r2:==:this . r2 ;
var nestedKey = db . model ( ' nestedKey ' , nestedKeySchema ) ;:==:var n:==:new nestedKey ( ) ;
var createThisExpression = parseTreeFactory . createThisExpression ;:==:var createThrowStatement:==:parseTreeFactory . createThrowStatement ;
var bar2 = angular . element ( element [ 0 ] . querySelector ( ' . md - bar2 ' ) ) ;:==:var container:==:angular . element ( element [ 0 ] . querySelector ( ' . md - container ' ) ) ;
var cropped = this . cropped & & cropBox ;:==:var initialCanvas:==:this . initialCanvas  |  |  canvas ;
var hitPointWorld = intersectheightfield_hitpointworld ;:==:var worldNormal:==:intersectheightfield_worldnormal ;
var React = require ( ' React ' ) ;:==:var appState:==:require ( ' appState ' ) ;
var tabIndex = _ props4 . tabIndex ;:==:var width:==:_ props4 . width ;
var x = csul . x - unul . x ;:==:var y:==:csul . y - unul . y ;
var tooltip = this . $ ( ' . ui - tooltip - top ' ) ;:==:var val:==:this . input . val ( ) ;
var sessionid = params . sessionid ;:==:var autoCloseEntireSession:==:params . autoCloseEntireSession ;
var dockableWidget = imports . dockableWidget ;:==:var dockableAbsoluteRenderer:==:imports . dockableAbsoluteRenderer ;
var LN10 = stdlib . Math . LN10 ;:==:var LN2:==:stdlib . Math . LN2 ;
var south = Math . max ( rectangle1 . south , rectangle2 . south ) ;:==:var east:==:Math . min ( rectangle1 . east , rectangle2 . east ) ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactdomSelect:==:require ( ' reactdomSelect ' ) ;
var rowPositionGetter = props . rowPositionGetter ;:==:var rowsToRender:==:this . state . rowsToRender ;
var pos = arguments [ 0 ] . pos ? arguments [ 0 ] . pos : arguments [ 1 ] ;:==:var synsetOffset:==:arguments [ 0 ] . synsetOffset ? arguments [ 0 ] . synsetOffset : arguments [ 0 ] ;
var status = resp . httpResponse . statusCode ;:==:var params:==:require ( ' util ' ) . inspect ( req . params , true , null ) ;
var Unit = math . type . Unit ;:==:var max:==:math . max ;
var s = new symbolNode ( ' sqrt ' ) ;:==:var a:==:new constantNode ( 2 ) ;
var domPropertyOperations = require ( ' domPropertyOperations ' ) ;:==:var reactControlledValuePropTypes:==:require ( ' reactControlledValuePropTypes ' ) ;
var pfx = options . pfx ;:==:var passphrase:==:options . passphrase ;
var path = e . data . path ;:==:var identifiers:==:e . data . identifiers ;
var syntheticFocusEvent = require ( ' syntheticFocusEvent ' ) ;:==:var syntheticKeyboardEvent:==:require ( ' syntheticKeyboardEvent ' ) ;
var slide = slides [ index ] ;:==:var style:==:slide & & slide . style ;
var rtcIceCandidate = window . rtcIceCandidate  |  |  window . mozrtcIceCandidate ;:==:var mediaStreamTrack:==:window . mediaStreamTrack ;
var sshpk = require ( ' sshpk ' ) ;:==:var util:==:require ( ' util ' ) ;
var params = this . _ params ;:==:var len:==:params . length ;
var dataViewObjects = powerbi . dataViewObjects ;:==:var appendClearCatcher:==:powerbi . visuals . appendClearCatcher ;
var location = el . attr ( ' data - location ' ) ;:==:var area:==:el . children ( ' . widget - area ' ) ;
var width = defaultValue ( options . width , 0 ) ;:==:var height:==:defaultValue ( options . height , 0 ) ;
var t = $ ( target ) . offset ( ) . top ;:==:var h:==:$ wrapper . height ( ) ;
var acorn = require ( ' acorn ' ) ;:==:var escodegen:==:require ( ' escodegen ' ) ;
var caret = kendo . caret ;:==:var keys:==:kendo . keys ;
var expandMemberExpression = traceur . codegeneration . expandMemberExpression ;:==:var createArgumentList:==:parseTreeFactory . createArgumentList ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var filter:==:require ( ' gulp - filter ' ) ;
var string = _ react$PropTypes . string ;:==:var func:==:_ react$PropTypes . func ;
var depth = options . depth  |  |  options . size  |  |  1 ;:==:var sideOrientation:==:( options . sideOrientation      0 ) ? 0 : options . sideOrientation  |  |  babylon . mesh . defaultside ;
var concat = require ( ' gulp - concat ' ) ;:==:var sass:==:require ( ' gulp - sass ' ) ;
var tealA400 = exports . tealA400 = ' # 1de9b6 ' ;:==:var tealA700:==:exports . tealA700    ' # 00bfa5 ' ;
var x = u . x - v . x ;:==:var y:==:u . y - v . y ;
var fs = Npm . require ( ' fs ' ) ;:==:var path:==:Npm . require ( ' path ' ) ;
var getColWidth = t . getColWidth ;:==:var getSnapHeight:==:t . getSnapHeight ;
var sql = tmp . sql ;:==:var cql:==:tmp . cql ;
var temporal = require ( ' temporal ' ) ;:==:var readline:==:require ( ' readline ' ) ;
var client = this . client ;:==:var protocol:==:this . protocol ;
var notification = _ ref . notification ;:==:var destination:==:_ ref . destination ;
var tryState = traceur . codegeneration . generator . tryState ;:==:var yieldState:==:traceur . codegeneration . generator . yieldState ;
var send = $ scope . send ;:==:var recipient:==:send . recipient_actual  |  |  send . recipient_address ;
var metadata = this . providers . metadata ;:==:var torrents:==:this . providers . torrents ;
var container = self . container ;:==:var minContainerWidth:==:number ( options . minContainerWidth )  |  |  200 ;
var ace = imports . ace ;:==:var ui:==:imports . ui ;
var now = hawk . utils . now ( options . localtimeOffsetMsec ) ;:==:var credentials:==:options . credentials ;
var head = $ ( ' head , body ' ) [ 0 ] ;:==:var style:==:document . createElement ( ' style ' ) ;
var scroll = this . $ vbox ? ' scrollWidth ' : ' scrollHeight ' ;:==:var offset:==:this . $ vbox ? ' offsetWidth ' : ' offsetHeight ' ;
var mom = $ . fullCalendar . moment . utc ( ' 2014 - 06 - 08t07 : 30 : 00 ' ) ;:==:var time:==:mom . time ( ) ;
var sortData   = method . sortData ;:==:var postData:==:method . postData ;
var tree = imports . tree ;:==:var util:==:imports . util ;
var data = this . data ;:==:var object3D:==:this . el . object3D ;
var x = Math . pow ( 1 - t , 2 ) * origin . x + 2 . 0 * ( 1 - t ) * t * control . x + t * t * destination . x ;:==:var y:==:Math . pow ( 1 - t , 2 ) * origin . y + 2 . 0 * ( 1 - t ) * t * control . y + t * t * destination . y ;
var   STORED = 14 ;:==:var   COPY _:==:15 ;
var title = options . title  |  |  gettext ( ' Progress ' ) ;:==:var message:==:options . message  |  |  ' ' ;
var INVALID_CHARACTER_ERR   = exceptionCode . invalid_character_err   = ( ( exceptionMessage [ 5 ] = ' invalid character ' ) , 5 ) ;:==:var no_data_allowed_err:==:exceptionCode . no_data_allowed_err      ( ( exceptionMessage [ 6 ]   ' no data allowed ' ) , 6 ) ;
var disableTouchRipple = _ props3 . disableTouchRipple ;:==:var focusRippleColor:==:_ props3 . focusRippleColor ;
var Primitives = Geometry . Primitives ;:==:var Geometry:==:BABYLON . Geometry ;
var name = ' the name ' ;:==:var value:==:' the value ' ;
var i = this . $ getRowCacheIndex ( rowCache , screenRow ) ;:==:var l:==:rowCache . length ;
var dataLabelShow = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . dataLabelShow , false ) ;:==:var dataLabelColor:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . dataLabelColor , solid : color : defaultColor ) ;
var menu = this . menu ;:==:var checkboxContainer:==:this . checkboxContainer ;
var delta = opt_delta  |  |  0 ;:==:var direction:==:opt_direction  |  |  0 ;
var promiseAnimation = animationModule . promiseAnimation ;:==:var animation:==:animationModule . animation ;
var callback = opt_callback  |  |  goog . nullFunction ;:==:var errback:==:opt_errback  |  |  goog . nullFunction ;
var w = p . width ? s . width : 0 ;:==:var h:==:p . height ? s . height : 0 ;
var element = this . element ;:==:var input:==:element . find ( ' input ' ) ;
var dynCall_iiiii = Module [ ' dynCall_iiiii ' ] = asm [ ' dynCall_iiiii ' ] ;:==:var dynCall_viiii:==:Module [ ' dynCall_viiii ' ]    asm [ ' dynCall_viiii ' ] ;
var puk = this . _ elements . pukInput . value ;:==:var newPin:==:this . _ elements . newPinInput . value ;
var Dimensions = require ( ' Dimensions ' ) ;:==:var f8Colors:==:require ( ' f8Colors ' ) ;
var appContainer = require ( ' appContainer ' ) ;:==:var react:==:require ( ' react ' ) ;
var targetWidth = getValue ( options . targetWidth , -1 ) ;:==:var targetHeight:==:getValue ( options . targetHeight , -1 ) ;
var element = $ element [ 0 ] ;:==:var options:==:this . options ;
var step = options . step  |  |  0 ;:==:var coneFactor:==:options . coneFactor  |  |  0 ;
var template = require ( ' gulp - template ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var email = identify . email ( ) ;:==:var phone:==:identify . phone ( ) ;
var dataLabelUtils = powerbi . visuals . dataLabelUtils ;:==:var objectEnumerationBuilder:==:powerbi . visuals . objectEnumerationBuilder ;
var Node = scope . wrappers . Node ;:==:var assert:==:scope . assert ;
var canvas = renderer . canvas ;:==:var gl:==:renderer . gl ;
var username = usernameInput . value ;:==:var password:==:passwordInput . value ;
var url = require ( ' url ' ) ;:==:var dns:==:require ( ' dns ' ) ;
var fontChar = string . fromCharCode ( fontCharCode ) ;:==:var glyph:==:this . glyphCache [ charcode ] ;
var _ left = bt . _ encodeReg ( _ left _ ) ;:==:var _ right:==:bt . _ encodeReg ( _ right _ ) ;
var c = goog . crypt . hash32 . toSigned _ ( bytes [ offset + 2 ] ) ;:==:var d:==:goog . crypt . hash32 . toSigned _ ( bytes [ offset + 3 ] ) ;
var fs = require ( ' fs - extra ' ) ;:==:var path:==:require ( ' path ' ) ;
var hashingFunction = ( typeof hashingFunctionParam = = function ) ? hashingFunctionParam : hashObject ;:==:var equalityFunction:==:( typeof equalityFunctionParam     function ) ? equalityFunctionParam : null ;
var start = changeRange . start ;:==:var end:==:changeRange . end ;
var features = this . features ;:==:var textFeatures:==:this . textFeatures ;
var a = worldTransform . a ;:==:var b:==:worldTransform . b ;
var delta = options . delta ! = = undefined ? options . delta : 1 ;:==:var zoomInLabel:==:options . zoomInLabel !    undefined ? options . zoomInLabel : ' + ' ;
var Nightscout = window . Nightscout ;:==:var report_plugins:==:Nightscout . report_plugins ;
var width = this . texture . frame . width ;:==:var height:==:this . texture . frame . height ;
var cropBox = this . cropBox ;:==:var width:==:cropBox . width ;
var importBindings = $ _ _ 9 . importBindings [ index ] ;:==:var externalExportBindings:==:$ _ _ 9 . externalExportBindings [ index ] ;
var cap = options . cap  |  |  BABYLON . Mesh . NO_CAP ;:==:var updatable:==:options . updatable ;
var filter = this . _ filter ;:==:var list:==:this . _ list ;
var domPosition = dom . domPosition ;:==:var domRange:==:api . domRange ;
var projectNode = this . _ projectNode ( uiSourceCode . project ( ) ) ;:==:var folderNode:==:this . _ folderNode ( projectNode , uiSourceCode . parentPath ( ) ) ;
var className = ( 0 , _ classnames2 [ ' default ' ] ) ( ' select - input ' , this . props . inputProps . className ) ;:==:var isOpen:==:! ! this . state . isOpen ;
var paths = ob . paths ;:==:var lines:==:params . qstring . lines  |  |  0 ;
var axisExpandWidth = layoutInfo . axisExpandWidth ;:==:var axisCount:==:layoutInfo . axisCount ;
var analytics = imports [ ' c9 . analytics ' ] ;:==:var outplan:==:require ( ' outplan ' ) ;
var yeoman = require ( ' yeoman - generator ' ) ;:==:var yosay:==:require ( ' yosay ' ) ;
var alphaRenamer = traceur . codegeneration . alphaRenamer ;:==:var parseTreeTransformer:==:traceur . codegeneration . parseTreeTransformer ;
var emberGenerateDestroy = blueprintHelpers . emberGenerateDestroy ;:==:var modifyPackages:==:blueprintHelpers . modifyPackages ;
var options = that . options ;:==:var listView:==:that . listView ;
var debug = require ( ' debug ' ) ( ' nodemon ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var groups = data . groups ;:==:var users:==:data . users ;
var count = state . count ;:==:var subscriber:==:state . subscriber ;
var getDaySegmentContainer = t . getDaySegmentContainer ;:==:var renderDayOverlay:==:t . renderDayOverlay ;
var fs = require ( ' fs ' ) ;:==:var tmp:==:require ( ' tmp ' ) ;
var len = imgData . length ;:==:var palette:==:this . _ palette ;
var d16 = _ addDiv ( ' d16 ' ) , d17 = _ addDiv ( ' d17 ' ) ;:==:var conn:==:_ jsPlumb . connect ( source : d16 , target : d17 , endpoint : ' rectangle ' ) ;
var resolve = options . resolve  |  |  ;:==:var locals:==:options . locals  |  |  ;
var s1 = Cartesian2 . fromArray ( texCoords , i1 * 2 , s1Scratch ) ;:==:var s2:==:cartesian2 . fromArray ( texCoords , i2 * 2 , s2Scratch ) ;
var path = tree . paths [ i ] ;:==:var type:==:path . type ;
var totalColumns = wot . getSetting ( ' totalColumns ' ) ;:==:var fixedRowsTop:==:wot . getSetting ( ' fixedRowsTop ' ) ;
var location = validator . trim ( req . body . location ) ;:==:var weibo:==:validator . trim ( req . body . weibo ) ;
var behaviors = this . behaviors ;:==:var index:==:behaviors . indexOf ( behavior ) ;
var edit = self . edit ;:==:var body:==:edit . doc . body ;
var dataViewMetadataColumnUtils = powerbi . data . dataViewMetadataColumnUtils ;:==:var inheritSingle:==:powerbi . prototype . inheritSingle ;
var props = inst . _ currentElement . props ;:==:var value:==:props . value ;
var fs = require ( ' fs ' ) ;:==:var handlebars:==:require ( ' handlebars ' ) ;
var target = this . target ;:==:var ta:==:target . a , tb    target . b , tc    target . c , td    target . d ;
var util = require ( ' util ' ) ;:==:var assert:==:require ( ' assert ' ) . ok ;
var s = _ getElementObject ( source ) , sId = _ getId ( s ) ;:==:var t:==:_ getElementObject ( target ) , tId    _ getId ( t ) ;
var p = el . parent ;:==:var index:==:p . children . indexOf ( el ) ;
var heap = this . _ heap ;:==:var values:==:this . _ values ;
var silhouettePrograms = model . _ rendererResources . silhouettePrograms ;:==:var scene3dOnly:==:frameState . scene3dOnly ;
var increment = this . transformAny ( tree . increment ) ;:==:var body:==:this . transformToBlockOrStatement ( tree . body ) ;
var path = e . path ;:==:var len:==:path . length ;
var c = pp . current ;:==:var p:==:pp . getAsCurrentPoint ( ) ;
var manifestURL = options . manifestURL ;:==:var entryPoint:==:options . entryPoint ;
var ctorRegistry = this . metadataStore . _ ctorRegistry ;:==:var r:==:ctorRegistry [ this . name ]  |  |  ctorRegistry [ this . shortName ]  |  |  ;
var total = that . dataSource . total ( ) ;:==:var tagList:==:that . tagList ;
var isObject = leafletHelpers . isObject ;:==:var isDefined:==:leafletHelpers . isDefined ;
var orange500 = exports . orange500 = ' # ff9800 ' ;:==:var orange600:==:exports . orange600    ' # fb8c00 ' ;
var xPointArray = contextObject . xPointArray ;:==:var yPointArray:==:contextObject . yPointArray ;
var columnMinWidth = _ props2 . columnMinWidth ;:==:var columnCount:==:_ props2 . columnCount ;
var cmp = value . cmp  |  |  ' keep ' ;:==:var ref:==:value . ref  |  |  0 ;
var bail = require ( ' bail ' ) ;:==:var vfile:==:require ( ' vfile ' ) ;
var top = nodePos . top ;:==:var height:==:nodePos . height ;
var h = canvas . clientHeight ;:==:var bounds:==:this . bounds ;
var quadraticExtremum = curve . quadraticExtremum ;:==:var quadraticAt:==:curve . quadraticAt ;
var origin = fileSystem . origin ;:==:var type:==:fileSystem . type ;
var getNode = reactdomComponentTree . getNodeFromInstance ;:==:var listenTo:==:reactBrowserEventEmitter . listenTo ;
var assert = sharedUtil . assert ;:==:var createPromiseCapability:==:sharedUtil . createPromiseCapability ;
var entities = dataSource . entities . values ;:==:var label:==:entities [ 0 ] . label ;
var quadraticSubdivide = curveTool . quadraticSubdivide ;:==:var cubicSubdivide:==:curveTool . cubicSubdivide ;
var supportsColor = require ( ' chalk ' ) . supportsColor ;:==:var glob:==:require ( ' glob ' ) ;
var options = that . options ;:==:var animation:==:options . animation ;
var popupWindowFeatures = _ ref . popupWindowFeatures ;:==:var popupWindowTarget:==:_ ref . popupWindowTarget ;
var axisStyle = powerbi . visuals . axisStyle ;:==:var yAxisPosition:==:powerbi . visuals . yAxisPosition ;
var key = webInspector . remoteObject . fromLocalObject ( json . parse ( dataEntries [ i ] . key ) ) ;:==:var primaryKey:==:webInspector . remoteObject . fromLocalObject ( json . parse ( dataEntries [ i ] . primaryKey ) ) ;
var PROCESSING_INSTRUCTION_NODE = nodeType . processing_instruction_node = 7 ;:==:var comment_node:==:nodeType . comment_node       8 ;
var Dummy7 = mongoose . model ( ' Dummy7 ' , dummy7Schema ) ;:==:var dummy8:==:mongoose . model ( ' dummy8 ' , dummy8Schema ) ;
var slices = this . slices = options . slices ;:==:var shapes:==:this . shapes    options . shapes ;
var stripUnbuffered = options . stripUnbuffered ! = = false ;:==:var stripBuffered:==:options . stripBuffered      true ;
var client = helper . client ( ) ;:==:var connection:==:client . connection ;
var lastStat = entry . lastStat ;:==:var stat:==:files . statOrNull ( absPath ) ;
var height = _ props3 . height ;:==:var rowCount:==:_ props3 . rowCount ;
var style = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . style , visuals . lineStyle . dashed ) ;:==:var position:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . position , visuals . referenceLinePosition . front ) ;
var Util = sharedUtil . util ;:==:var isNum:==:sharedUtil . isNum ;
var instanceLights = data . instanceLights ;:==:var instanceGeometries:==:data . instanceGeometries ;
var polygonHierarchy = polygonGeometry . _ polygonHierarchy ;:==:var perPositionHeight:==:polygonGeometry . _ perPositionHeight ;
var chokidar = require ( ' chokidar ' ) ;:==:var p:==:require ( ' path ' ) ;
var message = v . message ;:==:var type:==:v . type ;
var g = pixel . g ;:==:var b:==:pixel . b ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var emailFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' emailFieldTestObject ' ) ) ;
var left = pos . left ;:==:var top:==:pos . top ;
var readBinaryOptions = struct ( ' readBinaryOptions ' ) ;:==:var script:==:struct ( ' script ' ) ;
var gzip = Promise . promisify ( zlib . gzip ) ;:==:var getCredentials:==:promise . promisify ( aws . config . getCredentials , context : aws . config ) ;
var exec = require ( ' child_process ' ) . exec ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var rowheight = options . rowheight  |  |  40 ;:==:var width:==:options . colwidth  |  |  300 ;
var st = this . styles , allText = this . text , marked = this . marked ;:==:var len:==:allText . length ;
var height = options . height ;:==:var source:==:options . source ;
var conn = options . connection ;:==:var projectContext:==:options . projectContext ;
var reactUpdates = require ( ' reactUpdates ' ) ;:==:var transaction:==:require ( ' transaction ' ) ;
var blockNode = math . expression . node . blockNode ;:==:var resultSet:==:math . type . resultSet ;
var onKeyUp = _ props3 . onKeyUp ;:==:var onKeyDown:==:_ props3 . onKeyDown ;
var canvas = self . canvas ;:==:var aspectRatio:==:canvas . aspectRatio ;
var line = head . line ;:==:var repeat:==:motionArgs . repeat ;
var element = that . element ;:==:var dataItem:==:that . listView . dataItemByIndex ( that . listView . getElementIndex ( item ) ) ;
var gcNode = jsProfileModel . gcNode ;:==:var samples:==:jsProfileModel . samples ;
var character = position . character + 1 ;:==:var message:==:ts . flattenDiagnosticMessageText ( diagnostic . messageText , ' \n ' ) ;
var shadowOffsety = style . shadowOffsety ;:==:var lineWidth:==:style . hasStroke ( ) ? style . lineWidth : 0 ;
var maxWidth = settings . get ( ' maxWidth ' ) ;:==:var maxHeight:==:settings . get ( ' maxHeight ' ) ;
var image = this . image ;:==:var canvas:==:this . canvas ;
var width = Math . floor ( rect . z * this . app . graphicsDevice . width * this . renderTargetScale ) ;:==:var height:==:math . floor ( rect . w * this . app . graphicsDevice . height * this . renderTargetScale ) ;
var empty = tag . match ( regex_empty ) ;:==:var tagname:==:regex_tagname . exec ( tag ) [ 1 ] ;
var filenames = this . _ index . filenames ;:==:var objects:==:this . _ index . objects ;
var gFalse = makeCallOrderLogger ( ' gFalse ' , false ) ;:==:var hTrue:==:makeCallOrderLogger ( ' hTrue ' , true ) ;
var util = require ( ' util ' ) ;:==:var EOL:==:require ( ' os ' ) . EOL ;
var rctTextView = requireNativeComponent ( ' rctTextView ' , null ) ;:==:var rctTextField:==:requireNativeComponent ( ' rctTextField ' , null ) ;
var chai = require ( ' chai ' ) ;:==:var url:==:require ( ' url ' ) ;
var cellCount = _ props . cellCount ;:==:var cellSizeAndPositionGetter:==:_ props . cellSizeAndPositionGetter ;
var response = lang_1 . isPresent ( _ xhr . response ) ? _ xhr . response : _ xhr . responseText ;:==:var status:==:_ xhr . status      1223 ? 204 : _ xhr . status ;
var progress = e . progress ;:==:var callback:==:e . callback ;
var serializeDate = typeof options . serializeDate = = = ' function ' ? options . serializeDate : defaults . serializeDate ;:==:var encodeValuesOnly:==:typeof options . encodeValuesOnly      ' boolean ' ? options . encodeValuesOnly : defaults . encodeValuesOnly ;
var React = require ( ' React ' ) ;:==:var recordingModule:==:require ( ' nativeModules ' ) . initialPropsRecordingModule ;
var to = ray . to ;:==:var l0:==:raycast_l0 ;
var ui = args . ui ;:==:var graph:==:args . graph ;
var scrollOverflowHandler = options . scrollOverflowHandler ;:==:var wrap:==:scrollOverflowHandler . wrapContent ( ) ;
var position = this . _ positionHandle . resolve ( ) ;:==:var uiSourceCode:==:webInspector . workspace . project ( this . _ projectId ) . uiSourceCode ( this . _ path ) ;
var webPlayer = require ( ' webPlayer ' ) ;:==:var snackPlayer:==:require ( ' snackPlayer ' ) ;
var b = rgba [ 2 ] ;:==:var a:==:rgba [ 3 ]  |  |  1 ;
var title = document . getElementById ( ' title - details ' ) ;:==:var screen:==:document . getElementById ( ' cp - details - screen ' ) ;
var appearToClass = data . appearToClass ;:==:var appearActiveClass:==:data . appearActiveClass ;
var grappling = require ( ' grappling - hook ' ) ;:==:var path:==:require ( ' path ' ) ;
var has = _ util . has ;:==:var isArray:==:_ util . isArray ;
var align = _ ref2 . align ;:==:var cellIndex:==:_ ref2 . cellIndex ;
var dur = this . _ duration * 0 . 001 ;:==:var pos:==:this . _ position * 0 . 001 ;
var visual = thisOption . visual ;:==:var categoryMap:==:thisOption . categoryMap    ;
var cells = this . _ cells ;:==:var nodes:==:this . _ nodes ;
var pixelRatio = frameState . pixelRatio ;:==:var extent:==:frameState . extent ;
var merge = require ( ' merge - stream ' ) ;:==:var argv:==:require ( ' yargs ' ) . argv ;
var params = _ state . params ;:==:var components:==:_ state . components ;
var thumbnail = document . getElementById ( ' thumbnail ' ) ;:==:var thumbnailContainer:==:document . getElementById ( ' thumbnailContainer ' ) ;
var ifd0LengthDataSection = ifDlengths . ifd0LengthDataSection ;:==:var exififdLength:==:ifDlengths . exififdLength ;
var mummy = game . add . sprite ( 300 , 200 , ' mummy ' ) ;:==:var walk:==:mummy . animations . add ( ' walk ' ) ;
var s = this . state _ ;:==:var t:==:this . temp _ [ 0 ] ;
var h = hours ;:==:var m:==:minutes ;
var isPrimitive = util . isPrimitive ;:==:var wrapsPrimitiveReceiver:==:util . wrapsPrimitiveReceiver ;
var l0 = raycast_l0 ;:==:var l1:==:raycast_l1 ;
var getInterval = axisBuilder . getInterval ;:==:var ifIgnoreOnTick:==:axisBuilder . ifIgnoreOnTick ;
var sha = ' sha ' + hashBits ;:==:var hash:==:this . _ joseUtil . hashString ( response . access_token , sha ) ;
var outlineView = document . getElementById ( ' outlineView ' ) ;:==:var attachmentsView:==:document . getElementById ( ' attachmentsView ' ) ;
var scrollTop = _ ref5 . scrollTop ;:==:var onScroll:==:this . props . onScroll ;
var denom = this . _ denominators ;:==:var coef:==:this . _ coef ;
var query = req . query ;:==:var storage:==:req . storage  |  |  ctx . entries ;
var command = commands [ i ] ;:==:var pass:==:defined ( command . pass ) ? command . pass : Pass . OPAQUE ;
var dsvString = dataset . dsvString ;:==:var metadata:==:dataset . metadata  |  |  ;
var shadowsEnabled = frameState . shadowHints . shadowsEnabled ;:==:var shadowMaps:==:frameState . shadowHints . shadowMaps ;
var x = this . xData ;:==:var y:==:this . yData ;
var propertyTypes = propertyTypes . propertyTypes ;:==:var warn:==:debug ( ' core : schema : warn ' ) ;
var zlib = require ( ' zlib ' ) ;:==:var assert:==:require ( ' assert - plus ' ) ;
var session = $ . gestures . session ;:==:var touches:==:touch . touches ;
var r = ( command . debugOverlappingFrustums & ( 1 < < 0 ) ) ? ' 1 . 0 ' : ' 0 . 0 ' ;:==:var g:==:( command . debugOverlappingFrustums & ( 1 < < 1 ) ) ? ' 1 . 0 ' : ' 0 . 0 ' ;
var offset = offsetArray . getOffset ( i ) ;:==:var left:==:offset . left ;
var round = Math . round ;:==:var floor:==:Math . floor ;
var iceCandidate = window . mozrtcIceCandidate  |  |  window . rtcIceCandidate ;:==:var sessionDescription:==:window . mozrtcSessionDescription  |  |  window . rtcSessionDescription ;
var d1 = _ addDiv ( ' d1 ' ) , d2 = _ addDiv ( ' d2 ' ) ;:==:var c:==:_ jsPlumb . connect ( source : d1 , target : d2 , paintStyle : outlineStroke : ' green ' , outlineWidth : 6 , strokeWidth : 4 , stroke : ' red ' ) ;
var pathname = entry . pathname ;:==:var search:==:entry . search ;
var lazy = this . params . lazy ;:==:var number:==:this . params . number ;
var options = this . options ;:==:var context:==:this . context ;
var name = arg . node . name ;:==:var exports:==:this . exports [ name ] ;
var fs = require ( ' fs ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var   CODELENS = 19 ;:==:var    LEN _:==:20 ;
var createThrowStatement = parseTreeFactory . createThrowStatement ;:==:var createVariableStatement:==:parseTreeFactory . createVariableStatement ;
var map = mobx . map ;:==:var autorun:==:mobx . autorun ;
var createParenExpression = parseTreeFactory . createParenExpression ;:==:var createPropertyDescriptor:==:parseTreeFactory . createPropertyDescriptor ;
var offset = $ ( this ) . offset ( ) ;:==:var parent:==:$ ( this . parentNode ) ;
var sum32_5 = utils . sum32_5 ;:==:var rotr64_hi:==:utils . rotr64_hi ;
var comprehensionFor = traceur . syntax . trees . comprehensionFor ;:==:var conditionalExpression:==:traceur . syntax . trees . conditionalExpression ;
var fakexmlHttpRequest = sinonFakeXhr . fakexmlHttpRequest ;:==:var assert:==:referee . assert ;
var rowCount = props . rowCount ;:==:var scrollToAlignment:==:props . scrollToAlignment ;
var type = this . props . type ;:==:var prefix:==:this . props . prefix ;
var Column = fixedDataTable . column ;:==:var cell:==:fixedDataTable . cell ;
var activeElement = document . activeElement ;:==:var contentDocument:==:activeElement . contentDocument ;
var reactdomComponentFlags = require ( ' reactdomComponentFlags ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var a = a : b : 1 , c : 2 , y : 0 ;:==:var b:==:a : b : 3 , d : 4 , z : 0 ;
var os   = require ( ' os ' ) ;:==:var path:==:require ( ' path ' ) ;
var operatorNode = math . expression . node . operatorNode ;:==:var indexNode:==:math . expression . node . indexNode ;
var defaults = zrUtil . defaults ;:==:var normalizeToArray:==:modelUtil . normalizeToArray ;
var util = api . util ;:==:var isHostMethod:==:util . isHostMethod ;
var title = validator . trim ( req . body . title  |  |  '' ) ;:==:var tab:==:validator . trim ( req . body . tab  |  |  '' ) ;
var _ memcmp = Module [ ' _ memcmp ' ] = asm [ ' _ memcmp ' ] ;:==:var _ strncasecmp:==:Module [ ' _ strncasecmp ' ]    asm [ ' _ strncasecmp ' ] ;
var search = entry . search ;:==:var path:==:( basename  |  |  '' ) + pathname + ( search  |  |  '' ) ;
var distance = m . distance ;:==:var fov:==:m . fov ;
var atNameToken = traceur . syntax . atNameToken ;:==:var identifierToken:==:traceur . syntax . identifierToken ;
var sinon = require ( ' sinon ' ) ;:==:var proxyquire:==:require ( ' proxyquire ' ) ;
var scene = runtime . gltf . scene  |  |  0 ;:==:var scenes:==:runtime . gltf . scenes ;
var nodeName = nodeNames [ nodeIndex ] ;:==:var nodeTransformation:==:nodeTransformations [ nodeName ] ;
var containerCount = checks . containerCount  |  |  1 ;:==:var text:==:checks . text ;
var values = A . _ values ;:==:var index:==:A . _ index ;
var body = plt . doc ( ) . body ;:==:var win:==:plt . win ( ) ;
var a = require ( ' a ' ) ;:==:var test:==:require ( ' test ' ) ;
var sum32_4 = utils . sum32_4 ;:==:var blockHash:==:hash . common . blockHash ;
var index = state . index ;:==:var end:==:state . end ;
var calendar = t . calendar ;:==:var getEventEnd:==:calendar . getEventEnd ;
var shaderProgram = pixi . shaderProgram ;:==:var tilePosition:==:sprite . tilePosition ;
var e = new Ext . lib . Region ( h . y , h . x + c . offsetWidth , h . y + c . offsetHeight , h . x ) ;:==:var i:==:e . intersect ( g ) ;
var Platform = require ( ' Platform ' ) ;:==:var rctDeviceEventEmitter:==:require ( ' rctDeviceEventEmitter ' ) ;
var bubbles = typeof options . bubbles ! = ' undefined ' ? options . bubbles : true ;:==:var cancelable:==:typeof options . cancelable !   ' undefined ' ? options . cancelable : ( event !   ' touchcancel ' ) ;
var counter = this . counter ;:==:var values:==:counter . values ;
var pad = this . padDigit ;:==:var r:==:this . r . toString ( 16 ) ;
var codeMirror = window . frameElement . codeMirror ;:==:var e:==:codeMirror . editor    new editor ( codeMirror . options ) ;
var alpha = parsedCamera . alpha ;:==:var beta:==:parsedCamera . beta ;
var width = options . width ;:==:var height:==:options . height ;
var select = $ document . elements ( ' select [ ng\\ : model='$1 ' ] ' , this . name ) ;:==:var option:==:select . find ( ' option [ value ' ' + value + ' ' ] ' ) ;
var replicasetName = options . replicasetName  |  |  ' rs ' ;:==:var writeConcern:==:options . writeConcern  |  |  w : 1 ;
var low = options . low ;:==:var high:==:options . high ;
var render = ref . render ;:==:var staticRenderFns:==:ref . staticRenderFns ;
var O_SYMLINK = constants . O_SYMLINK  |  |  0 ;:==:var O_SYNC:==:constants . O_SYNC  |  |  0 ;
var path = require ( ' path ' ) ;:==:var format:==:require ( ' util ' ) . format ;
var visualizers = dataSource . _ visualizers ;:==:var length:==:visualizers . length ;
var segment = segmentData . segment ;:==:var feature:==:segmentData . feature ;
var settings = editor . settings , dom = editor . dom , selection = editor . selection ;:==:var schema:==:editor . schema , blockElements    schema . getBlockElements ( ) ;
var sideOrientation = ( options . sideOrientation = = = 0 ) ? 0 : options . sideOrientation  |  |  babylon . mesh . defaultside ;:==:var faceuv:==:options . faceuv  |  |  new array ( 3 ) ;
var nssocket = require ( ' nssocket ' ) ;:==:var events:==:require ( ' events ' ) ;
var rowspan = parseInt ( firstCell . getAttribute ( ' rowspan ' ) , 10 )  |  |  1 ;:==:var colspan:==:parseInt ( firstCell . getAttribute ( ' colspan ' ) , 10 )  |  |  1 ;
var reactdomStackInjection = require ( ' reactdomStackInjection ' ) ;:==:var reactServerRendering:==:require ( ' reactServerRendering ' ) ;
var Cluster = window . app . services . Cluster ;:==:var test:==:window . test ;
var passport = require ( ' passport ' ) ;:==:var when:==:require ( ' when ' ) ;
var drawCalls = scene . drawCalls ;:==:var lights:==:scene . _ lights ;
var $ element = this . $ element ;:==:var $ mdUtil:==:this . $ mdUtil ;
var invalidAlgorithmError = utils . invalidAlgorithmError ;:==:var httpSignatureError:==:utils . httpSignatureError ;
var href = window . location . href ;:==:var index:==:href . indexOf ( ' # ' ) ;
var line = position . line + 1 ;:==:var character:==:position . character + 1 ;
var col = cols [ j ] ;:==:var Cell:==:this . newCell ( col ) ;
var index = this . lastMarker . index ;:==:var line:==:this . scanner . lineNumber ;
var lastPathComponent = parsedurl ? parsedurl . lastPathComponent : parsedurl ;:==:var index:==:webInspector . targetManager . inspectedPageurl ( ) . indexOf ( lastPathComponent ) ;
var renderDayEvents = t . renderDayEvents ;:==:var calendar:==:t . calendar ;
var parent = this . start . parentNode ;:==:var model:==:parent & & parent . _ _ v_model ;
var i18n = data . i18n ;:==:var buttons:==:data . buttons ;
var alias = doclet . alias ;:==:var name:==:doclet . name ;
var a = this . sandbox . spy ( Board , ' mount ' ) ;:==:var b:==:this . sandbox . spy ( Board . Pins , ' normalize ' ) ;
var loop = effectModel . get ( ' loop ' ) ;:==:var constantSpeed:==:effectModel . get ( ' constantSpeed ' ) ;
var force = _ ref7 . force ;:==:var event:==:_ ref7 . event ;
var vis = args . vis  |  |  graph . vis ;:==:var dotSize:==:this . dotSize ;
var options = args . options ;:==:var type:==:args . type ;
var green400 = exports . green400 = ' # 66bb6a ' ;:==:var green500:==:exports . green500    ' # 4caf50 ' ;
var _ initPrediction = module [ ' _ initPrediction ' ] = asm [ ' _ initPrediction ' ] ;:==:var _ characterRecognize:==:module [ ' _ characterRecognize ' ]    asm [ ' _ characterRecognize ' ] ;
var isFlat = this . context . isFlatFileStructure ;:==:var fileUrl:==:this . pkg . fileUrl ;
var host = headers . host ;:==:var referer:==:headers . referer  |  |  '' ;
var viewState = frameState . viewState ;:==:var pixelRatio:==:frameState . pixelRatio ;
var y = data . y = = = 0 ? zeroScale : data . y ;:==:var z:==:data . z      0 ? zeroScale : data . z ;
var eventName = options . eventName ;:==:var colors:==:options . colors [ row ] ;
var p = createFromConstructor ( object . prototype ) ( ) ;:==:var c:==:createFromConstructor ( p ) ;
var EVALUATE_JAVASCRIPT_CHECK_TIMEOUT = process . env . EVALUATE_JAVASCRIPT_CHECK_TIMEOUT  |  |  300 ;:==:var NUM_ITERATIONS:==:process . env . NUM_ITERATIONS  |  |  40 ;
var fileUploadSelect = plugin . getElement ( ' fileUploadSelect ' ) ;:==:var folderUploadSelect:==:plugin . getElement ( ' folderUploadSelect ' ) ;
var makeSpan = buildCommon . makeSpan ;:==:var fontMap:==:buildCommon . fontMap ;
var geometry = this . point . geometry ;:==:var features:==:this . control . layer . features ;
var lineNumber = debuggerModelLocation . lineNumber - ( script . isInlineScriptWithSourceurl ( ) ? script . lineOffset : 0 ) ;:==:var columnNumber:==:debuggerModelLocation . columnNumber  |  |  0 ;
var foo = bar`wow\na$ 42 b $ _ . foobar ( ) ` ;:==:var bar:==:bar`wow\nab$ 42 $ _ . foobar ( ) ` ;
var timeSeparator = $ dateFormatter . timeSeparator ( format ) ;:==:var minutesFormat:==:$ dateFormatter . minutesFormat ( format ) ;
var headerClassName = _ props2 . headerClassName ;:==:var headerStyle:==:_ props2 . headerStyle ;
var brushCanvas = this . _ brushCanvas  |  |  ( this . _ brushCanvas = zrUtil . createCanvas ( ) ) ;:==:var r:==:this . pointSize + this . blurSize ;
var OBJECT_PATTERN = ' OBJECT_PATTERN ' ;:==:var OBJECT_PATTERN_FIELD:==:' OBJECT_PATTERN_FIELD ' ;
var left = leftScratchArray ;:==:var right:==:rightScratchArray ;
var selectionStart = self . selectionStart ;:==:var selectionEnd:==:self . selectionEnd ;
var broadcastService = _ appJsServicesBroadcastService [ ' default ' ] ;:==:var httpClientService:==:_ appJsServicesHttpClientService [ ' default ' ] ;
var height = shape . height ;:==:var r:==:shape . r ;
var clientY = event . center ? event . center . y : event . clientY ;:==:var groupIds:==:this . groupIds ;
var rename = require ( ' gulp - rename ' ) ;:==:var del:==:require ( ' del ' ) ;
var a = _ WinRT . Windows . UI . Core . animationMetrics , animationDescription = new a . animationDescription ( a . animationEffect . showPanel , a . animationEffectTarget . primary ) ;:==:var animations:==:animationDescription . animations ;
var runPostSets = module [ ' runPostSets ' ] = asm [ ' runPostSets ' ] ;:==:var dyncall_ii:==:module [ ' dyncall_ii ' ]    asm [ ' dyncall_ii ' ] ;
var cull = renderState . cull ;:==:var enabled:==:cull . enabled ;
var t = ts - raf_t0 ;:==:var endTime:==:testharness_timeline . endTime _ ;
var Token = _ . Token ;:==:var isNewLine:==:_ . isNewLine ;
var top = parseInt ( org_elem . offset ( ) [ ' top ' ] ) ;:==:var left:==:parseInt ( org_elem . offset ( ) [ ' left ' ] ) ;
var tessellation = options . tessellation  |  |  24 ;:==:var subdivisions:==:options . subdivisions  |  |  1 ;
var it = test . it ;:==:var before:==:test . before ;
var Page = hexo . model ( ' Page ' ) ;:==:var Data:==:hexo . model ( ' Data ' ) ;
var zlevel = seriesModel . get ( ' zlevel ' ) ;:==:var trailLength:==:seriesModel . get ( ' effect . trailLength ' ) ;
var abrController = this . abrController = new config . abrController ( this ) ;:==:var bufferController:==:new config . bufferController ( this ) ;
var each = zrUtil . each ;:==:var parseClassType:==:componentModel . parseClassType ;
var a = require ( ' a ' ) ;:==:var foo:==:a . foo ;
var dayOffsetToCellOffset = t . dayOffsetToCellOffset ;:==:var calendar:==:t . calendar ;
var type = properties . type ;:==:var subtype:==:properties . subtype ;
var d3 = _ addDiv ( ' d3 ' ) , d4 = _ addDiv ( ' d4 ' ) ;:==:var c:==:_ jsPlumb . connect ( source : d3 , target : d4 , anchors : [ ' autoDefault ' , ' autoDefault ' ] ) ;
var timeToPixel = this . _ timeToPixel ;:==:var pixelWindowLeft:==:this . _ pixelWindowLeft ;
var literals = this . literals _ ;:==:var buildPlaceholder:==:goog . bind ( this . buildPlaceholder _ , this ) ;
var className = ' className ' ;:==:var classList:==:' classList ' ;
var FORMAT = ci . FORMAT ;:==:var KATAKANA:==:ci . KATAKANA ;
var begin = data . begin ;:==:var end:==:data . end ;
var lock = + $ ( this ) . data ( ' lock ' ) ;:==:var width:==:$ ( this ) . data ( ' width ' ) ;
var indigo600 = exports . indigo600 = ' # 3949ab ' ;:==:var indigo700:==:exports . indigo700    ' # 303f9f ' ;
var Promise = promiseProvider . get ( ) ;:==:var options:==:utils . clone ( this . options ) ;
var an = new Animator ( this . options . animatorOptions ) ;:==:var from:==:this . options . from + ( this . options . shift * i ) ;
var ox = parseInt ( lasso . attr ( ' ox ' ) ) ;:==:var oy:==:parseInt ( lasso . attr ( ' oy ' ) ) ;
var count = view . findElement ( ' . search - result - count ' ) . text ( ) ;:==:var results:==:view . findElement ( ' . search - results ' ) ;
var cfile = cfiles [ i ]  |  |  ( cfiles [ i ] = ) ;:==:var file:==:files [ i ] ;
var min = ( minimum . x - this . origin . x ) * inv ;:==:var max:==:( maximum . x - this . origin . x ) * inv ;
var mask = this . game . make . sprite ( 0 , 0 , ' mask ' ) ;:==:var overlay:==:this . game . make . sprite ( 0 , 0 , ' overlay ' ) ;
var constrainedAxis = cartesian3 . normalize ( camera . constrainedAxis , rotateVertScratcha ) ;:==:var dot:==:cartesian3 . dot ( p , constrainedAxis ) ;
var debug = require ( ' debug ' ) ( ' interface : driver ' ) ;:==:var nssocket:==:require ( ' nssocket ' ) ;
var runners = options . runners  |  |  ;:==:var builders:==:options . builders  |  |  ;
var reactdomUnknownPropertyHook = require ( ' reactdomUnknownPropertyHook ' ) ;:==:var reactdomNullInputValuePropHook:==:require ( ' reactdomNullInputValuePropHook ' ) ;
var slice = [ ] . slice ;:==:var proto:==:Object . create ( htmlElement . prototype ) ;
var pass = passes [ i ] ;:==:var viewport:==:pass . passState . viewport ;
var c9 = imports . c9 ;:==:var anims:==:imports . anims ;
var hasStoreStateChanged = this . hasStoreStateChanged ;:==:var haveStatePropsBeenPrecalculated:==:this . haveStatePropsBeenPrecalculated ;
var bindingIdentifier = traceur . syntax . trees . bindingIdentifier ;:==:var identifierExpression:==:traceur . syntax . trees . identifierExpression ;
var ref = file . meta . ref ;:==:var path:==:file . meta . path ;
var cursor = cursorPoint ( evt ) ;:==:var x:==:cursor . x ;
var assignmentNode = math . expression . node . assignmentNode ;:==:var conditionalNode:==:math . expression . node . conditionalNode ;
var c = o . content ;:==:var content:==:this . element . children ( ' . window - content ' ) ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var visibility = this . findEffectiveStyleProperty ( element , ' visibility ' ) ;:==:var _ isDisplayed:==:this . _ isDisplayed ( element ) ;
var record = method . record ;:==:var original:==:method . original ;
var form = $ ( ' form ' ) ;:==:var notification:==:$ ( ' . notification ' ) ;
var maritime = feature . get ( ' maritime ' ) ;:==:var disputed:==:feature . get ( ' disputed ' ) ;
var path   = require ( ' path ' ) ;:==:var glob:==:bluebird . promisify ( require ( ' glob ' ) ) ;
var audio = element . find ( ' audio ' ) , audio_obj = audio [ 0 ] ;:==:var controls:==:element . find ( ' . controls ' ) , volume_button    controls . find ( ' . volume ' ) ;
var path    = require ( ' path ' ) ;:==:var List:==:require ( ' immutable ' ) . List ;
var assert = require ( ' assert ' ) ;:==:var Stream:==:require ( ' stream ' ) . Stream ;
var jimp = require ( ' jimp ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var settings = bin . settings  |  |  ;:==:var desc:==:settings . desc  |  |  settings . title ;
var featureId = data . featureId ;:==:var loadingTask:==:this . loadingTask ;
var ARRAY_COMPREHENSION = ' ARRAY_COMPREHENSION ' ;:==:var ARRAY_LITERAL_EXPRESSION:==:' ARRAY_LITERAL_EXPRESSION ' ;
var path = paths [ i ] ;:==:var condition:==:query . _ conditions [ path ] ;
var b = this . b ;:==:var angle:==:this . angle ;
var previous = signal . previous ;:==:var next:==:signal . next ;
var d = this . _ disabled ;:==:var h:==:this . _ state . minimized ;
var f8App = require ( ' f8App ' ) ;:==:var facebooksdk:==:require ( ' facebooksdk ' ) ;
var oldPass = string ( req . body . oldPassword ) ;:==:var newPass:==:string ( req . body . newPassword ) ;
var source = options . source  |  |  null ;:==:var filter:==:options . filter ;
var n = prev & & prev . end . line ;:==:var l:==:before . line ;
var c = fulfillThenableSoon ( ' c ' , 10 ) ;:==:var d:==:fulfillThenableSoon ( ' d ' , 20 ) ;
var pool = templates . find ( ' . pool ' ) . clone ( true ) ;:==:var end:==:data . end  |  |  Date . create ( ' now ' ) . format ( Date . ISO8601_DATETIME ) ;
var manifest = manifestModel . getValue ( ) ;:==:var url:==:manifest . url ;
var site = this . site ;:==:var item:==:this . site . _ view . items . itemAt ( itemIndex ) ;
var row = state . jump . row ;:==:var column:==:state . jump . column ;
var axe1 = obj . axe1  |  |  [ 1,0,0 ] ;:==:var axe2:==:obj . axe2  |  |  [ 1,0,0 ] ;
var offsetSheary = this . data . offsetSheary * degRadReflect ;:==:var bones:==:this . bones ;
var text = document . getElementById ( ' srctext ' ) ;:==:var ttsStatusBox:==:document . getElementById ( ' ttsStatusBox ' ) ;
var node = getRealNode ( this . node ) ;:==:var parentNode:==:node . parentNode ;
var ellipsoid = controller . _ ellipsoid ;:==:var scene:==:controller . _ scene ;
var levels = crunch . _ crn_get_levels ( src , srcSize ) ;:==:var width:==:crunch . _ crn_get_width ( src , srcSize ) ;
var templates = opts . templates ;:==:var item_opts:==:opts . item_opts  |  |  ;
var green700 = exports . green700 = ' # 388e3c ' ;:==:var green800:==:exports . green800    ' # 2e7d32 ' ;
var dirty = dirtyObjects [ i ] ;:==:var object:==:dirty . object ;
var textOperation = firepad . textOperation ;:==:var h:==:helpers ;
var coords = mesh . coords ;:==:var colors:==:mesh . colors ;
var whitelist = options . whitelist  |  |  [ ] ;:==:var writeHead:==:res . writeHead ;
var m = Matrix3 . fromScale ( new cartesian3 ( 1 . 5 , 80 . 4 , 2 . 6 ) , new matrix3 ( ) ) ;:==:var n:==:matrix3 . fromQuaternion ( quaternion . fromAxisAngle ( new cartesian3 ( 0 . 5 , 1 . 5 , -1 . 2 ) , 1 . 2 ) , new matrix3 ( ) ) ;
var reactNativeFeatureFlags = require ( ' reactNativeFeatureFlags ' ) ;:==:var reactNativeFiberRenderer:==:require ( ' reactNativeFiberRenderer ' ) ;
var labelContainer = this . labelContainer ;:==:var label:==:this . label ;
var from = args . from ;:==:var to:==:args . to ;
var contentState = require ( ' contentState ' ) ;:==:var blockTree:==:require ( ' blockTree ' ) ;
var name = object . name ;:==:var message:==:object . message ;
var name = node . attributes [ j ] . name ;:==:var val:==:node . attributes [ j ] . value ;
var grey500 = exports . grey500 = ' # 9e9e9e ' ;:==:var grey600:==:exports . grey600    ' # 757575 ' ;
var v = this . values ;:==:var t:==:this . temp ;
var start = util . convert ( item . start , ' Date ' ) . valueOf ( ) ;:==:var end:==:util . convert ( item . end !   undefined ? item . end : item . start , ' date ' ) . valueOf ( ) ;
var mass = cfg . mass  |  |  1 ;:==:var type:==:cfg . type  |  |  Physics . SHAPE_RECT ;
var minimumBatchSize = _ props . minimumBatchSize ;:==:var rowCount:==:_ props . rowCount ;
var auditResult = declareInterfaceClass ( auditResultImpl ) ;:==:var button:==:declareInterfaceClass ( buttonImpl ) ;
var VALID = ' VALID ' ;:==:var INVALID:==:' INVALID ' ;
var tabManager = imports . tabManager ;:==:var preview:==:imports . preview ;
var tan = stdlib . Math . tan ;:==:var ceil:==:stdlib . Math . ceil ;
var Platform = require ( ' Platform ' ) ;:==:var listContainer:==:require ( ' listContainer ' ) ;
var getMinMinute = t . getMinMinute ;:==:var timePosition:==:t . timePosition ;
var normal = plane . normal ;:==:var halfAxes:==:box . halfAxes ;
var adapters = PouchDB . adapters ;:==:var preferredAdapters:==:pouchdb . preferredAdapters ;
var cropBox = this . cropBox ;:==:var isCropped:==:this . isCropped & & cropBox ;
var Dict = corePrimitives . dict ;:==:var isDict:==:corePrimitives . isDict ;
var post = m . post ;:==:var p:==:pre . split ( ' , ' ) ;
var moduleExpression = traceur . syntax . trees . moduleExpression ;:==:var moduleSpecifier:==:traceur . syntax . trees . moduleSpecifier ;
var lime300 = exports . lime300 = ' # dce775 ' ;:==:var lime400:==:exports . lime400    ' # d4e157 ' ;
var request = require ( ' request ' ) ;:==:var replay:==:require ( ' request - replay ' ) ;
var extend = Tools . extend , each = Tools . each ;:==:var trim:==:Tools . trim , resolve    Tools . resolve ;
var preview    = this . preview ;:==:var toolbar:==:this . toolbar ;
var drift = options . drift ;:==:var slop:==:-options . slop ;
var includeZero = this . attributes _ . getForAxis ( ' includeZero ' , i ) ;:==:var independentTicks:==:this . attributes _ . getForAxis ( ' independentTicks ' , i ) ;
var header = this . header = newRecords . header ;:==:var body:==:this . body    newRecords . body ;
var userData = results . userData ;:==:var userSettings:==:results . userSettings ;
var apps = requestParameters & & requestParameters . apps ;:==:var start:==:requestParameters & & requestParameters . startDate ;
var req = resp . request ;:==:var logger:==:req . service . config . logger ;
var tab   = validator . trim ( req . body . tab ) ;:==:var content:==:validator . trim ( req . body . t_content ) ;
var enterCancelled = data . enterCancelled ;:==:var beforeAppear:==:data . beforeAppear ;
var setActive = denodeify ( customer . setActive ) . bind ( customer ) ;:==:var setProAccount:==:denodeify ( models . user . setProAccount ) . bind ( models . user ) ;
var allow_close = frag . getAttribute ( ' data - allow_close ' ) ;:==:var allow_resize:==:frag . getAttribute ( ' data - allow_resize ' ) ;
var index = ed . $ tabCycle . index ;:==:var start:==:ed . $ tabCycle . start ;
var createNewExpression = parseTreeFactory . createNewExpression ;:==:var createNumberLiteral:==:parseTreeFactory . createNumberLiteral ;
var ext = extname ( path ) . slice ( 1 ) ;:==:var filter:==:filters [ ext ] ;
var icon = content . getAttribute ( ' data - icon ' ) ;:==:var map:==:new bMap . map ( ' bd - map ' ) ;
var from = this . url . getParam ( ' from ' ) ;:==:var until:==:this . url . getParam ( ' until ' ) ;
var Utf8 = C_enc . Utf8 ;:==:var Base64:==:C_enc . Base64 ;
var language = imports . language ;:==:var watcher:==:imports . watcher ;
var parent = webview . parent ( ) ;:==:var i d:==:webview . i d  |  |  webview . getURL ( ) ;
var search = searchInput . value . toLowerCase ( ) ;:==:var re:==:( regexInput . checked ) ? new regExp ( search ) : null ;
var parseBytes = utils . parseBytes ;:==:var cachedProperty:==:utils . cachedProperty ;
var maximumHeight = result . maximumHeight ;:==:var boundingSphere:==:defaultValue ( result . boundingSphere , that . _ boundingSphere ) ;
var parseTreeTransformer = traceur . codegeneration . parseTreeTransformer ;:==:var parseTreeType:==:traceur . syntax . trees . parseTreeType ;
var exportSymbol = traceur . semantics . symbols . exportSymbol ;:==:var identifier_expression:==:traceur . syntax . trees . parseTreeType . identifier_expression ;
var x = dot . attr ( ' cx ' ) ;:==:var y:==:dot . attr ( ' cy ' ) ;
var symbolClip = itemModel . get ( ' symbolClip ' ) ;:==:var symbolPosition:==:itemModel . get ( ' symbolPosition ' )  |  |  ' start ' ;
var line = motionArgs . forward ? cur . line + repeat : cur . line - repeat ;:==:var first:==:cm . firstLine ( ) ;
var input = this . inputs [ i ] ;:==:var source:==:this . animation . source [ input . source ] ;
var font = this . font _ ;:==:var style:==:this . element _ . style ;
var indices = geometry . indices ;:==:var attributes:==:geometry . attributes ;
var geometryConfig = config [ 0 ] . geometryConfig ;:==:var container:==:geometryConfig . container ;
var elem = document . getElementById ( ' elem ' ) ;:==:var text:==:document . getElementById ( ' text ' ) . firstChild ;
var preProcess = this . _ preProcess ? bind ( this . _ preProcess , this ) : null ;:==:var postProcess:==:this . _ postProcess ? bind ( this . _ postProcess , this ) : null ;
var dynCall_iiiiiiii = Module [ ' dynCall_iiiiiiii ' ] = asm [ ' dynCall_iiiiiiii ' ] ;:==:var dynCall_viiiii:==:Module [ ' dynCall_viiiii ' ]    asm [ ' dynCall_viiiii ' ] ;
var height = result . height ;:==:var html:==:result . html ;
var top = ! isNan ( rect . top ) ? rect . top : null ;:==:var height:==:! isNan ( rect . height ) ? rect . height : 0 ;
var byteLength = bufferView . byteLength  |  |  0 ;:==:var byteOffset:==:bufferView . byteOffset  |  |  0 ;
var config = data . config ;:==:var requireConfig:==:data . requireConfig ;
var reactDebugCurrentFiber = require ( ' reactDebugCurrentFiber ' ) ;:==:var getComponentName:==:require ( ' getComponentName ' ) ;
var Keywords = traceur . syntax . Keywords ;:==:var tokenType:==:traceur . syntax . tokenType ;
var moment = require ( ' moment ' ) ;:==:var url:==:require ( ' url ' ) ;
var EXLEN = 5 ;:==:var EXTRA:==:6 ;
var iframe = plugin . activeSession . iframe ;:==:var tab:==:plugin . activeDocument . tab ;
var getCurrentLocation = options . getCurrentLocation ;:==:var finishTransition:==:options . finishTransition ;
var currentTarget = $ ( e . currentTarget ) ;:==:var action:==:currentTarget . data ( ' action ' ) ;
var type = opts . type  |  |  ' cpu ' ;:==:var timeoutMs:==:opts . timeoutMs  |  0 ;
var cell_index = this . find_cell_index ( code_cell ) ;:==:var trusted:==:code_cell . output_area . trusted ;
var form = document . createElement ( ' form ' ) ;:==:var input:==:document . createElement ( ' input ' ) ;
var font = [ _ cs . fontWeight , _ cs . fontSize , _ cs . fontFamily ] . join ( ' ' ) ;:==:var lineHeight:==:_ cs . lineHeight ;
var express = require ( ' express ' ) ;:==:var workerpool:==:require ( ' workerpool ' ) ;
var localSphereaabb = spheretrimesh_localsphereaabb ;:==:var v2:==:spheretrimesh_v2 ;
var pre = $ ( element ) . parent ( ) . nextAll ( ' pre : first ' ) ;:==:var iframe:==:$ ( ' < iframe class ' snippet - runner ' > ' ) . attr ( ' src ' , ' javascript : ' ' ' ) ;
var shareService = _ appJsServicesShareService [ ' default ' ] ;:==:var deviceNameService:==:_ appJsServicesDeviceNameService [ ' default ' ] ;
var cellSize = _ ref . cellSize ;:==:var containerSize:==:_ ref . containerSize ;
var valueType = powerbi . valueType ;:==:var primitiveType:==:powerbi . primitiveType ;
var max = Math . max ;:==:var abs:==:Math . abs ;
var astLexer = struct ( ' astLexer ' ) ;:==:var binaryErrorHandler:==:struct ( ' binaryErrorHandler ' ) ;
var rootNode = this . _ dataGrid . rootNode ( ) ;:==:var children:==:rootNode . children ;
var collab = imports . collab ;:==:var membersPanel:==:imports . membersPanel ;
var foreground = this . dom . foreground ;:==:var background:==:this . dom . background ;
var sinon = require ( ' sinon ' ) ;:==:var Pattern:==:util . Pattern ;
var scrollHeight = $ yearUl . get ( 0 ) . scrollHeight ;:==:var scrollTop:==:$ yearUl . scrollTop ( ) ;
var maximumHeights = wall . maximumHeights ;:==:var outlineWidth:==:wall . outlineWidth ;
var northwestChild = tile . northwestChild ;:==:var northeastChild:==:tile . northeastChild ;
var clear = defaultValue ( options . clear , true ) ;:==:var epsilon:==:defaultValue ( options . epsilon , 0 ) ;
var init = Widget . fn . init ;:==:var destroy:==:Widget . fn . destroy ;
var printContainer = this . printContainer ;:==:var body:==:document . querySelector ( ' body ' ) ;
var v = ! opt  |  |  ! opt . hv  |  |  opt . hv [ 1 ] ;:==:var boundingMode:==:opt & & opt . boundingMode  |  |  ' all ' ;
var createEmptyStatement = parseTreeFactory . createEmptyStatement ;:==:var createExpressionStatement:==:parseTreeFactory . createExpressionStatement ;
var projectionPicker = viewer . _ projectionPicker ;:==:var baseLayerPicker:==:viewer . _ baseLayerPicker ;
var basename = require ( ' path ' ) . basename ;:==:var debug:==:require ( ' debug ' ) ( ' mocha : watch ' ) ;
var valueKey = _ ref . valueKey ;:==:var onOptionRef:==:_ ref . onOptionRef ;
var condition = this . transformAny ( tree . condition ) ;:==:var left:==:this . transformAny ( tree . left ) ;
var nodemon = require ( ' nodemon ' ) ;:==:var host:==:argv . host  |  |  ' localhost ' ;
var inSelection = ev . inSelection ( ) ;:==:var pagex:==:ev . pagex ;
var context = this . context ;:==:var vertices:==:strip . vertices ;
var callback = _ ref . callback ;:==:var indices:==:_ ref . indices ;
var fontSize = powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . fontSize , this . layerLegendData & & this . layerLegendData . fontSize ? this . layerLegendData . fontSize : visuals . svgLegend . defaultFontSizeInPt ) ;:==:var position:==:powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . position , visuals . legendPosition . top ) ;
var clientTop = document . documentElement . clientTop ;:==:var clientLeft:==:document . documentElement . clientLeft ;
var cellCount = _ ref . cellCount ;:==:var overscanCellsCount:==:_ ref . overscanCellsCount ;
var a = goog . functions . partialRight ( f , ' foo ' ) ;:==:var b:==:goog . functions . partialRight ( a , ' bar ' ) ;
var moment = require ( ' moment ' ) ;:==:var connect:==:require ( ' react - redux ' ) ;
var eye = SIMD . float32x4 ( eyeRef . x , eyeRef . y , eyeRef . z , 0 ) ;:==:var up:==:simd . float32x4 ( upRef . x , upRef . y , upRef . z , 0 ) ;
var NUMBER3 = C . NUMBER3 = 0x53 ;:==:var STRING1:==:C . STRING1    0x61 ;
var components = geometry . components ;:==:var len:==:components . length ;
var eventId = result . eventId ;:==:var calendarId:==:result . calendarId ;
var fs = require ( ' fs ' ) ;:==:var jsdom:==:require ( ' jsdom ' ) . jsdom ;
var isDict = corePrimitives . isDict ;:==:var isRef:==:corePrimitives . isRef ;
var angle = angleAxis . dataToAngle ( data [ 1 ] ) ;:==:var coord:==:coordSys . coordToPoint ( [ radius , angle ] ) ;
var cone = spherical . cone ;:==:var magnitude:==:defaultValue ( spherical . magnitude , 1 . 0 ) ;
var texture = node . _ texture , rect = this . _ textureCoord ;:==:var dColor:==:this . _ displayedColor ;
var frame = this . client . findElement ( ' # lockscreen - frame ' ) ;:==:var hidden:==:frame . getAttribute ( ' aria - hidden ' )      ' true ' ;
var mediaStyle = _ props . mediaStyle ;:==:var overlay:==:_ props . overlay ;
var s = f ( srcValue . get ( ) ) ;:==:var d:==:dstValue . get ( ) ;
var codeMirror   = this . codeMirror ;:==:var mouseOrTouch:==:editormd . mouseOrTouch ;
var giMf = this . computeGiMf ( ) ;:==:var gw:==:this . computegw ( ) ;
var trace = cd [ 0 ] . trace ;:==:var t:==:cd [ 0 ] . t ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var onAfterValidate = jasmine . createSpy ( ' onAfterValidate ' ) ;:==:var syncSources:==:jasmine . createSpy ( ' syncSources ' ) ;
var yfov = camera . perspective . yfov ;:==:var xfov:==:camera . perspective . xfov ;
var fs = require ( ' hexo - fs ' ) ;:==:var yaml:==:require ( ' js - yaml ' ) ;
var title = ' test title : ' + Date . now ( ) ;:==:var tag:==:' test tag : ' + Date . now ( ) ;
var loops = isLoop ? cc . repeat_forever : ( ( isNan ( loopsTemp ) ) ? 1 : loopsTemp ) ;:==:var restoreOriginalFrame:==:( animationDict [ ' restoreOriginalFrame ' ] & & animationDict [ ' restoreOriginalFrame ' ]     true ) ? true : false ;
var collab = options . collab ;:==:var packaging:==:options . packaging ;
var app = req . app ;:==:var registry:==:app . registry ;
var s = goog . isDef ( opt_precision ) ? num . toFixed ( opt_precision ) : string ( num ) ;:==:var index:==:s . indexOf ( ' . ' ) ;
var deepPurple300 = exports . deepPurple300 = ' # 9575cd ' ;:==:var deepPurple400:==:exports . deepPurple400    ' # 7e57c2 ' ;
var selectedImagery = this . selectedImagery ;:==:var selectedTerrain:==:this . selectedTerrain ;
var extname = path . extname ;:==:var dirname:==:path . dirname ;
var db = syncBrowserdb . db . _ db ;:==:var transaction:==:db . transaction ( dbos_visits , ' readwrite ' ) ;
var a23 = this . a23 ;:==:var a31:==:this . a31 ;
var data = this . data ;:==:var container:==:this . container ;
var flaverr = require ( ' flaverr ' ) ;:==:var parley:==:require ( ' parley ' ) ;
var y1 = this . y1 _ ;:==:var y2:==:this . y2 _ ;
var sinon = require ( ' sinon ' ) ;:==:var Store:==:require ( ' connect ' ) . session . memoryStore ;
var components = $ ( ' . docs - components ' ) ;:==:var platform:==:$ ( this ) . attr ( ' data - platform ' ) ;
var susp = suspension_stack [ i ] ;:==:var code:==:repl . sk_code_editor . getLine ( susp . lineno - 1 ) ;
var has = require ( ' has ' ) ;:==:var sanitize:==:require ( ' htmlescape ' ) . sanitize ;
var PREDEFINED_TYPE = ' PREDEFINED_TYPE ' ;:==:var PROPERTY_METHOD_ASSIGNMENT:==:' PROPERTY_METHOD_ASSIGNMENT ' ;
var left = drawOptions . left ;:==:var top:==:drawOptions . top ;
var assert = require ( ' assert ' ) ;:==:var Buffer:==:require ( ' safe - buffer ' ) . Buffer ;
var debug = require ( ' debug ' ) ( ' analytics : entity ' ) ;:==:var defaults:==:require ( ' defaults ' ) ;
var o = 0o765 ;:==:var o1:==:0o102 ;
var dynCall_i = Module [ ' dynCall_i ' ] = asm [ ' dynCall_i ' ] ;:==:var dynCall_vi:==:Module [ ' dynCall_vi ' ]    asm [ ' dynCall_vi ' ] ;
var word = select ( ' # word ' ) . value ( ) ;:==:var score:==:select ( ' # scoreinput ' ) . value ( ) ;
var token = this . tokens [ i ] ;:==:var t:==:token . text ;
var add = new operatorNode ( ' + ' , ' add ' , [ a , a ] ) ;:==:var sub:==:new operatorNode ( ' - ' , ' subtract ' , [ a , a ] ) ;
var frontdoor = require ( ' frontdoor ' ) ;:==:var cacheFiles:==:options . cacheFiles ;
var followSurface = polyline . followSurface ;:==:var granularity:==:polyline . granularity ;
var origin = apps [ app ] . origin  |  |  null ;:==:var installOrigin:==:apps [ app ] . installOrigin  |  |  null ;
var lastX = instance . lastX ;:==:var lastY:==:instance . lastY ;
var path = require ( ' path ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var Selector = powerbi . data . Selector ;:==:var valueFormatter:==:powerbi . visuals . valueFormatter ;
var rowData = _ ref4 . rowData ;:==:var rowIndex:==:_ ref4 . rowIndex ;
var each = zrUtil . each ;:==:var filter:==:zrUtil . filter ;
var error = require ( ' http - error ' ) ;:==:var frontdoor:==:require ( ' frontdoor ' ) ;
var file = require ( ' file ' ) ;:==:var archiver:==:require ( ' archiver ' ) ;
var option = deviceSelectElement . options [ deviceSelectElement . selectedIndex ] ;:==:var device:==:option . device ;
var css = _ ref . prefix . css ;:==:var requiresPrefix:==:_ ref . requiresPrefix ;
var S = new Schema ( _ i d : String ) ;:==:var N:==:new Schema ( _ i d : Number ) ;
var accessorNode = math . expression . node . accessorNode ;:==:var constantNode:==:math . expression . node . constantNode ;
var transform = zrEl . transform ;:==:var scale:==:zrEl . scale ;
var def = $ ( ' def-4 ' ) ;:==:var jkl:==:$ ( ' jkl-4 ' ) ;
var l = arr1 . length ;:==:var equalsFn:==:opt_equalsfn  |  |  goog . array . defaultCompareEquality ;
var entityType = entityTypeName & & mappingContext . entityManager . metadataStore . _ getEntityType ( entityTypeName , true ) ;:==:var propertyName:==:nodeContext . propertyName ;
var inverse = targetAxisModel & & targetAxisModel . get ( ' inverse ' ) ;:==:var barGroup:==:this . _ displayables . barGroup ;
var debuggerModel = target . debuggerModel ;:==:var workspace:==:debuggerWorkspaceBinding . _ workspace ;
var operation = req . service . api . operations [ req . operation ] ;:==:var httpRequest:==:req . httpRequest ;
var Site = require ( ' Site ' ) ;:==:var Hero:==:require ( ' Hero ' ) ;
var authorPool = ws . authorPoolParsed ;:==:var colorPool:==:ws . colorPoolParsed ;
var isValidUrl = sharedUtil . isValidUrl ;:==:var util:==:sharedUtil . util ;
var topo = this . topos [ wrapper ] ;:==:var g:==:document . createElementns ( this . ns , ' g ' ) ;
var question = imports [ ' dialog . question ' ] . show ;:==:var apf:==:imports . apf ;
var dialog = $ ( templates . dialog ) ;:==:var body:==:dialog . find ( ' . modal - body ' ) ;
var controllerQuaternion = this . controllerQuaternion ;:==:var controllerEuler:==:this . controllerEuler ;
var category = spec . category ;:==:var timeout:==:( spec . timeout     undefined ) ? TIMEOUT : spec . timeout ;
var domUtils = baidu . editor . dom . domUtils ;:==:var editor:==:new baidu . editor . editor ( ' autoFloatEnabled ' : false ) ;
var task1 = ' task1 ' ;:==:var task2:==:' task2 ' ;
var innerHTML = Object . getOwnPropertyDescriptor ( element . prototype , ' innerhtml ' ) ;:==:var removeAttribute:==:proto . removeAttribute ;
var c = new Mongo . Collection ( Random . i d ( ) ) ;:==:var rawCollection:==:c . rawCollection ( ) ;
var chalk   = require ( ' chalk ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var left = frustum . left ;:==:var near:==:frustum . near ;
var mimeType = webInspector . resourceType . mimeTypesForExtensions [ extension . toLowerCase ( ) ] ;:==:var sourceContent:==:this . sourceContent ( sourceurl ) ;
var pinkA100 = exports . pinkA100 = ' # ff80ab ' ;:==:var pinkA200:==:exports . pinkA200    ' # ff4081 ' ;
var header = frame . header ;:==:var nch:==:header . nchannels ( ) ;
var dynCall_ii = Module [ ' dynCall_ii ' ] = asm [ ' dynCall_ii ' ] ;:==:var dynCall_iff:==:Module [ ' dynCall_iff ' ]    asm [ ' dynCall_iff ' ] ;
var d = speed : 50 , wiggles : 3 , travel : 5 , callback : null ;:==:var o:==:jQuery . extend ( d , o ) ;
var parentHeight   = pair . value . parentHeight ;:==:var oldHeight:==:pair . value . oldHeight ;
var input = document . createElement ( ' input ' ) ;:==:var button:==:document . createElement ( ' button ' ) ;
var findSessionByuri = require ( ' findSessionByuri ' ) ;:==:var text:==:require ( ' f8Text ' ) ;
var winston = require ( ' winston ' ) ;:==:var express:==:require ( ' express ' ) ;
var assert = require ( ' assert ' ) ;:==:var vows:==:require ( ' vows ' ) ;
var b = s . bottom ;:==:var p:==:this . properties ;
var nodes = this . nodes ;:==:var node:==:nodes [ idx ] ;
var worldAlpha = graphics . worldAlpha ;:==:var len:==:graphics . graphicsData . length ;
var child = ast . children [ i ] ;:==:var n:==:this . findNode ( child , pos ) ;
var w = bb . width ;:==:var h:==:bb . height ;
var debug   = require ( ' debug ' ) ( ' pm2 : satan ' ) ;:==:var util:==:require ( ' util ' ) ;
var o = self . overlays [ i ] ;:==:var s:==:o . computeMaxSize ( self . connector ) ;
var i = trace . a2i ( aval ) ;:==:var j:==:trace . b2j ( bval ) ;
var backFunction = stencilTest . backFunction ;:==:var reference:==:stencilTest . reference ;
var match = sinon . match ;:==:var stub:==:sinon . stub ;
var key = req . param ( ' key ' ) ;:==:var flagged:==:req . param ( ' flagged ' )  |  |  false ;
var setCustomer = denodeify ( customer . setCustomer ) . bind ( customer ) ;:==:var setProAccount:==:denodeify ( models . user . setProAccount ) . bind ( models . user ) ;
var newOptionCreator = _ props4 . newOptionCreator ;:==:var shouldKeyDownEventCreateNewOption:==:_ props4 . shouldKeyDownEventCreateNewOption ;
var keyCommandPlainDelete = require ( ' keyCommandPlainDelete ' ) ;:==:var keyCommandMoveSelectionToEndOfBlock:==:require ( ' keyCommandMoveSelectionToEndOfBlock ' ) ;
var typeAnnotation = this . transformAny ( tree . typeAnnotation ) ;:==:var initializer:==:this . transformAny ( tree . initializer ) ;
var blueGrey900 = exports . blueGrey900 = ' # 263238 ' ;:==:var grey50:==:exports . grey50    ' # fafafa ' ;
var denodeify = require ( ' denodeify ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var fs = require ( ' fs ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var style = _ props4 . style ;:==:var tabIndex:==:_ props4 . tabIndex ;
var geometry = segmentData . geometry ;:==:var depth:==:segmentData . depth ;
var stringIteratorNextIndex = symbol ( ' stringIteratorNextIndex ' ) ;:==:var stringIterator:==:function stringIterator ( ) ;
var bars = this . bars = options . bars ;:==:var interactors:==:this . interactors    options . interactors ;
var kaefer = require ( ' kaefer ' ) ;:==:var smith:==:require ( ' smith ' ) ;
var count = offsets [ j ] . count ;:==:var index:==:offsets [ j ] . index ;
var RUNTIME = traceur . syntax . predefinedName . runtime ;:==:var slice:==:traceur . syntax . predefinedName . slice ;
var value = spec . value ;:==:var type:==:spec . type ;
var path = require ( ' path ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var icon = el . getAttribute ( ' data - icon ' ) ;:==:var disabled:==:el . getAttribute ( ' data - disabled ' ) !    null ;
var body = tbody ( ) ;:==:var table:==:this . dom _ . createDom ( ' table ' , null , head , body ) ;
var reactNative = require ( ' reactNative ' ) ;:==:var view:==:require ( ' view ' ) ;
var dt = this . s . dt ;:==:var width:==:$ ( window ) . width ( ) ;
var tabManager = imports . tabManager ;:==:var save:==:imports . save ;
var name = options . entity . name ;:==:var baseClass:==:options . baseClass  |  |  ' base ' ;
var w = this . _ element . width ;:==:var h:==:this . _ element . height ;
var util = require ( ' util ' ) ;:==:var timers:==:require ( ' timers ' ) ;
var halfAxes = orientedBoundingBox . halfAxes ;:==:var u:==:matrix3 . getColumn ( halfAxes , 0 , fromOrientedBoundingBoxScratchu ) ;
var event = segment . event ;:==:var url:==:event . url ;
var fork = require ( ' child_process ' ) . fork ;:==:var async:==:require ( ' async ' ) ;
var selectorsInterface = scope . selectorsInterface ;:==:var mixin:==:scope . mixin ;
var moduleObj = link . moduleObj ;:==:var importerSetters:==:load . importerSetters ;
var name = data . users [ j ] . name ;:==:var sim:==:similarityScores [ name ] ;
var config = this . config ;:==:var lineHeight:==:config . lineHeight ;
var leftRightMarginLimit = this . leftRightMarginLimit ;:==:var layers:==:this . layers ;
var test   = require ( ' utest ' ) ;:==:var poolConfig:==:common . poolConfig ;
var position = labelPos . position ;:==:var width:==:textRect . width + paddings [ 1 ] + paddings [ 3 ] ;
var mime = require ( ' mime ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var remRadian = numberUtil . remRadian ;:==:var isRadianAroundZero:==:numberUtil . isRadianAroundZero ;
var keepCollapsedContent = _ props4 . keepCollapsedContent ;:==:var onRest:==:_ props4 . onRest ;
var partialEvaluator = coreEvaluator . partialEvaluator ;:==:var annotation:==:coreAnnotation . annotation ;
var deepEqual = utils . deepEqual ;:==:var hooks:==:require ( ' hooks - fixed ' ) ;
var y = o . y ;:==:var x:==:o . x ;
var definition = descriptor . definition ;:==:var config:==:descriptor . config ;
var opt    = new proxyOption ( ) . mergeDeep ( bs . options . get ( ' proxy ' ) ) ;:==:var proxy:==:httpProxy . createProxyServer ( opt . get ( ' proxyOptions ' ) . set ( ' target ' , opt . get ( ' target ' ) ) . tojs ( ) ) ;
var React = require ( ' React ' ) ;:==:var unindent:==:require ( ' unindent ' ) ;
var tooltipManager = powerbi . visuals . tooltipManager ;:==:var legend:==:powerbi . visuals . legend ;
var inputValueTracking = require ( ' inputValueTracking ' ) ;:==:var getEventTarget:==:require ( ' getEventTarget ' ) ;
var profile = _ ref . profile ;:==:var expires_at:==:_ ref . expires_at ;
var events = require ( ' events ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' nodemon ' ) ;
var path = require ( ' path ' ) ;:==:var dirname:==:path . dirname ;
var Buffer = buffer . Buffer ;:==:var slowBuffer:==:buffer . slowBuffer ;
var pathMap = ref . pathMap ;:==:var nameMap:==:ref . nameMap ;
var redis = config . redis ;:==:var intercept:==:require ( ' intercept - stdout ' ) ;
var onCompletion = $ parse ( attrs . onCompletion )  |  |  null ;:==:var forceCaret:==:typeof attrs . forceCaret !    ' undefined ' ? true : false ;
var relation = unfetchedCar . relation ( ' wheels ' ) ;:==:var query:==:relation . query ( ) ;
var TYPE_PARAMETER = ' TYPE_PARAMETER ' ;:==:var TYPE_PARAMETERS:==:' TYPE_PARAMETERS ' ;
var literalExpression = traceur . syntax . trees . literalExpression ;:==:var memberExpression:==:traceur . syntax . trees . memberExpression ;
var source = hexo . source ;:==:var File:==:source . File ;
var data = node . data ;:==:var len:==:data . length ;
var asset = loaderData . json . asset  |  |  ;:==:var version:==:gltfFileLoader . _ parseVersion ( asset . version ) ;
var View = require ( ' View ' ) ;:==:var Item:==:Picker . Item ;
var resx = args [ ' resx ' ] ;:==:var resy:==:args [ ' resy ' ] ;
var added = addedObjects . values ;:==:var removedObjects:==:this . _ removedObjects ;
var near = this . cameraP . near ;:==:var far:==:this . cameraP . far ;
var emulateHTTP = Backbone . emulateHTTP ;:==:var emulateJSON:==:Backbone . emulateJSON ;
var south = rectangle . south ;:==:var north:==:rectangle . north ;
var pop = this . $ _ _ . populate  |  |  ( this . $ _ _ . populate = ) ;:==:var args:==:utils . args ( arguments ) ;
var target = event . target  |  |  event . srcElement ;:==:var ctrlKey:==:event . ctrlKey ;
var words = wordArray . words ;:==:var sigBytes:==:wordArray . sigBytes ;
var a = arguments ;:==:var f:==:afuture ( ) ;
var seriesIndex = payload . seriesIndex ;:==:var dataIndex:==:payload . dataIndex ;
var mime = target . getAttribute ( ' data - mime ' ) ;:==:var type:==:target . getAttribute ( ' data - type ' ) ;
var mrow = cTop . createElement ( ' mrow ' ) ;:==:var mi:==:cTop . createElement ( ' mi ' ) ;
var width = value . bounds . width ( ) ;:==:var height:==:value . bounds . height ( ) ;
var winston = require ( ' winston ' ) ;:==:var validator:==:require ( ' validator ' ) ;
var p    = require ( ' path ' ) ;:==:var blessed:==:require ( ' blessed ' ) ;
var inherits = _ dereq _ ( ' inherits ' ) ;:==:var Buffer:==:_ dereq _ ( ' buffer ' ) . Buffer ;
var sass = require ( ' gulp - ruby - sass ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var userAgent = navigator . userAgent ;:==:var platform:==:navigator . platform ;
var name = model . name ;:==:var package:==:model . package ;
var size = _ _ webpack_require _ _ ( 3 ) . size ;:==:var maxArgumentCount:==:_ _ webpack_require _ _ ( 37 ) . maxArgumentCount ;
var column = _ ref5 . column ;:==:var index:==:_ ref5 . index ;
var monthStart = calc . monthStart ;:==:var performance:==:require ( ' performance ' ) ;
var target = document . getElementById ( ' target ' ) ;:==:var doc:==:target . document  |  |  target . ownerDocument  |  |  target ;
var renderWatch = nv . utils . renderWatch ( dispatch ) ;:==:var style:==:stacked . style ( ) ;
var moduleExpression = traceur . syntax . trees . moduleExpression ;:==:var moduleRequire:==:traceur . syntax . trees . moduleRequire ;
var max = parseFloat ( range . attr ( ' max ' ) ) ;:==:var min:==:parseFloat ( range . attr ( ' min ' ) ) ;
var jsonalyzer = imports [ ' jsonalyzer ' ] ;:==:var preferences:==:imports . preferences ;
var dim   = _ dim  |  |  false ;:==:var text:==:_ text  |  |  ' Warning ' ;
var LABELLED_STATEMENT = ' LABELLED_STATEMENT ' ;:==:var LITERAL_EXPRESSION:==:' LITERAL_EXPRESSION ' ;
var e = exp + dexp ;:==:var power:==:powerbi . Double . pow10 ( e ) ;
var c9 = imports . c9 ;:==:var layout:==:imports . layout ;
var bindingElement = traceur . syntax . trees . bindingElement ;:==:var block:==:traceur . syntax . trees . block ;
var options = this . options ;:==:var $ slides:==:this . $ slides ;
var resp = fxaModuleErrors . responseToParams ( response ) ;:==:var message:==:errorsObject [ key ] . message ;
var y = pointer . pageY - newbbox . scrollBodyTop ;:==:var x:==:pointer . pagex - newbbox . scrollBodyLeft ;
var segment = this . _ segments [ i ] ;:==:var handleIn:==:segment . _ handleIn ;
var iks = this . mesh . geometry . iks ;:==:var bones:==:this . mesh . skeleton . bones ;
var sanitize = require ( ' sanitize - filename ' ) ;:==:var url:==:require ( ' url ' ) ;
var reject = follower . _ rejectionHandlerAt ( index ) ;:==:var promise:==:follower . _ promiseAt ( index ) ;
var format = require ( ' util ' ) . format ;:==:var assert:==:require ( ' assert ' ) ;
var noInterop = ! ! this . opts . noInterop ;:==:var scope:==:path . scope ;
var x = _ this . _ viewer . mousex ;:==:var y:==:_ this . _ viewer . mousey ;
var models = _ _ alloyId34 . models ;:==:var len:==:models . length ;
var min = idx . min ( ) ;:==:var max:==:idx . max ( ) ;
var parent = range . parentElement ( ) ;:==:var htmlText:==:range . htmlText ;
var o = goog . style . getPageOffset ( element ) ;:==:var s:==:goog . style . getSize ( element ) ;
var key = keys [ i ] ;:==:var symbol:==:this . symbols [ key ] ;
var x = particle . x ;:==:var y:==:particle . y ;
var clip = this . clip ;:==:var words:==:this . words ;
var bban = ibanFormat . bban [ b ] ;:==:var c:==:bban . count ;
var diagram = this . diagram ;:==:var font:==:this . font _ ;
var applyEntityToContentBlock = require ( ' applyEntityToContentBlock ' ) ;:==:var getSampleStateForTesting:==:require ( ' getSampleStateForTesting ' ) ;
var assert = require ( ' assert ' ) ;:==:var client:==:marionette . client ( ) ;
var HIERARCHY_REQUEST_ERR   = exceptionCode . hierarchy_request_err   = ( ( exceptionMessage [ 3 ] = ' hierarchy request error ' ) , 3 ) ;:==:var wrong_document_err:==:exceptionCode . wrong_document_err      ( ( exceptionMessage [ 4 ]   ' wrong document ' ) , 4 ) ;
var a = require ( ' comp_a ' ) ;:==:var a:==:require ( ' comp_a ' ) ;
var splitText = this . _ dd_splittext ( text ) ;:==:var l:==:splitText . length ;
var oldId = event . data . oldId ;:==:var newName:==:event . data . newName ;
var valueSpec = options . valueSpec ;:==:var objectElementValidators:==:options . objectElementValidators  |  |  ;
var modelMatrix = matrix4 . clone ( defaultValue ( options . modelMatrix , matrix4 . identity ) ) ;:==:var length:==:defaultValue ( options . length , 10000 . 0 ) ;
var angle = this . angle , dotRadius = 5 , dataPoints = this . getDataPoints ( series ) ;:==:var stack:==:d3 . layout . stack ( ) ;
var a = accessors [ accessorId ] ;:==:var extensions:==:a . extensions ;
var encoding = params . encoding ;:==:var fetchBuiltIncMap:==:params . fetchBuiltIncMap ;
var key = this . key ;:==:var outlineType:==:this . outlineType ;
var instance = options . instance ;:==:var gapSize:==:options . gapSize ;
var domain = domains [ i ] ;:==:var types:==:domain [ ' types ' ]  |  |  [ ] ;
var tile = context . tiles [ tileIndex ] ;:==:var layersCount:==:tile . codingStyleDefaultParameters . layersCount ;
var forceFunction = options . forceFunction ;:==:var maxLength:==:options . maxLength ;
var regex = this . _ regexes [ processorIndex ] ;:==:var processor:==:this . _ processors [ processorIndex ] ;
var page = data . page - 1 ;:==:var failure:==:data . failure ;
var rec = this . records [ index ] ;:==:var recid:==:rec ? rec . recid : null ;
var dom = goog . dom . getDomHelper ( element ) ;:==:var body:==:dom . getDocument ( ) . body ;
var dragging = options . dragging  |  |  this . dragging ;:==:var forceZoomChange:==:options . forceZoomChange ;
var min = options . min_font  |  |  10 ;:==:var max:==:options . max_font  |  |  20 ;
var t = condition ? new T ( ) : ;:==:var testCase:==:new goog . testing . testCase ( testCaseName ) ;
var cubicAt = curveTool . cubicAt ;:==:var quadraticDerivativeAt:==:curveTool . quadraticDerivativeAt ;
var forInTransformPass = traceur . codegeneration . generator . forInTransformPass ;:==:var generatorTransformer:==:traceur . codegeneration . generator . generatorTransformer ;
var frameState = scene . frameState ;:==:var shadowMaps:==:frameState . shadowHints . shadowMaps ;
var filter = spec . filter ;:==:var timeout:==:( spec . timeout     undefined ) ? TIMEOUT : spec . timeout ;
var previousCellSize = _ ref . previousCellSize ;:==:var previousScrollToAlignment:==:_ ref . previousScrollToAlignment ;
var documentFragment = scope . wrappers . documentFragment ;:==:var treeScope:==:scope . treeScope ;
var model = element ( by . binding ( ' model ' ) ) ;:==:var input:==:element ( by . i d ( ' input ' ) ) ;
var parent = node . parentElement ;:==:var shorthand:==:node . shorthand ;
var outer = ' outer ' ;:==:var baz:==:' baz outer ' ;
var assert = util . assert ;:==:var who:==:util . Module ( ' who ' ) ;
var ace = imports . ace ;:==:var util:==:imports . util ;
var w = this . size . w + ' px ' ;:==:var h:==:this . size . h + ' px ' ;
var symbol = this . symbolQuadsArray . get ( k ) . symbolQuad ;:==:var a:==:( symbol . anchorAngle + placementAngle + math . pi ) % ( math . pi * 2 ) ;
var webChannelDebug = goog . labs . net . webChannel . webChannelDebug ;:==:var wire:==:goog . labs . net . webChannel . wire ;
var settings = self . settings ;:==:var eventNS:==:self . eventNS ;
var f8Header = require ( ' f8Header ' ) ;:==:var f8SegmentedControl:==:require ( ' f8SegmentedControl ' ) ;
var dropDown = $ scope . dropDown ;:==:var items:==:dropDown . items ( ) ;
var win = opt_win  |  |  bot . getWindow ( ) ;:==:var doc:==:win . document ;
var mid = element . dataset [ ' mission_mid ' ] ;:==:var checked:==:! ! this . checkedMissions [ mid ] ;
var sn = msg . sn , type = msg . type , input = msg . data ;:==:var task:==:tasks [ sn ] ;
var animatorCommon = powerbi . visuals . animatorCommon ;:==:var dataLabelManager:==:powerbi . dataLabelManager ;
var binding = this . transformAny ( tree . binding ) ;:==:var initializer:==:this . transformAny ( tree . initializer ) ;
var Stream = coreStream . stream ;:==:var jpegStream:==:coreStream . jpegStream ;
var deltaY = event . wheelDeltay  |  |  event . deltay ;:==:var deltax:==:event . wheelDeltax  |  |  event . deltax ;
var createScratchCanvas = displayCanvas . createScratchCanvas ;:==:var metadata:==:displayMetadata . metadata ;
var listView = require ( ' listView ' ) ;:==:var dimensions:==:require ( ' dimensions ' ) ;
var util = require ( ' gulp - util ' ) ;:==:var zip:==:require ( ' gulp - zip ' ) ;
var y = box . y + margin ;:==:var w:==:box . width - 2 * margin ;
var touchRippleColor = _ props3 . touchRippleColor ;:==:var touchRippleOpacity:==:_ props3 . touchRippleOpacity ;
var keyBindingUtil = require ( ' keyBindingUtil ' ) ;:==:var keys:==:require ( ' keys ' ) ;
var center = input . center ;:==:var offset:==:session . offsetDelta  |  |  ;
var imul = stdlib . Math . imul ;:==:var E:==:stdlib . Math . E ;
var extrude = queryBooleanValue ( trackNode , ' extrude ' , namespaces . kml ) ;:==:var length:==:math . min ( coordNodes . length , timeNodes . length ) ;
var p = options . p  |  |  2 ;:==:var q:==:options . q  |  |  3 ;
var slide = s . _ slides [ i ] ;:==:var progress:==:slide . progress ;
var panels = imports . panels ;:==:var breakpoints:==:imports . breakpoints ;
var file = options . file = path . normalize ( path . join ( extendDirectory , options . file ) ) ;:==:var dir:==:path . dirname ( file ) ;
var Plugin = imports . Plugin ;:==:var util:==:imports . util ;
var testCase = goog . require ( ' goog . testing . testCase ' ) ;:==:var jsunit:==:goog . require ( ' goog . testing . jsunit ' ) ;
var near = frustum . near ;:==:var far:==:frustum . far ;
var b = require ( ' comp_b ' ) ;:==:var b:==:require ( ' comp_b ' ) ;
var c = processDiagramCanvas . g . ellipse ( bx , by , 2 , 2 ) . attr ( stroke : color . slateGrey ) ;:==:var c:==:processDiagramCanvas . g . ellipse ( cx , cy , this . radius , this . radius ) . attr ( stroke : color . gainsboro ) ;
var skipDetail = options . skipDetail ;:==:var fragment:==:options . fragment ;
var url = Npm . require ( ' url ' ) ;:==:var path:==:Npm . require ( ' path ' ) ;
var tabs = this . tabs ;:==:var input:==:operation . input ;
var opts = this . _ opts ;:==:var wh:==:[ ' width ' , ' height ' ] [ whIdx ] ;
var line = gcode [ i ] . line ;:==:var percentage:==:gcode [ i ] . percentage ;
var start = offsets [ j ] . start ;:==:var count:==:offsets [ j ] . count ;
var listeningTo = this . _ listeningTo  |  |  ( this . _ listeningTo = ) ;:==:var listening:==:_ listening    listeningTo [ i d ] ;
var leftCalendar = this . leftCalendar ;:==:var rightCalendar:==:this . rightCalendar ;
var focus = this . helpers . focus ;:==:var multi:==:this . helpers . multi ;
var proto = Events . prototype ;:==:var slice:==:[ ] . slice ;
var coords = bot . action . prepareToInteractWith _ ( element , opt_coords ) ;:==:var mouse:==:opt_mouse  |  |  new bot . mouse ( ) ;
var up = camera . up ;:==:var dir:==:camera . direction ;
var icon = data . enabled ? ' icon - circle ' : ' icon - circle - blank ' ;:==:var disabled:==:( self . enableToggle ( data ) ) ? ' ' : ' disabled ' ;
var idbKeyRange = window . idbKeyRange  |  |  window . webkitidbKeyRange ;:==:var idbTransaction:==:window . idbTransaction  |  |  window . webkitidbTransaction  |  |  ;
var Errors   = common . Errors ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var error = details . error ;:==:var status:==:details . status ;
var realpath = this . realpath = _ . isAbsolute ( self . fullname ) & & _ . exists ( self . fullname ) ? _ ( self . fullname ) : _ . realpathSafe ( self . fullname ) ;:==:var realpathNoExt:==:this . realpathNoExt    self . rest ;
var compare = grunt . option ( ' compare ' ) ;:==:var update:==:grunt . option ( ' update ' ) ;
var dashNb = options . dashNb ;:==:var dashSize:==:options . dashSize ;
var className = _ props2 . className ;:==:var disabled:==:_ props2 . disabled ;
var loadingPlaceholder = _ props3 . loadingPlaceholder ;:==:var placeholder:==:_ props3 . placeholder ;
var $ location = $ injector . get ( ' $ location ' ) ;:==:var $ rootScope:==:$ injector . get ( ' $ rootScope ' ) ;
var interaction = that . interactions [ interactionIndex ] ;:==:var request:==:interaction . requests [ requestIndex ] ;
var colorSpace = coreColorSpace . colorSpace ;:==:var objectLoader:==:coreObj . objectLoader ;
var pack = encodeAsString ( deconstruction . packet ) ;:==:var buffers:==:deconstruction . buffers ;
var domChildrenOperations = require ( ' domChildrenOperations ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var div = ownerDocument . createElement ( ' div ' ) ;:==:var type:==:this . _ currentElement . type ;
var isAvailable = entity . isAvailable ( time ) ;:==:var outlineColor:==:property . getValueOrDefault ( this . _ outlineColorProperty , time , color . black ) ;
var cache = require ( ' gulp - cached ' ) ;:==:var progeny:==:require ( ' gulp - progeny ' ) ;
var extent = frameState . extent ;:==:var viewState:==:frameState . viewState ;
var index = g . _ index ;:==:var ptr:==:g . _ ptr ;
var dataShapeBindingDataReduction = powerbi . data . dataShapeBindingDataReduction ;:==:var inheritSingle:==:powerbi . prototype . inheritSingle ;
var fixedTop = this . options . fixedTop ;:==:var scrollTop:==:$ scroller . scrollTop ( ) ;
var brotliInput = _ _ webpack_require _ _ ( 275 ) . brotliInput ;:==:var brotliOutput:==:_ _ webpack_require _ _ ( 275 ) . brotliOutput ;
var n = TO_LENGTH ( array . length ) ;:==:var m:==:arguments . length ;
var apf = imports . apf ;:==:var Menu:==:imports . Menu ;
var user = options . user ;:==:var project:==:options . project ;
var url = this . find ( ' [ data - url ] ' ) . val ( ) ;:==:var title:==:this . find ( ' [ data - title ] ' ) . val ( ) ;
var isScrolling = _ ref3 . isScrolling ;:==:var width:==:_ ref3 . width ;
var certificateStores = windows . security . cryptography . certificates . certificateStores ;:==:var standardCertificateStoreNames:==:windows . security . cryptography . certificates . standardCertificateStoreNames ;
var geometry = task . geometry ;:==:var moduleName:==:task . moduleName ;
var Previewer = imports . Previewer ;:==:var ui:==:imports . ui ;
var a = aObj . _ startDatems ;:==:var b:==:bObj . _ startDatems ;
var o = escapeRegExp ( openTag ) ;:==:var c:==:escapeRegExp ( closeTag ) ;
var transitionDuration = timings . transitionDuration ;:==:var animationDuration:==:timings . animationDuration ;
var frustum = camera . frustum ;:==:var aspectRatio:==:frustum . aspectRatio ;
var row = kvDocsRes . rows [ i ] ;:==:var doc:==:row . doc ;
var timeoutError = subError ( ' timeoutError ' , ' timeout error ' ) ;:==:var aggregateError:==:subError ( ' aggregateError ' , ' aggregate error ' ) ;
var find = imports . find ;:==:var save:==:imports . save ;
var qName = a . qName ;:==:var value:==:a . value ;
var prefixer = require ( ' gulp - autoprefixer ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var startContainer = rangeObject . startContainer ;:==:var endContainer:==:rangeObject . endContainer ;
var Controller = _ fxosMvcDistMvc . controller ;:==:var deviceNameService:==:_ appJsServicesDeviceNameService [ ' default ' ] ;
var param = params [ pname ] ;:==:var semantic:==:param . semantic ;
var string = util . string ;:==:var array:==:util . array ;
var ALIAS_KEYS = exports . ALIAS_KEYS = ;:==:var NODE_FIELDS:==:exports . NODE_FIELDS    ;
var arg = a . arg ( ) ;:==:var abs:==:a . abs ( ) ;
var byteLength = aws . util . string . byteLength ;:==:var buffer:==:aws . util . buffer ;
var method = command . method ;:==:var args:==:command . args ;
var width = shape . width ;:==:var x:==:shape . x ;
var parentNode = unwrap ( parentNodeWrapper ) ;:==:var newChild:==:unwrap ( newChildWrapper ) ;
var bottomOverlay = this . bottomOverlay . clone ? this . bottomOverlay . clone . wtTable . holder : null ;:==:var leftOverlay:==:this . leftOverlay . clone . wtTable . holder ;
var h = img . naturalHeight ;:==:var canvas:==:document . getElementById ( canvasid ) ;
var label = _ ref5 . label ;:==:var labelKey:==:_ ref5 . labelKey ;
var config = _ _ dependency1 _ _ . config ;:==:var configure:==:_ _ dependency1 _ _ . configure ;
var canvas = self . canvas ;:==:var aspectRatio:==:options . aspectRatio ;
var CONNECTION_STRING = DEFAULT_CONNECTION_STRING ;:==:var rules:==:default_rules ;
var currentSegments = state . currentSegments ;:==:var headSegments:==:state . headSegments ;
var createArgumentList = parseTreeFactory . createArgumentList ;:==:var createAssignStateStatement:==:parseTreeFactory . createAssignStateStatement ;
var width = columns [ columnIndex ] . _ auto_width ;:==:var property:==:columns [ columnIndex ] . property ;
var points = polygon [ ' points ' ] ;:==:var len:==:points . length ;
var height = imgData . height ;:==:var fillColor:==:this . current . fillColor ;
var DOM = domUtils . dom , themeManager = addOnManager . themeManager , pluginManager = addOnManager . pluginManager ;:==:var extend:==:tools . extend , each    tools . each , explode    tools . explode ;
var data = opt_data  |  |  null ;:==:var headers:==:opt_headers  |  |  ;
var registerWrapper = scope . registerWrapper ;:==:var setWrapper:==:scope . setWrapper ;
var path = require ( ' path ' ) ;:==:var architect:==:require ( ' architect ' ) ;
var getSerifFonts = coreStandardFonts . getSerifFonts ;:==:var getSymbolsFonts:==:coreStandardFonts . getSymbolsFonts ;
var babelify = require ( ' babelify ' ) ;:==:var babel:==:require ( ' gulp - babel ' ) ;
var store = new datastore ( args ) ;:==:var d:==:new doh . Deferred ( ) ;
var x = Math . max ( rect . x , 0 ) ;:==:var y:==:Math . max ( rect . y , 0 ) ;
var s = this . m_ctx ;:==:var drawScale:==:this . m_drawscale ;
var stagger = elementData . stagger ;:==:var itemIndex:==:elementData . itemIndex ;
var replace = require ( ' replace ' ) ;:==:var prompt:==:require ( ' prompt ' ) ;
var width = endpointStyle . width  |  |  self . width ;:==:var height:==:endpointStyle . height  |  |  self . height ;
var createCharacterList = require ( ' createCharacterList ' ) ;:==:var decodeEntityRanges:==:require ( ' decodeEntityRanges ' ) ;
var significanceState = this . significanceState ;:==:var coefficentsMagnitude:==:this . coefficentsMagnitude ;
var shorthand = node . shorthand ;:==:var computed:==:node . computed ;
var file = files [ filename ] ;:==:var match:==:filename . match ( markupRegEx ) ;
var fs = require ( ' fs ' ) ;:==:var helmet:==:require ( ' helmet ' ) ;
var reactTreeTraversal = require ( ' reactTreeTraversal ' ) ;:==:var accumulateInto:==:require ( ' accumulateInto ' ) ;
var internalArray = utils . internalArray ;:==:var objectHasOwnProperty:==:utils . importNow ( ' objectHasOwnProperty ' ) ;
var interval = item . interval = [ ] ;:==:var close:==:item . close    [ 0 , 0 ] ;
var decoder = this . decoder ;:==:var contexts:==:this . contexts ;
var children = this . _ children ;:==:var column:==:columns [ colNum ] ;
var displayName = powerbi . dataViewObject . getValue ( forecastObject , forecastPropertyNames . displayName ) ;:==:var lineColor:==:powerbi . dataViewObject . getValue ( forecastObject , forecastPropertyNames . lineColor , forecastHelper . defaults . lineColor ) ;
var k = keys [ i ] ;:==:var t:==:env . tokenStack [ k ] ;
var sanitize = require ( ' htmlescape ' ) . sanitize ;:==:var shasum:==:require ( ' shasum ' ) ;
var width = game . cache . getImage ( images [ i ] ) . width ;:==:var height:==:game . cache . getImage ( images [ i ] ) . height ;
var index = value . indexOf ( c_newline ) ;:==:var length:==:value . length ;
var lastToucha = pinch . lastToucha ;:==:var lastTouchb:==:pinch . lastTouchb ;
var forceLayout = seriesModel . forceLayout ;:==:var layoutAnimation:==:seriesModel . get ( ' force . layoutAnimation ' ) ;
var highlight = $ ( ' . codeMirror - gutter - text . ' + highlightClass , wrapper ) ;:==:var svg:==:document . createElementns ( svg_ns , ' svg ' ) ;
var secondsFormat = $ dateFormatter . secondsFormat ( format ) ;:==:var showSeconds:==:$ dateFormatter . showSeconds ( format ) ;
var f = ( b . mb _ [ b . mb_off ] . type _ = = 1 ) + 0 ;:==:var g:==:b . mb _ [ b . mb_off ] . segment _ ;
var fillAlpha = g . getNumericOption ( ' fillAlpha ' , setName ) ;:==:var stepPlot:==:g . getBooleanOption ( ' stepPlot ' , setName ) ;
var ALL_PANES    = ' ALL_PANES ' ;:==:var ACTIVE_PANE:==:' ACTIVE_PANE ' ;
var clockseq = ( options . clockseq ! = null ) ? options . clockseq : _ clockseq ;:==:var msecs:==:( options . msecs !   null ) ? options . msecs : new Date ( ) . getTime ( ) ;
var kind = opts . kind  |  |  ' var ' ;:==:var blockHoist:==:opts . _ blockHoist     null ? 2 : opts . _ blockHoist ;
var sizeRandomness = options . sizeRandomness ! = = undefined ? options . sizeRandomness : 0 ;:==:var smoothPosition:==:options . smoothPosition !    undefined ? options . smoothPosition : false ;
var Emitter = require ( ' events ' ) . eventEmitter ;:==:var sliced:==:require ( ' sliced ' ) ;
var GAIA_APP_CONFIG = utils . getEnv ( ' gaia_app_config ' ) ;:==:var gaia_dir:==:utils . getEnv ( ' gaia_dir ' ) ;
var x = cx + 2*delta [ 0 ] ;:==:var y:==:cy + 2*delta [ 1 ] ;
var cardTitleSettings = this . data . cardTitleSettings ;:==:var dataLabelsSettings:==:this . data . dataLabelsSettings ;
var dashNb = options . dashNb  |  |  200 ;:==:var points:==:options . points ;
var w = game . world . width + margin * 2 ;:==:var h:==:game . world . height + margin * 2 ;
var createVariableDeclarationList = traceur . codegeneration . parseTreeFactory . createVariableDeclarationList ;:==:var createYieldStatement:==:traceur . codegeneration . parseTreeFactory . createYieldStatement ;
var codeLength = lzwState . codeLength ;:==:var prevCode:==:lzwState . prevCode ;
var line = cur . line ;:==:var ch:==:cur . ch ;
var blocksPerLine = component . blocksPerLine ;:==:var blocksPerColumn:==:component . blocksPerColumn ;
var cellDataKey = _ ref . cellDataKey ;:==:var columnData:==:_ ref . columnData ;
var build = imports . build ;:==:var fs:==:imports . fs ;
var tailNode1 = helper . getNode ( ' tailNode1 ' ) ;:==:var helperNode1:==:helper . getNode ( ' helperNode1 ' ) ;
var timeStamp = ev . $ manualTimeStamp  |  |  ev . timeStamp  |  |  date . now ( ) ;:==:var elapsedTime:==:parseFloat ( ev . elapsedTime . toFixed ( elapsed_time_max_decimal_places ) ) ;
var now = Date . now ( ) ;:==:var lastDisplayTime:==:this . session . lastDisplayTime ;
var moveToRow = settings . moveToRow ;:==:var moveToCol:==:settings . moveToCol ;
var setting2 = this . settings . setting2 ;:==:var setting3:==:this . settings . setting3 ;
var names = util . getArg ( sourceMap , ' names ' , [ ] ) ;:==:var sourceRoot:==:util . getArg ( sourceMap , ' sourceRoot ' , null ) ;
var x = options . x ;:==:var y:==:options . y ;
var translate = client . translate ;:==:var profile:==:client . sbx . data . profile ;
var eventPluginRegistry = require ( ' eventPluginRegistry ' ) ;:==:var reactBrowserEventEmitter:==:require ( ' reactBrowserEventEmitter ' ) ;
var getInnerhtml = scope . getInnerhtml ;:==:var mixin:==:scope . mixin ;
var appName = options . appName  |  |  testUtils . randomAppName ( ) ;:==:var templateApp:==:options . templateApp  |  |  ' simple - app ' ;
var nextProp = nextProps [ propKey ] ;:==:var lastProp:==:lastProps !   null ? lastProps [ propKey ] : undefined ;
var bind = require ( ' bind ' ) ;:==:var each:==:require ( ' each ' ) ;
var fs = require ( ' fs ' ) ;:==:var findit:==:require ( ' findit ' ) ;
var width = _ ref3 . width ;:==:var x:==:_ ref3 . x ;
var keyRange = target . dataset . keyRange ;:==:var data:==:this . dataSource [ index ] ;
var disableKeyboardFocus = _ props . disableKeyboardFocus ;:==:var keyboardFocused:==:_ props . keyboardFocused ;
var lex = require ( ' pug - lexer ' ) ;:==:var parse:==:require ( ' pug - parser ' ) ;
var Menu = imports . Menu ;:==:var menuItem:==:imports . menuItem ;
var callExpression = traceur . syntax . trees . callExpression ;:==:var caseClause:==:traceur . syntax . trees . caseClause ;
var textareaStyle = _ props . textareaStyle ;:==:var valueLink:==:_ props . valueLink ;
var navCon = this . getView ( ) . byId ( ' navCon ' ) ;:==:var target:==:evt . getSource ( ) . data ( ' target ' ) ;
var success = source . success ;:==:var error:==:source . error ;
var el = options . el ;:==:var props:==:options . props ;
var context = scene . _ context ;:==:var environmentState:==:scene . _ environmentState ;
var tab = tabs . focussedTab ;:==:var path:==:tab & & tab . path ;
var SCROLL_DIRECTION_FIXED = exports . SCROLL_DIRECTION_FIXED = 0 ;:==:var SCROLL_DIRECTION_FORWARD:==:exports . SCROLL_DIRECTION_FORWARD    1 ;
var to = args . to ;:==:var origin:==:args . origin ;
var cover = isUndefined ( v [ ' cover ' ] ) ? 0 : v [ ' cover ' ] ;:==:var zindex:==:isUndefined ( v [ ' zindex ' ] ) ? jsmenu [ ' zIndex ' ] [ ' menu ' ] : v [ ' zindex ' ] ;
var encoding = feed . encoding  |  |  ' UTF-8 ' ;:==:var reloadInterval:==:config . reloadInterval  |  |  5 * 60 * 1000 ;
var loading_icon = options . loading_icon  |  |  ' fa - spinner fa-2x orange ' ;:==:var loading_text:==:options . loading_text  |  |  '' ;
var i d = json . request_id ;:==:var div:==:$ ( ' < div > ' ) . attr ( ' i d ' , ' alert_div ' + i d ) . addClass ( ' vcode_div ' ) ;
var plumber = require ( ' gulp - plumber ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var tokenType = traceur . syntax . tokenType ;:==:var createBlock:==:parseTreeFactory . createBlock ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var assert:==:require ( ' chai ' ) . assert ;
var isStartish = eventPluginUtils . isStartish ;:==:var isMoveish:==:eventPluginUtils . isMoveish ;
var head = $ $ ( ' tr ' , ' goog - date - picker - head ' ) [ 0 ] ;:==:var year:==:$ $ ( ' button ' , ' goog - date - picker - year ' , head . firstChild ) [ 0 ] ;
var radii = Property . getValueOrUndefined ( ellipsoid . radii , time , radiiScratch ) ;:==:var modelMatrix:==:entity . _ getModelMatrix ( time , this . _ modelMatrix ) ;
var _ strlen = Module [ ' _ strlen ' ] = asm [ ' _ strlen ' ] ;:==:var _ memset:==:Module [ ' _ memset ' ]    asm [ ' _ memset ' ] ;
var selectedEntity = this . selectedEntity ;:==:var position:==:selectedEntity . position ;
var Media = Windows . Media ;:==:var storageLibrary:==:windows . storage . storageLibrary ;
var segment = segments [ i ] ;:==:var event:==:segment . event ;
var all = _ _ dependency4 _ _ . all ;:==:var hash:==:_ _ dependency5 _ _ . hash ;
var webpack = require ( ' webpack ' ) ;:==:var express:==:require ( ' express ' ) ;
var isOpened = _ props3 . isOpened ;:==:var style:==:_ props3 . style ;
var LOGICAL_OPERATORS = exports . LOGICAL_OPERATORS = [ '  |  |  ' , ' & & ' ] ;:==:var UPDATE_OPERATORS:==:exports . UPDATE_OPERATORS    [ ' + + ' , ' -- ' ] ;
var b = new symbolNode ( ' epsilon ' ) ;:==:var mult:==:new operatorNode ( ' * ' , ' multiply ' , [ a , b ] ) ;
var dynCall_viiiiiiii = Module [ ' dynCall_viiiiiiii ' ] = asm [ ' dynCall_viiiiiiii ' ] ;:==:var dynCall_viiiiii:==:Module [ ' dynCall_viiiiii ' ]    asm [ ' dynCall_viiiiii ' ] ;
var s = this . _ indexToValueInSpace ( hash , this . _ satSpace ) ;:==:var l:==:this . _ indexToValueInSpace ( hash , this . _ lightnessSpace ) ;
var createCommaExpression = parseTreeFactory . createCommaExpression ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var n = new rangeNode ( start , end ) ;:==:var e:==:new constantNode ( 3 ) ;
var db = new PouchDB ( dbs . name ) ;:==:var btoa:==:testUtils . btoa ;
var scheduler = instance . get ( ' scheduler ' ) ;:==:var firstDayOfWeek:==:scheduler . get ( ' firstDayOfWeek ' ) ;
var path = require ( ' path ' ) ;:==:var lie:==:require ( ' lie ' ) ;
var deliveryStatus = reports . deliveryStatus ;:==:var readStatus:==:reports . readStatus ;
var totalBytes = evt . totalBytes ;:==:var message:==:evt . message ;
var cm   = this . cm ;:==:var settings:==:this . settings ;
var response = ( ' response ' in xhr ) ? xhr . response : xhr . responseText ;:==:var status:==:xhr . status      1223 ? 204 : xhr . status ;
var contactAddress = contacts . contactAddress ;:==:var contactAddressKind:==:contacts . contactAddressKind ;
var experimental = imports [ ' preferences . experimental ' ] ;:==:var pluginManager:==:imports . pluginManager ;
var oldHeight    = pair . value . oldHeight ;:==:var newHeight:==:pair . value . newHeight ;
var indigo500 = exports . indigo500 = ' # 3f51b5 ' ;:==:var indigo600:==:exports . indigo600    ' # 3949ab ' ;
var isDefined = _ angular . isDefined ;:==:var isArray:==:_ angular . isArray ;
var renderDayOverlay = t . renderDayOverlay ;:==:var clearOverlays:==:t . clearOverlays ;
var Marked = require ( ' Marked ' ) ;:==:var excerptLink:==:require ( ' excerptLink ' ) ;
var createReturnStatement = parseTreeFactory . createReturnStatement ;:==:var createVariableDeclaration:==:parseTreeFactory . createVariableDeclaration ;
var affix = scrollTarget . find ( ' [ bs - affix ] ' ) ;:==:var width:==:affix . width ( ) ;
var axisHelper = powerbi . visuals . axisHelper ;:==:var dataViewObjects:==:powerbi . dataViewObjects ;
var svgIcon = _ context$muiTheme . svgIcon ;:==:var prepareStyles:==:_ context$muiTheme . prepareStyles ;
var LIST_TYPE = firepad . lineFormatting . list_type ;:==:var codeMirror:==:global . codeMirror ;
var seconds = d . seconds ( ) ;:==:var minutes:==:d . minutes ( ) ;
var sourcePosition = traceur . util . sourcePosition ;:==:var token:==:traceur . syntax . token ;
var l = walk ( node . left ) ;:==:var r:==:walk ( node . right ) ;
var o1 = foo : foo1 , that1 : ' that1 ' ;:==:var o2:==:foo : foo2 , that2 : ' that2 ' ;
var map = ctx . config . tag_map  |  |  ;:==:var name:==:this . name ;
var LENGTH = 28 ;:==:var DONE:==:29 ;
var panels = imports . panels ;:==:var Tree:==:imports . Tree ;
var s2 = _ s2 ;:==:var i2:==:_ i2 ;
var exists = fs . exists  |  |  path . exists ;:==:var async:==:require ( ' async ' ) ;
var asech = math . asech ;:==:var sech:==:math . sech ;
var length = enumerator . length ;:==:var promise:==:enumerator . promise ;
var wrapper = require ( ' gulp - wrapper ' ) ;:==:var to5:==:require ( ' gulp-6to5 ' ) ;
var height = $ ( cmScroll ) . height ( ) ;:==:var scrollTop:==:cmScroll . scrollTop ;
var child = element . children [ i ] ;:==:var text:==:$ . htmlClean . trim ( textClean ( isText ( child ) ? child : child . childrenToString ( ) ) ) ;
var setInterval = window . setInterval ;:==:var clearTimeout:==:window . clearTimeout ;
var child = childView ;:==:var el:==:this . $ element ;
var keywords = parserConfig . keywords  |  |  ;:==:var builtin:==:parserConfig . builtin  |  |  ;
var cos = math . cos ;:==:var complex:==:math . complex ;
var replace = require ( ' gulp - replace ' ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var menus = imports . menus ;:==:var tree:==:imports . tree ;
var strPtr = alias ( ' strPtr ' , ptr ( u8 ) ) ;:==:var userData:==:alias ( ' userData ' , voidPtr ) ;
var createObjectLiteralExpression = parseTreeFactory . createObjectLiteralExpression ;:==:var createParenExpression:==:parseTreeFactory . createParenExpression ;
var col = this . columns [ check ] ;:==:var span:==:( tmp & & tmp . colspan & & ! isNan ( tmp . colspan [ col . field ] ) ? parseInt ( tmp . colspan [ col . field ] ) : 1 ) ;
var Tab = imports . Tab ;:==:var Pane:==:imports . Pane ;
var url = Npm . require ( ' url ' ) . parse ( request . url ) ;:==:var pathname:==:url . pathname ;
var util = require ( ' util ' ) ;:==:var morgan:==:require ( ' morgan ' ) ;
var ctx = this . _ chart . ctx ;:==:var pointStyle:==:vm . pointStyle ;
var animations = this . get ( ' animations ' ) ;:==:var index:==:this . get ( ' index ' ) ;
var chai = require ( ' chai ' ) ;:==:var path:==:require ( ' path ' ) ;
var align = definition . align ;:==:var size:==:definition . size ;
var fragment = options . fragment ;:==:var reload:==:options . reload ;
var container = config . container ;:==:var shadowCanvas:==:this . shadowCanvas    document . createElement ( ' canvas ' ) ;
var browser = data . browser ;:==:var round:==:data . round ;
var panels = imports . panels ;:==:var util:==:imports [ ' collab . util ' ] ;
var path = require ( ' path ' ) ;:==:var Readable:==:require ( ' stream ' ) . Readable ;
var userIdentity = app . models . userIdentity ;:==:var userCredential:==:app . models . userCredential ;
var children = this . _ children ;:==:var storage:==:this . _ _ storage ;
var material = this . material ;:==:var matrixWorld:==:this . matrixWorld ;
var _ memmove = Module [ ' _ memmove ' ] = asm [ ' _ memmove ' ] ;:==:var _ strlen:==:Module [ ' _ strlen ' ]    asm [ ' _ strlen ' ] ;
var data = this . data ;:==:var bp:==:this . bp ;
var CR = treatment . CR  |  |  20 ;:==:var carbs:==:treatment . carbs  |  |  CR ;
var release = argv . release ? argv . release : false ;:==:var failTaskOnError:==:argv . failTaskOnError ? argv . failTaskOnError : false ;
var FORK = ' FORK ' ;:==:var JOIN:==:' JOIN ' ;
var TCP = process . binding ( ' tcp_wrap ' ) . TCP ;:==:var tcpConnectWrap:==:process . binding ( ' tcp_wrap ' ) . tcpConnectWrap ;
var beautify = require ( ' js - beautify ' ) . js_beautify ;:==:var readdir:==:Promise . promisify ( require ( ' recursive - readdir ' ) ) ;
var x , . . . y = z ;:==:var [ x ] : x , . . . y:==:z ;
var contentBox = instance . get ( ' contentBox ' ) ;:==:var ownerTree:==:instance . get ( ' ownerTree ' ) ;
var o = Ext . lib . Dom . getY ( c ) , j = o + c . offsetHeight ;:==:var i:==:ext . lib . event . getPagey ( h ) ;
var title = ( U . XML . getNodeText ( node )  |  |  node . getAttribute ( ' title ' )  |  |  '' ) ;:==:var image:==:node . getAttribute ( ' image ' ) ;
var minify = require ( ' gulp - minify - css ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var e = oEvent . originalEvent  |  |  oEvent ;:==:var button:==:e . buttons  |  |  e . which ;
var key = event . detail . key ;:==:var newIndex:==:event . detail . newIndex ;
var m = sinon . create ( matcher ) ;:==:var type:==:sinon . typeOf ( expectation ) ;
var mangledGlobalNames = init . mangledGlobalNames ;:==:var hasOwnProperty:==:object . prototype . hasOwnProperty ;
var path = require ( ' path ' ) ;:==:var faker:==:require ( ' faker ' ) ;
var edgeInsetsPropType = require ( ' edgeInsetsPropType ' ) ;:==:var nativeMethodsMixin:==:require ( ' nativeMethodsMixin ' ) ;
var flatCoordinates = this . flatCoordinates ;:==:var stride:==:this . stride ;
var parent = $ ( this ) . parents ( ' [ data - username ] ' ) ;:==:var action:==:$ ( this ) . attr ( ' data - action ' ) ;
var ownerDocument = nativeContainerInfo . _ ownerDocument ;:==:var node:==:ownerDocument . createComment ( nodeValue ) ;
var viewContainer = parentView . viewContainers [ boundElementIndex ] ;:==:var view:==:viewContainer . views [ index ] ;
var Symbol = traceur . semantics . symbols . Symbol ;:==:var symbolType:==:traceur . semantics . symbols . symbolType ;
var label = element . closest ( ' label ' ) ;:==:var i d:==:element . attr ( ' i d ' ) ;
var passwordResponses = sharedUtil . passwordResponses ;:==:var bytesToString:==:sharedUtil . bytesToString ;
var nameMap = monthLabel . get ( ' nameMap ' ) ;:==:var margin:==:monthLabel . get ( ' margin ' ) ;
var PIXEL_SIZE_INDEX = pointPrimitive . pixel_size_index ;:==:var scale_by_distance_index:==:pointPrimitive . scale_by_distance_index ;
var filter = arguments . filter ;:==:var update:==:arguments . update ;
var asset = compilation . assets [ filename ] ;:==:var source:==:asset . source ? asset . source ( ) : asset . _ value ;
var Principal = ctx . Principal ;:==:var accessRequest:==:ctx . accessRequest ;
var width = $ ( ' # view - canvas - map ' ) . prop ( ' width ' ) ;:==:var height:==:$ ( ' # view - canvas - map ' ) . prop ( ' height ' ) ;
var list = this . _ list ;:==:var groupKeyOf:==:this . _ groupKeyOf ;
var dataZoomModel = this . dataZoomModel ;:==:var size:==:this . _ size ;
var implementation = document . implementation ;:==:var createNodeIterator:==:document . createNodeIterator ;
var splitLongWords = _ require . splitLongWords ;:==:var truncateString:==:_ require . truncateString ;
var helpers = this . helpers ;:==:var models:==:this . models ;
var c9 = imports . c9 ;:==:var util:==:imports . util ;
var usesdkaspi = document . getElementById ( ' usesdkaspi ' ) . checked ;:==:var launchapp:==:document . getElementById ( ' launchapp ' ) . checked ;
var pathArray = options . pathArray ;:==:var closeArray:==:options . closeArray ;
var data = this . data ;:==:var nodes:==:this . _ nodes ;
var expertCharset = coreCharsets . expertCharset ;:==:var expertSubsetCharset:==:coreCharsets . expertSubsetCharset ;
var dynCall_dii = Module [ ' dynCall_dii ' ] = asm [ ' dynCall_dii ' ] ;:==:var dynCall_viiiiiii:==:Module [ ' dynCall_viiiiiii ' ]    asm [ ' dynCall_viiiiiii ' ] ;
var createCallExpression = parseTreeFactory . createCallExpression ;:==:var createCallStatement:==:parseTreeFactory . createCallStatement ;
var cp = require ( dirs . core + ' cp ' ) ;:==:var adapter:==:config [ config . adapter ] ;
var lineDash = state . lineDash ;:==:var lineDashOffset:==:state . lineDashOffset ;
var trustedDomains = _ extractAllDomains ( configOptions . trustedDomains ) ;:==:var len:==:trustedDomains . length ;
var eastWestNormal = cartesian3 . normalize ( westVector , eastWestNormalScratch ) ;:==:var south:==:rectangle . south ;
var settings = editor . settings ;:==:var skin:==:settings . skin !    false ? settings . skin  |  |  ' lightgray ' : false ;
var s = v1 . stringValue ( ) ;:==:var n:==:v2 . nodeSetValue ( ) ;
var thisExpression = traceur . syntax . trees . thisExpression ;:==:var tokenType:==:traceur . syntax . tokenType ;
var getLabelFormattedText = powerbi . visuals . dataLabelUtils . getLabelFormattedText ;:==:var equalWithPrecision:==:powerbi . double . equalWithPrecision ;
var scrollTop = this . container . scrollTop ;:==:var scrollHeight:==:this . container . scrollHeight ;
var createEmptyParameterList = parseTreeFactory . createEmptyParameterList ;:==:var createEmptyStatement:==:parseTreeFactory . createEmptyStatement ;
var noMic = $ ( ' # ' + this . videoSpanId + ' > . noMic ' ) ;:==:var noVideo:==:$ ( ' # ' + this . videoSpanId + ' > . noVideo ' ) ;
var params = paramsFromOptions ( options ) ;:==:var salt:==:( options & & options . salt )  |  |  random . secret ( ) ;
var PAGE_DONE_CHECK_TIMEOUT = process . env . PAGE_DONE_CHECK_TIMEOUT  |  |  300 ;:==:var RESOURCE_DOWNLOAD_TIMEOUT:==:process . env . RESOURCE_DOWNLOAD_TIMEOUT  |  |  10 * 1000 ;
var a = diff_linesToChars _ ( val1 , val2 ) ;:==:var diff:==:dmp . diff_main ( a . chars1 , a . chars2 , false ) ;
var http = require ( ' follow - redirects ' ) . http ;:==:var https:==:require ( ' follow - redirects ' ) . https ;
var inputs = THREE . joinNode . inputs ;:==:var i:==:inputs . length ;
var gulp = require ( ' gulp ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var currentVelocity = _ state . currentVelocity ;:==:var lastIdealStyle:==:_ state . lastIdealStyle ;
var selected = $ ( obj ) . data ( ' selected ' ) ;:==:var file:==:$ ( li ) . data ( ' file ' ) ;
var dataLabelHorizontalPosition = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . dataLabelHorizontalPosition , visuals . referenceLineDataLabelHorizontalPosition . left ) ;:==:var dataLabelVerticalPosition:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . dataLabelVerticalPosition , visuals . referenceLineDataLabelVerticalPosition . above ) ;
var properties = track . properties ( )  |  |  ;:==:var total:==:track . revenue ( )  |  |  track . total ( )  |  |  0 ;
var left = itemPosition . left ;:==:var top:==:itemPosition . top ;
var api = this . api ( true ) ;:==:var nodeName:==:node . nodeName . toUpperCase ( ) ;
var statSync = require ( ' fs ' ) . statSync ;:==:var watchFile:==:require ( ' fs ' ) . watchFile ;
var path = require ( ' path ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var value = element ( by . binding ( ' value  |  date : ' HH : mm : ss ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var clientHeight = b . clientHeight ;:==:var clientLeft:==:b . clientLeft ;
var m = mobx ;:==:var observable:==:mobx . observable ;
var File = source . File ;:==:var Asset:==:hexo . model ( ' Asset ' ) ;
var gl = context . _ gl ;:==:var pixelFormat:==:defaultValue ( options . pixelFormat , pixelFormat . rgb ) ;
var ids = this . _ profileSamples . ids ;:==:var timestamps:==:this . _ profileSamples . timestamps ;
var search = this . searches [ i ] ;:==:var operator:==:$ ( ' # grid_'+ this . name + ' _ operator_'+ i ) . val ( ) ;
var mom = $ . fullCalendar . moment . parseZone ( ' 2014 - 06 - 08 ' ) ;:==:var time:==:mom . time ( ) ;
var path = require ( ' path ' ) ;:==:var stream:==:require ( ' stream ' ) ;
var largeSymbolDraw = this . _ largeSymbolDraw ;:==:var normalSymbolDraw:==:this . _ normalSymbolDraw ;
var texture = runtime . gltf . textures [ textureInfo . index ] ;:==:var texCoord:==:textureInfo . texCoord  |  |  0 ;
var prev = ( this . _ previousOverPrimitive ! = null ) ? this . _ previousOverPrimitive . prim : null ;:==:var actual:==:( this . _ actualOverPrimitive !   null ) ? this . _ actualOverPrimitive . prim : null ;
var util = require ( ' util ' ) ;:==:var jmespath:==:require ( ' jmespath ' ) ;
var recipient = send . recipient_actual  |  |  send . recipient_address ;:==:var amount:==:send . amount_actual  |  |  send . amount_feedback ;
var a = ' a ' ;:==:var b:==:' b ' ;
var flush = _ tetherBase$Utils . flush ;:==:var getScrollBarSize:==:_ tetherBase$Utils . getScrollBarSize ;
var m = SIMD . float32x4 . fromInt8x16Bits ( simd . int8x16 ( 0x3f800000 , 0x40000000 , 0x40400000 , 0x40800000 ) ) ;:==:var n:==:simd . int8x16 . fromFloat32x4Bits ( m ) ;
var bool = ' boolean ' ;:==:var number:==:' number ' ;
var maxScale = _ props . maxScale ;:==:var minScale:==:_ props . minScale ;
var _ toUTF8 = Module [ ' _ toUTF8 ' ] = asm [ ' _ toUTF8 ' ] ;:==:var _ im_open_decoder_fd:==:Module [ ' _ im_open_decoder_fd ' ]    asm [ ' _ im_open_decoder_fd ' ] ;
var n = null ;:==:var a:==:foo : ' bar ' ;
var precision = type . bigNumber . precision ;:==:var big:==:type . bigNumber . clone ( precision : precision + 2 ) ;
var pmx = require ( ' pmx ' ) ;:==:var http:==:require ( ' http ' ) ;
var options = that . options ;:==:var minHeight:==:options . minHeight ;
var embeddedTracks = config . embeddedTracks ;:==:var isFragmented:==:config . isFragmented ;
var TIME = 3 ;:==:var OS:==:4 ;
var roomId = params . roomId ;:==:var isNew:==:params . isNew  |  |  false ;
var resizer = chart . canvas . parentNode . _ chartjs . resizer ;:==:var content:==:resizer . contentWindow  |  |  resizer ;
var GET_ACCESSOR = ' GET_ACCESSOR ' ;:==:var IDENTIFIER_EXPRESSION:==:' IDENTIFIER_EXPRESSION ' ;
var className = _ props . className ;:==:var disableHeader:==:_ props . disableHeader ;
var extend = utils . extend ;:==:var dimensionCheck:==:utils . dimensionCheck ;
var t = test . bind ( , 1 ) ;:==:var p:==:new Proxy ( test , trap ) ;
var uiBindings = _ . result ( this , ' _ uiBindings ' ) ;:==:var ui:==:_ . result ( this , ' ui ' ) ;
var first = Math . min ( this . firstRow , config . firstRow ) ;:==:var last:==:math . max ( this . lastRow , config . lastRow , cells . length ) ;
var createCallExpression = traceur . codegeneration . parseTreeFactory . createCallExpression ;:==:var createMemberExpression:==:traceur . codegeneration . parseTreeFactory . createMemberExpression ;
var Uri = Windows . Foundation . Uri ;:==:var tileNotification:==:windows . ui . notifications . tileNotification ;
var parent = this . parentNode ;:==:var children:==:parent . children ;
var formalParameterList = this . transformAny ( tree . formalParameterList ) ;:==:var functionBody:==:this . transformSuperInBlock _ ( tree , tree . functionBody ) ;
var x = ( vector . x * transformation . m [ 0 ] ) + ( vector . y * transformation . m [ 4 ] ) ;:==:var y:==:( vector . x * transformation . m [ 1 ] ) + ( vector . y * transformation . m [ 5 ] ) ;
var log = this . log ;:==:var theme:==:this . theme ;
var defaultValue = this . props . defaultValue ;:==:var children:==:this . props . children ;
var transform = element . getAttribute ( ' transform ' ) ;:==:var r:==:transform & & transform . match ( blockly . utils . getRelativexy . xy_regex _ ) ;
var x = pointX - ul . x ;:==:var y:==:pointY - ul . y ;
var name = event . detail . name ;:==:var connected:==:event . detail . connected ;
var diffV = this . diffV ;:==:var impulse:==:this . impulse ;
var master = this . master ;:==:var element:==:this . element ;
var util = require ( ' util ' ) ;:==:var https:==:require ( ' https ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var to5:==:require ( ' gulp-6to5 ' ) ;
var concat = require ( ' gulp - concat ' ) ;:==:var eslint:==:require ( ' gulp - eslint ' ) ;
var path = options . path ;:==:var shape:==:options . shape ;
var config = utils . pkg . config ( packageJSON )  |  |  ;:==:var plugins:==:config . plugins  |  |  [ ] ;
var axis = trace [ axisLetter + ' axis ' ] ;:==:var gridlines:==:axis . _ gridlines    [ ] ;
var enterClass = data . enterClass ;:==:var enterToClass:==:data . enterToClass ;
var header = $ ( this . box ) . find ( ' > div . w2ui - form - header ' ) ;:==:var toolbar:==:$ ( this . box ) . find ( ' > div . w2ui - form - toolbar ' ) ;
var keys = _ . keys ( columns ) ;:==:var len:==:keys . length ;
var currency = $ scope . send . currency . slice ( 0 , 3 ) . toUpperCase ( ) ;:==:var amount:==:send . amount_feedback ;
var Promise = testUtils . promise ;:==:var allDocs:==:remote . allDocs ;
var nativeModules = require ( ' nativeModules ' ) ;:==:var rctDeviceEventEmitter:==:require ( ' rctDeviceEventEmitter ' ) ;
var positionRandomness = options . positionRandomness ! = = undefined ? options . positionRandomness : 0 ;:==:var velocityRandomness:==:options . velocityRandomness !    undefined ? options . velocityRandomness : 0 ;
var set = sets [ s ] ;:==:var keys:==:Object . keys ( set ) ;
var coffee   = require ( ' gulp - coffee ' ) ;:==:var changed:==:require ( ' gulp - changed ' ) ;
var objectDefinitions = options . objectDefinitions ;:==:var colorAllocatorFactory:==:options . colorAllocatorFactory ;
var REVISION_CHANGES = _ _ dependency3 _ _ . REVISION_CHANGES ;:==:var createFrame:==:_ _ dependency3 _ _ . createFrame ;
var right = camera . right ;:==:var up:==:camera . up ;
var log = require ( ' debug ' ) ( ' nightmare : log ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' nightmare ' ) ;
var admin = require ( ' pomelo - admin ' ) ;:==:var util:==:require ( ' util ' ) ;
var eventEmitter = require ( ' eventEmitter ' ) ;:==:var image:==:require ( ' image ' ) ;
var normal = defaultValue ( ellipsoid , ellipsoid . wgs84 ) . geodeticSurfaceNormal ( position , normalScratch ) ;:==:var right:==:cartesian3 . cross ( velocity , normal , rightScratch ) ;
var image = _ . get ( options , ' image ' ) ;:==:var username:==:_ . get ( options , ' username ' ) ;
var attribute = attributes [ i ] ;:==:var componentDatatype:==:attribute . componentDatatype ;
var history = exports . history = internalPropTypes . history ;:==:var location:==:exports . location    locationShape ;
var batch_size = opts . batch_size  |  |  100 ;:==:var batches_limit:==:opts . batches_limit  |  |  10 ;
var iteratedString = symbol ( ' iteratedString ' ) ;:==:var stringIteratorNextIndex:==:symbol ( ' stringIteratorNextIndex ' ) ;
var _ im_close_decoder = Module [ ' _ im_close_decoder ' ] = asm [ ' _ im_close_decoder ' ] ;:==:var _ toUTF8:==:Module [ ' _ toUTF8 ' ]    asm [ ' _ toUTF8 ' ] ;
var vertexFormat = options . vertexFormat ;:==:var surfaceHeight:==:options . surfaceHeight ;
var i d = data . i d ;:==:var date:==:data . date ;
var longitude = cartographic . longitude ;:==:var latitude:==:cartographic . latitude ;
var o2 = foo : foo2 , that2 : ' that2 ' ;:==:var o3:==:foo : foo3 , that3 : ' that3 ' ;
var metalness = this . metalness . buildCode ( builder , ' fv1 ' ) ;:==:var alpha:==:this . alpha ? this . alpha . buildCode ( builder , ' fv1 ' ) : undefined ;
var _ free = Module [ ' _ free ' ] = asm [ ' _ free ' ] ;:==:var _ strcat:==:Module [ ' _ strcat ' ]    asm [ ' _ strcat ' ] ;
var el = setupSelect ( ' ng - required='isRequired ' md - no - asterisk='false ' ng - model='someModel ' ' ) ;:==:var select:==:el . find ( ' md - select ' ) ;
var save = imports . save ;:==:var tabbehavior:==:imports . tabbehavior ;
var isBackspaceKey = utilities . isBackspaceKey ;:==:var isDeleteKey:==:utilities . isDeleteKey ;
var line = sm . line  |  |  bp . line ;:==:var column:==:sm . column  |  |  bp . column ;
var start = mynode . start ;:==:var end:==:mynode . end ;
var el = this . el ;:==:var rotationAux:==:this . rotationAux    this . rotationAux  |  |  x : 0 , y : 0 , z : 0 ;
var ace = imports . ace ;:==:var save:==:imports . save ;
var finishTransition = options . finishTransition ;:==:var saveState:==:options . saveState ;
var Server = require ( ' karma ' ) . Server ;:==:var path:==:require ( ' path ' ) ;
var c9 = imports . c9 ;:==:var save:==:imports . save ;
var n3 = helper . getNode ( ' n3 ' ) ;:==:var n4:==:helper . getNode ( ' n4 ' ) ;
var os = require ( ' os ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var clone = utils . clone ;:==:var type:==:utils . type ;
var a = this . a . getType ( builder ) ;:==:var b:==:this . b . getType ( builder ) ;
var settings = imports . settings ;:==:var console:==:imports . console ;
var heightSegments = opts & & opts . heightSegments ! = = undefined ? opts . heightSegments : 1 ;:==:var sides:==:opts & & opts . sides !    undefined ? opts . sides : 20 ;
var htmlparser = require ( ' htmlparser2 ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var pixelConverter = jsCommon . pixelConverter ;:==:var displayNameKeys:==:visuals . slicerUtil . displayNameKeys ;
var width = jpegImage . width ;:==:var height:==:jpegImage . height ;
var Post = ctx . model ( ' Post ' ) ;:==:var path:==:file . params . path ;
var w = window ;:==:var peerConnection:==:w . mozrtcPeerConnection  |  |  w . webkitrtcPeerConnection ;
var entity = this . _ entity ;:==:var ellipsoid:==:entity . ellipsoid ;
var ignore_quoted = options . ignore_quoted ;:==:var debug:==:( options . debug !    false ) ;
var conf = env . conf ;:==:var indent:==:env . conf . examples & & env . conf . examples . indent ? env . conf . examples . indent : 2 ;
var chalk = require ( ' chalk ' ) ;:==:var sep:==:pathFn . sep ;
var start = moment ( value ) . startOf ( ' day ' ) . toDate ( ) ;:==:var end:==:moment ( value ) . endOf ( ' day ' ) . toDate ( ) ;
var wordSpacing = current . wordSpacing ;:==:var texthScale:==:current . texthScale ;
var canonicalizeUrl = traceur . util . canonicalizeUrl ;:==:var evaluateStringLiteral:==:traceur . util . evaluateStringLiteral ;
var traits = identify . traits ( ) ;:==:var username:==:identify . username ( ) ;
var option = this . option ;:==:var componentsMap:==:this . _ componentsMap ;
var point = intersection . point ;:==:var object:==:intersection . object ;
var currentVelocities = _ state . currentVelocities ;:==:var lastIdealStyles:==:_ state . lastIdealStyles ;
var n1 = new redNode ( i d : ' n1',type : ' abc',wires : [ [ ' n2 ' ] , [ ' n3 ' ] , [ ' n4','n5 ' ] ] ) ;:==:var n2:==:new redNode ( i d : ' n2',type : ' abc ' ) ;
var vertexShader = material . _ _ webglShader . vertexShader ;:==:var fragmentShader:==:material . _ _ webglShader . fragmentShader ;
var listeners = stub . listeners ;:==:var index:==:listeners . indexOf ( listener ) ;
var last = _ . last ( momentBatch ) ;:==:var first:==:_ . first ( momentBatch ) ;
var rx = this . attribute ( ' rx ' ) . toPixels ( ' x ' ) ;:==:var ry:==:this . attribute ( ' ry ' ) . toPixels ( ' y ' ) ;
var cellSizeAndPositionManager = _ ref . cellSizeAndPositionManager ;:==:var previousCellsCount:==:_ ref . previousCellsCount ;
var send = this . sandbox . spy ( lcd , ' send ' ) ;:==:var writeBits:==:this . sandbox . spy ( lcd , ' writeBits ' ) ;
var green = options [ ' green ' ] ;:==:var blue:==:options [ ' blue ' ] ;
var events = goog . require ( ' goog . events ' ) ;:==:var testSuite:==:goog . require ( ' goog . testing . testSuite ' ) ;
var pointers = self . pointers ;:==:var originalEvent:==:e . originalEvent ;
var data = this . data ;:==:var isDateTime:==:visuals . axisHelper . isDateTime ( type ) ;
var createMicrosoftUnsafeLocalFunction = require ( ' createMicrosoftUnsafeLocalFunction ' ) ;:==:var setInnerhtml:==:require ( ' setInnerhtml ' ) ;
var select = DOC . createElement ( ' select ' ) ;:==:var option:==:select . appendChild ( doc . createElement ( ' option ' ) ) ;
var chalk = require ( ' chalk ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var startAngle = -seriesModel . get ( ' startAngle ' ) * radian ;:==:var minAngle:==:seriesModel . get ( ' minAngle ' ) * radian ;
var width = this . _ width ;:==:var height:==:this . _ height ;
var a = bar ( 1 + 2 ) ;:==:var b:==:baz ( 3 + 9 ) ;
var create = splitterHelpers . create ;:==:var keys:==:kendo . keys ;
var rights = this . rights ;:==:var len:==:lefts . length ;
var a = new symbolNode ( ' a ' ) ;:==:var c:==:new symbolNode ( ' c ' ) ;
var updateOwnershipData = denodeify ( session . models . user . updateOwnershipData ) . bind ( session . models . user ) ;:==:var updateKey:==:denodeify ( session . models . user . updateKey ) . bind ( session . models . user ) ;
var alarms = this . arg ( ' alarms ' ) ;:==:var isAllDay:==:this . arg ( ' isAllDay ' ) ;
var nodesToIgnore = opts [ ' nodesToIgnore ' ]  |  |  [ ] ;:==:var parseHiddenNodes:==:opts [ ' parseHiddenNodes ' ]  |  |  ' false ' ;
var Person = db . model ( ' gh4284_b ' , personSchema ) ;:==:var band:==:db . model ( ' gh4284_b0 ' , bandSchema ) ;
var createArrayLiteralExpression = parseTreeFactory . createArrayLiteralExpression ;:==:var createAssignmentStatement:==:parseTreeFactory . createAssignmentStatement ;
var colorHelper = powerbi . visuals . colorHelper ;:==:var legendIcon:==:powerbi . visuals . legendIcon ;
var closure = require ( ' closure - util ' ) ;:==:var debounce:==:require ( ' debounce ' ) ;
var alert = imports [ ' dialog . alert ' ] . show ;:==:var layout:==:imports . layout ;
var greenA100 = exports . greenA100 = ' # b9f6ca ' ;:==:var greenA200:==:exports . greenA200    ' # 69f0ae ' ;
var optionals = isPresent ( extra ) ? stringMapWrapper . get ( extra , ' optionals ' ) : null ;:==:var validator:==:isPresent ( extra ) ? stringMapWrapper . get ( extra , ' validator ' ) : null ;
var graph = this . graph ;:==:var series:==:args . series  |  |  graph . series ;
var longitude = e . coords . longitude ;:==:var latitude:==:e . coords . latitude ;
var fileProperties = windows . storage . fileProperties ;:==:var media:==:windows . media ;
var row = this . row ;:==:var column:==:this . column ;
var Asset = hexo . model ( ' Asset ' ) ;:==:var Page:==:hexo . model ( ' Page ' ) ;
var bind = utils . bind ;:==:var debug:==:utils . debug ( ' core : a - entity : debug ' ) ;
var reactVersion = require ( ' reactVersion ' ) ;:==:var finddomNode:==:require ( ' finddomNode ' ) ;
var accuracy = o . accuracy ;:==:var max:==:o . max ;
var editor = data . editor ;:==:var cm:==:editor . state . cm ;
var Catch = traceur . syntax . trees . Catch ;:==:var classDeclaration:==:traceur . syntax . trees . classDeclaration ;
var len = setters . length ;:==:var caster:==:this . caster ;
var one = this . find ( ' . togetherjs - typing - ellipse - one ' ) ;:==:var two:==:this . find ( ' . togetherjs - typing - ellipse - two ' ) ;
var provider = providerInfo [ i ] ;:==:var copyrightString:==:provider . copyrightString ;
var Identify = Facade . Identify ;:==:var Page:==:Facade . Page ;
var maxResolution = this . maxResolution _ ;:==:var minResolution:==:this . minResolution _ ;
var normalizeDdocFunctionName = pouchdb . utils . normalizeDdocFunctionName ;:==:var parseDdocFunctionName:==:pouchdb . utils . parseDdocFunctionName ;
var client = require ( ' engine . io - client ' ) ;:==:var connectClient:==:kaefer . connectClient ;
var hash = _ _ dependency5 _ _ . hash ;:==:var rethrow:==:_ _ dependency6 _ _ . rethrow ;
var hasOwnProperty = ref . hasOwnProperty ;:==:var toString:==:ref . toString ;
var minDistNormal = intersectconvex_mindistnormal ;:==:var vector:==:intersectconvex_vector ;
var url = require ( ' url ' ) ;:==:var assert:==:require ( ' assert - plus ' ) ;
var width = this . _ $ element . data ( ' width ' )  |  |  560 ;:==:var height:==:this . _ $ element . data ( ' height ' )  |  |  560 ;
var state = codeMirror . copyState ( outer , cm . getTokenAt ( from ) . state ) ;:==:var tabSize:==:cm . getOption ( ' tabSize ' ) ;
var n = new indexNode ( [ b , c ] ) ;:==:var e:==:new constantNode ( 5 ) ;
var radius = sphere . radius ;:==:var center:==:sphere . center ;
var scriptOpenTag = webInspector . concatenatedScriptsContentProvider . scriptOpenTag ;:==:var scriptCloseTag:==:webInspector . concatenatedScriptsContentProvider . scriptCloseTag ;
var constants = require ( ' constants ' ) ;:==:var join:==:require ( ' path ' ) . join ;
var Complex = math . type . Complex ;:==:var denseMatrix:==:math . type . denseMatrix ;
var noSleep = obj . noSleep  |  |  false ;:==:var p:==:obj . pos  |  |  [ 0 , 0 , 0 ] ;
var teal900 = exports . teal900 = ' # 004d40 ' ;:==:var tealA100:==:exports . tealA100    ' # a7ffeb ' ;
var path = require ( ' path ' ) ;:==:var yeoman:==:require ( ' yeoman - generator ' ) ;
var origin = args . origin ;:==:var periods:==:args . periods ;
var data = img . data [ 3 ] ;:==:var max:==:this . _ max ;
var recordingModule = require ( ' nativeModules ' ) . timePickerDialogRecordingModule ;:==:var view:==:require ( ' view ' ) ;
var r = reader . getFloat32 ( 0 , true ) ;:==:var g:==:reader . getFloat32 ( 4 , true ) ;
var a = angle % ( 2 * Math . PI ) ;:==:var set:==:vec2 . set ;
var rowCount = props . rowCount ;:==:var width:==:props . width ;
var itemsIndom = list . els . itemsIndom ;:==:var items:==:list . els . items ;
var Datagrid = imports . Datagrid ;:==:var Terminal:==:imports . Terminal ;
var floatingLabelColor = _ context$muiTheme$tex . floatingLabelColor ;:==:var focusColor:==:_ context$muiTheme$tex . focusColor ;
var debug = require ( ' debug ' ) ( ' engine . io - client : socket ' ) ;:==:var index:==:require ( ' indexof ' ) ;
var child_process = require ( ' child_process ' ) ;:==:var https:==:require ( ' https ' ) ;
var triangles = this . triangles ;:==:var materialIndex:==:this . materialIndex ;
var view = views [ name ] ;:==:var pointer:==:view . pointer ;
var stringify = require ( ' stringify ' ) ;:==:var merge:==:require ( ' merge - stream ' ) ;
var pointer = pointers [ 0 ] ;:==:var bbox:==:conf . bbox ;
var richTextToolbar = firepad . richTextToolbar ;:==:var aceAdapter:==:firepad . aceAdapter ;
var operand = this . transformAny ( tree . operand ) ;:==:var memberExpression:==:this . transformAny ( tree . memberExpression ) ;
var text = ' text ' ;:==:var main:==:' main ' ;
var ephMarkerUsed = context . cod . ephMarkerUsed ;:==:var packetsIterator:==:tile . packetsIterator ;
var mockControl = goog . require ( ' goog . testing . mockControl ' ) ;:==:var multiTestRunner:==:goog . require ( ' goog . testing . multiTestRunner ' ) ;
var reactGenericBatching = require ( ' reactGenericBatching ' ) ;:==:var reactFiberReconciler:==:require ( ' reactFiberReconciler ' ) ;
var distance = lparams . distance ;:==:var angle:==:lparams . falloff_angle ;
var cellClassName = props . cellClassName ;:==:var cellRenderer:==:props . cellRenderer ;
var safeApply = leafletHelpers . safeApply ;:==:var isValidCenter:==:leafletHelpers . isValidCenter ;
var createContinueStatement = parseTreeFactory . createContinueStatement ;:==:var createCatchStatement:==:parseTreeFactory . createCatchStatement ;
var g = this . dygraph _ ;:==:var logscale:==:this . getOption _ ( ' logscale ' ) ;
var tabbehavior = imports . tabbehavior ;:==:var debug:==:imports . debugger ;
var key = keys [ i ] ;:==:var value:==:values [ i ] ;
var changed = require ( ' gulp - changed ' ) ;:==:var plumber:==:require ( ' gulp - plumber ' ) ;
var overlays = this . overlays ;:==:var resource:==:node . getData ( ' resource ' ) ;
var data = dataArray ;:==:var graph:==:document . getElementById ( ' graph ' ) ;
var property = path . get ( ' property ' ) ;:==:var object:==:path . get ( ' object ' ) ;
var w = Math . floor ( rect . width * pixelWidth ) ;:==:var h:==:math . floor ( rect . height * pixelHeight ) ;
var path     = require ( ' path ' ) ;:==:var util:==:require ( ' util ' ) ;
var createTryStatement = parseTreeFactory . createTryStatement ;:==:var createUndefinedExpression:==:parseTreeFactory . createUndefinedExpression ;
var concat = require ( ' gulp - concat ' ) ;:==:var connect:==:require ( ' gulp - connect ' ) ;
var mockery = require ( ' mockery ' ) ;:==:var util:==:require ( ' util ' ) ;
var clearOverlays = t . clearOverlays ;:==:var renderDayEvents:==:t . renderDayEvents ;
var cookie = self . cookie ;:==:var notify:==:self . notify ;
var div = document . createElement ( ' div ' ) ;:==:var assets:==:document . createElement ( ' a - assets ' ) ;
var description = queryStringValue ( node , ' description ' , namespaces . kml ) ;:==:var balloonStyle:==:defaultValue ( entity . balloonStyle , styleEntity . balloonStyle ) ;
var commands = imports . commands ;:==:var watcher:==:imports . watcher ;
var defaultColor = parameters . defaultColor ! = = undefined ? parameters . defaultColor : new three . color ( 0x000000 ) ;:==:var defaultAlpha:==:parameters . defaultAlpha !    undefined ? parameters . defaultAlpha : 1 . 0 ;
var dataAttr = dataAttrs [ attrName ] ;:==:var cachedAttr:==:cachedAttrs [ attrName ] ;
var message = mockMessage ( messageId : 4371 ) ;:==:var handler:==:handlerStub . withArgs ( ' cellbroadcast - received ' ) . args [ 0 ] [ 1 ] ;
var path = parse ( req ) . pathname ;:==:var pause:==:utils . pause ( req ) ;
var app = evt & & evt . application ;:==:var type:==:evt . type ;
var x = anchorPoint . x ;:==:var y:==:anchorPoint . y ;
var document = window & & window . document ;:==:var navigator:==:window & & window . navigator ;
var ceil = createRound ( ' ceil ' ) ;:==:var floor:==:createRound ( ' floor ' ) ;
var perPage = this . props . metadata . perPage ;:==:var page:==:this . props . metadata . page ;
var context = scene . context ;:==:var framebuffer:==:passState . framebuffer ;
var data = item . data ;:==:var layout:==:item . layout ;
var d = a . width ;:==:var e:==:a . height ;
var del = require ( ' del ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var dependencies = mout . object . values ( node . dependencies ) ;:==:var version:==:! node . missing ? node . pkgMeta . _ release  |  |  node . pkgMeta . version : null ;
var $ headSpans = that . $ headSpans = $ datatable . children ( ' . datatable - head ' ) . children ( ' . datatable - head - span ' ) ;:==:var $ cells:==:that . $ cells    $ dataSpans . find ( ' td , th ' ) ;
var redo = options . redo ;:==:var codeMirror:==:options . codeMirror ;
var button = messageDOM . querySelector ( ' button ' ) ;:==:var setMessageStatus:==:this . setMessageStatus . bind ( this ) ;
var registration = registrations [ j ] ;:==:var options:==:registration . options ;
var trace = d . trace ;:==:var contours:==:trace . contours ;
var util = require ( ' util ' ) ;:==:var ms:==:require ( ' ms ' ) ;
var paths = opts . paths  |  |  ;:==:var pathMap:==:opts . pathMap ;
var num = btn . data ( ' num ' ) ;:==:var lootButtons:==:$ ( ' # lootButtons ' ) ;
var options = $ . extend ( , DRAG_DEFAULTS , this . options ) ;:==:var dx:==:options . dx ;
var unsubscribe = this . _ unsubscribe ;:==:var subscriptions:==:this . _ subscriptions ;
var fmt = _ fmt ;:==:var acc:==:_ acc ;
var textures = extractFromCache ( meta . textures ) ;:==:var images:==:extractFromCache ( meta . images ) ;
var mode = settings . mode ;:==:var config:==:settings . config ;
var def = $ ( ' def-3 ' ) ;:==:var jkl:==:$ ( ' jkl-3 ' ) ;
var request = bbPromise . promisify ( require ( ' request ' ) ) ;:==:var github_access_token:==:process . env . github_access_token ;
var samsam = require ( ' samsam ' ) ;:==:var assert:==:referee . assert ;
var x = proxyOfpFoo . bind ( 1 ) ;:==:var y:==:new proxy ( x , handler ) ;
var forwarded = require ( ' forwarded ' ) ;:==:var ipaddr:==:require ( ' ipaddr . js ' ) ;
var indices = this . indices = [ ] ;:==:var dimensions:==:this . dimensions ;
var mixin = scope . mixin ;:==:var nodeList:==:scope . wrappers . nodeList ;
var l0 = intersectHeightfield_l0 ;:==:var l1:==:intersectHeightfield_l1 ;
var datasets = chart . data . datasets ;:==:var element:==:this . element ;
var viewport = this . _ layerTree . viewportSize ( ) ;:==:var root:==:this . _ layerTree . contentRoot ( )  |  |  this . _ layerTree . root ( ) ;
var row = this . selectionLead . row ;:==:var column:==:this . selectionLead . column ;
var eventproxy = require ( ' eventproxy ' ) ;:==:var validator:==:require ( ' validator ' ) ;
var key = mapResults [ i ] . key ;:==:var val:==:mapResults [ i ] . val ;
var time = this . arg ( ' time ' ) ;:==:var format:==:this . h ( ' format ' ) ;
var arrowFunctionTransformer = traceur . codegeneration . arrowFunctionTransformer ;:==:var atNameMemberTransformer:==:traceur . codegeneration . atNameMemberTransformer ;
var creators = opts . creators  |  |  [ ] ;:==:var role:==:opts . role  |  |  ' initiator ' ;
var group = el . getAttribute ( ' data - group ' ) ;:==:var placeholder:==:el . getAttribute ( ' data - placeholder ' ) ;
var dbContext = dbContexts [ dbInfo . name ] ;:==:var deferredOperation:==:dbContext . deferredOperations . pop ( ) ;
var start = options . hasOwnProperty ( ' start ' ) ? options . start : 0 ;:==:var stop:==:options . hasOwnProperty ( ' stop ' ) ? options . stop : 19 ;
var p = this . _ props ;:==:var style:==:this . el . style ;
var path = Npm . require ( ' path ' ) ;:==:var request:==:Npm . require ( ' request ' ) ;
var contrast = params . contrast ;:==:var brightness:==:params . brightness ;
var pid = req . params . pid ;:==:var version:==:req . params . version ;
var clientX = defaultValue ( options . clientx , 0 ) ;:==:var clienty:==:defaultValue ( options . clienty , 0 ) ;
var escape = window . escape ;:==:var unescape:==:window . unescape ;
var name = trim ( decEndpoint . name ) ;:==:var source:==:trim ( decEndpoint . source ) ;
var cssPropertyOperations = require ( ' cssPropertyOperations ' ) ;:==:var domNamespaces:==:require ( ' domNamespaces ' ) ;
var svgUtil = powerbi . visuals . svgUtil ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var createDocumentFragment = document . createDocumentFragment ;:==:var importNode:==:originalDocument . importNode ;
var operand = this . transformAny ( tree . operand ) ;:==:var expressions:==:this . transformList ( tree . expressions ) ;
var dataPoint = dataPoints [ categoryIndex ] ;:==:var categoryValue:==:dataPoint . categoryValue ;
var createParenExpression = parseTreeFactory . createParenExpression ;:==:var createThisExpression:==:parseTreeFactory . createThisExpression ;
var settings = modelCtor . settings ;:==:var modelName:==:modelCtor . modelName ;
var generated = util . getArg ( aArgs , ' generated ' ) ;:==:var original:==:util . getArg ( aArgs , ' original ' , null ) ;
var canvasHeight = this . options . canvasHeight ;:==:var canvasWidth:==:this . options . canvasWidth ;
var offsetRotation = this . data . offsetRotation * degRadReflect ;:==:var offsetSheary:==:this . data . offsetSheary * degRadReflect ;
var index = items . indexOf ( li ) ;:==:var section:==:li . dataset . section ;
var typeParameters = this . transformAny ( tree . typeParameters ) ;:==:var objectType:==:this . transformAny ( tree . objectType ) ;
var crossOrigin = self . crossOrigin ;:==:var url:==:crossOrigin ? self . crossOriginUrl : self . url ;
var os    = require ( ' os ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var pointer = this . o . pointers [ key ] ;:==:var label:==:this . o . labels [ pointer . uid ] ;
var folderUploadSelect = plugin . getElement ( ' folderUploadSelect ' ) ;:==:var hboxUploadNoFolders:==:plugin . getElement ( ' hboxUploadNoFolders ' ) ;
var logger = goog . debug . Logger . getLogger ( loggers [ i ] ) ;:==:var sel:==:dh . getElement ( ' sel ' + loggers [ i ] ) ;
var listView = that . listView ;:==:var initialIndex:==:that . _ initialIndex ;
var content = opt_content  |  |  '' ;:==:var headers:==:this . headers . clone ( ) ;
var zIndex = math . max . apply ( math , parentsZindex ) + this . o . zIndexOffset ;:==:var offset:==:this . component ? this . component . parent ( ) . offset ( ) : this . element . offset ( ) ;
var oldTernaryKey = oldTernaryKeys [ i ] ;:==:var oldTernary:==:oldFullLayout [ oldTernaryKey ] . _ subplot ;
var sideNews = $ ( _ sideNews ) ;:==:var modId:==:conf . sideNews . modId ;
var author = utils . getInputTextValue ( context . $ authorInputElt ) ;:==:var content:==:utils . getInputTextValue ( context . $ contentInputElt , evt ) ;
var debugID = _ lifeCycleTimerStack$ . debugid ;:==:var timerType:==:_ lifeCycleTimerStack$ . timerType ;
var extrude = queryBooleanValue ( geometryNode , ' extrude ' , namespaces . kml ) ;:==:var altitudeMode:==:queryStringValue ( geometryNode , ' altitudeMode ' , namespaces . kml ) ;
var O_APPEND = constants . O_APPEND  |  |  0 ;:==:var O_CREAT:==:constants . O_CREAT  |  |  0 ;
var points = this [ ' points ' ] ;:==:var len:==:points . length ;
var input = new codeMirror . inputStyles [ options . inputStyle ] ( this ) ;:==:var display:==:this . display    new display ( place , doc , input ) ;
var link = tag . link ? ' link= ' ' + tag . link + ' ' ' : '' ;:==:var rel:==:tag . rel ? ' rel ' ' + tag . rel + ' ' ' : '' ;
var Scope = loopback . Scope ;:==:var ACL:==:loopback . ACL ;
var frameState = scene . _ frameState ;:==:var frameNumber:==:cesiumMath . incrementWrap ( frameState . frameNumber , 15000000 . 0 , 1 . 0 ) ;
var recorderProfile = this . settings . recorderProfiles . selected ( ' key ' ) ;:==:var pictureSize:==:this . settings . pictureSizes . selected ( ' data ' ) ;
var defines = fs . defines . slice ( 0 ) ;:==:var sources:==:fs . sources . slice ( 0 ) ;
var line = target . getAttribute ( ' data - line ' ) * 1 ;:==:var reason:==:target . getAttribute ( ' data - reason ' ) ;
var a = new PolyK . _ P ( ax , ay ) ;:==:var b:==:new PolyK . _ P ( bx , by ) ;
var app = this . app ;:==:var replacer:==:app . get ( ' json replacer ' ) ;
var ya = Axes . getFromId ( gd , trace . yaxis  |  |  ' y ' ) ;:==:var aax:==:trace . aaxis ;
var addWrapNodeListMethod = scope . addWrapNodeListMethod ;:==:var enqueueMutation:==:scope . enqueueMutation ;
var option = options . getOptionFromViewValue ( viewValue ) ;:==:var element:==:option & & option . element ;
var xpath = item . xpath ;:==:var amlNode:==:item . amlNode ;
var k = kv [ 0 ] ;:==:var v:==:kv [ 1 ] ;
var callbacks = input . callbacks ;:==:var i d:==:input . i d ;
var ch = this . text . charAt ( this . index ) ;:==:var peek:==:this . peek ( ) ;
var region = service . config . region ;:==:var customUserAgent:==:service . config . customUserAgent ;
var x = x0 + progress * ( x1 - x0 ) ;:==:var y:==:y0 + progress * ( y1 - y0 ) ;
var layout = imports . layout ;:==:var endpoint:==:imports [ ' vfs . endpoint ' ] ;
var x = seg1 . x1 + ( along1 * x12_11 ) ;:==:var y:==:seg1 . y1 + ( along1 * y12_11 ) ;
var message = err . message = this . opts . filename + ' : ' + err . message ;:==:var loc:==:err . loc ;
var warn = debug ( ' core : propertyTypes : warn ' ) ;:==:var propertyTypes:==:module . exports . propertyTypes    ;
var mongodb = require ( ' mongodb ' ) ;:==:var events:==:require ( ' events ' ) ;
var i d = buffer . getOctetArray ( idLen ) ;:==:var payload:==:buffer . getOctetArray ( payloadLen ) ;
var EOF = coreParser . eof ;:==:var lexer:==:coreParser . lexer ;
var a = new assignmentNode ( new symbolNode ( ' a ' ) , two ) ;:==:var b:==:new assignmentNode ( new symbolNode ( ' b ' ) , three ) ;
var getString = this . _ getString ;:==:var getUint16:==:this . _ getUint16 ;
var path = require ( ' path ' ) ;:==:var fork:==:require ( ' child_process ' ) . fork ;
var isLocked = ! ! challengeSpec . isLocked ;:==:var message:==:challengeSpec . message ;
var f = findType ( node . callee , scope ) . getFunctionType ( ) ;:==:var proto:==:f & & f . getProp ( ' prototype ' ) . getObjType ( ) ;
var treeNode = testSet . treeNode ;:==:var displayNode:==:testSet . displayNode ;
var inherits = utils . inherits ;:==:var debug:==:require ( ' debug ' ) ( ' mocha : suite ' ) ;
var opts = _ _ alloyId17 . opts  |  |  ;:==:var models:==:_ _ alloyId16 . models ;
var data = imageData . data ;:==:var l:==:data . length ;
var left = targetPos . left + targetOffset . left - offset . left ;:==:var top:==:targetPos . top + targetOffset . top - offset . top ;
var boundaryGap = this . get ( ' boundaryGap ' ) ;:==:var splitNumber:==:this . get ( ' splitNumber ' ) ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var createAssignmentExpression:==:parseTreeFactory . createAssignmentExpression ;
var argv = require ( ' yargs ' ) . argv ;:==:var gulp:==:require ( ' gulp ' ) ;
var j = jsPlumb . getInstance ( def ) ;:==:var c:==:j . connect ( source : ' d1 ' , target : ' d2 ' ) ;
var book = store . createRecord ( ' book ' , name : ' the greatest book ' ) ;:==:var relationship:==:book . _ internalModel . _ relationships . get ( ' author ' ) ;
var templateUrl = options . templateUrl ;:==:var template:==:options . template  |  |  '' ;
var snowlevel = config . snowlevel?config . snowlevel : 2 ;:==:var speed:==:config . speed ;
var options = that . options ;:==:var tagTemplate:==:options . tagTemplate ;
var ux = this . _ ux ;:==:var uy:==:this . _ uy ;
var reactdomFeatureFlags = require ( ' reactdomFeatureFlags ' ) ;:==:var reactdomFiberComponent:==:require ( ' reactdomFiberComponent ' ) ;
var proto = Object . create ( htmlElement . prototype ) ;:==:var indexOf:==:[ ] . indexOf ;
var createEnumType = powerbi . createEnumType ;:==:var dataViewObjects:==:powerbi . dataViewObjects ;
var tooltipManager = powerbi . visuals . tooltipManager ;:==:var lessWithPrecision:==:powerbi . double . lessWithPrecision ;
var min = Math . min ( this . selectionStart , this . selectionEnd ) ;:==:var max:==:math . max ( this . selectionStart , this . selectionEnd ) ;
var error = require ( ' http - error ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var DOCUMENT_POSITION_PRECEDING = Node . DOCUMENT_POSITION_PRECEDING ;:==:var DOCUMENT_POSITION_FOLLOWING:==:Node . DOCUMENT_POSITION_FOLLOWING ;
var minOpacity = this . _ minOpacity ;:==:var useGradientOpacity:==:this . _ useGradientOpacity ;
var terminal = imports . terminal ;:==:var auth:==:imports . auth ;
var tryCatch = tryCatchUtils . tryCatch , errorObj = tryCatchUtils . errorObj , thrower = tryCatchUtils . thrower ;:==:var inherits:==:require ( ' inherits ' ) ;
var files = d . files ;:==:var directories:==:d . directories ;
var active = skeletons [ activeSkeleton ] ;:==:var skeleton:==:active . skeleton ;
var blogPost = db . model ( ' refBlogPost ' , posts , ' gh-2176 - 1 ' ) ;:==:var user:==:db . model ( ' refUser ' , users , ' gh-2176 - 2 ' ) ;
var cpuSync = options . cpuSync ;:==:var chromeFix:==:options . chromeFix ;
var createEmptyParameterList = parseTreeFactory . createEmptyParameterList ;:==:var createExpressionStatement:==:parseTreeFactory . createExpressionStatement ;
var input = angular . element ( inputs [ x ] ) ;:==:var choiceno:==:this . get_choiceno_for_node ( input ) ;
var g = spColor . g ;:==:var b:==:spColor . b ;
var noteId = noteIds [ i ] ;:==:var note:==:me . getNote ( noteId ) ;
var viewer = this . viewer ;:==:var device:==:this . device ;
var w = this . _ width-1 ;:==:var h:==:this . _ height-1 ;
var APN_TYPES = apnConst . apn_types ;:==:var apn_list_key:==:apnConst . apn_list_key ;
var readline = require ( ' readline ' ) ;:==:var keytar:==:require ( ' keytar ' ) ;
var nomnom = require ( ' nomnom ' ) ;:==:var log:==:closure . log ;
var PROPERTY_VARIABLE_DECLARATION = ' PROPERTY_VARIABLE_DECLARATION ' ;:==:var REST_PARAMETER:==:' REST_PARAMETER ' ;
var exclusiveMaximum = args . form . exclusiveMaximum  |  |  false ;:==:var minimum:==:args . form . minimum  |  |  false ;
var x = nodes [ nodeIndices [ i ] ] . x ;:==:var y:==:nodes [ nodeIndices [ i ] ] . y ;
var updater = updatersWithAttributes [ i ] ;:==:var entity:==:updater . entity ;
var text = toc [ i ] . text ;:==:var level:==:toc [ i ] . level ;
var stack = this . stack ;:==:var l:==:stack . length - n ;
var positions = polylineVolume . positions ;:==:var shape:==:polylineVolume . shape ;
var w = this . _ FBU . width ;:==:var h:==:this . _ FBU . height ;
var namespace = pair . namespace ;:==:var value:==:pair . value ;
var ctx = this . ctx ;:==:var fontSizeScale:==:current . fontSizeScale ;
var a = ct . a , b = ct . b , f = ct . f ;:==:var L:==:openLayers . util . rad ( p2 . lon - p1 . lon ) ;
var type = node . leadingComments [ i ] . type ;:==:var value:==:node . leadingComments [ i ] . value ;
var modules = this . modules _ ;:==:var pending:==:this . pending _ ;
var clusterState = window . app . services . clusterState ;:==:var test:==:window . test ;
var dx = Math . max ( 0 , Math . min ( bounds . width , parseFloat ( mxUtils . getValue ( this . state . style , ' dx ' , this . dx ) ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( 1 , parseFloat ( mxUtils . getValue ( this . state . style , ' dy ' , this . dy ) ) ) ) ;
var clientTop = ele . clientTop  |  |  body . clientTop  |  |  0 ;:==:var clientLeft:==:ele . clientLeft  |  |  body . clientLeft  |  |  0 ;
var collection = db . collection ( ' test_should_throw_error_if_serializing_function_1 ' ) ;:==:var func:==:function ( ) return 1 ;
var el = this . $ el ;:==:var body:==:document . body ;
var n = doc . nums . pop ( ) ;:==:var s:==:doc . strs . pop ( ) ;
var def = goog . dom . getElement ( ' def-4 ' ) ;:==:var jkl:==:goog . dom . getElement ( ' jkl-4 ' ) ;
var x2 = segment . x2 ;:==:var y2:==:segment . y2 ;
var Bridge = require ( ' hap - nodejs ' ) . Bridge ;:==:var Accessory:==:require ( ' hap - nodejs ' ) . Accessory ;
var number = ' number ' ;:==:var array:==:' array ' ;
var right = getPropertyAsFloat ( style , ' padding - right ' ) ;:==:var bottom:==:getPropertyAsFloat ( style , ' padding - bottom ' ) ;
var min = counts . min ;:==:var max:==:counts . max ;
var coefficentsSign = this . coefficentsSign ;:==:var neighborsSignificance:==:this . neighborsSignificance ;
var hostBinding = makePropDecorator ( ' hostBinding ' , [ [ ' hostPropertyName ' , undefined ] ] ) ;:==:var hostListener:==:makePropDecorator ( ' hostListener ' , [ [ ' eventName ' , undefined ] , [ ' args ' , [ ] ] ] ) ;
var keySchedule = this . keySchedule = new uint32Array ( ksRows ) ;:==:var invKeySchedule:==:this . invKeySchedule    new uint32Array ( ksRows ) ;
var showOtherMonths = this . _ get ( inst , ' showOtherMonths ' ) ;:==:var selectOtherMonths:==:this . _ get ( inst , ' selectOtherMonths ' ) ;
var tabs = $ . tabs . tabs ;:==:var panel:==:$ ( ' # ' + panelId ) ;
var fs = require ( ' co - fs - extra ' ) ;:==:var is:==:require ( ' is ' ) ;
var planes = this . planes ;:==:var matrix:==:object . matrixWorld ;
var deepPurplea100 = exports . deepPurplea100 = ' # b388ff ' ;:==:var deepPurplea200:==:exports . deepPurplea200    ' # 7c4dff ' ;
var scrollToCell = _ props . scrollToCell ;:==:var scrollTop:==:_ props . scrollTop ;
var browser = Aloha . browser ;:==:var version:==:browser . version ;
var min = Math . min ;:==:var max:==:Math . max ;
var wrapS = ( data . wrapS ) ? data . wrapS : gl . CLAMP_TO_EDGE ;:==:var wrapT:==:( data . wrapT ) ? data . wrapT : gl . CLAMP_TO_EDGE ;
var column = columns_1 [ _ i ] ;:==:var roles:==:column . roles ;
var n = s . targets . length ;:==:var val:==:this . vexpr ( s . value ) ;
var ref = new Ref ( data . ref . num , data . ref . gen ) ;:==:var catalog:==:pdfManager . pdfDocument . catalog ;
var query = req . query [ ' query ' ] ;:==:var offset:==:req . query [ ' offset ' ] * 1 ;
var deleteListener = eventPluginHub . deleteListener ;:==:var getNode:==:reactdomComponentTree . getNodeFromInstance ;
var search = this . searches [ s ] ;:==:var operator:==:$ ( ' # grid_'+ this . name + ' _ operator_'+s ) . val ( ) ;
var latField = this . cfg . latField  |  |  ' lat ' ;:==:var lngField:==:this . cfg . lngField  |  |  ' lng ' ;
var reactReconciler = require ( ' reactReconciler ' ) ;:==:var reactUpdateQueue:==:require ( ' reactUpdateQueue ' ) ;
var tangent = tangentScratch ;:==:var bitangent:==:bitangentScratch ;
var onFocus = _ props3 . onFocus ;:==:var onKeyUp:==:_ props3 . onKeyUp ;
var noContentRenderer = _ props4 . noContentRenderer ;:==:var style:==:_ props4 . style ;
var machine = this . machine . toString ( 16 ) ;:==:var pid:==:this . pid . toString ( 16 ) ;
var breakpoints = this . _ breakpointsForPrimaryuiSourceCode . get ( uiSourceCode )  |  |  [ ] ;:==:var sourceFileId:==:webInspector . breakpointManager . _ sourceFileId ( uiSourceCode ) ;
var n = new parenthesisNode ( a ) ;:==:var clone:==:n . clone ( ) ;
var v = body . velocity ;:==:var p:==:body . position ;
var os = require ( ' os ' ) ;:==:var tmpdir:==:( os . tmpdir  |  |  os . tmpDir ) ( ) ;
var bufferLength = this . bufferLength ;:==:var buffer:==:this . ensureBuffer ( bufferLength + rowBytes ) ;
var should = require ( ' should ' ) ;:==:var when:==:require ( ' when ' ) ;
var rangeNode = math . expression . node . rangeNode ;:==:var operatorNode:==:math . expression . node . operatorNode ;
var shadowMaps = frameState . shadowMaps ;:==:var length:==:shadowMaps . length ;
var containerSize = _ ref3 . containerSize ;:==:var currentOffset:==:_ ref3 . currentOffset ;
var entityType = entityGroup . entityType ;:==:var mergeStrategy:==:config . mergeStrategy ;
var editor = tab & & tab . editor ;:==:var mnuWrap:==:handle . getElement ( ' mnuWrap ' ) ;
var head = document . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var script:==:document . createElement ( ' script ' ) ;
var transformer = options . transformer ;:==:var originalModels:==:options . originalModels ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactFiberTreeReflection:==:require ( ' reactFiberTreeReflection ' ) ;
var pitch = document . getElementById ( ' pitch ' ) ;:==:var rate:==:document . getElementById ( ' rate ' ) ;
var path = this . path . eval ( env ) ;:==:var rootpath:==:this . currentFileInfo & & this . currentFileInfo . rootpath ;
var badRequestError = require ( ' restify - errors ' ) . badRequestError ;:==:var assert:==:require ( ' assert - plus ' ) ;
var value = options . value ;:==:var key:==:options . key ;
var scrollTop = hostDocumentElement . $ . scrollTop ;:==:var scrollLeft:==:hostDocumentElement . $ . scrollLeft ;
var t = Math . min ( this . top , region . top   ) ;:==:var r:==:Math . max ( this . right , region . right ) ;
var all = Promise . all . bind ( Promise ) ;:==:var argsarray:==:require ( ' argsarray ' ) ;
var semiMinorAxis = options . semiMinorAxis ;:==:var granularity:==:defaultValue ( options . granularity , cesiumMath . radians_per_degree ) ;
var reverse = this . reverse [ route . path . source ] ;:==:var routes:==:this . routes [ route . method ] ;
var amber400 = exports . amber400 = ' # ffca28 ' ;:==:var amber500:==:exports . amber500    ' # ffc107 ' ;
var Unit = math . type . Unit ;:==:var Complex:==:math . type . Complex ;
var path = require ( ' path ' ) ;:==:var join:==:path . join ;
var x = ( scaleVal - 1 ) * ( _ x ) ;:==:var y:==:( scaleVal - 1 ) * ( _ y ) ;
var width = this . text . getbBox ( ) . width + 4 * this . textMargin ;:==:var height:==:this . text . getbBox ( ) . height + 2 * this . textMargin ;
var title = tokens [ idx ] . title ? ( ' title= ' ' + escapeHtml ( replaceEntities ( tokens [ idx ] . title ) ) + ' ' ' ) : '' ;:==:var alt:==:' alt ' ' + self . renderInlineAsText ( tokens [ idx ] . tokens , options , env ) + ' ' ' ;
var zoom = document . getElementById ( ' chk - zoom ' ) . checked ;:==:var selection:==:document . getElementById ( ' chk - selection ' ) . checked ;
var x = xy . x + widthOverTwo ;:==:var y:==:xy . y + heightOverTwo ;
var action = $ ( this ) . attr ( ' data - action ' ) ;:==:var username:==:parent . attr ( ' data - username ' ) ;
var renderWidth = eyeParameters . renderWidth ;:==:var renderHeight:==:eyeParameters . renderHeight ;
var express = require ( ' express ' ) ;:==:var util:==:require ( ' util ' ) ;
var records = summary ? this . summary : this . records ;:==:var rec:==:records [ index ] ;
var f = function ( a ) return a ;:==:var x:==:[ ' fluorescence ' , 0 , 0 , 0x41414141 ] ;
var operand = this . transformAny ( tree . operand . operand ) ;:==:var memberName:==:tree . operand . memberName ;
var a_keys = [ ] ; for ( var k in a ) if ( a . hasOwnProperty ( k ) ) a_keys . push ( k ):==:var b_keys:==:[ ] ; for ( var k in b ) if ( b . hasOwnProperty ( k ) ) b_keys . push ( k )
var bones = this . bones ;:==:var spaces:==:spine . Utils . setArraySize ( this . spaces , spacesCount ) , lengths    null ;
var r = input . split ( ' \r ' ) ;:==:var n:==:input . split ( ' \n ' ) ;
var fields = this . fields = ;:==:var paths:==:this . paths    ;
var splicer = require ( ' labeled - stream - splicer ' ) ;:==:var through:==:require ( ' through2 ' ) ;
var Header = require ( ' Header ' ) ;:==:var React:==:require ( ' React ' ) ;
var showTime = powerbi . dataViewObjects . getValue ( objects , pulseChart . properties [ ' popup ' ] [ ' showTime ' ] , pulseChart . defaultSettings . popup . showTime ) ;:==:var showTitle:==:powerbi . dataViewObjects . getValue ( objects , pulseChart . properties [ ' popup ' ] [ ' showTitle ' ] , pulseChart . defaultSettings . popup . showTitle ) ;
var fold = pos . fold ;:==:var folds:==:this . folds ;
var originalEvent = event . originalEvent  |  |  event ;:==:var touches:==:originalEvent . touches & & originalEvent . touches . length ? originalEvent . touches : [ originalEvent ] ;
var a = new Parse . Object ( ' testObject ' ) ;:==:var b:==:new parse . object ( ' testObject ' ) ;
var Span = firepad . Span ;:==:var h:==:helpers ;
var parseQueryString = _ props . parseQueryString ;:==:var stringifyQuery:==:_ props . stringifyQuery ;
var maybeRename = this . maybeRename _ ;:==:var inObjectPattern:==:this . inObjectPattern _ ;
var path = options . path ;:==:var radius:==:options . radius  |  |  1 . 0 ;
var changeCreator = this . _ changeCreator ;:==:var type:==:type . toLowerCase ( ) ;
var drag = event . drag ;:==:var drop:==:event . drop ;
var e = sl [ i ] , el ;:==:var options:==:, poptions    , ioptions    ;
var crypto = Npm . require ( ' crypto ' ) ;:==:var querystring:==:Npm . require ( ' querystring ' ) ;
var data = this . data ;:==:var camera:==:this . camera ;
var items = virtualList . items ( ) ;:==:var data:==:asyncDataSource . data ( ) ;
var colorSpace = coreColorSpace . colorSpace ;:==:var murmurhash3_64:==:coreMurmurHash3 . murmurhash3_64 ;
var operator = path . node . operator ;:==:var right:==:path . get ( ' right ' ) . resolve ( ) ;
var key = keyfn ( o ) ;:==:var group:==:groupMap [ key ] ;
var columns = $ ( ' # grid_'+ this . name + ' _ columns ' ) ;:==:var records:==:$ ( ' # grid_'+ this . name + ' _ records ' ) ;
var vertexShader = loadShader ( gl , vertexShaderProg , gl . vertex_shader ) ;:==:var fragmentShader:==:loadShader ( gl , fragmentShaderProg , gl . fragment_shader ) ;
var event = track . event ( ) ;:==:var revenue:==:track . revenue ( )  |  |  0 ;
var pageX = isTouchEvent ? event . touches [ 0 ] . pagex : event . pagex ;:==:var pagey:==:isTouchEvent ? event . touches [ 0 ] . pagey : event . pagey ;
var localRepo = options . localRepo ;:==:var treeString:==:options . treeString ;
var path = req . param ( ' path ' ) ;:==:var cmd:==:req . param ( ' cmd ' ) ;
var async = require ( ' async ' ) ;:==:var prompt:==:require ( ' prompt ' ) ;
var a = tree . a = div . firstChild ;:==:var b:==:tree . b    a . firstChild ;
var privateKey = fs . existsSync ( path . resolve ( config . secure . privateKey ) ) ;:==:var certificate:==:fs . existsSync ( path . resolve ( config . secure . certificate ) ) ;
var baseLayerPicker = viewer . _ baseLayerPicker ;:==:var animation:==:viewer . _ animation ;
var pink100 = exports . pink100 = ' # f8bbd0 ' ;:==:var pink200:==:exports . pink200    ' # f48fb1 ' ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var doc = shadowdomPolyfill . wrap ( document ) ;:==:var head:==:doc . querySelector ( ' head ' ) ;
var disabled = _ props . disabled ;:==:var fullWidth:==:_ props . fullWidth ;
var baseThemes = data . baseThemes ;:==:var coreTpls:==:data . coreTpls ;
var ircbot = config . ircbot ;:==:var utc:==:moment . utc ;
var rimraf = require ( ' rimraf ' ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var indexOf = zrUtil . indexOf ;:==:var curry:==:zrUtil . curry ;
var urlUtils = jsCommon . urlUtils ;:==:var edgeSettings:==:tablixUtils . edgeSettings ;
var assert = require ( ' assert ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var frameWidth = frameData . frameWidth ;:==:var frameHeight:==:frameData . frameHeight ;
var string = util . string ;:==:var number:==:util . number ;
var n = that . point2 . p . subtract ( that . point1 . p ) . normalize ( ) . normal ( ) ;:==:var ac:==:point . p . subtract ( that . point1 . p ) ;
var entity = this . _ entity ;:==:var isAvailable:==:entity . isAvailable ( time ) ;
var nconf = require ( ' nconf ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var x = ( a * rawX ) + ( c * rawY ) + tx ;:==:var y:==:( d * rawY ) + ( b * rawX ) + ty ;
var x = viewport . x  |  |  0 ;:==:var y:==:viewport . y  |  |  0 ;
var Globalization = Windows . Globalization ;:==:var Ocr:==:Windows . Media . Ocr ;
var scale = this . shared . scale ;:==:var next:==:this . shared . next ;
var storageLibrary = windows . storage . storageLibrary ;:==:var knownLibraryId:==:windows . storage . knownLibraryId ;
var mongoose = require ( ' mongoose ' ) ;:==:var objectId:==:mongoose . schema . types . objectId ;
var loadResources = model . _ loadResources ;:==:var techniques:==:model . gltf . techniques ;
var rollup = require ( ' rollup ' ) . rollup ;:==:var path:==:require ( ' path ' ) ;
var through2 = require ( ' through2 ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var axon    = require ( ' pm2-axon ' ) ;:==:var sock:==:axon . socket ( ' sub ' ) ;
var fs = imports . fs ;:==:var save:==:imports . save ;
var fromJS   = require ( ' immutable ' ) . fromJS ;:==:var List:==:require ( ' immutable ' ) . List ;
var text = this . property . text ;:==:var index:==:text . indexOf ( ' : ' ) ;
var eventproxy   = require ( ' eventproxy ' ) ;:==:var uuid:==:require ( ' node - uuid ' ) ;
var file = ref . file ;:==:var extension:==:ref . extension ;
var endDate = instance . get ( ' endDate ' ) ;:==:var startDate:==:instance . get ( ' startDate ' ) ;
var commonsChunkPlugin = webpack . optimize . commonsChunkPlugin ;:==:var fs:==:require ( ' fs ' ) ;
var randf = global . randf ;:==:var randi:==:global . randi ;
var valid = test . valid ;:==:var warning:==:test . warning ;
var bufferIndex = lastState . bufferIndex ;:==:var componentBuffer:==:lastState . componentBuffer ;
var w = imgData . width ;:==:var h:==:imgData . height ;
var l2 = _ l2 ;:==:var l1:==:_ l1 ;
var categoryScale = axisOptions . categoryScale ;:==:var valueScale:==:axisOptions . valueScale ;
var breakpoints = aceSession . $ breakpoints ;:==:var doc:==:aceSession . c9doc ;
var b = [ ] , bi = 0 ;:==:var i:==:[ ] , ii    0 ;
var parseBackgrounds = utils . parseBackgrounds ;:==:var offsetBounds:==:utils . offsetBounds ;
var firstChild = fragment . firstChild ;:==:var lastChild:==:fragment . lastChild ;
var predefinedName = traceur . syntax . predefinedName ;:==:var keywords:==:traceur . syntax . keywords ;
var circle = props . circle ;:==:var transitionEnabled:==:props . transitionEnabled ;
var type = utils . type ;:==:var toString:==:object . prototype . toString ;
var keyCommandPlainBackspace = require ( ' keyCommandPlainBackspace ' ) ;:==:var keyCommandPlainDelete:==:require ( ' keyCommandPlainDelete ' ) ;
var yScale0 = chart . scales . yScale0 ;:==:var yScale1:==:chart . scales . yScale1 ;
var added = options . added ;:==:var forceOrdered:==:options . forceOrdered ;
var atan2 = Math . atan2 ;:==:var cos:==:Math . cos ;
var force = _ ref . force ;:==:var group:==:_ ref . group ;
var group = $ root . data ( ' group ' ) ;:==:var name:==:$ root . data ( ' name ' ) ;
var edgeData = this . edgeData ;:==:var nodes:==:this . nodes ;
var http = imports . http ;:==:var ui:==:imports . ui ;
var bone = this . bones [ slotData . boneData . index ] ;:==:var slot:==:new spine . slot ( slotData , bone ) ;
var shadowRoot = scope . wrappers . shadowRoot ;:==:var treeScope:==:scope . treeScope ;
var reload = browserSync . reload ;:==:var colors:==:plug . util . colors ;
var expectedUrl = params . expectedUrl ;:==:var expectedUnsafeUrl:==:params . expectedUnsafeUrl ;
var dynCall_viiiiiiiii = Module [ ' dynCall_viiiiiiiii ' ] = asm [ ' dynCall_viiiiiiiii ' ] ;:==:var dynCall_viiiiiiiiii:==:Module [ ' dynCall_viiiiiiiiii ' ]    asm [ ' dynCall_viiiiiiiiii ' ] ;
var isDeleteKey = utilities . isDeleteKey ;:==:var isTabKey:==:utilities . isTabKey ;
var userFields = userFieldsRes . fields ;:==:var sortOrder:==:userFieldsRes . sortOrder ;
var wtree = this . wtree ;:==:var btree:==:this . btree ;
var signature = signatures [ signatures . length - 1 ] ;:==:var len:==:signature . parameters . length ;
var hostname = url . hostname ;:==:var pathname:==:url . pathname ;
var dx4 = mxUtils . getValue ( this . style , ' dx4 ' , ' 0 ' ) ;:==:var dy4:==:mxUtils . getValue ( this . style , ' dy4 ' , ' 0 ' ) ;
var sqrt = Math . sqrt ;:==:var clip:==:this . clip ;
var state = this . state ;:==:var editor:==:this . editor ;
var createIdentifierExpression = parseTreeFactory . createIdentifierExpression ;:==:var createNumberLiteral:==:parseTreeFactory . createNumberLiteral ;
var array = this . array ;:==:var promise:==:array . _ promise ;
var td = goog . bind ( this . dom _ . createDom , this . dom _ , ' td ' ) ;:==:var a:==:goog . bind ( this . dom _ . createDom , this . dom _ , ' a ' ) ;
var utils = require ( ' keystone - utils ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' keystone : core : list : addSearchToQuery ' ) ;
var children = _ props3 . children ;:==:var containerElement:==:_ props3 . containerElement ;
var a = event . bodyA . parent ;:==:var b:==:event . bodyB . parent ;
var edgeVectorUnit = spheretrimesh_edgevectorunit ;:==:var localSpherePos:==:spheretrimesh_localspherepos ;
var overscanRowCount = props . overscanRowCount ;:==:var rowCount:==:props . rowCount ;
var amber800 = exports . amber800 = ' # ff8f00 ' ;:==:var amber900:==:exports . amber900    ' # ff6f00 ' ;
var t3 = window . frames [ ' t3 ' ] ;:==:var doc:==:iframe . doc ( t3 ) ;
var positionOnActivate = this . state . touchable . positionOnActivate ;:==:var dimensionsOnActivate:==:this . state . touchable . dimensionsOnActivate ;
var mout = require ( ' mout ' ) ;:==:var which:==:require ( ' which ' ) ;
var firstRowIndex = oldState & & oldState . firstRowIndex  |  |  0 ;:==:var firstRowOffset:==:oldState & & oldState . firstRowOffset  |  |  0 ;
var onEffects = info . onEffects ;:==:var onSelfMsg:==:info . onSelfMsg ;
var json = this . json ;:==:var options:==:this . options ;
var eventPluginUtils = require ( ' eventPluginUtils ' ) ;:==:var reactErrorUtils:==:require ( ' reactErrorUtils ' ) ;
var Nightscout = window . Nightscout ;:==:var client:==:Nightscout . client ;
var totalColumnsWidth = _ ref3 . totalColumnsWidth ;:==:var totalRowsHeight:==:_ ref3 . totalRowsHeight ;
var content = req . body . r_content ;:==:var topic_id:==:req . params . topic_id ;
var browser = grunt . option ( ' browser ' ) ;:==:var specs:==:grunt . option ( ' specs ' ) ;
var scrollToCell = _ props6 . scrollToCell ;:==:var width:==:_ props6 . width ;
var tick = require ( ' next - tick ' ) ;:==:var when:==:require ( ' when ' ) ;
var dynCall_viiiiiiiiii = Module [ ' dynCall_viiiiiiiiii ' ] = asm [ ' dynCall_viiiiiiiiii ' ] ;:==:var dynCall_iii:==:Module [ ' dynCall_iii ' ]    asm [ ' dynCall_iii ' ] ;
var position = geometry . attributes . position . array ;:==:var m:==:matrix . elements ;
var createAssignStateStatement = parseTreeFactory . createAssignStateStatement ;:==:var createAssignmentExpression:==:parseTreeFactory . createAssignmentExpression ;
var linkService = options . linkService ;:==:var renderingQueue:==:options . renderingQueue ;
var pre = m . pre ;:==:var post:==:m . post . length ? expand ( m . post , false ) : [ '' ] ;
var app = applications . getByManifesturl ( manifesturl ) ;:==:var icons:==:app . manifest . icons ;
var breakpoint = breakpoints [ 0 ] . name ;:==:var columns:==:this . s . columns ;
var quoteMark = this . _ quoteMark ;:==:var allowEscape:==:this . _ allowEscape ;
var abs = Math . abs ;:==:var sqrt:==:Math . sqrt ;
var buf = new sshBuffer ( buffer : data ) ;:==:var d:==:buf . readBuffer ( ) ;
var tbody = this . dom _ . createElement ( ' tbody ' ) ;:==:var tfoot:==:this . dom _ . createElement ( ' tfoot ' ) ;
var c = Math . cos ( rotation ) ;:==:var s:==:Math . sin ( rotation ) ;
var find = ' local find ' ;:==:var findIndex:==:' local findIndex ' ;
var through = require ( ' through2 ' ) ;:==:var requirejs:==:require ( ' requirejs ' ) ;
var forward = motionArgs . forward = = = lastSearch . forward ;:==:var increment:==:( lastSearch . increment ? 1 : 0 ) * ( forward ? -1 : 1 ) ;
var direction = e . gesture . direction ;:==:var x:==:e . gesture . center . x ;
var href = link . href ;:==:var rel:==:link . rel ;
var httpCors = goog . require ( ' goog . net . rpc . httpCors ' ) ;:==:var testSuite:==:goog . require ( ' goog . testing . testSuite ' ) ;
var contexts = this . _ contexts ;:==:var arg:==:this . _ arg ;
var exififdLengthDataSection = ifDlengths . exififdLengthDataSection ;:==:var gpsifdLength:==:ifDlengths . gpsifdLength ;
var string_starts_with = shared_tools . string_starts_with ;:==:var to_title_case:==:shared_tools . to_title_case ;
var path = require ( ' path ' ) ;:==:var test:==:require ( ' tap ' ) . test ;
var spawn = require ( ' cross - spawn ' ) ;:==:var argv:==:process . argv . slice ( 2 ) ;
var w = texture . baseTexture . width ;:==:var h:==:texture . baseTexture . height ;
var shell = require ( ' shelljs ' ) ;:==:var grunt:==:require ( ' grunt ' ) ;
var valueOf = object . prototype . valueOf ;:==:var hasOwnProperty:==:object . prototype . hasOwnProperty ;
var width = this . attribute ( ' width ' ) . toPixels ( ' x ' , true ) ;:==:var height:==:this . attribute ( ' height ' ) . toPixels ( ' y ' , true ) ;
var proc = imports . proc ;:==:var api:==:imports . api ;
var descending = ' descending ' in opts ? opts . descending : false ;:==:var limit:==:' limit ' in opts ? opts . limit : -1 ;
var Hilo = window . Hilo ;:==:var htmlAudio:==:hilo . htmlAudio ;
var left = path . get ( ' left ' ) ;:==:var right:==:path . get ( ' right ' ) ;
var parent = nodeWithId ( res . parentNodeId ) ;:==:var previousNode:==:nodeWithId ( res . previousNodeId ) ;
var HAS_NATIVE_FULLSCREEN_ENABLED = exports . HAS_NATIVE_FULLSCREEN_ENABLED = nativeFullScreenEnabled ;:==:var fullscreen_event_name:==:exports . fullscreen_event_name    fullScreenEventName ;
var karma = require ( ' karma ' ) . Server ;:==:var yargs:==:require ( ' yargs ' ) ;
var option = gRequire ( ' option ' ) ;:==:var help:==:gRequire ( ' help ' ) ;
var doc = _ i d : ' foodoc ' ;:==:var doc2:==:_ i d : ' foodoc2 ' ;
var async = require ( ' async ' ) ;:==:var validator:==:require ( ' validator ' ) ;
var start = ' start ' ;:==:var end:==:' end ' ;
var c = fulfillBuiltInSoon ( ' c ' , 10 ) ;:==:var d:==:fulfillBuiltInSoon ( ' d ' , 20 ) ;
var title = self . include_title ? ' title= ' ' + ( actual  |  |  self . data [ idx ] [ 3 ] [ 0 ] ) + ' ' ' : '' ;:==:var text:==:self . include_text ? wrapper + ( actual  |  |  self . data [ idx ] [ 3 ] [ 0 ] ) + wrapper : '' ;
var touchRippleOpacity = _ props2 . touchRippleOpacity ;:==:var isKeyboardFocused:==:this . state . isKeyboardFocused ;
var body = this . client . findElement ( ' body ' ) ;:==:var menuButton:==:this . client . findElement ( this . selectors . menuButton ) ;
var valueDim = opt . valueDim ;:==:var animationModel:==:symbolMeta . animationModel ;
var app = this . apps [ manifestURL ] ;:==:var manifest:==:app . manifest  |  |  app . updateManifest ;
var ELEMENT_GET = traceur . syntax . predefinedName . element_get ;:==:var element_has:==:traceur . syntax . predefinedName . element_has ;
var nx = vNode . getElementsByTagName ( ' nx ' ) [ 0 ] . textContent ;:==:var ny:==:vNode . getElementsByTagName ( ' ny ' ) [ 0 ] . textContent ;
var assetManager = this . assetManager ;:==:var imagesPath:==:this . config . imagesPath ;
var position = Cartesian3 . clone ( this . positionWC , setTransformPosition ) ;:==:var up:==:cartesian3 . clone ( this . upwc , setTransformUp ) ;
var reactTestUtils = require ( ' reactTestUtils ' ) ;:==:var renderSubtreeIntoContainer:==:require ( ' renderSubtreeIntoContainer ' ) ;
var length = frame . text . length ;:==:var time:==:new Date ( frame . time * 1000 ) ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var keyUtils:==:jsCommon . keyUtils ;
var pubsub = imports . pubsub ;:==:var vfs:==:imports . vfs ;
var anchorNode = selection . anchorNode ;:==:var anchorOffset:==:selection . anchorOffset ;
var header = o . header ! = null ? o . header : _ BEGIN ;:==:var footer:==:o . footer !   null ? o . footer : _ END ;
var Route = Router . Route ;:==:var defaultRoute:==:router . defaultRoute ;
var autoprefix = require ( ' less - plugin - autoprefix ' ) ;:==:var logger:==:require ( ' gulp - logger ' ) ;
var title = _ props . title ;:==:var titleStyle:==:_ props . titleStyle ;
var file = files [ i ] ;:==:var stat:==:fs . statSync ( file ) ;
var cname = option_consume ( options , ' cname ' , $ . cloudinary . config ( ) . cname ) ;:==:var cdn_subdomain:==:option_consume ( options , ' cdn_subdomain ' , $ . cloudinary . config ( ) . cdn_subdomain ) ;
var jsunit = goog . require ( ' goog . testing . jsunit ' ) ;:==:var testSuite:==:goog . require ( ' goog . testing . testSuite ' ) ;
var Program = cst . types . Program ;:==:var Fragment:==:cst . Fragment ;
var AWS = helpers . AWS ;:==:var Buffer:==:AWS . util . Buffer ;
var timestamps = this . _ profileSamples . timestamps ;:==:var sizes:==:this . _ profileSamples . sizes ;
var callFrames = details . callFrames ;:==:var asyncStackTrace:==:details . asyncStackTrace ;
var sqlite3 = require ( ' sqlite3 ' ) ;:==:var plugins:==:require ( util . dirs ( ) . gekko + ' plugins ' ) ;
var generateDepthTexture = options . generateDepthTexture ? options . generateDepthTexture : false ;:==:var doNotChangeAspectRatio:==:options . doNotChangeAspectRatio      undefined ? true : options . doNotChangeAspectRatio ;
var extend = require ( ' util ' ) . _ extend ;:==:var resolve:==:require ( ' path ' ) . resolve ;
var ALETTER = ci . ALETTER ;:==:var MIDNUMLET:==:ci . MIDNUMLET ;
var breakpoints = imports . breakpoints ;:==:var debug:==:imports . debugger ;
var sum32_3 = utils . sum32_3 ;:==:var sum32_4:==:utils . sum32_4 ;
var itemTemplate = this . options . itemTemplate  |  |  this . options . template ;:==:var template:==:listOptions . itemTemplate  |  |  itemTemplate  |  |  listOptions . template ;
var stackPartitions = math . round ( defaultValue ( options . stackPartitions , 10 ) ) ;:==:var slicePartitions:==:math . round ( defaultValue ( options . slicePartitions , 8 ) ) ;
var parseTreeTransformer = traceur . codegeneration . parseTreeTransformer ;:==:var breakStatement:==:traceur . syntax . trees . breakStatement ;
var data = this . data ;:==:var material:==:this . material ;
var displayUnitSystemType = powerbi . displayUnitSystemType ;:==:var jsCommon:==:window . jsCommon ;
var now = Date . now ( ) ;:==:var created:==:this . created . getTime ( ) ;
var parent = scope . parent ;:==:var child:==:doc . find ( ' input ' ) . scope ( ) . child ;
var isBigEndian = structure . isBigEndian ;:==:var heightOffset:==:structure . heightOffset ;
var source = require ( ' vinyl - source - stream ' ) ;:==:var stream:==:require ( ' event - stream ' ) ;
var c = Math . cos ( rad ) ;:==:var s:==:Math . sin ( rad ) ;
var programs = _ context . programs ;:==:var decorators:==:_ context . decorators ;
var southwest = projection . project ( Rectangle . southwest ( rectangle ) ) ;:==:var northeast:==:projection . project ( Rectangle . northeast ( rectangle ) ) ;
var generate = _ _ webpack_require _ _ ( 601 ) . generate ;:==:var parse:==:_ _ webpack_require _ _ ( 602 ) . parse ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var crypto:==:require ( ' crypto ' ) ;
var i d = $ dialog . attr ( ' i d ' ) ;:==:var scope:==:scopes [ i d ] ;
var menuItem = imports . menuItem ;:==:var commands:==:imports . commands ;
var nconf = require ( ' nconf ' ) ;:==:var url:==:require ( ' url ' ) ;
var g = e . dygraph ;:==:var setName:==:e . setName ;
var row = annot . row ;:==:var col:==:annot . column ;
var outer = exports . createElement ( ' ace_outer ' ) ;:==:var style:==:outer . style ;
var dataIndex = symbolMeta . dataIndex ;:==:var itemModel:==:symbolMeta . itemModel ;
var SYNTAX_ERROR_TREE = ' SYNTAX_ERROR_TREE ' ;:==:var TEMPLATE_LITERAL_EXPRESSION:==:' TEMPLATE_LITERAL_EXPRESSION ' ;
var anchor = document . getElementById ( ' anchor8 ' ) ;:==:var popup:==:document . getElementById ( ' popup8 ' ) ;
var a = this . body_a ;:==:var b:==:this . body_b ;
var minChar = ast . minChar ;:==:var limChar:==:ast . limChar ;
var sign = Math . sign ( v ) ;:==:var abs:==:_ abs ( v ) ;
var started = logEntry . started ;:==:var startedTime:==:logEntry . startedTime ;
var callback = req . query . callback ;:==:var width:==:req . query . maxwidth  |  |  320 ;
var _ calloc = Module [ ' _ calloc ' ] = asm [ ' _ calloc ' ] ;:==:var runPostSets:==:module [ ' runPostSets ' ]    asm [ ' runPostSets ' ] ;
var cx = require ( ' cx ' ) ;:==:var joinClasses:==:require ( ' joinClasses ' ) ;
var setTimeout = global . setTimeout ;:==:var setInterval:==:global . setInterval ;
var sqrt = math . sqrt ;:==:var bignumber:==:math . bignumber ;
var read = this . readFile . bind ( this ) ;:==:var concurrency:==:this . concurrency ( ) ;
var dynamic = ref . dynamic ;:==:var classResult:==:ref . classResult ;
var width = Base . window . width * . 50  |  0 ;:==:var total:==:runner . total ;
var APPLY = traceur . syntax . predefinedName . apply ;:==:var array:==:traceur . syntax . predefinedName . array ;
var basename = path . basename ( plugin ) ;:==:var dirname:==:path . dirname ( plugin ) ;
var bytesToString = sharedUtil . bytesToString ;:==:var createPromiseCapability:==:sharedUtil . createPromiseCapability ;
var res = resMap [ i d ]  |  |  resMap [ i d + ' . js ' ]  |  |  ;:==:var pkg:==:res . pkg ;
var models = _ _ alloyId45 . models ;:==:var len:==:models . length ;
var pointStyle = vm . pointStyle ;:==:var radius:==:vm . radius ;
var os = require ( ' os ' ) ;:==:var NODE:==:exports . NODE    ' node ' ;
var calculateMD5 = coreCrypto . calculatemd5 ;:==:var operatorList:==:coreEvaluator . operatorList ;
var Buffer = require ( ' buffer ' ) . Buffer ;:==:var util:==:require ( ' core - util - is ' ) ;
var error = debug ( ' components : texture : error ' ) ;:==:var textureLoader:==:new three . textureLoader ( ) ;
var d2 = _ addDraggableDiv ( _ jsPlumb , ' d2 ' , null , null,250 , 250 , 100 , 100 ) ;:==:var d3:==:_ addDraggableDiv ( _ jsPlumb , ' d3 ' , null , null,500 , 500 , 100 , 100 ) ;
var device = openList . index [ workingAddress ] . device ;:==:var item:==:openList . index [ workingAddress ] . item ;
var errors = require ( ' restify - errors ' ) ;:==:var methodNotAllowedError:==:errors . methodNotAllowedError ;
var len = this . _ length ( ) ;:==:var progress:==:this . _ progress ;
var Attendance = Parse . Object . extend ( ' Attendance ' ) ;:==:var Survey:==:Parse . Object . extend ( ' Survey ' ) ;
var target = this . target ;:==:var bones:==:this . bones ;
var reactMarkupChecksum = require ( ' reactMarkupChecksum ' ) ;:==:var assertValidProps:==:require ( ' assertValidProps ' ) ;
var fs = require ( ' fs . extra ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var assign = require ( ' object - assign ' ) ;:==:var babel:==:require ( ' babel - core ' ) ;
var y = bn . fromBits ( h . toBits ( vectors [ i ] . qy ) ) ;:==:var k:==:bn . fromBits ( h . toBits ( vectors [ i ] . k ) ) ;
var host = params . host ;:==:var port:==:params . port ;
var issues = ' issues ' : oData . issues ;:==:var appInfos:==:' appInfos ' : oData . application ;
var projection = viewState . projection ;:==:var rotation:==:viewState . rotation ;
var dirs = util . dirs ( ) ;:==:var log:==:require ( dirs . core + ' log ' ) ;
var sampleCoverage = defaultValue ( rs . sampleCoverage , ) ;:==:var viewport:==:rs . viewport ;
var L10n = navigator . mozL10n . _ getInternalapi ( ) ;:==:var resolver:==:l10n . resolver ;
var component = exports . component = oneOfType ( [ func , string ] ) ;:==:var components:==:exports . components    oneOfType ( [ component , object ] ) ;
var sources = fs . sources . slice ( 0 ) ;:==:var length:==:sources . length ;
var parse = require ( ' pug - parser ' ) ;:==:var load:==:require ( ' pug - load ' ) ;
var b = bwcService . getBitcore ( ) ;:==:var x:==:b . hdPublicKey ( xPubKey ) ;
var os = require ( ' os ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var page = this . page ;:==:var config:==:this . config ;
var topOverlayCallback = jasmine . createSpy ( ' topOverlayCallback ' ) ;:==:var leftOverlayCallback:==:jasmine . createSpy ( ' leftOverlayCallback ' ) ;
var length = this . length ( ) ;:==:var preservedValues:==:this . _ preservedValues ;
var babel = require ( ' gulp - babel ' ) ;:==:var del:==:require ( ' del ' ) ;
var rule = ' \n ' + selector + ' \n\n ' + ruleBody + ' \n\n ' ;:==:var className:==:classNamePrefix + ( pseudoType  |  |  ' ' ) + classNameSuffix ;
var item = data . items [ i ] ;:==:var i d:==:item . i d ;
var onHeaderClick = _ props2 . onHeaderClick ;:==:var sort:==:_ props2 . sort ;
var val = fragment . val = c . val ;:==:var index:==:fragment . index    c . index ;
var orientationSensor = windows . devices . sensors . orientationSensor ;:==:var backgroundExecutionManager:==:windows . applicationModel . background . backgroundExecutionManager ;
var normalize = require ( ' path ' ) . normalize ;:==:var join:==:require ( ' path ' ) . join ;
var start = this . ELAN . renderedAlignable [ i ] . start ;:==:var end:==:this . elan . renderedAlignable [ i ] . end ;
var express = require ( ' express ' ) ;:==:var path:==:require ( ' path ' ) ;
var ast = parse ( stream , astFactory ) ;:==:var val:==:new evaluator ( doc ) . val ( ast , nodes : [ context ] ) ;
var Controller = _ fxosMvcDistMvc . controller ;:==:var mainView:==:_ appJsViewsMainView [ ' default ' ] ;
var error = sharedUtil . error ;:==:var isInt:==:sharedUtil . isInt ;
var script = document . querySelector ( ' script [ src*= ' ' + fileName + ' ' ] ' ) ;:==:var src:==:script . attributes . src . value ;
var _ rand_r = Module [ ' _ rand_r ' ] = asm [ ' _ rand_r ' ] ;:==:var _ realloc:==:Module [ ' _ realloc ' ]    asm [ ' _ realloc ' ] ;
var stream = require ( ' stream ' ) ;:==:var mime:==:require ( ' mime ' ) ;
var callback1 = jasmine . createSpy ( ' callback1 ' ) ;:==:var callback2:==:jasmine . createSpy ( ' callback2 ' ) ;
var limeA700 = exports . limeA700 = ' # aeea00 ' ;:==:var yellow50:==:exports . yellow50    ' # fffde7 ' ;
var width = this . _ model . get ( ' width ' ) ;:==:var height:==:this . _ model . get ( ' height ' ) ;
var options = obj . options ;:==:var val:==:$ ( obj . el ) . val ( ) . trim ( ) ;
var boundingBoxes = this . boundingBoxes ;:==:var polygons:==:this . polygons ;
var desc = weather . description  |  |  ' < unknown weather > ' ;:==:var temp:==:main . temp  |  |  ' < unknown temp > ' ;
var aug = this . vexpr ( auge ) ;:==:var val:==:this . vexpr ( s . value ) ;
var rowSizeAndPositionManager = _ ref . rowSizeAndPositionManager ;:==:var rowStartIndex:==:_ ref . rowStartIndex ;
var x = x1 + u * px ;:==:var y:==:y1 + u * py ;
var external = ( primitive . _ external = primitive . _ external  |  |  ) ;:==:var composites:==:( external . _ composites    external . _ composites  |  |  ) ;
var textDivs = this . _ textDivs ;:==:var viewport:==:this . _ viewport ;
var sw = topo . data [ ' switchs ' ] [ i d ] ;:==:var group:==:sw [ ' group ' ] ;
var Animated = require ( ' Animated ' ) ;:==:var resolveAssetSource:==:require ( ' resolveAssetSource ' ) ;
var client = apps . _ client ;:==:var body:==:client . findElement ( ' body ' ) ;
var assert = require ( ' assert ' ) ;:==:var lex:==:require ( ' pug - lexer ' ) ;
var commonObjs = this . commonObjs ;:==:var objs:==:this . objs ;
var OBJECT_LITERAL_EXPRESSION = ' OBJECT_LITERAL_EXPRESSION ' ;:==:var OBJECT_PATTERN:==:' OBJECT_PATTERN ' ;
var combo = $ scope . combo ;:==:var dropDown:==:$ scope . dropDown ;
var selectOtherMonths = this . _ get ( inst , ' selectOtherMonths ' ) ;:==:var calculateWeek:==:this . _ get ( inst , ' calculateWeek ' )  |  |  this . iso8601Week ;
var When = exports . When = defineStep ;:==:var then:==:exports . then    defineStep ;
var app = evt . application ;:==:var manifest:==:app . manifest  |  |  app . updateManifest ;
var fieldsAsRaw = options [ ' fieldsAsRaw ' ] = = null ? null : options [ ' fieldsAsRaw ' ] ;:==:var raw:==:options [ ' raw ' ]     null ? false : options [ ' raw ' ] ;
var findit = require ( ' findit ' ) ;:==:var path:==:require ( ' path ' ) ;
var usesDepthTexture = shadowMap . _ usesDepthTexture ;:==:var polygonOffsetSupported:==:shadowMap . _ polygonOffsetSupported ;
var sprite = sprites [ i ] ;:==:var material:==:sprite . material ;
var x2 = layer . x2  |  |  layer . frame . x ;:==:var y2:==:layer . y2  |  |  layer . frame . y + layer . frame . height ;
var log = console . log ;:==:var vid:==:document . createElement ( ' video ' ) ;
var handleThumbs = shapes . handleThumbs ;:==:var handleLabels:==:shapes . handleLabels ;
var sideOrientation = this . updateSideOrientation ( options . sideOrientation , scene ) ;:==:var cap:==:options . cap  |  |  babylon . mesh . no_cap ;
var textAlign = style . textAlign ;:==:var font:==:style . textFont  |  |  style . font ;
var Controller = _ componentsFxosMvcDistMvc . controller ;:==:var listModel:==:_ jsModelListModel [ ' default ' ] ;
var cs_lu = math . sparse . cs_lu ;:==:var cs_sqr:==:math . sparse . cs_sqr ;
var multiPolygonIntersectsBufferedMultiPoint = intersection . multiPolygonIntersectsBufferedMultiPoint ;:==:var multiPolygonIntersectsMultiPolygon:==:intersection . multiPolygonIntersectsMultiPolygon ;
var asin = stdlib . Math . asin ;:==:var atan:==:stdlib . Math . atan ;
var chalk = require ( ' chalk ' ) ;:==:var debug:==:require ( ' gulp - debug ' ) ;
var eventElementHandlers = t . eventElementHandlers ;:==:var showEvents:==:t . showEvents ;
var client = Nightscout . client ;:==:var admin_plugins:==:Nightscout . admin_plugins ;
var cipher = this . _ cipher ;:==:var blockSize:==:cipher . blockSize ;
var p = positions [ i ] ;:==:var x:==:p . x ;
var http = require ( ' http ' ) ;:==:var os:==:require ( ' os ' ) ;
var iv = cfg . iv ;:==:var mode:==:cfg . mode ;
var lat = coerce ( ' lat ' )  |  |  [ ] ;:==:var len:==:Math . min ( lon . length , lat . length ) ;
var address = evt . address ;:==:var i d:==:' div [ data - id ' ' + address + ' ' ] ' ;
var async = require ( ' async ' ) ;:==:var dirname:==:require ( ' path ' ) . dirname ;
var Text = require ( ' f8Text ' ) ;:==:var touchableHighlight:==:require ( ' touchableHighlight ' ) ;
var promise = this . _ promise ;:==:var boundTo:==:promise . _ boundTo ;
var Boolean = platform . Boolean ;:==:var Object:==:platform . Object ;
var token = tokens [ i ] ;:==:var value:==:token . value ;
var r = hue2rgb ( p , q , tr ) ;:==:var g:==:hue2rgb ( p , q , tg ) ;
var xmin = options . xmin ;:==:var zmin:==:options . zmin ;
var $ mdUtil = this . $ mdUtil ;:==:var $ scope:==:this . $ scope ;
var fs = imports [ ' fs ' ] ;:==:var panels:==:imports . panels ;
var amberA100 = exports . amberA100 = ' # ffe57f ' ;:==:var amberA200:==:exports . amberA200    ' # ffd740 ' ;
var a = SIMD . Float32x4 ( 1 . 0 , 0 . 25 , 0 . 111111 , 0 . 0625 ) ;:==:var c:==:SIMD . Float32x4 . reciprocalSqrtApproximation ( a ) ;
var clone = require ( ' clone ' ) ;:==:var cookie:==:require ( ' cookie ' ) ;
var inherit = AWS . util . inherit ;:==:var jmespath:==:require ( ' jmespath ' ) ;
var V = new Vol ( this . sx , this . sy , this . depth , 0 . 0 ) ;:==:var n:==:this . w . length ;
var edgeVertexa = spheretrimesh_edgevertexa ;:==:var edgeVertexb:==:spheretrimesh_edgevertexb ;
var Panel = imports . Panel ;:==:var commands:==:imports . commands ;
var del = require ( ' del ' ) ;:==:var less:==:require ( ' gulp - less ' ) ;
var key = options . key  |  |  options ;:==:var passphrase:==:options . passphrase  |  |  null ;
var apply = cTop . createElement ( ' apply ' ) ;:==:var mrow:==:cTop . createElement ( ' mrow ' ) ;
var format = require ( ' url ' ) . format ;:==:var resolve:==:require ( ' url ' ) . resolve ;
var widget = $ ( ' # widget ' ) . classesWidget ( ) ;:==:var instance:==:widget . classesWidget ( ' instance ' ) ;
var reactdomTextComponent = require ( ' reactdomTextComponent ' ) ;:==:var reactDefaultBatchingStrategy:==:require ( ' reactDefaultBatchingStrategy ' ) ;
var fileName = challengeSpec . fileName ;:==:var helpRoom:==:challengeSpec . helpRoom  |  |  ' help ' ;
var forEach = array . prototype . forEach . call . bind ( array . prototype . forEach ) ;:==:var concat:==:array . prototype . concat . call . bind ( array . prototype . concat ) ;
var TABLE = this . instance . wtTable . table ;:==:var td:==:closestDown ( elem , [ ' td ' , ' th ' ] , table ) ;
var httpRequest = req . httpRequest  |  |  ;:==:var headers:==:httpRequest . headers ;
var legendPosition = powerbi . visuals . legendPosition ;:==:var selectionId:==:powerbi . visuals . selectionId ;
var feedback = _ feedback  |  |  0 ;:==:var delayTime:==:_ delayTime  |  |  0 ;
var site = this . _ site ;:==:var insertedElements:==:this . _ insertedElements ;
var x = shape . _ props . x ;:==:var hide:==:shape . _ hide ;
var resolution = texture . baseTexture . resolution ;:==:var textureIndex:==:texture . baseTexture . textureIndex ;
var timeoutMs = opts . timeoutMs  |  0 ;:==:var now:==:date . now ( ) ;
var settings = this . dataView . settings ;:==:var heightColumn:==:math . max ( this . heightColumn , 0 ) ;
var groupItem = groupItems [ i ] ;:==:var label:==:$ ( groupItem ) . find ( ' . menu - label ' ) . html ( ) ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var pixelConverter:==:jsCommon . pixelConverter ;
var s = this ;:==:var plt:==:s . _ plt ;
var centerX = widget . _ centerX ;:==:var centerY:==:widget . _ centerY ;
var nano = require ( ' gulp - cssnano ' ) ;:==:var postcss:==:require ( ' postcss ' ) ;
var br = goog . html . testing . newSafeHtmlForTest ( ' < br > ' ) ;:==:var html:==:goog . html . safeHtml . htmlEscape ( ' hello ' ) ;
var collection = db . collection ( ' test_correctly_access_collections2_with_generators ' ) ;:==:var collections:==:yield db . collections ( ) ;
var duplexer = require ( ' duplexer2 ' ) ;:==:var subarg:==:require ( ' subarg ' ) ;
var documentElement = kml . documentElement ;:==:var document:==:documentElement . localName      ' document ' ? documentElement : queryFirstNode ( documentElement , ' document ' , namespaces . kml ) ;
var scene3dOnly = frameState . scene3dOnly ;:==:var alpha:==:model . color . alpha ;
var createVariableDeclarationList = parseTreeFactory . createVariableDeclarationList ;:==:var createVariableStatement:==:parseTreeFactory . createVariableStatement ;
var entryStartTimes = timelineData . entryStartTimes ;:==:var entryTotalTimes:==:timelineData . entryTotalTimes ;
var btn3 = plugin . getElement ( ' btn3 ' ) ;:==:var btn4:==:plugin . getElement ( ' btn4 ' ) ;
var foldData = this . foldData ;:==:var i:==:folds . indexOf ( fold ) ;
var escape = require ( ' escape - string - regexp ' ) ;:==:var hasOwnProp:==:object . prototype . hasOwnProperty ;
var merge = require ( ' merge - stream ' ) ;:==:var zip:==:require ( ' gulp - zip ' ) ;
var keys = Object . keys ( data ) ;:==:var props:==:vm . $ options . props ;
var numberOfAudioChannels = config . numberOfAudioChannels ;:==:var leftBuffers:==:config . leftBuffers . slice ( 0 ) ;
var height = defaultValue ( screenSpaceRectangle . height , 1 . 0 ) ;:==:var context:==:this . _ context ;
var north = rectangle . north ;:==:var south:==:rectangle . south ;
var addClass = exports . addClass = addClassMethod ;:==:var removeClass:==:exports . removeClass    removeClassMethod ;
var slop = -options . slop ;:==:var restitution:==:options . restitution ;
var info = sharedUtil . info ;:==:var log2:==:sharedUtil . log2 ;
var value = event . detail . value ;:==:var filter:==:this . _ filter ;
var i d = this . h ( ' i d ' ) ;:==:var instance:==:this . h ( ' instance ' ) ;
var path = require ( ' path ' ) ;:==:var express:==:require ( ' express ' ) ;
var ondone = options . ondone ;:==:var onstatus:==:options . onstatus ;
var path = require ( ' path ' ) ;:==:var connect:==:require ( ' connect ' ) ;
var cx = parseFloat ( magnetElem . getAttributens ( oryx . config . namespace_oryx , ' cx ' ) ) ;:==:var cy:==:parseFloat ( magnetElem . getAttributens ( oryx . config . namespace_oryx , ' cy ' ) ) ;
var particle = this . particles [ i ] ;:==:var size:==:particle . size ;
var hash = window . location . hash . substring ( 1 ) ;:==:var lhost:==:hash . substring ( hash . indexOf ( ' lhost ' ) + 6 , hash . indexOf ( ' & ' ) ) ;
var ch = target . getAttribute ( ' data - ch ' ) * 1 ;:==:var line:==:target . getAttribute ( ' data - line ' ) * 1 ;
var url = _ url ;:==:var timeout:==:options . timeout  |  |  defaultOptions . timeout ;
var network = mobileConnection . voice . network ;:==:var iccInfo:==:iccCard . iccInfo ;
var i d = event . i d ;:==:var start:==:$ . fullCalendar . formatDate ( event . start , ' yyyy - mm - dd hh : mm : ss ' ) ;
var red900 = exports . red900 = ' # b71c1c ' ;:==:var redA100:==:exports . redA100    ' # ff8a80 ' ;
var c = a . scaled_width ;:==:var d:==:a . scaled_height ;
var nconf = require ( ' nconf ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var height = opts & & opts . height ! = = undefined ? opts . height : 1 . 0 ;:==:var heightSegments:==:opts & & opts . heightSegments !    undefined ? opts . heightSegments : 1 ;
var fontSize = current . fontSize ;:==:var texthScale:==:current . texthScale ;
var t = cd [ 0 ] . t ;:==:var xa:==:pointData . xa ;
var hi = $ ( ' . say - hi ' ) ;:==:var content:==:hi . find ( ' . content ' ) ;
var el = d3 . select ( this ) ;:==:var text:==:el . select ( ' text ' ) ;
var selected = chooser . find ( source ) . children ( ' option : selected ' ) ;:==:var dest:==:chooser . find ( dest ) ;
var currentStyle = cs [ ' currentStyle ' ] ;:==:var defaultView:==:doc . defaultView ;
var itemIndex = elementData . itemIndex ;:==:var stagger:==:elementData . stagger ;
var keys = Object . keys ( err . errors  |  |  ) ;:==:var len:==:keys . length ;
var z = value1 . z - value2 . z ;:==:var w:==:value1 . w - value2 . w ;
var granularity = circleGeometry . _ ellipseGeometry . _ granularity ;:==:var ellipsoid:==:circleGeometry . _ ellipseGeometry . _ ellipsoid ;
var requiredFirst = configuration . requiredFirst  |  |  false ;:==:var callbacksLast:==:configuration . callbacksLast  |  |  false ;
var css = data . css ;:==:var type:==:data . type ;
var el = this . el ;:==:var canvas:==:el . sceneEl . canvas ;
var dataLabelsSettings = this . data . dataLabelsSettings ;:==:var categoryLabelsSettings:==:this . data . categoryLabelsSettings ;
var IMPORT_SPECIFIER_SET = ' IMPORT_SPECIFIER_SET ' ;:==:var IMPORT_TYPE_CLAUSE:==:' IMPORT_TYPE_CLAUSE ' ;
var buffer = r . bufferToUse ;:==:var symbolicName:==:r . symbolicName ;
var helpers = Chart . helpers ;:==:var noop:==:helpers . noop ;
var content = new Animation ( ele . querySelector ( ' . popover - content ' ) ) ;:==:var viewport:==:new animation ( ele . querySelector ( ' . popover - viewport ' ) ) ;
var stdout = ( err  |  |  e ) . stdout ;:==:var stderr:==:( err  |  |  e ) . stderr ;
var status = element ( by . binding ( ' status ' ) ) ;:==:var data:==:element ( by . binding ( ' data ' ) ) ;
var types = _ . isString ( opts . types ) ? [ opts . types ] : opts . types ;:==:var locations:==:_ . isString ( opts . locations ) ? [ opts . locations ] : opts . locations ;
var addLinkAttributes = sharedUtil . addLinkAttributes ;:==:var warn:==:sharedUtil . warn ;
var ed2 = join ( ' ed2 ' ) ;:==:var ed3:==:join ( ' ed3 ' ) ;
var pink50 = exports . pink50 = ' # fce4ec ' ;:==:var pink100:==:exports . pink100    ' # f8bbd0 ' ;
var feature = obj . feature ;:==:var options:==:obj . options ;
var m = db . model ( ' Employee ' ) ;:==:var match:==:$ match : sal : $ gt : 15000 ;
var _ strncpy = Module [ ' _ strncpy ' ] = asm [ ' _ strncpy ' ] ;:==:var _ bitshift64Lshr:==:module [ ' _ bitshift64Lshr ' ]    asm [ ' _ bitshift64Lshr ' ] ;
var nodeName = node . nodeName . toLowerCase ( ) ;:==:var nodeType:==:node . nodeType ;
var annotations = this . transformList ( tree . annotations ) ;:==:var body:==:this . getDoNotRecurse ( tree ) ? tree . body : this . transformAny ( tree . body ) ;
var utils = require ( ' utils ' ) ;:==:var widgets:==:require ( ' widgets ' ) ;
var context = frameState . context ;:==:var attributeLocations:==:primitive . _ attributeLocations ;
var userContext = context . userContext ;:==:var ctor:==:node . componentOptions . ctor ;
var cookie = exports . cookie ;:==:var levels:==:exports . levels ( url ) ;
var form = that . _ send_form = _ document . createElement ( ' form ' ) ;:==:var area:==:that . _ send_area    _ document . createElement ( ' textarea ' ) ;
var valueField = this . cfg . valueField ;:==:var len:==:this . _ data . length ;
var defaults = require ( ' deep - defaults ' ) ;:==:var join:==:require ( ' path ' ) . join ;
var tip = API . _ ( el . getAttribute ( ' data - tooltip ' )  |  |  '' ) ;:==:var img:==:document . createElement ( ' img ' ) ;
var path = require ( ' path ' ) ;:==:var sliced:==:require ( ' sliced ' ) ;
var https = require ( ' https ' ) ;:==:var request:==:require ( ' request ' ) ;
var certificateParseError = errs . certificateParseError ;:==:var invalidAlgorithmError:==:errs . invalidAlgorithmError ;
var collab = imports . collab ;:==:var otDocument:==:imports . otDocument ;
var length = names . length ;:==:var allowPicking:==:primitive . allowPicking ;
var entry = _ _ metadata : entryMetadata ;:==:var etag:==:xmlAttributeValue ( domElement , ' etag ' , odataMetaXmlNs ) ;
var end = options . end ;:==:var done:==:options . done ;
var x = vehicles [ i ] . position . x ;:==:var y:==:vehicles [ i ] . position . y ;
var clean = this . clean ( ) ;:==:var dest:==:this . destination ( ) ;
var generatorTransformPass = traceur . codegeneration . generatorTransformPass ;:==:var isExpressionTransformer:==:traceur . codegeneration . isExpressionTransformer ;
var rect = spriteFrame . _ rect ;:==:var offset:==:spriteFrame . _ offset ;
var assert = require ( ' assert ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' loopback : change ' ) ;
var round = Math . round ;:==:var sqrt:==:Math . sqrt ;
var heading = e . coords . heading ;:==:var accuracy:==:e . coords . accuracy ;
var height = rectangle . height ;:==:var extrudedHeight:==:rectangle . extrudedHeight ;
var conceptualDataCategory = data . conceptualDataCategory ;:==:var jsCommon:==:window . jsCommon ;
var sentenceLength = queueData . sentenceLength ;:==:var lastPhraseLength:==:queueData . lastPhraseLength ;
var blue700 = exports . blue700 = ' # 1976d2 ' ;:==:var blue800:==:exports . blue800    ' # 1565c0 ' ;
var forkContext = this . forkContext ;:==:var thrown:==:context . thrownForkContext ;
var React = require ( ' React ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var isOpened = _ props4 . isOpened ;:==:var style:==:_ props4 . style ;
var diff = semver . diff ;:==:var replaceStars:==:semver . replaceStars ;
var wait = this . wait ;:==:var hold:==:this . hold ;
var after   = require ( ' after ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var argv = require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;:==:var assert:==:require ( ' assert ' ) ;
var fileDesc = change . fileDesc ;:==:var syncAttributes:==:change . syncAttributes ;
var cache = require ( ' memory - cache ' ) ;:==:var argv:==:optimist . argv ;
var Matrix = math . type . Matrix ;:==:var distribution:==:math . distribution ;
var open = document . getElementById ( ' open ' ) ;:==:var opensavefile:==:document . getElementById ( ' opensavefile ' ) ;
var reactReconciler = require ( ' reactReconciler ' ) ;:==:var instantiateReactComponent:==:require ( ' instantiateReactComponent ' ) ;
var key = keys [ i ] ;:==:var timer:==:timers [ key ] ;
var el = vnode . elm ;:==:var data:==:vnode . data ;
var ancestor = nodeInfo . ancestor ;:==:var focusNode:==:nodeInfo . focusNode ;
var boundElementIndex = viewContainerLocation . boundElementIndex ;:==:var viewContainer:==:parentView . viewContainers [ boundElementIndex ] ;
var fcb = callbacks [ i ] . fcb ;:==:var d:==:callbacks [ i ] . data ;
var key = keyvalue [ 0 ] . trim ( ) ;:==:var value:==:keyvalue . slice ( 1 ) . join ( ' : ' ) . trim ( ) ;
var dimensions = this . dimensions ;:==:var axesMap:==:this . _ axesMap ;
var ellipsoid = options . ellipsoid ;:==:var semiMajorAxis:==:options . semiMajorAxis ;
var batchedBridge = require ( ' batchedBridge ' ) ;:==:var react:==:require ( ' react ' ) ;
var simpleOrientationSensor = windows . devices . sensors . simpleOrientationSensor ;:==:var storageLibrary:==:windows . storage . storageLibrary ;
var extensionPanel = declareInterfaceClass ( extensionPanelImpl ) ;:==:var extensionSidebarPane:==:declareInterfaceClass ( extensionSidebarPaneImpl ) ;
var colorR = options [ ' colorR ' ] ;:==:var colorG:==:options [ ' colorG ' ] ;
var xhr = this . xhr = request . getXHR ( ) ;:==:var query:==:this . _ query . join ( ' & ' ) ;
var NUMERIC = ci . NUMERIC ;:==:var CR:==:ci . CR ;
var list_id = Session . get ( ' list_id ' ) ;:==:var tag:==:Session . get ( ' tag_filter ' ) ;
var literalExpression = traceur . syntax . trees . literalExpression ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var o = inst . options ;:==:var c:==:$ . ui . cookie . read ( o . stateManagement . cookie . name  |  |  o . name  |  |  ' layout ' ) ;
var st = ( typeof this . options . start = = ' string ' ? this . options . start : $ ( this . options . start ) . val ( ) ) ;:==:var en:==:( typeof this . options . end     ' string ' ? this . options . end : $ ( this . options . end ) . val ( ) ) ;
var util = imports [ ' collab . util ' ] ;:==:var api:==:imports . api ;
var pubdate = item . pubdate  |  |  item . published  |  |  item . updated ;:==:var url:==:item . url  |  |  item . link  |  |  ' ' ;
var dx2 = mxUtils . getValue ( this . style , ' dx2 ' , ' 0 ' ) ;:==:var dy2:==:mxUtils . getValue ( this . style , ' dy2 ' , ' 0 ' ) ;
var express = require ( ' express ' ) ;:==:var webpack:==:require ( ' webpack ' ) ;
var x = gridGeo . vertices [ i ] . position . x ;:==:var y:==:gridGeo . vertices [ i ] . position . y ;
var snapshot = data . snapshot ;:==:var lastPageNum:==:data . lastPageNum ;
var brightnessAuto = this . elements . brightnessAuto ;:==:var brightnessAutoCheckbox:==:this . elements . brightnessAutoCheckbox ;
var startTime = formatTime ( this . arg ( ' startTime ' ) ) ;:==:var endTime:==:formatTime ( this . arg ( ' endTime ' ) ) ;
var mkpath = require ( ' mkpath ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var sails = req . _ sails ;:==:var parseBlueprintOptions:==:req . options . parseBlueprintOptions  |  |  req . _ sails . config . blueprints . parseBlueprintOptions ;
var value = element ( by . binding ( ' value  |  date : ' yyyy - MM - dd ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var iterable = goog . require ( ' goog . labs . iterable ' ) ;:==:var recordFunction:==:goog . require ( ' goog . testing . recordFunction ' ) ;
var path = this . path . eval ( context ) ;:==:var rootpath:==:this . currentFileInfo & & this . currentFileInfo . rootpath ;
var notch = Math . max ( 0 , Math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' notch ' , this . notch ) ) ) ) ;:==:var arrowHead:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;
var width = parsePercent ( positionInfo . width , containerWidth ) ;:==:var height:==:parsePercent ( positionInfo . height , containerHeight ) ;
var watched = ! this . model . get ( ' watched ' ) ;:==:var imdb:==:this . model . get ( ' imdb_id ' ) ;
var onAfterChange = jasmine . createSpy ( ' onAfterChange ' ) ;:==:var syncSources:==:jasmine . createSpy ( ' asyncSources ' ) ;
var test = this . vexpr ( s . test ) ;:==:var end:==:this . newBlock ( ' end ' ) ;
var call = calls [ i ] ;:==:var name:==:call . name ;
var fs = require ( ' fs - extra ' ) ;:==:var gulp:==:$ $ . help ( require ( ' gulp ' ) ) ;
var sync = Backbone . sync ;:==:var ajax:==:$ . ajax ;
var renderOverlay = t . renderOverlay ;:==:var clearOverlays:==:t . clearOverlays ;
var defaults = codeMirror . defaults = ;:==:var optionHandlers:==:codeMirror . optionHandlers    ;
var screen = document . getElementById ( ' si - sl - screen ' ) ;:==:var container:==:screen . querySelector ( ' . container ' ) ;
var config = _ _ dependency1 _ _ . config ;:==:var now:==:_ _ dependency2 _ _ . now ;
var commands = imports . commands ;:==:var openPath:==:imports . openPath ;
var toField = conversationView . toField ;:==:var recipientsList:==:conversationView . recipientsList ;
var specular = m . parameters . specular ;:==:var ambient:==:m . parameters . ambient ;
var endParam = firstDefined ( source . endParam , t . opt ( ' endParam ' ) ) ;:==:var timezoneParam:==:firstDefined ( source . timezoneParam , t . opt ( ' timezoneParam ' ) ) ;
var yAxisModel = foundCpts . yAxisModel ;:==:var gridModel:==:foundCpts . gridModel ;
var offsetX = this . _ transformController . offsetx ( ) * window . devicePixelRatio ;:==:var offsety:==:this . _ transformController . offsety ( ) * window . devicePixelRatio ;
var value = _ ref . value ;:==:var css:==:_ ref . prefix . css ;
var fs = require ( ' fs ' ) ;:==:var metrics:==:require ( ' metrics ' ) ;
var isCategoryColumnSelected = powerbi . visuals . isCategoryColumnSelected ;:==:var converterHelper:==:powerbi . visuals . converterHelper ;
var radius = data . radius  |  |  0 . 5 ;:==:var height:==:Math . max ( ( data . height  |  |  2 ) - 2 * radius , 0 ) ;
var commands = imports . commands ;:==:var layout:==:imports . layout ;
var debug = bs . debug ;:==:var proxy:==:bs . options . get ( ' proxy ' ) ;
var Identify = require ( ' facade ' ) . Identify ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var object3D = this . el . object3D ;:==:var x:==:data . x      0 ? zeroScale : data . x ;
var http = require ( ' http ' ) ;:==:var path:==:require ( ' path ' ) ;
var points = packed . points ;:==:var extremes:==:packed . extremes ;
var settings = imports . settings ;:==:var panels:==:imports . panels ;
var res = ctx . res ;:==:var req:==:ctx . req ;
var floatingLabelText = _ props2 . floatingLabelText ;:==:var fullWidth:==:_ props2 . fullWidth ;
var channel = this . _ channel = Radio . channel ( channelName ) ;:==:var radioEvents:==:_ . result ( this , ' radioEvents ' ) ;
var pre = m . pre ;:==:var body:==:m . body ;
var positions = cep . positions ;:==:var numPts:==:cep . numPts ;
var REMOVE_TODO_OK = exports . REMOVE_TODO_OK = ' REMOVE_TODO_OK ' ;:==:var REMOVE_TODO_ERROR:==:exports . REMOVE_TODO_ERROR    ' REMOVE_TODO_ERROR ' ;
var x = map ( data [ i ] . x , 0 , 1 , 0 , width ) ;:==:var y:==:map ( data [ i ] . y , 0 , 1 , height , 0 ) ;
var C = Constructor ;:==:var proto:==:C . prototype ;
var timelinesFirst = from . timelinesFirst ;:==:var alpha:==:from . alpha * entry . mixAlpha * ( 1 - mix ) ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var debug:==:require ( ' debug ' ) ( ' connector ' ) ;
var promoteLongs = options [ ' promoteLongs ' ] = = null ? true : options [ ' promoteLongs ' ] ;:==:var promoteValues:==:options [ ' promoteValues ' ]     null ? true : options [ ' promoteValues ' ] ;
var c = this . unicodeChar ( n ) ;:==:var hdw:==:this . gethdw ( c , unknown . className ) ;
var orderBy = $ filter ( ' orderBy ' ) ;:==:var filter:==:$ filter ( ' filter ' ) ;
var el = helpers . entityFactory ( ) ;:==:var torusEl:==:this . torusEl    document . createElement ( ' a - torus ' ) ;
var intensity = data . intensity ;:==:var type:==:data . type ;
var doc = wrap ( document ) ;:==:var div:==:doc . createElement ( ' div ' ) ;
var start = parseInt ( this . options . position . start . getTime ( ) ) ;:==:var end:==:parseInt ( this . options . position . end . getTime ( ) ) ;
var stagger = data . stagger ;:==:var maxDuration:==:data . maxDuration ;
var m00 = this . m00 _ ;:==:var m01:==:this . m01 _ ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var renderApplication:==:require ( ' renderApplication ' ) ;
var extent = frameState . extent ;:==:var pixelRatio:==:frameState . pixelRatio ;
var div = document . createElement ( ' div ' ) ;:==:var c:==:div . appendChild ( document . createElement ( ' c ' ) ) ;
var numberPatternre = number . _ numberPatternre ;:==:var numberPattern:==:positivePattern . match ( numberPatternre ) ;
var State = traceur . codegeneration . generator . State ;:==:var fallThroughState:==:traceur . codegeneration . generator . fallThroughState ;
var height = corridorGeometry . _ height ;:==:var width:==:corridorGeometry . _ width ;
var Parent = Parse . Object . extend ( ' Parent ' ) ;:==:var Child:==:Parse . Object . extend ( ' Child ' ) ;
var template = material . _ template ;:==:var uniforms:==:template . uniforms ;
var createBreakStatement = parseTreeFactory . createBreakStatement ;:==:var createStatementList:==:parseTreeFactory . createStatementList ;
var ellipsoid = defaultValue ( options . ellipsoid , ellipsoid . wgs84 ) ;:==:var granularity:==:defaultValue ( options . granularity , cesiumMath . radians_per_degree ) ;
var items = that . items ( ) ;:==:var view:==:that . dataSource . view ( ) ;
var replace = require ( ' gulp - replace ' ) ;:==:var run:==:require ( ' run - sequence ' ) ;
var type = options . type  |  |  ' monthly ' ;:==:var style:==:options . hasOwnProperty ( ' style ' ) ? options . style : ' list ' ;
var domElement = drawable . domElement ;:==:var style:==:domElement . style ;
var THROW_STATEMENT = ' THROW_STATEMENT ' ;:==:var TRY_STATEMENT:==:' TRY_STATEMENT ' ;
var node = nodes [ i ] ;:==:var mockContact:==:mockContacts [ i ] ;
var translucent = defaultValue ( options . translucent , true ) ;:==:var aboveGround:==:defaultValue ( options . aboveGround , false ) ;
var Buffer = require ( ' buffer ' ) . Buffer ;:==:var r:==:new stream . Readable ( ) ;
var forEach = _ angular . forEach ;:==:var isObject:==:_ angular . isObject ;
var data = activity . source . data ;:==:var filename:==:vCardHandler . getFileName ( data . filename  |  |  data . src ) ;
var casper = require ( ' casper ' ) . create ( ) ;:==:var utils:==:require ( ' utils ' ) ;
var height = polygonGeometry . _ height ;:==:var extrudedHeight:==:polygonGeometry . _ extrudedHeight ;
var g = parseInt ( hex . substring ( 2,4 ) , 16 ) ;:==:var b:==:parseInt ( hex . substring ( 4,6 ) , 16 ) ;
var boundingBox = instance . get ( ' boundingBox ' ) ;:==:var paginator:==:instance . get ( ' paginator ' ) ;
var m = SIMD . Float32x4 . fromInt32x4Bits ( simd . int32x4 ( 0x3f800000 , 0x40000000 , 0x40400000 , 0x40800000 ) ) ;:==:var n:==:simd . int32x4 . fromFloat32x4Bits ( m ) ;
var iccInfo = icc . iccInfo ;:==:var cardState:==:icc . cardState ;
var el = setupSelect ( ' ng - required='isRequired ' md - no - asterisk ng - model='someModel ' ' ) ;:==:var label:==:el . find ( ' label ' ) ;
var beforeInputEventPlugin = require ( ' beforeInputEventPlugin ' ) ;:==:var domProperty:==:require ( ' domProperty ' ) ;
var passes = frameState . passes ;:==:var nodeCommands:==:this . _ nodeCommands ;
var start = selection . start ;:==:var end:==:selection . end ;
var datastoreClass = dojo . getObject ( datastoreClassName ) ;:==:var testTemplates:==:tests . data . readOnlyItemFileTestTemplates . testTemplates ;
var extension = options . extension  |  |  ' jpg ' ;:==:var quality:==:options . quality  |  |  ' 100 ' ;
var key = this . props . node . get ( ' key ' ) ;:==:var ref:==:this . props . node . get ( ' ref ' ) ;
var i = nodes . length , node , classList , ci , className , classValue ;:==:var validClasses:==:schema . getValidClasses ( ) , validClassesMap , valid ;
var createPropertyDescriptor = parseTreeFactory . createPropertyDescriptor ;:==:var createPropertyNameAssignment:==:parseTreeFactory . createPropertyNameAssignment ;
var reactGenericBatching = require ( ' reactGenericBatching ' ) ;:==:var reactHostComponent:==:require ( ' reactHostComponent ' ) ;
var workspace = imports [ ' collab . workspace ' ] ;:==:var collab:==:imports . collab ;
var functionDeclaration = traceur . syntax . trees . functionDeclaration ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var removeDotSegments = $ traceurRuntime . removeDotSegments ;:==:var resolveUrl:==:$ traceurRuntime . resolveUrl ;
var sourceProcessor = data . sourceProcessor ;:==:var resourceSlots:==:data . resourceSlots ;
var opt = t . opt ;:==:var renderAgenda:==:t . renderAgenda ;
var links = ik . links ;:==:var iteration:==:ik . iteration !    undefined ? ik . iteration : 1 ;
var ellipsoid = ellipseGeometry . _ ellipsoid ;:==:var minHeight:==:minHeightFunc ( granularity , ellipsoid ) ;
var prev = record . _ prevDup ;:==:var next:==:record . _ nextDup ;
var unsafeUnwrap = scope . unsafeUnwrap ;:==:var unwrap:==:scope . unwrap ;
var div = testDiv . appendChild ( document . createElement ( ' div ' ) ) ;:==:var a:==:div . appendChild ( document . createElement ( ' a ' ) ) ;
var sceneEl = this . sceneEl ;:==:var data:==:this . data ;
var layoutBase = layoutInfo . layoutBase ;:==:var pixelDimIndex:==:layoutInfo . pixelDimIndex ;
var strokeStyle = state . strokeStyle ;:==:var lineWidth:==:state . lineWidth ;
var eventId = this . eventIdFromRemote ( time , ! time . isException ) ;:==:var i d:==:eventId + ' - ' + uuid . v4 ( ) ;
var loneLowSurrogates = parts . loneLowSurrogates ;:==:var bmp:==:parts . bmp ;
var iterators = this . iterators ;:==:var len:==:iterators . length ;
var util = imports . util ;:==:var info:==:imports . info ;
var i18n = require ( ' i18next ' ) ;:==:var when:==:require ( ' when ' ) ;
var domLazyTree = require ( ' domLazyTree ' ) ;:==:var danger:==:require ( ' danger ' ) ;
var h = rect . height ;:==:var r:==:new mxRectangle ( rect . x , rect . y , w , h ) ;
var store = new datastore ( tests . data . readOnlyItemFileTestTemplates . getTestData ( ' countries ' ) ) ;:==:var d:==:new doh . deferred ( ) ;
var min = ( this . options . min = = = 0 ) ? 0 : Math . log ( this . options . min ) ;:==:var max:==:Math . log ( this . options . max ) ;
var ace = originalTab . editor . ace ;:==:var pos:==:jumptodef . addUnknownColumn ( ace , node . pos , node . name ) ;
var del = require ( ' obj - case ' ) . del ;:==:var each:==:require ( ' each ' ) ;
var item = xml . childNodes . item ( i ) ;:==:var nodeName:==:item . nodeName ;
var states = technique . states ;:==:var vertexShader:==:babylon . effect . shadersStore [ program . vertexShader + ' vertexShader ' ] ;
var recid = parent . prev ( ) . attr ( ' recid ' ) ;:==:var grid:==:parent . parents ( ' . w2ui - grid ' ) . attr ( ' name ' ) ;
var attrib = $ this . data ( ' attrib ' ) ;:==:var device_id:==:$ this . data ( ' device_id ' ) ;
var p = editor . document . getElementsByTagName ( ' p ' ) [ 0 ] ;:==:var r:==:new baidu . editor . dom . range ( editor . document ) ;
var tileWidth = elt [ tileWidthPropName ] ;:==:var tileHeight:==:elt [ tileHeightPropName ] ;
var newExpression = traceur . syntax . trees . newExpression ;:==:var nullTree:==:traceur . syntax . trees . nullTree ;
var style = this . style ;:==:var path:==:this . path  |  |  pathProxyForDraw ;
var option = this . getAttribute ( ' data - option ' ) ;:==:var method:==:this . getAttribute ( ' data - method ' ) ;
var g3 = new pc . graphNode ( ' g3 ' ) ;:==:var g4:==:new pc . graphNode ( ' g4 ' ) ;
var bits = this . bits ;:==:var colors:==:this . colors ;
var route = exports . route = internalPropTypes . route ;:==:var routes:==:exports . routes    internalPropTypes . routes ;
var start = childAndParentsUntil ( this . startContainer , fn . returnFalse ) ;:==:var end:==:childAndParentsUntil ( this . endContainer , fn . returnFalse ) ;
var walk = require ( ' pug - walk ' ) ;:==:var assign:==:require ( ' object - assign ' ) ;
var object = this . object . toString ( options ) ;:==:var index:==:this . index ? this . index . toString ( options ) : '' ;
var tryStatement = traceur . syntax . trees . tryStatement ;:==:var unaryExpression:==:traceur . syntax . trees . unaryExpression ;
var min = boxGeometry . _ min ;:==:var max:==:boxGeometry . _ max ;
var cx = radar . cx ;:==:var cy:==:radar . cy ;
var branch = this . branches [ j ] ;:==:var d:==:p5 . Vector . dist ( leaf . pos , branch . pos ) ;
var assert = require ( ' assert ' ) ;:==:var engine:==:require ( ' engine . io ' ) ;
var legendData = powerbi . visuals . legendData ;:==:var selectionId:==:powerbi . visuals . selectionId ;
var aMin = cartesian3 . fromArray ( minMax . min , 0 , aMinScratch ) ;:==:var aMax:==:cartesian3 . fromArray ( minMax . max , 0 , aMaxScratch ) ;
var checked = $ radio . prop ( ' checked ' ) ;:==:var disabled:==:$ radio . prop ( ' disabled ' ) ;
var event = window . event ;:==:var type:==:nMML . msiEevents [ event . type ] ;
var chalk = require ( ' chalk ' ) ;:==:var execSync:==:require ( ' child_process ' ) . execSync ;
var containerElement = _ props3 . containerElement ;:==:var disabled:==:_ props3 . disabled ;
var path    = require ( ' path ' ) ;:==:var join:==:require ( ' path ' ) . join ;
var reactNativeComponentTree = require ( ' reactNativeComponentTree ' ) ;:==:var reactNativeTagHandles:==:require ( ' reactNativeTagHandles ' ) ;
var babel = require ( ' babel - core ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var disabledLabelColor = props . disabledLabelColor ;:==:var fullWidth:==:props . fullWidth ;
var http = require ( ' http ' ) ;:==:var serve:==:require ( ' serve - static ' ) ( baseDir , ' index ' : [ ' index . html ' ] ) ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var md5:==:require ( ' md5-hex ' ) ;
var systemString = ksConfigurations [ ksIdx ] . ks . systemString ;:==:var configs:==:ksConfigurations [ ksIdx ] . configs ;
var started = logEntry . started ;:==:var action:==:logEntry . action ;
var targetEl = this . targetEl ;:==:var sceneEl:==:sourceEl . sceneEl ;
var mongo = require ( ' mongoskin ' ) ;:==:var csv:==:require ( ' csv ' ) ;
var mode = bs . options . get ( ' mode ' ) ;:==:var open:==:bs . options . get ( ' open ' ) ;
var m = matrices [ 0 ] ;:==:var s:==:cs_sqr ( 1 , m , false ) ;
var getScrollPosition = require ( ' getScrollPosition ' ) ;:==:var getViewportDimensions:==:require ( ' getViewportDimensions ' ) ;
var tabManager = imports . tabManager ;:==:var question:==:imports [ ' dialog . question ' ] . show ;
var cyan800 = exports . cyan800 = ' # 00838f ' ;:==:var cyan900:==:exports . cyan900    ' # 006064 ' ;
var values = this . _ values ;:==:var length:==:this . length ( ) ;
var View = require ( ' View ' ) ;:==:var findSessionByuri:==:require ( ' findSessionByuri ' ) ;
var Date = window . Date ;:==:var setTimeout:==:window . setTimeout ;
var screenTop = _ window . screenTop  |  |  _ window . screeny  |  |  0 ;:==:var scrollLeft:==:_ document . body . scrollLeft + _ document . documentElement . scrollLeft ;
var registerWrapper = scope . registerWrapper ;:==:var snapshotNodeList:==:scope . snapshotNodeList ;
var Schema = mongoose . Schema ;:==:var validationError:==:mongoose . document . validationError ;
var d = readmpInt ( der , ' private exponent ' ) ;:==:var p:==:readmpInt ( der , ' prime1 ' ) ;
var scrollTop = window . pageyOffset  |  |  docElem . scrollTop  |  |  body . scrollTop ;:==:var scrollLeft:==:window . pagexOffset  |  |  docElem . scrollLeft  |  |  body . scrollLeft ;
var gltf = model . gltf ;:==:var bufferView:==:gltf . bufferViews [ gltfTexture . bufferView ] ;
var posts = config . posts ;:==:var pages:==:config . pages ;
var Platform = require ( ' Platform ' ) ;:==:var crc32:==:require ( ' crc32 ' ) ;
var switchNode1 = helper . getNode ( ' switchNode1 ' ) ;:==:var helperNode1:==:helper . getNode ( ' helperNode1 ' ) ;
var anchor = document . getElementById ( ' anchor5 ' ) ;:==:var popup:==:document . getElementById ( ' popup5 ' ) ;
var state = start_state ;:==:var buffer:==:lexbuf [ lex_buffer ] ;
var element = elements [ e ] ;:==:var material:==:element . material ;
var markSupportedForProcessing = _ baseUtils . markSupportedForProcessing ;:==:var uniqueid:==:_ elementUtilities . _ uniqueid ;
var TABLE = this . instance . wtTable . table ;:==:var td:==:( 0 , _ element . closestDown ) ( elem , [ ' td ' , ' th ' ] , table ) ;
var url = require ( ' url ' ) ;:==:var util:==:require ( ' hexo - util ' ) ;
var element = that . element ;:==:var disable:==:options . disable ;
var handle = displaybles . handles [ handleIndex ] ;:==:var handleHeight:==:this . _ handleHeight ;
var c = Math . min ( qrcode . height - 1 , d + k ) ;:==:var e:==:new _ ak ( this . image , h , b , i - h , c - b , g , this . _ am ) ;
var color = node . getAttribute ( ' color ' ) ;:==:var size:==:parseInt ( node . getAttribute ( ' size ' ) ) ;
var width = options . width ;:==:var minWidth:==:options . minWidth ;
var skipCurrent = options . skipCurrent ! = = false ;:==:var wrap:==:options . wrap ;
var hour = parseInt ( alarms [ i d ] [ ' hour ' ] ) ;:==:var minute:==:parseInt ( alarms [ i d ] [ ' minute ' ] ) ;
var vertexFormat = options . vertexFormat ;:==:var center:==:options . center ;
var PROPER = module . exports . PROPER = 80 ;:==:var MAYBE_PROPER:==:module . exports . MAYBE_PROPER    1 ;
var expect = require ( ' expect . js ' ) ;:==:var md5:==:require ( ' md5-hex ' ) ;
var pidusage   = require ( ' pidusage ' ) ;:==:var vizion:==:require ( ' vizion ' ) ;
var param = _ param ;:==:var no:==:_ no ;
var minutes   = makeGetter ( ' minutes ' ) ;:==:var hours:==:makeGetter ( ' hours ' ) ;
var stdout = FS . createDevice ( devFolder , ' stdout ' , null , output ) ;:==:var stderr:==:fs . createDevice ( devFolder , ' stderr ' , null , error ) ;
var getDataItemValue = modelUtil . getDataItemValue ;:==:var converDataValue:==:modelUtil . converDataValue ;
var tooltipManager = powerbi . visuals . tooltipManager ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var debug = require ( ' debug ' ) ( ' express : router : route ' ) ;:==:var flatten:==:require ( ' array - flatten ' ) ;
var less = require ( ' gulp - less ' ) ;:==:var autoprefixer:==:require ( ' gulp - autoprefixer ' ) ;
var userAgent = goog . userAgent ;:==:var xhr:==:goog . labs . net . xhr ;
var path = getRealPath ( i . path ) ;:==:var dirname:==:utils . dirname ( path ) ;
var interceptOutputLoaderHooks = traceur . runtime . interceptOutputLoaderHooks ;:==:var loader:==:traceur . runtime . loader ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , data , opts ) ;
var subTasks = parameters . subTasks ;:==:var length:==:subTasks . length ;
var defer = $ q . defer ( ) ;:==:var i d:==:pfxId ( data . i d ) ;
var fs = require ( ' fs ' ) ;:==:var yaml:==:require ( ' js - yaml ' ) ;
var legendIcon = powerbi . visuals . legendIcon ;:==:var tooltipBuilder:==:powerbi . visuals . tooltipBuilder ;
var context = scene . context ;:==:var drawingBufferWidth:==:context . drawingBufferWidth ;
var useWindowsLineEndings = this . data . useWindowsLineEndings ;:==:var flags:==:grunt . option . flags ( ) ;
var lineBreak = acorn . lineBreak ;:==:var allLineBreaks:==:acorn . allLineBreaks ;
var source = this . source ;:==:var items:==:this . _ items ;
var material = gltfRuntime . materials [ i d ] ;:==:var technique:==:gltfRuntime . techniques [ material . technique ] ;
var selectionIdBuilder = powerbi . visuals . selectionIdBuilder ;:==:var tooltipBuilder:==:powerbi . visuals . tooltipBuilder ;
var afterLeave = ref . afterLeave ;:==:var leaveCancelled:==:ref . leaveCancelled ;
var context = renderSession . context ;:==:var texture:==:this . texture ;
var tempVertexs = this . _ _ tempVertexs |  |  [ ] ;:==:var width:==:img . width ;
var Post = hexo . model ( ' Post ' ) ;:==:var postCategory:==:hexo . model ( ' postCategory ' ) ;
var orderBy = options . orderBy ;:==:var order:==:orderCriteria [ orderBy ] ;
var roundRadius = ( settings . roundRadius = = null ) ? 0 : settings . roundRadius ;:==:var borderThickness:==:( settings . borderThickness     null ) ? 1 : settings . borderThickness ;
var x = cx + delta [ 0 ] ;:==:var y:==:cy + delta [ 1 ] ;
var c = math . complex ( ) ;:==:var flat:==:flatten ( [ c ] ) ;
var Tree = imports . Tree ;:==:var layout:==:imports . layout ;
var parseTreeTransformer = traceur . codegeneration . parseTreeTransformer ;:==:var apply:==:traceur . syntax . predefinedName . apply ;
var sinon = require ( ' sinon ' ) ;:==:var stripColor:==:require ( ' chalk ' ) . stripColor ;
var skeleton = active . skeleton ;:==:var state:==:active . state ;
var helpers = Rx . helpers ;:==:var chai:==:parent . chai ;
var testCase = goog . require ( ' goog . testing . testCase ' ) ;:==:var dom:==:goog . require ( ' goog . dom ' ) ;
var newWidth = self . newWidth ;:==:var newHeight:==:self . newHeight ;
var proceed = options . proceed  |  |  gettext ( ' Proceed ' ) ;:==:var proceedClass:==:options . proceedClass  |  |  ' danger ' ;
var cellIndex = _ ref2 . cellIndex ;:==:var height:==:_ ref2 . height ;
var counters = metrics . counters ;:==:var gauges:==:metrics . gauges ;
var . . . x = z ;:==:var x , . . . y:==:z ;
var immutableDenseMatrix = math . type . immutableDenseMatrix ;:==:var sparseMatrix:==:math . type . sparseMatrix ;
var removedElements = this . _ removedElements ;:==:var itemMoveRecords:==:this . _ itemMoveRecords ;
var array = attribute . array ;:==:var updateRange:==:attribute . updateRange ;
var body = registeredMesh . body ;:==:var center:==:mesh . getBoundingInfo ( ) . boundingBox . center ;
var maxMessages = opts . maxMessages  |  |  infinity ;:==:var checkpoint:==:opts . checkpoint ;
var debug = require ( ' debug ' ) ( ' test ' ) ;:==:var extend:==:require ( ' util ' ) . _ extend ;
var keepNewlines = opt_keepnewlines  |  |  false ;:==:var lines:==:goog . string . newlines . splitLines ( string , keepNewlines ) ;
var c = ( influencesPerVertex > 2 ) ? json . skinIndices [ i + 2 ] : 0 ;:==:var d:==:( influencesPerVertex > 3 ) ? json . skinIndices [ i + 3 ] : 0 ;
var offset = this . getAttribute ( ' data - offset ' ) ;:==:var duration:==:this . getAttribute ( ' data - duration ' ) ;
var coneFactor = options . coneFactor  |  |  0 ;:==:var offset:==:options . offset  |  |  0 ;
var parser = scope . parser ;:==:var importer:==:scope . importer ;
var show = new showGeometryInstanceAttribute ( isAvailable & & entity . isShowing & & this . _ showProperty . getValue ( time ) & & this . _ fillProperty . getValue ( time ) ) ;:==:var distanceDisplayCondition:==:this . _ distanceDisplayConditionProperty . getValue ( time ) ;
var isBuildInsidevs = utils . isBuildInsidevs ( ) ;:==:var isBuildInsidevsCode:==:utils . isBuildInsidevsCode ( ) ;
var req = axon . socket ( ' req ' ) ;:==:var rpc_sock:==:this . rpc_sock    req . connect ( rpc_port ) ;
var top = Math . max ( pxBounds . top , 0 ) ;:==:var left:==:math . max ( pxBounds . left , 0 ) ;
var opts = task . opts ;:==:var callback:==:task . callback ;
var channel = config . channel ;:==:var _ channel:==:config . _ channel ;
var variablesInBlock = variableBinder . variablesInBlock ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var left = param . get ( ' left ' ) ;:==:var right:==:param . get ( ' right ' ) ;
var button = buttons [ key ] = options . dialog . buttons [ key ] ;:==:var click:==:button . click ;
var timings = data . timings ;:==:var stagger:==:data . stagger ;
var a = wt . a ;:==:var b:==:wt . b ;
var _ strcpy = Module [ ' _ strcpy ' ] = asm [ ' _ strcpy ' ] ;:==:var _ testSetjmp:==:module [ ' _ testSetjmp ' ]    asm [ ' _ testSetjmp ' ] ;
var defaults = require ( ' defaults ' ) ;:==:var del:==:require ( ' obj - case ' ) . del ;
var semver = require ( ' semver ' ) ;:==:var async:==:require ( ' async ' ) ;
var min = box . min ;:==:var max:==:box . max ;
var fs = require ( ' fs ' ) ;:==:var net:==:require ( ' net ' ) ;
var elementFromPoint = scope . elementFromPoint ;:==:var getInnerhtml:==:scope . getInnerhtml ;
var dirname = path . dirname ;:==:var join:==:path . join ;
var state = this . state ;:==:var skeleton:==:this . skeleton ;
var type = attributeProperties . type ;:==:var bytesPerElement:==:attributeProperties . bytesPerElement ;
var indexNode = math . expression . node . indexNode ;:==:var rangeNode:==:math . expression . node . rangeNode ;
var containerId = renderContainerCtrl . containerId ;:==:var grid:==:uiGridCtrl . grid ;
var foo = t : ' idOrVar ' , v : ' foo ' ;:==:var bar:==:t : ' idOrVar ' , v : ' bar ' ;
var whileStatement = traceur . syntax . trees . whileStatement ;:==:var withStatement:==:traceur . syntax . trees . withStatement ;
var jn1 = helper . getNode ( ' jn1 ' ) ;:==:var jn2:==:helper . getNode ( ' jn2 ' ) ;
var listController = _ jsControllerListController [ ' default ' ] ;:==:var achievementsHelper:==:_ jsLibHelpers . achievementsHelper ;
var editor = new baidu . editor . Editor ( options ) ;:==:var div:==:document . body . appendChild ( document . createElement ( ' div ' ) ) ;
var control = document . getElementById ( ' control ' ) ;:==:var clientWidth:==:document . getElementById ( ' clientWidth ' ) ;
var contents = stripComments ( file . contents . toString ( ) ) ;:==:var relative:==:file . relative ;
var key = options . key ;:==:var number:==:options . number ;
var gl = options . context . _ gl ;:==:var bufferTarget:==:options . bufferTarget ;
var editor   = this . editor ;:==:var classPrefix:==:editormd . classPrefix ;
var language = imports . language ;:==:var debug:==:imports [ ' debugger ' ] ;
var shape = polylineVolume . shape ;:==:var show:==:polylineVolume . show ;
var w = c . width = posterCache . width ;:==:var h:==:c . height    posterCache . height ;
var custom = arc . custom  |  |  ;:==:var getValueAtIndexOrDefault:==:helpers . getValueAtIndexOrDefault ;
var hash = _ props . hash ;:==:var state:==:_ props . state ;
var dfa = this . stack [ this . stack . length - 1 ] . dfa ;:==:var node:==:this . stack [ this . stack . length - 1 ] . node ;
var debug = require ( ' debug ' ) ( ' axm : notify ' ) ;:==:var util:==:require ( ' util ' ) ;
var rename = require ( ' gulp - rename ' ) ;:==:var ignore:==:require ( ' gulp - ignore ' ) ;
var ace = tab . editor . ace ;:==:var session:==:ace . session ;
var width = target ? target . width : device . width ;:==:var height:==:target ? target . height : device . height ;
var nssocket   = require ( ' nssocket ' ) ;:==:var events:==:require ( ' events ' ) ;
var indigo800 = exports . indigo800 = ' # 283593 ' ;:==:var indigo900:==:exports . indigo900    ' # 1a237e ' ;
var l = hints . length - 1 ;:==:var n:==:Math . round ( Math . random ( ) * l ) ;
var g = Math . round ( Garden . random ( gmin , gmax ) ) ;:==:var b:==:Math . round ( Garden . random ( bmin , bmax ) ) ;
var codingLine = this . codingLine ;:==:var columns:==:this . columns ;
var attributes = params . attributes ;:==:var events:==:params . events ;
var assert = require ( ' chai ' ) . assert ;:==:var client:==:require ( ' socket . io - client ' ) ;
var url = require ( ' url ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var jsdom = require ( ' jsdom ' ) ;:==:var esprima:==:require ( ' esprima ' ) ;
var a = load ( require , name ) ;:==:var r:==:require ;
var topOverlay = wot . wtOverlays . topOverlay ;:==:var leftOverlay:==:wot . wtOverlays . leftOverlay ;
var endContainer = this . endContainer ;:==:var endOffset:==:this . endOffset ;
var weightedSum = ( optFormula  |  |  logic . weightedSum ( costTerms , costWeights ) ) ;:==:var progress:==:options & & options . progress ;
var b2 = $ ( ' b2 ' ) ;:==:var p1:==:$ ( ' p1 ' ) ;
var DEBUGGER_STATEMENT = ' DEBUGGER_STATEMENT ' ;:==:var DEFAULT_CLAUSE:==:' DEFAULT_CLAUSE ' ;
var E = stdlib . Math . E ;:==:var LN10:==:stdlib . Math . LN10 ;
var el = this . $ element ;:==:var input:==:document . createElement ( ' input ' ) ;
var event = seg . event ;:==:var start:==:event . start ;
var each = zrUtil . each ;:==:var eachAxisDim:==:helper . eachAxisDim ;
var optionIndex = _ props . optionIndex ;:==:var className:==:( 0 , _ classnames2 [ ' default ' ] ) ( this . props . className , option . className ) ;
var g1 = new pc . graphNode ( ' g1 ' ) ;:==:var g2:==:new pc . graphNode ( ' g2 ' ) ;
var propertyNameShorthand = traceur . syntax . trees . propertyNameShorthand ;:==:var quasiLiteralExpression:==:traceur . syntax . trees . quasiLiteralExpression ;
var assert = require ( ' assert ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' loopback : user ' ) ;
var doWhileStatement = traceur . syntax . trees . doWhileStatement ;:==:var exportDeclaration:==:traceur . syntax . trees . exportDeclaration ;
var createInteractivityService = powerbi . visuals . createInteractivityService ;:==:var appendClearCatcher:==:powerbi . visuals . appendClearCatcher ;
var port = this . rootImportForElement ( elt . _ _ importElement  |  |  elt ) ;:==:var l:==:port . _ _ insertedElements    port . _ _ insertedElements  |  |  0 ;
var css = obj . css ;:==:var media:==:obj . media ;
var options = context . options [ 0 ]  |  |  ;:==:var defaultAssignment:==:options . defaultAssignment !    false ;
var util = imports . util ;:==:var find:==:imports . find ;
var target = evt . target ;:==:var dataset:==:target . dataset  |  |  ;
var a = [ Symbol . toPrimitive ] : function ( ) return ' bla ' ;:==:var b:==:[ symbol . toPrimitive ] : function ( ) throw ' gaga ' ;
var through2 = require ( ' through2 ' ) ;:==:var lazypipe:==:require ( ' lazypipe ' ) ;
var s = Array . prototype . shift . call ( args ) ;:==:var e:==:Array . prototype . shift . call ( args ) ;
var browserify = require ( ' browserify ' ) ;:==:var buffer:==:require ( ' vinyl - buffer ' ) ;
var _ _ GLOBAL__I_a = Module [ ' _ _ GLOBAL__I_a ' ] = asm [ ' _ _ GLOBAL__I_a ' ] ;:==:var _ _ GLOBAL__I_a18:==:Module [ ' _ _ GLOBAL__I_a18 ' ]    asm [ ' _ _ GLOBAL__I_a18 ' ] ;
var incoming = this . incomingEdgeStencils ( args ) ;:==:var outgoing:==:this . outgoingEdgeStencils ( args ) ;
var lastTaskIndex = info . lastTaskIndex ;:==:var tasks:==:info . tasks ;
var propertyReplacer = goog . require ( ' goog . testing . propertyReplacer ' ) ;:==:var timer:==:goog . require ( ' goog . timer ' ) ;
var language = imports . language ;:==:var settings:==:imports . settings ;
var item = event . detail . item ;:==:var filteredKeys:==:this . _ filteredKeys ;
var spring = obj . spring  |  |  null ;:==:var motor:==:obj . motor  |  |  null ;
var colorsPerVertex = simplePolylineGeometry . _ colorsPerVertex ;:==:var followSurface:==:simplePolylineGeometry . _ followSurface ;
var video2 = document . querySelector ( ' video#video2 ' ) ;:==:var video3:==:document . querySelector ( ' video#video3 ' ) ;
var bandWidth = columnsOnAxis . bandWidth ;:==:var categoryGap:==:parsePercent ( columnsOnAxis . categoryGap , bandWidth ) ;
var materials = gltf . materials ;:==:var meshes:==:gltfNode . meshes ;
var assets = this . system . app . assets ;:==:var asset:==:assets . get ( i d ) ;
var prevKey = object . animationCache . prevKey ;:==:var nextKey:==:object . animationCache . nextKey ;
var geometry = defaultValue ( options . geometry , defaultValue . empty_object ) ;:==:var bufferUsage:==:defaultValue ( options . bufferUsage , bufferUsage . dynamic_draw ) ;
var autoClear = this . el . renderer . autoClear ;:==:var el:==:this . el ;
var predefinedName = traceur . syntax . predefinedName ;:==:var block:==:traceur . syntax . trees . block ;
var longName = option . longName ;:==:var shortName:==:option . shortName ;
var hotspot = this . hotspots [ i d ] ;:==:var angle:==:hotspot . position . angleTo ( lookAt ) ;
var stdin = Caml_io . stdin ;:==:var stdout:==:Caml_io . stdout ;
var printError = common . printError ;:==:var printOut:==:common . printOut ;
var cells = this . _ cells ;:==:var data:==:this . _ data ;
var keys = Object . keys ( data ) ;:==:var length:==:keys . length ;
var lime900 = exports . lime900 = ' # 827717 ' ;:==:var limeA100:==:exports . limeA100    ' # f4ff81 ' ;
var msecs = ( options . msecs ! = null ) ? options . msecs : new Date ( ) . getTime ( ) ;:==:var nsecs:==:( options . nsecs !   null ) ? options . nsecs : _ lastnSecs + 1 ;
var appListView = _ jsViewAppListView [ ' default ' ] ;:==:var addonListView:==:_ jsViewAddonListView [ ' default ' ] ;
var TYPE_REFERENCE = ' TYPE_REFERENCE ' ;:==:var UNARY_EXPRESSION:==:' UNARY_EXPRESSION ' ;
var scrollToAlignment = props . scrollToAlignment ;:==:var scrollToColumn:==:props . scrollToColumn ;
var tid = postData . tid ;:==:var uid:==:postData . uid ;
var c = document . createElement ( ' canvas ' ) ;:==:var w:==:c . width    posterCache . width ;
var server   = require ( ' gulp - develop - server ' ) ;:==:var shell:==:require ( ' gulp - shell ' ) ;
var buffered = _ videotag . buffered ;:==:var duration:==:_ videotag . duration ;
var mime = require ( ' mime ' ) ;:==:var once:==:require ( ' once ' ) ;
var max = parseInt ( $ range . attr ( ' max ' ) , 10 ) ;:==:var min:==:parseInt ( $ range . attr ( ' min ' ) , 10 ) ;
var opts = this . opts ;:==:var ast:==:this . ast ;
var success = options . success ;:==:var error:==:options . error ;
var min = this . schema . minimum  |  |  0 ;:==:var max:==:this . schema . maximum  |  |  Math . max ( 100,min+1 ) ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var util:==:require ( ' util ' ) ;
var subtitle = _ props . subtitle ;:==:var subtitleColor:==:_ props . subtitleColor ;
var api = this . client . api ( ) ;:==:var module:==:this . module . get ( ) ;
var b = Number ( regExpResultArray [ 3 ] ) ;:==:var a:==:number ( regExpResultArray [ 4 ] ) ;
var target = target_style [ prop_name ] . value ;:==:var curr:==:current_style [ prop_name ] . value ;
var bone = slot . bone ;:==:var w:==:region . width ;
var data = this . _ data ;:==:var req:==:this . req ;
var graph = this . graph = params . graph  |  |  new Graph ( ) ;:==:var stiffness:==:params . stiffness  |  |  400 . 0 ;
var child_process = require ( ' child_process ' ) ;:==:var eachline:==:require ( ' eachline ' ) ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var mqtt:==:require ( ' mqtt ' ) ;
var a = points [ ai ] ;:==:var b:==:points [ bi ] ;
var ul = element . querySelector ( ' ul ' ) ;:==:var children:==:array . prototype . slice . apply ( ul . children ) ;
var el = els [ i d ] , r = el . _ region ;:==:var c:==:el . ddScrollConfig ? el . ddScrollConfig : dds ;
var dir = _ _ dirname ;:==:var fs:==:require ( ' fs ' ) ;
var times = this . times ;:==:var i:==:this . _ lastTimeIndex    this . findTimeInterval ( time , this . _ lastTimeIndex ) ;
var min = options . minimumHeight ;:==:var max:==:options . maximumHeight ;
var x = s . data [ 0 ] . x ;:==:var y:==:s . data [ 0 ] . y ;
var anchor   = options . anchor  |  |  source . position ;:==:var cap:==:options . cap ;
var lines = delta . lines ;:==:var l:==:lines . length ;
var removeAttribute = element . prototype . removeAttribute ;:==:var setAttribute:==:element . prototype . setAttribute ;
var yieldExpression = exports . yieldExpression = buildYieldAwait ( ' yield ' ) ;:==:var awaitExpression:==:exports . awaitExpression    buildYieldAwait ( ' await ' ) ;
var teal800 = exports . teal800 = ' # 00695c ' ;:==:var teal900:==:exports . teal900    ' # 004d40 ' ;
var toString = objectProto . toString ;:==:var nativeBind:==:reNative . test ( nativeBind    toString . bind ) & & nativeBind ;
var loadingTask = this . loadingTask ;:==:var pdfDataRangeTransport:==:this . pdfDataRangeTransport ;
var config = configService . getSync ( ) . wallet ;:==:var cache:==:wallet . cachedStatus ;
var dynCall_v = Module [ ' dynCall_v ' ] = asm [ ' dynCall_v ' ] ;:==:var dynCall_vifiii:==:Module [ ' dynCall_vifiii ' ]    asm [ ' dynCall_vifiii ' ] ;
var hour = location . astronomy . objects [ 0 ] . events [ i ] . hour ;:==:var minute:==:( ' 0 ' + location . astronomy . objects [ 0 ] . events [ i ] . minute ) . slice ( -2 ) ;
var siblingOffset = config . siblingOffset ;:==:var subtreeOffset:==:config . subtreeOffset ;
var width = this . _ currentMeasure . width - offset * 2 ;:==:var height:==:this . _ currentMeasure . height - offset * 2 ;
var options = this . options ;:==:var strict:==:options . strict ;
var htmlFor = props . htmlFor ;:==:var onTouchTap:==:props . onTouchTap ;
var localScope = callFrame . localScope ( ) ;:==:var functionLocation:==:callFrame . functionLocation ( ) ;
var Marked = require ( ' Marked ' ) ;:==:var Metadata:==:require ( ' Metadata ' ) ;
var cursorId = options . cursorId  |  |  long . zero ;:==:var responseFlags:==:typeof options . responseFlags     ' number ' ? options . responseFlags : 0 ;
var width = node . getData ( ' width ' ) ;:==:var height:==:node . getData ( ' height ' ) ;
var maxwidth = options . colmaxwidth  |  |  300 ;:==:var widths:==:options . widths  |  |  ;
var match = matches [ i ] ;:==:var range:==:self . $ rangeFromMatch ( row , match . offset , match . str . length ) ;
var p = URI . prototype ;:==:var hasOwn:==:object . prototype . hasOwnProperty ;
var . . . z = z : 1 ;:==:var . . . x:==:5    x : 1 ;
var polygonOffset = renderState . polygonOffset ;:==:var enabled:==:polygonOffset . enabled ;
var inTangents = options . inTangents ;:==:var outTangents:==:options . outTangents ;
var config   = require ( ' config ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var normalScale = this . normalScale & & this . normal ? this . normalScale . buildCode ( builder , ' v2 ' ) : undefined ;:==:var clearCoat:==:this . clearCoat ? this . clearCoat . buildCode ( builder , ' fv1 ' ) : undefined ;
var operator = result ( ' operator ' , ' keyword ' ) ;:==:var atom:==:result ( ' atom ' , ' atom ' ) ;
var x = Math . pow ( 1 - t , 2 ) * this . fromPoint . x + ( 2 * t * ( 1 - t ) ) * viaNode . x + math . pow ( t , 2 ) * this . toPoint . x ;:==:var y:==:math . pow ( 1 - t , 2 ) * this . fromPoint . y + ( 2 * t * ( 1 - t ) ) * viaNode . y + math . pow ( t , 2 ) * this . toPoint . y ;
var methods = params . methods ;:==:var attributes:==:params . attributes ;
var solution = self . solution ;:==:var constraints:==:self . analysis . constraints ;
var width = elementPos . width ;:==:var height:==:elementPos . height ;
var useWrapMode = this . $ useWrapMode ;:==:var action:==:delta . action ;
var all = options . all ;:==:var cancel:==:options . cancel ;
var parent = plugin . getElement ( ' parent ' ) ;:==:var btn1:==:plugin . getElement ( ' btn1 ' ) ;
var saturation = params . saturation ;:==:var contrast:==:params . contrast ;
var angleAxis = angleAxisModel . axis ;:==:var polar:==:angleAxis . polar ;
var d = c1 . distanceTo ( c2 ) ;:==:var a:==:math . atan2 ( c2 . y - c1 . y , c2 . x - c1 . x ) ;
var object = test_object ;:==:var name:==:test_function_name + ' ' + test_object_name ;
var bitsCached = this . bitsCached ;:==:var cachedData:==:this . cachedData ;
var test = require ( ' utest ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var bind = require ( ' component - bind ' ) ;:==:var object:==:require ( ' object - component ' ) ;
var y = anchorPoint . y ;:==:var x1:==:x + box . x1 ;
var CPS = ' CPS ' ;:==:var FORK:==:' FORK ' ;
var children = _ props . children ;:==:var columnKey:==:_ props . columnKey ;
var Node = math . expression . node . Node ;:==:var accessorNode:==:math . expression . node . accessorNode ;
var sortBy = sorterAndOrder . sortBy ;:==:var isAsc:==:sorterAndOrder . isAsc ;
var doUglify = buildUtils . doUglify ;:==:var doBrowserify:==:buildUtils . doBrowserify ;
var scrollHeight = this . scrollContainer . scrollHeight ;:==:var scrollTop:==:this . scrollContainer . scrollTop ;
var notch = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' notch ' , this . notch ) ) ) ) ;:==:var arrowHead:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;
var autoprefixer = require ( ' gulp - autoprefixer ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var to = this . to ;:==:var distance:==:from . distanceTo ( hitPointWorld ) ;
var bucketFrame = document . getElementById ( ' bucketFrame ' ) ;:==:var bucketPane:==:registry . byId ( ' bucketPane ' ) ;
var query = ( options & & options . query )  |  |  '' ;:==:var skip:==:options & & options . skip ;
var url = require ( ' url ' ) ;:==:var util:==:require ( ' util ' ) ;
var vfs = imports . vfs ;:==:var fs:==:imports . fs ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var _ strcasecmp:==:Module [ ' _ strcasecmp ' ]    asm [ ' _ strcasecmp ' ] ;
var rowHeightFn = priv . rowHeightFn ;:==:var scrollOffset:==:priv . scrollOffset ;
var timestamp = query . timestamp ;:==:var nonce:==:query . nonce ;
var rtcSessionDescription = window . rtcSessionDescription  |  |  window . mozrtcSessionDescription ;:==:var rtcIceCandidate:==:window . rtcIceCandidate  |  |  window . mozrtcIceCandidate ;
var input = btnIframeDoc . getElementById ( ' edui_input _ ' + timestrap ) ;:==:var iframe:==:btnIframeDoc . getElementById ( ' edui_iframe _ ' + timestrap ) ;
var formatRange = fc . formatRange ;:==:var oldMomentFormat:==:fc . oldMomentFormat ;
var listeners = this . _ listeners ;:==:var scopes:==:this . _ scopes ;
var intercept = require ( ' intercept - stdout ' ) ;:==:var net:==:require ( ' net ' ) ;
var httpMediaTypeHeaderValue = windows . web . http . headers . httpMediaTypeHeaderValue ;:==:var uri:==:windows . foundation . uri ;
var primitive = groundPrimitive . _ primitive ;:==:var pickOffsets:==:primitive . _ pickOffsets ;
var getOwnPropertySymbols = object . getOwnPropertySymbols ;:==:var hasOwnProperty:==:object . prototype . hasOwnProperty ;
var attributes = specialAttrHolder . firstChild . attributes ;:==:var attribute:==:attributes [ 0 ] ;
var cellCount = _ ref . cellCount ;:==:var cellSize:==:_ ref . cellSize ;
var hash = options . hash ;:==:var base:==:options . base ;
var width = nearest_pow2 ( this . width ) ;:==:var height:==:nearest_pow2 ( this . height ) ;
var multiLine = _ props2 . multiLine ;:==:var onBlur:==:_ props2 . onBlur ;
var traits = identify . traits ( traitAliases ) ;:==:var i d:==:identify . userId ( ) ;
var node = this . nodes [ 0 ] ;:==:var tagName:==:node . tagName ;
var key = ref . key ;:==:var val:==:ref . val ;
var proc = imports . proc ;:==:var auth:==:imports . auth ;
var i d = identify . userId ( ) ;:==:var group:==:this . analytics . group ( ) ;
var ellipsoid = defaultValue ( options . ellipsoid , ellipsoid . wgs84 ) ;:==:var semiMajorAxis:==:options . semiMajorAxis ;
var y = vNode . getElementsByTagName ( ' y ' ) [ 0 ] . textContent ;:==:var z:==:vNode . getElementsByTagName ( ' z ' ) [ 0 ] . textContent ;
var date = moment ( data . date  |  |  Date . now ( ) ) ;:==:var keys:==:Object . keys ( data ) ;
var w = meshInstance . skinInstance . boneTexture . width ;:==:var h:==:meshInstance . skinInstance . boneTexture . height ;
var silent = options & & options . silent ;:==:var unset:==:options & & options . unset ;
var type = operation . type ;:==:var payload:==:operation . payload ;
var options = this . options ;:==:var script:==:document . createElement ( ' script ' ) ;
var points = options . points ;:==:var instance:==:options . instance ;
var ran = Math . random ( ) . toString ( 36 ) . slice ( 2 ) ;:==:var label:==:document . createElement ( ' label ' ) ;
var data = datas [ i ] ;:==:var src:==:data . src ;
var def = object . def ;:==:var conflicts:==:currentDiff . conflicts ;
var scrollLeft = _ document . body . scrollLeft + _ document . documentElement . scrollLeft ;:==:var scrollTop:==:_ document . body . scrollTop + _ document . documentElement . scrollTop ;
var debug = require ( ' debug ' ) ( ' pm2 : cli : startup ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var n = arguments [ 0 ] ;:==:var m:==:arguments [ 1 ] ;
var postCategory = hexo . model ( ' postCategory ' ) ;:==:var asset:==:hexo . model ( ' asset ' ) ;
var extractDateTimeSymbols = closurei18nExtractor . extractDateTimeSymbols ;:==:var outputLocale:==:closurei18nExtractor . outputLocale ;
var btnsLeftWidth = this . state . btnsLeftWidth ;:==:var btnsRightWidth:==:this . state . btnsRightWidth ;
var x = o . x ;:==:var y:==:o . y ;
var pages = json . pages ;:==:var tags:==:extractToSet ( json , ' tags ' ) ;
var puk = this . pukInput . value ;:==:var newPin:==:this . newPinInput . value ;
var async = require ( ' async ' ) ;:==:var expect:==:require ( ' chai ' ) . expect ;
var Geolocator = Windows . Devices . Geolocation . Geolocator ;:==:var geolocationAccessStatus:==:windows . devices . geolocation . geolocationAccessStatus ;
var node = RED . nodes . getNode ( req . params . i d ) ;:==:var state:==:req . params . state ;
var columnWidth = config . columnWidth ;:==:var data:==:this . data ;
var getAccessor = traceur . syntax . trees . getAccessor ;:==:var identifierExpression:==:traceur . syntax . trees . identifierExpression ;
var media = obj . media ;:==:var sourceMap:==:obj . sourceMap ;
var width = options [ ' width ' ]  |  |  0 ;:==:var height:==:options [ ' height ' ]  |  |  0 ;
var c = this . t . redMul ( this . curve . dd ) . redMul ( p . t ) ;:==:var d:==:this . z . redMul ( p . z . redAdd ( p . z ) ) ;
var juggler = require ( ' loopback - datasource - juggler ' ) ;:==:var remoting:==:require ( ' strong - remoting ' ) ;
var clearCoat = this . clearCoat ? this . clearCoat . buildCode ( builder , ' fv1 ' ) : undefined ;:==:var clearCoatRoughness:==:this . clearCoatRoughness ? this . clearCoatRoughness . buildCode ( builder , ' fv1 ' ) : undefined ;
var showsUpdated = this . showsUpdated . values ;:==:var length:==:showsUpdated . length ;
var shape = options . shape ;:==:var radius:==:options . radius  |  |  1 ;
var d = $ . Deferred ( ) ;:==:var gridster:==:this . gridster ;
var GW = this . computeGW ( ) ;:==:var Gq:==:this . computeGq ( ) ;
var applyEntityToContentState = require ( ' applyEntityToContentState ' ) ;:==:var getCharacterRemovalRange:==:require ( ' getCharacterRemovalRange ' ) ;
var rotation = options . rotation  |  |  0 ;:==:var cap:==:( options . cap      0 ) ? 0 : options . cap  |  |  BABYLON . Mesh . NO_CAP ;
var left = Math . ceil ( box . left ) ;:==:var right:==:Math . ceil ( box . right ) ;
var r = safe_decode_range ( sheet [ ' ! ref ' ] ) ;:==:var FS:==:o . FS !    undefined ? o . FS : ' , ' , fs    FS . charCodeAt ( 0 ) ;
var header = require ( ' gulp - header ' ) ;:==:var jsdoc:==:require ( ' gulp - jsdoc ' ) ;
var containerSize = _ ref6 . containerSize ;:==:var offset:==:_ ref6 . offset ;
var b = typeof mb ;:==:var c:==:typeof mc ;
var http = imports . http ;:==:var api:==:imports . api ;
var r = new baidu . editor . dom . Range ( document ) ;:==:var first:==:document . getElementById ( ' first ' ) ;
var condition = self . condition ;:==:var consequent:==:self . consequent ;
var wheel = wheelInfos [ i ] ;:==:var suspensionForce:==:wheel . suspensionForce ;
var start = range . start . valueOf ( ) ;:==:var end:==:range . end . valueOf ( ) ;
var p = defPos ? defPos : k . p ;:==:var r:==:defRot ? defRot : k . r ;
var close = $ panel . hasClass ( ' close ' ) ;:==:var collapse:==:$ panel . hasClass ( ' collapse ' ) ;
var utf8StringToString = sharedUtil . utf8StringToString ;:==:var warn:==:sharedUtil . warn ;
var path = require ( ' path ' ) ;:==:var osenv:==:require ( ' osenv ' ) ;
var form = document . querySelector ( ' form ' ) ;:==:var textarea:==:form . querySelector ( ' textarea ' ) ;
var animationEl = this . animationEl ;:==:var el:==:this . el ;
var k = n . keys [ j ] ;:==:var t:==:k . time ;
var thisArg = this . thisArg ;:==:var iterator:==:getIterator ( object ( this . iterator ) ) ;
var View = require ( ' View ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var expect = require ( ' chai ' ) . expect ;:==:var sinon:==:require ( ' sinon ' ) ;
var tile = tiles [ i ] ;:==:var coord:==:coords [ t ] ;
var quality = options . quality = = = undefined ? 3 : options . quality ;:==:var alpha:==:options . alpha  |  |  false ;
var w = this . _ width-2 ;:==:var h:==:this . _ height-2 ;
var items = listbox1 . items ( ) ;:==:var dataItems:==:listbox1 . dataItems ( ) ;
var isNewLine = _ whitespace . isNewLine ;:==:var nonasciIwhitespace:==:_ whitespace . nonasciIwhitespace ;
var Animated = require ( ' Animated ' ) ;:==:var Dimensions:==:require ( ' Dimensions ' ) ;
var alarm = icalEvent . component . getAllSubcomponents ( ' valarm ' ) [ 0 ] ;:==:var trigger:==:alarm . getFirstProperty ( ' trigger ' ) ;
var POSITION_SIZE_INDEX = Polyline . POSITION_SIZE_INDEX = 4 ;:==:var DISTANCE_DISPLAY_CONDITION:==:Polyline . DISTANCE_DISPLAY_CONDITION    5 ;
var proc = imports . proc ;:==:var util:==:imports . util ;
var name = options . name ;:==:var cssRules:==:options . cssRules ;
var debug = require ( ' debug ' ) ( ' nightmare : actions ' ) ;:==:var sliced:==:require ( ' sliced ' ) ;
var appsService = _ appJsServicesAppsService [ ' default ' ] ;:==:var urlService:==:_ appJsServicesUrlService [ ' default ' ] ;
var perms = this . _ perms ;:==:var indexes:==:this . _ indexes ;
var restitution = this . options . restitution ;:==:var impulse:==:this . impulse ;
var injectedKeys = this . injectedKeys ;:==:var injectInto:==:this . injectInto ;
var createAssignStateStatement = parseTreeFactory . createAssignStateStatement ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var dockableLayout = imports . dockableLayout ;:==:var dockableWidget:==:imports . dockableWidget ;
var chai = parent . chai ;:==:var source:==:document . _ _ source ;
var data = data . data ;:==:var len:==:data . length ;
var shadow = sharedUtil . shadow ;:==:var warn:==:sharedUtil . warn ;
var layoutAnimation = require ( ' layoutAnimation ' ) ;:==:var react:==:require ( ' react ' ) ;
var movementX = e . movementX  |  |  e . mozMovementx  |  |  0 ;:==:var movementy:==:e . movementy  |  |  e . mozMovementy  |  |  0 ;
var width = this . textureBuffer . width ;:==:var height:==:this . textureBuffer . height ;
var c = mc ( aRot ) ;:==:var s:==:ms ( aRot ) ;
var d16 = _ addDiv ( ' d16 ' ) , d17 = _ addDiv ( ' d17 ' ) ;:==:var conn:==:_ jsPlumb . connect ( source : d16 , target : d17 , endpoint : ' blank ' ) ;
var exterior = geometries [ i ] . exterior ;:==:var interiors:==:geometries [ i ] . interiors ;
var utils   = require ( ' utils ' ) ;:==:var f:==:utils . format ;
var Just = S . Just ;:==:var Nothing:==:S . Nothing ;
var phone = $ ( ' input#phone ' ) . val ( ) ;:==:var message:==:$ ( ' textarea#message ' ) . val ( ) ;
var createMemberExpression = parseTreeFactory . createMemberExpression ;:==:var createObjectFreeze:==:parseTreeFactory . createObjectFreeze ;
var viewMode = options . viewMode ;:==:var container:==:self . container ;
var bidi = coreBidi . bidi ;:==:var winAnsiEncoding:==:coreEncodings . winAnsiEncoding ;
var reactUpdates = require ( ' reactUpdates ' ) ;:==:var reactReconciler:==:require ( ' reactReconciler ' ) ;
var data = options . data ;:==:var method:==:options . method  |  |  ' GET ' ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , data , ) ;
var duplex = dom . _ ms_duplex _ ;:==:var vdom:==:( duplex  |  |  ) . vdom ;
var x = lastMotionData . x ;:==:var y:==:lastMotionData . y ;
var downvotes = parseInt ( postData . downvotes , 10 )  |  |  0 ;:==:var votes:==:upvotes - downvotes ;
var isArray = util . isArray ;:==:var errorObj:==:util . errorObj ;
var POSITION_INDEX = Billboard . POSITION_INDEX ;:==:var PIXEL_OFFSET_INDEX:==:Billboard . PIXEL_OFFSET_INDEX ;
var postTag = ctx . model ( ' postTag ' ) ;:==:var tag:==:ctx . model ( ' tag ' ) ;
var Fragment = cst . Fragment ;:==:var scopesApi:==:cst . api . scopesApi ;
var size = m . _ size ;:==:var data:==:m . _ data ;
var children = _ props . children ;:==:var iconClassName:==:_ props . iconClassName ;
var subtitleColor = _ props . subtitleColor ;:==:var subtitleStyle:==:_ props . subtitleStyle ;
var beforeLeave = ref . beforeLeave ;:==:var leave:==:ref . leave ;
var iter = goog . iter . zip ( ) ;:==:var ex:==:assertThrows ( function ( ) iter . next ( ) ) ;
var from = rewriter . rewriteFrom ( this . fromValue ) ;:==:var where:==:rewriter . rewriteWhere ( this . whereItems , from ) ;
var p2 = p2 : 23 ;:==:var o:==:o : 34 ;
var Promise = _ _ dependency2 _ _ . Promise ;:==:var denodeify:==:_ _ dependency3 _ _ . denodeify ;
var skipHiddenDays = t . skipHiddenDays ;:==:var formatDate:==:calendar . formatDate ;
var readFile = denodeify ( fs . readFile ) ;:==:var writeFile:==:denodeify ( fs . writeFile ) ;
var testSuite = goog . require ( ' goog . testing . testSuite ' ) ;:==:var json:==:goog . require ( ' goog . json ' ) ;
var layout = imports . layout ;:==:var join:==:require ( ' path ' ) . join ;
var docId = data . docId ;:==:var clientId:==:userIds . clientId ;
var h2 = dates [ 0 ] . querySelector ( ' h2 ' ) ;:==:var strong:==:dates [ 0 ] . querySelector ( ' strong ' ) ;
var options = picker . $ options ;:==:var lang:==:options . lang ;
var purple50 = exports . purple50 = ' # f3e5f5 ' ;:==:var purple100:==:exports . purple100    ' # e1bee7 ' ;
var tab   = validator . trim ( req . body . tab  |  |  '' ) ;:==:var content:==:validator . trim ( req . body . content  |  |  '' ) ;
var position = this . geometry . attributes . position ;:==:var array:==:position . array ;
var forceRefreshImages = options . forceRefreshImages ;:==:var heightData:==:options . heightData ;
var util = imports . util ;:==:var test:==:imports . test ;
var message = ' message ' ;:==:var snippet:==:' snippet ' ;
var performanceLogger = require ( ' performanceLogger ' ) ;:==:var react:==:require ( ' react ' ) ;
var type = result . type ;:==:var value:==:result . value ;
var clone   = _ _ webpack_require _ _ ( 5 ) . clone ;:==:var isInteger:==:_ _ webpack_require _ _ ( 2 ) . isInteger ;
var fs = require ( ' fs ' ) ;:==:var mime:==:require ( ' mime - types ' ) ;
var Injectable = makeDecorator ( ' injectable ' , [ ] ) ;:==:var self:==:makeParamDecorator ( ' self ' , [ ] ) ;
var utils = require ( ' utils ' ) ;:==:var preprocessor:==:require ( ' preprocessor ' ) ;
var month = parseInt ( this . $ month . val ( ) , 10 ) ;:==:var year:==:parseInt ( this . $ year . val ( ) , 10 ) ;
var debug = require ( ' debug ' ) ( ' marionette : tcp - sync ' ) ;:==:var wire:==:require ( ' json - wire - protocol ' ) ;
var config = configService . getSync ( ) . wallet . settings ;:==:var unitToSatoshi:==:config . unitToSatoshi ;
var jsv = require ( ' jsverify ' ) ;:==:var fMap:==:jsv . _ . fMap ;
var freeVariableChecker = traceur . semantics . freeVariableChecker ;:==:var generatorComprehensionTransformer:==:traceur . codegeneration . generatorComprehensionTransformer ;
var col = wgd . col ;:==:var max_cols:==:this . options . max_cols ;
var sin = Math . sin ( radians ) ;:==:var cos:==:Math . cos ( radians ) ;
var request = require ( ' request ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var setAttribute = element . prototype . setAttribute ;:==:var noop:==:function noop ( ) ;
var reactdomFiberOption = require ( ' reactdomFiberOption ' ) ;:==:var reactdomFiberSelect:==:require ( ' reactdomFiberSelect ' ) ;
var orderBy = model . orderBy ;:==:var entityNames:==:model . entityNames ;
var options = this . options ;:==:var scrollTop:==:this . $ window . scrollTop ( ) ;
var _ bitshift64Lshr = module [ ' _ bitshift64Lshr ' ] = asm [ ' _ bitshift64Lshr ' ] ;:==:var _ bitshift64Shl:==:module [ ' _ bitshift64Shl ' ]    asm [ ' _ bitshift64Shl ' ] ;
var legendIcon = powerbi . visuals . legendIcon ;:==:var legend:==:powerbi . visuals . legend ;
var index = gitSemverTags . indexOf ( currentTag ) ;:==:var previousTag:==:context . previousTag    gitSemverTags [ index + 1 ] ;
var $ tabNav = this . $ tabNav ;:==:var href:==:$ nav . attr ( ' href ' ) ;
var createStringLiteral = parseTreeFactory . createStringLiteral ;:==:var createVariableDeclaration:==:parseTreeFactory . createVariableDeclaration ;
var reactReconciler = require ( ' reactReconciler ' ) ;:==:var reactVersion:==:require ( ' reactVersion ' ) ;
var parseurl = Npm . require ( ' parseurl ' ) ;:==:var useragent:==:Npm . require ( ' useragent ' ) ;
var isContentEditableTrue = nodeType . isContentEditableTrue ;:==:var isContentEditableFalse:==:nodeType . isContentEditableFalse ;
var h = $ this . outerHeight ( ) - el . height ( ) ;:==:var w:==:$ this . outerWidth ( ) - el . width ( ) ;
var now = this . defaultArg ( event . playbackTime , this . now ( ) ) ;:==:var bufferSize:==:this . _ jsNode . bufferSize ;
var Footer = require ( ' Footer ' ) ;:==:var Header:==:require ( ' Header ' ) ;
var operand = this . transformAny ( tree . operand . operand ) ;:==:var memberExpression:==:this . transformAny ( tree . operand . memberExpression ) ;
var application = event . application ;:==:var manifest:==:application . updateManifest  |  |  application . manifest ;
var dx = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;:==:var notch:==:math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' notch ' , this . notch ) ) ) ) ;
var COMPARISON_BINARY_OPERATORS = exports . COMPARISON_BINARY_OPERATORS = [ ] . concat ( EQUALITY_BINARY_OPERATORS , [ ' in ' , ' instanceof ' ] ) ;:==:var BOOLEAN_BINARY_OPERATORS:==:exports . BOOLEAN_BINARY_OPERATORS    [ ] . concat ( COMPARISON_BINARY_OPERATORS , BOOLEAN_NUMBER_BINARY_OPERATORS ) ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var parseTreeTransformer:==:traceur . codegeneration . parseTreeTransformer ;
var map = typeof map ! = = ' undefined ' ? map : Array . prototype . map ;:==:var filter:==:typeof filter !    ' undefined ' ? filter : Array . prototype . filter ;
var GET_GITHUB_INITIATE = exports . GET_GITHUB_INITIATE = ' GET_GITHUB_INITIATE ' ;:==:var GET_GITHUB_SUCCESS:==:exports . GET_GITHUB_SUCCESS    ' GET_GITHUB_SUCCESS ' ;
var newName = event . data . newName ;:==:var isGeneric:==:event . data . isGeneric ;
var grey400 = exports . grey400 = ' # bdbdbd ' ;:==:var grey500:==:exports . grey500    ' # 9e9e9e ' ;
var Message = Protocol . Message ;:==:var eventEmitter:==:window . eventEmitter ;
var doc = this . doc ;:==:var path:==:this . $ path ;
var velocity = -event . velocity ;:==:var speedLimit:==:this . options . speedLimit ;
var units = time . units ;:==:var domain:==:this . graph . x . domain ( ) ;
var getInitialState = reactMixin . getInitialState ;:==:var componentWillMount:==:reactMixin . componentWillMount ;
var show = powerbi . dataViewObjects . getValue ( objects , pulseChart . properties [ ' popup ' ] [ ' show ' ] , pulseChart . defaultSettings . popup . show ) ;:==:var alwaysOnTop:==:powerbi . dataViewObjects . getValue ( objects , pulseChart . properties [ ' popup ' ] [ ' alwaysOnTop ' ] , pulseChart . defaultSettings . popup . alwaysOnTop ) ;
var concat = require ( ' gulp - concat ' ) ;:==:var template:==:require ( ' gulp - template ' ) ;
var generate = require ( ' regjsgen ' ) . generate ;:==:var parse:==:require ( ' regjsparser ' ) . parse ;
var paddingLeft = parseInt ( style . paddingLeft , 10 )  |  |  0 ;:==:var paddingRight:==:parseInt ( style . paddingRight , 10 )  |  |  0 ;
var service = req . service ;:==:var endpoint:==:httpRequest . endpoint ;
var max = Math . max , min = Math . min , abs = Math . abs , norminf = numeric . norminf , pow = Math . pow ;:==:var any:==:numeric . any , lt    numeric . lt , and    numeric . and , sub    numeric . sub ;
var normal = one3 . clone ( ) . normalize ( ) ;:==:var a:==:new THREE . Plane ( ) . setFromNormalAndCoplanarPoint ( normal , zero3 ) ;
var b = m . observable ( 0 ) ;:==:var c:==:m . computed ( ( )   > a . get ( ) + b . get ( ) ) ;
var data = this . data ;:==:var light:==:this . light ;
var owner = angular . element ( body [ 0 ] . querySelector ( ' # owner ' ) ) ;:==:var container:==:angular . element ( body [ 0 ] . querySelector ( ' . md - dialog - container ' ) ) ;
var cd = calcdata [ i ] ;:==:var trace:==:cd [ 0 ] . trace ;
var tilingScheme = provider . _ tilingScheme ;:==:var rectangles:==:provider . _ rectangles ;
var tab = e . tab ;:==:var doc:==:tab . path & & documents [ tab . path ] ;
var port = record . get ( ' port ' ) ;:==:var proto:==:record . get ( ' proto ' ) ;
var toolbarHandlers = editormd . toolbarHandlers ;:==:var disabledKeyMaps:==:settings . disabledKeyMaps ;
var $ = ( global & & global . $ )  |  |  require ( ' jquery ' ) ;:==:var d3:==:( global & & global . d3 )  |  |  require ( ' d3 ' ) ;
var sideInfo = this . sideInfo ( stream , nch , header . flags & mp3FrameHeader . flags . lsf_ext ) ;:==:var si:==:sideInfo . si ;
var weight = parameters . weight ! = = undefined ? parameters . weight : ' normal ' ;:==:var style:==:parameters . style !    undefined ? parameters . style : ' normal ' ;
var footer = $ ( ' # grid_'+ this . name + ' _ footer ' ) ;:==:var body:==:$ ( ' # grid_'+ this . name + ' _ body ' ) ;
var deepPurple600 = exports . deepPurple600 = ' # 5e35b1 ' ;:==:var deepPurple700:==:exports . deepPurple700    ' # 512da8 ' ;
var percentWindow = axisProxy . _ percentWindow ;:==:var valueWindow:==:axisProxy . _ valueWindow ;
var reactTestReconcileTransaction = require ( ' reactTestReconcileTransaction ' ) ;:==:var reactUpdates:==:require ( ' reactUpdates ' ) ;
var warn = debug ( ' extras : primitives : warn ' ) ;:==:var primitives:==:module . exports . primitives    ;
var uid = trace . uid ;:==:var xa:==:plotinfo . xaxis ;
var s = Number ( regExpResultArray [ 2 ] ) ;:==:var l:==:number ( regExpResultArray [ 3 ] ) ;
var bind = utils . bind ;:==:var shouldCaptureKeyEvent:==:utils . shouldCaptureKeyEvent ;
var locale = this . options . locales [ this . options . locale ] ;:==:var button:==:this . _ createButton ( ' editMode ' , ' vis - button vis - edit vis - edit - mode ' , locale [ ' edit ' ]  |  |  this . options . locales [ ' en ' ] [ ' edit ' ] ) ;
var insertTextIntoContentState = require ( ' insertTextIntoContentState ' ) ;:==:var getSampleStateForTesting:==:require ( ' getSampleStateForTesting ' ) ;
var drawCalls = scene . drawCalls ;:==:var shadowCasters:==:scene . shadowCasters ;
var ace = imports . ace ;:==:var Document:==:imports . Document ;
var setNormalizedColorAlpha = require ( ' setNormalizedColorAlpha ' ) ;:==:var normalizeColor:==:require ( ' normalizeColor ' ) ;
var assert = test . assert ;:==:var expect:==:test . expect ;
var u8Over256 = constants . u8Over256 ;:==:var u2Over4:==:constants . u2Over4 ;
var scope = widget . element . scope ( ) ;:==:var footer:==:qUnit . fixture . find ( ' select ' ) . getKendoComboBox ( ) . footer ;
var retries = options . hasOwnProperty ( ' retries ' ) ? options . retries : 5 ;:==:var retryDelay:==:options . hasOwnProperty ( ' retryDelay ' ) ? options . retryDelay : 50 ;
var accessors = gltf . accessors ;:==:var meshes:==:gltf . meshes ;
var isScalar = layout . isScalar ;:==:var outerPaddingRatio:==:layout . outerPaddingRatio ;
var https = require ( ' https ' ) ;:==:var querystring:==:require ( ' querystring ' ) ;
var start = options . start  |  |  0 ;:==:var end:==:options . end  |  |  src . length ;
var min = args . signal . range . min ;:==:var max:==:args . signal . range . max ;
var round = data . round ;:==:var i d:==:data . i d ;
var tab = tabs . focussedTab ;:==:var ace:==:tab & & tab . editor . ace ;
var key = ' key ' in opts ? opts . key : false ;:==:var descending:==:' descending ' in opts ? opts . descending : false ;
var Matrix = math . type . Matrix ;:==:var Help:==:math . type . Help ;
var rows = terminal . rows ;:==:var cols:==:terminal . cols ;
var auth = test . auth ;:==:var description:==:test . description ;
var furTexture = babylon . furMaterial . generateTexture ( ' furTexture ' , scene ) ;:==:var fur:==:new babylon . furMaterial ( ' fur ' , scene ) ;
var configPath = project . project . configPath ( ) ;:==:var config:==:require ( configPath ) ( project . environment ) . mockServer  |  |  ;
var createForInStatement = parseTreeFactory . createForInStatement ;:==:var createForStatement:==:parseTreeFactory . createForStatement ;
var text = textToSynthesize . value ;:==:var language:==:synthesizer . voice . language ;
var minChar = cur . minChar ;:==:var limChar:==:cur . limChar + ( inclusive ? 1 : 0 ) ;
var func = this . vexpr ( e . func ) ;:==:var args:==:this . vseqexpr ( e . args ) ;
var fs = require ( ' fs ' ) ;:==:var fixtures:==:path . join ( _ _ dirname , ' fixtures ' ) ;
var name = dependant . name ;:==:var dissected:==:this . _ dissected [ name ]  |  |  ( this . _ resolved [ name ] ? this . _ resolved [ name ] [ 0 ] : dependant ) ;
var left = getIdentifiersFromBinaryExpression ( side . left ) ;:==:var right:==:getIdentifiersFromBinaryExpression ( side . right ) ;
var createFunctionExpression = parseTreeFactory . createFunctionExpression ;:==:var createGetAccessor:==:parseTreeFactory . createGetAccessor ;
var foo = this [ ' foobar ' ] ;:==:var foo:==:' foo ' ;
var x = parseFloat ( hotSpotNode . getAttribute ( ' x ' ) ) ;:==:var y:==:parseFloat ( hotSpotNode . getAttribute ( ' y ' ) ) ;
var def = $ firebaseUtils . defer ( ) ;:==:var ref:==:this . $ ref ( ) . ref ( ) . push ( ) ;
var limit = flags . limit  |  |  undefined ;:==:var exclude:==:flags . exclude  |  |  undefined ;
var message = keyMessage . message ;:==:var sessionToken:==:keyMessage . sessionToken ;
var allPaths = ! ! options . allPaths ;:==:var store:==:this . store ;
var Behavior = goog . fs . directoryEntry . behavior ;:==:var eventType:==:goog . fs . fileSaver . eventType ;
var days = a . diff ( b,'days ' ) ;:==:var hours:==:a . diff ( b,'hours ' ) - days * 24 ;
var fs = Npm . require ( ' fs ' ) ;:==:var http:==:Npm . require ( ' http ' ) ;
var width = parseInt ( frag . getAttribute ( ' data - width ' ) , 10 )  |  |  0 ;:==:var height:==:parseInt ( frag . getAttribute ( ' data - height ' ) , 10 )  |  |  0 ;
var name = input . name ;:==:var selectKey:==:input . selectKey ;
var HORIZONTAL_ORIGIN_INDEX = Billboard . HORIZONTAL_ORIGIN_INDEX ;:==:var VERTICAL_ORIGIN_INDEX:==:Billboard . VERTICAL_ORIGIN_INDEX ;
var increment = this . transformAny ( tree . increment ) ;:==:var body:==:this . transformAny ( tree . body ) ;
var value = this . element . value ;:==:var type:==:this . element . type ;
var model = options . model ;:==:var edge:==:options . edge  |  |  ' 10 10 10 10 ' ;
var config = store . storeModel . config ;:==:var state:==:store . state ;
var height = Math . floor ( bb . height ( ) ) ;:==:var mask:==:element . attribute ( ' mask ' ) . value ;
var maxForce = ( typeof ( options . maxForce ) = = = ' undefined ' ? number . max_value : options . maxForce ) ;:==:var localOffsetb:==:options . localOffsetb  |  |  vec2 . fromValues ( 0,0 ) ;
var registerObject = scope . registerObject ;:==:var documentFragment:==:registerObject ( document . createDocumentFragment ( ) ) ;
var constrain = ghost  |  |  ( params . constrain = = = true ) ;:==:var revert:==:params . revert !    false ;
var _ im_get_candidate_char = Module [ ' _ im_get_candidate_char ' ] = asm [ ' _ im_get_candidate_char ' ] ;:==:var _ realloc:==:Module [ ' _ realloc ' ]    asm [ ' _ realloc ' ] ;
var ev = event . originalEvent  |  |  event ;:==:var timeStamp:==:ev . timeStamp  |  |  date . now ( ) ;
var paddingLeft = options . paddingLeft ;:==:var paddingRight:==:options . paddingRight ;
var x = bounds . x * _ width * _ pixelRatio ;:==:var y:==:bounds . y * _ height * _ pixelRatio ;
var shadow = this . options . shadow ;:==:var offset:==:this . options . offset ;
var fresh = eval ( $ this . attr ( ' fresh ' )  |  |  ' true ' ) ;:==:var external:==:eval ( $ this . attr ( ' external ' )  |  |  ' false ' ) ;
var reactCompositeComponent = require ( ' reactCompositeComponent ' ) ;:==:var reactEmptyComponent:==:require ( ' reactEmptyComponent ' ) ;
var div = new Element ( ' div ' ) ;:==:var clone:==:div . clone ( ) ;
var rootDocument = scope . rootDocument ;:==:var flags:==:scope . flags ;
var client_id = _ ref . client_id ;:==:var redirect_uri:==:_ ref . redirect_uri ;
var pointers = self . pointers ;:==:var pointer:==:pointers [ objectKeys ( pointers ) [ 0 ] ] ;
var minNodeId = nodeFilter . minNodeId ;:==:var maxNodeId:==:nodeFilter . maxNodeId ;
var output = imports . output ;:==:var fs:==:imports . fs ;
var edgeInsetsPropType = require ( ' edgeInsetsPropType ' ) ;:==:var react:==:require ( ' react ' ) ;
var newIndex = event . detail . newIndex ;:==:var value:==:event . detail . value ;
var createCharacterList = require ( ' createCharacterList ' ) ;:==:var encodeEntityRanges:==:require ( ' encodeEntityRanges ' ) ;
var spy = sinon . spy ( ) ;:==:var p:==:new L . Popup ( ) . setLatLng ( new l . latLng ( 55 . 8 , 37 . 6 ) ) ;
var delta = sbx . properties . delta ;:==:var mean5MinsAgo:==:delta . mean5MinsAgo ;
var from = docSet . getByLongname ( ' message~headers . from ' ) ;:==:var response:==:docSet . getByLongname ( ' message~response . code ' ) ;
var assert    = require ( ' assert ' ) ;:==:var connectionConfig:==:common . connectionConfig ;
var active = e . active ;:==:var switchInProgress:==:e . switchInProgress ;
var prepareStyles = _ context$muiTheme . prepareStyles ;:==:var enhancedButton:==:_ context$muiTheme . enhancedButton ;
var lang   = _ this . lang ;:==:var settings:==:_ this . settings ;
var lat = this . getElementsByTagNamens ( item , this . geons , ' lat ' ) ;:==:var lon:==:this . getElementsByTagNamens ( item , this . geons , ' long ' ) ;
var METHOD = ' METHOD ' ;:==:var METHOD_SIGNATURE:==:' METHOD_SIGNATURE ' ;
var annotationRef = annotationRefs [ i ] ;:==:var annotation:==:annotationFactory . create ( this . xref , annotationRef ) ;
var serviceName = document . getElementById ( ' serviceNameAccept ' ) . value ;:==:var bindToAny:==:document . getElementById ( ' bindToAny ' ) . checked ;
var orig_feature = cascade . stage_classifier [ j ] . orig_feature ;:==:var feature:==:cascade . stage_classifier [ j ] . feature    new Array ( cascade . stage_classifier [ j ] . count ) ;
var menus = imports . menus ;:==:var ui:==:imports . ui ;
var props = Object . assign ( , element . props ) ;:==:var key:==:element . key ;
var c9 = imports . c9 ;:==:var previewBaseUrl:==:options . previewBaseUrl ;
var oldGeoKey = oldGeoKeys [ i ] ;:==:var oldGeo:==:oldFullLayout [ oldGeoKey ] . _ subplot ;
var touchUtils = powerbi . visuals . controls . touchUtils ;:==:var createClassAndSelector:==:jsCommon . cssConstants . createClassAndSelector ;
var uniformState = context . uniformState ;:==:var viewport:==:scene . _ passState . viewport ;
var gulp   = require ( ' gulp ' ) ;:==:var babel:==:require ( ' gulp - babel ' ) ;
var del = require ( ' del ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var strm = this . strm ;:==:var chunkSize:==:this . options . chunkSize ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var tvEventHandler:==:require ( ' tvEventHandler ' ) ;
var IO = sym ( ' IO ' ) ;:==:var TAKE:==:' TAKE ' ;
var idStringify = mongoid . idStringify ;:==:var idParse:==:mongoid . idParse ;
var tabbehavior = imports . tabbehavior ;:==:var fs:==:imports . fs ;
var semiMinorAxis = options . semiMinorAxis ;:==:var ellipsoid:==:options . ellipsoid ;
var background = background  |  |  chrome . extension . getBackgroundPage ( ) ;:==:var default_proxy_server_proc:==:background . unblock_youku . default_proxy_server_proc ;
var operationId = details . auxData [ ' operationId ' ] ;:==:var operation:==:this . sidebarPanes . asyncOperationBreakpoints . operationById ( details . target ( ) , operationId ) ;
var a = ab . center ( ) ;:==:var b:==:bb . center ( ) ;
var itemHeight = legendModel . get ( ' itemHeight ' ) ;:==:var inactiveColor:==:legendModel . get ( ' inactiveColor ' ) ;
var error = this . _ error . bind ( this ) ;:==:var progress:==:this . _ progress . bind ( this ) ;
var pink800 = exports . pink800 = ' # ad1457 ' ;:==:var pink900:==:exports . pink900    ' # 880e4f ' ;
var enclose = options . enclose ;:==:var arc:==:( options . arc <   0  |  |  options . arc > 1 ) ? 1 . 0 : options . arc  |  |  1 . 0 ;
var d = dx * this . ax + dy * this . ay + dz * this . az ;:==:var frequency:==:this . limitMotor . frequency ;
var assert = chai . assert ;:==:var expect:==:chai . expect ;
var k = shape . k ;:==:var n:==:shape . n ;
var i d = result . rows . item ( 0 ) . dbid ;:==:var hexId:==:result . rows . item ( 0 ) . hexId ;
var traits = identify . traits ( email : ' _ email ' ) ;:==:var i d:==:identify . userId ( ) ;
var font = defaultValue ( options . font , ' 10px sans - serif ' ) ;:==:var stroke:==:defaultValue ( options . stroke , false ) ;
var formatDate = calendar . formatDate ;:==:var formatDates:==:calendar . formatDates ;
var fs = require ( ' fs ' ) ;:==:var hint:==:require ( ' jshint ' ) . JSHINT ;
var height = options . viewport . height ;:==:var fontSize:==:options . fontSize ;
var lineHeight = editor . renderer . layerConfig . lineHeight ;:==:var characterWidth:==:editor . renderer . layerConfig . characterWidth ;
var format = _ _ webpack_require _ _ ( 11 ) . format ;:==:var clone:==:_ _ webpack_require _ _ ( 5 ) . clone ;
var pivotA = options . pivotA ? options . pivotA . clone ( ) : new Vec3 ( ) ;:==:var pivotB:==:options . pivotB ? options . pivotB . clone ( ) : new Vec3 ( ) ;
var bRetrieve = oInit . bRetrieve ! = = undefined ? oInit . bRetrieve : defaults . bRetrieve ;:==:var bDestroy:==:oInit . bDestroy !    undefined ? oInit . bDestroy : defaults . bDestroy ;
var coffee = this . env . options . coffee ;:==:var typescript:==:this . env . options . typescript ;
var tmpVec3 = canvas2d_1 . _ tmpVec3 ;:==:var tmpMtx:==:canvas2d_1 . _ tmpMtx ;
var displayOrientations = windows . graphics . display . displayOrientations ;:==:var fileProperties:==:windows . storage . fileProperties ;
var n3 = new redNode ( i d : ' n3',type : ' abc ' ) ;:==:var n4:==:new redNode ( i d : ' n4',type : ' abc ' ) ;
var slide = s . slides . eq ( i ) ;:==:var progress:==:slide [ 0 ] . progress ;
var hasOwnProperty = objectProto . hasOwnProperty ;:==:var toString:==:objectProto . toString ;
var from = stanza . attrs . from ;:==:var body:==:stanza . getChild ( ' body ' ) ;
var disabled = el . getAttribute ( ' data - disabled ' ) ! = = null ;:==:var selected:==:el . getAttribute ( ' data - selected ' ) ;
var mainContainer = document . getElementById ( ' mainContainer ' ) ;:==:var outerContainer:==:document . getElementById ( ' outerContainer ' ) ;
var port     = zombie_array [ index ] [ ' port ' ] ;:==:var has_flash:==:zombie_array [ index ] [ ' has_flash ' ] ;
var socket   = require ( ' socket . io ' ) ;:==:var client:==:require ( ' socket . io - client ' ) ;
var searchMatches = searchResult . searchMatches ;:==:var queries:==:this . _ searchConfig . queries ( ) ;
var device = this . device ;:==:var scope:==:device . scope ;
var skipShapeProps = configuration . skipShapeProps ;:==:var customValidators:==:configuration . customValidators  |  |  [ ] ;
var component = components . get ( node ) ;:==:var declaredPropTypes:==:component & & component . declaredPropTypes  |  |  ;
var fromJS = Immutable . fromJS ;:==:var assert:==:require ( ' chai ' ) . assert ;
var journal = response . journal ;:==:var nodes:==:response . nodes ;
var unit = math . unit ;:==:var sinh:==:math . sinh ;
var pinkA700 = exports . pinkA700 = ' # c51162 ' ;:==:var purple50:==:exports . purple50    ' # f3e5f5 ' ;
var col = grid . columns [ 0 ] ;:==:var row:==:grid . rows [ 1 ] ;
var Y = Axis . Y ;:==:var Z:==:Axis . Z ;
var bodyFontSize = vm . bodyFontSize ;:==:var bodySpacing:==:vm . bodySpacing ;
var child1 = sibling . child1 ;:==:var child2:==:sibling . child2 ;
var Recording = require ( ' nativeModules ' ) . recording ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var font = this . font _ ;:==:var style:==:this . getElement ( ) . style ;
var events = require ( ' analytics - events ' ) ;:==:var fmt:==:require ( ' fmt ' ) ;
var dom = this . dom ;:==:var ctx:==:this . ctx ;
var node = path . node ;:==:var quasi:==:node . quasi ;
var length = stack . length ;:==:var values:==:stack . values ;
var monthNames = this . _ get ( inst , ' monthNames ' ) ;:==:var monthNamesShort:==:this . _ get ( inst , ' monthNamesShort ' ) ;
var g = goog . functions . partialRight ( f , 2 ) ;:==:var h:==:goog . functions . partialRight ( g , 4 ) ;
var results = document . getElementById ( ' results ' ) ;:==:var r:==:results . appendChild ( document . createElement ( ' p ' ) ) ;
var pagexOffset = _ window . pagexOffset ;:==:var pageyOffset:==:_ window . pageyOffset ;
var alert = imports [ ' dialog . alert ' ] . show ;:==:var upgrade:==:imports . upgrade ;
var cy = posInfo . cy ;:==:var r:==:posInfo . r ;
var geometry = feature . geometry ;:==:var coordinates:==:geometry . coordinates ;
var notify = require ( ' gulp - notify ' ) ;:==:var typescript:==:require ( ' gulp - typescript ' ) ;
var insert = require ( ' gulp - insert ' ) ;:==:var lazypipe:==:require ( ' lazypipe ' ) ;
var sinon   = require ( ' sinon ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var commands = imports . commands ;:==:var join:==:require ( ' path ' ) . join ;
var loadResources = model . _ loadResources ;:==:var programsToCreate:==:loadResources . programsToCreate ;
var r = new baidu . editor . dom . Range ( document ) ;:==:var two:==:document . getElementById ( ' two ' ) ;
var adapters = PouchDB$2 . adapters ;:==:var preferredAdapters:==:pouchdb$2 . preferredAdapters ;
var LABEL1 = ' LABEL1 ' ;:==:var VALUE1:==:' VALUE1 ' ;
var purpleA100 = exports . purpleA100 = ' # ea80fc ' ;:==:var purpleA200:==:exports . purpleA200    ' # e040fb ' ;
var width = $ ( window ) . width ( ) ;:==:var height:==:$ ( window ) . height ( ) ;
var minHeight = options . minHeight ;:==:var restoreOptions:==:that . restoreOptions ;
var ya = plotinfo . yaxis ;:==:var fullLayout:==:gd . _ fullLayout ;
var col = db . collection ( ' batch_write_unordered_ops_legacy_6 ' ) ;:==:var writeConcern:==:configuration . writeConcernMax ( ) ;
var mm = require ( ' mm ' ) ;:==:var should:==:require ( ' should ' ) ;
var formatter = monthLabel . get ( ' formatter ' ) ;:==:var name:==:nameMap [ + firstDay . m - 1 ] ;
var g = this . _ rgba [ 1 ] ;:==:var b:==:this . _ rgba [ 2 ] ;
var bindToAny = document . getElementById ( ' bindToAny ' ) . checked ;:==:var bindToAddress:==:document . getElementById ( ' bindToAddress ' ) . checked ;
var isMobile = utils . device . isMobile ( ) ;:==:var registerElement:==:re . registerElement ;
var error = source . error ;:==:var complete:==:source . complete ;
var when = require ( ' when ' ) ;:==:var should:==:require ( ' should ' ) ;
var dolly = this . dolly ;:==:var el:==:this . el ;
var x = Symbol ( ' x ' ) ;:==:var y:==:Symbol ( ' y ' ) ;
var keywords = page . keywords  |  |  ( page . tags & & page . tags . length ? page . tags : undefined )  |  |  config . keywords ;:==:var title:==:options . title  |  |  page . title  |  |  config . title ;
var e = true  |  |  ' 1 ' ;:==:var f:==:false  |  |  ' 0 ' ;
var div = document . createElement ( ' div ' ) ;:==:var e:==:new mouseEvent ( ' mouseover ' , relatedTarget : div ) ;
var t0 = shape . t0 ;:==:var t1:==:shape . t1 ;
var x = anchor . xCoordinate ;:==:var y:==:anchor . yCoordinate ;
var parseISO8601 = fc . parseISO8601 ;:==:var addDays:==:fc . addDays ;
var assert = require ( ' assert ' ) ;:==:var difflet:==:require ( ' difflet ' ) ( indent : 2 , comment : true ) ;
var converterHelper = powerbi . visuals . converterHelper ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var ownerID = _ treeSnapshot$instanc2 . ownerid ;:==:var owner:==:treeSnapshot [ ownerid ] ;
var createPropertyNameAssignment = parseTreeFactory . createPropertyNameAssignment ;:==:var createStringLiteral:==:parseTreeFactory . createStringLiteral ;
var apidoc = require ( ' apidoc - core ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var onMouseLeave = _ props . onMouseLeave ;:==:var style:==:_ props . style ;
var a = document . createTextNode ( ' a ' ) ;:==:var b:==:document . createTextNode ( ' b ' ) ;
var viewState = frameState . viewState ;:==:var layerState:==:this . layerState _ ;
var min = meshAabb . min ;:==:var max:==:meshAabb . max ;
var reporter = this . reporter _ ;:==:var validate:==:this . validate _ ;
var norImp = c . norImp ;:==:var tanImp:==:c . tanImp ;
var async = require ( ' async ' ) ;:==:var table:==:require ( ' text - table ' ) ;
var reactNativeTextComponent = require ( ' reactNativeTextComponent ' ) ;:==:var reactSimpleEmptyComponent:==:require ( ' reactSimpleEmptyComponent ' ) ;
var bubbles = this . bubbles = options . dataPointsSelection ;:==:var data:==:options . data ;
var index = parseInt ( this . getAttribute ( ' data - index ' ) ) ;:==:var parent:==:this . parentNode ;
var h = Math . max ( h , controlBarHeight ) ;:==:var w:==:math . max ( 225 , w ) ;
var period = effectModel . get ( ' period ' ) * 1000 ;:==:var loop:==:effectModel . get ( ' loop ' ) ;
var loc = window . location ;:==:var port:==:loc . port ? ' : ' + loc . port : ' ' ;
var dx = event . detail . relative . dx ;:==:var dy:==:event . detail . relative . dy ;
var fs      = require ( ' fs ' ) ;:==:var path:==:require ( ' path ' ) ;
var macd = this . indicators . macd ;:==:var diff:==:macd . diff ;
var name = i d ( tree . name . identifierToken ) ;:==:var superConstructor:==:this . getRuntimeExpression ( ' superConstructor ' ) ;
var vm = require ( ' vm ' ) ;:==:var concat:==:require ( ' concat - stream ' ) ;
var x = shape . x ;:==:var y:==:shape . y ;
var recursive = result . recursive ;:==:var regExp:==:result . regExp ;
var when = require ( ' when ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var dx = Math . max ( 0 , Math . min ( bounds . width , mxUtils . getValue ( this . state . style , ' dx ' , teeShape . prototype . dx ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( bounds . height , mxUtils . getValue ( this . state . style , ' dy ' , teeShape . prototype . dy ) ) ) ;
var ecma = extra . ecmaFeatures ;:==:var type:==:parser . type ;
var col = pos . widget . col ;:==:var row:==:pos . widget . row ;
var resources = options . resources ;:==:var addAsset:==:options . addAsset ;
var retainingNodes = this . _ retainingNodes ;:==:var retainingEdges:==:this . _ retainingEdges ;
var transceiver = self . transceivers [ sdpmLineIndex ] ;:==:var iceGatherer:==:transceiver . iceGatherer ;
var load = loader . getModuleLoad ( ' package . json!npm ' ) ;:==:var source:==:load . source ;
var target = this . target ;:==:var scroll:==:this . scroll ;
var cellOffsetToDayOffset = t . cellOffsetToDayOffset ;:==:var dateToDayOffset:==:t . dateToDayOffset ;
var left = Math . ceil ( box . left ) ;:==:var bottom:==:Math . ceil ( box . bottom ) ;
var input = createElement ( ' input ' ) ;:==:var div:==:createElement ( ' div ' ) ;
var HAS_TRUE_NATIVE_FULLSCREEN = exports . HAS_TRUE_NATIVE_FULLSCREEN = hasTrueNativeFullScreen ;:==:var has_native_fullscreen_enabled:==:exports . has_native_fullscreen_enabled    nativeFullScreenEnabled ;
var routes = _ state . routes ;:==:var params:==:_ state . params ;
var path = require ( ' path ' ) ;:==:var zlib:==:require ( ' zlib ' ) ;
var yRange = this . yRange ;:==:var zRange:==:this . zRange ;
var destructuringTransformer = traceur . codegeneration . destructuringTransformer ;:==:var forOfTransformer:==:traceur . codegeneration . forOfTransformer ;
var src = Blockly . utils . replaceMessageReferences ( options [ ' src ' ] ) ;:==:var width:==:number ( blockly . utils . replaceMessageReferences ( options [ ' width ' ] ) ) ;
var syntheticEvent = require ( ' syntheticEvent ' ) ;:==:var syntheticFocusEvent:==:require ( ' syntheticFocusEvent ' ) ;
var Form = imports . Form ;:==:var test:==:imports . test ;
var loc = document . location ;:==:var port:==:loc . port     ' ' ? ( loc . protocol     ' https : ' ? 443 : 80 ) : loc . port ;
var start = tmp . start ;:==:var end:==:tmp . end ;
var g = Math . abs ( color1 . rgb [ 1 ] - color2 . rgb [ 1 ] ) ;:==:var b:==:Math . abs ( color1 . rgb [ 2 ] - color2 . rgb [ 2 ] ) ;
var pairs = this . broadPhase . pairs ;:==:var i:==:this . broadPhase . numPairs ;
var y = this . _ FBU . y + tile_y * 16 ;:==:var w:==:Math . min ( 16 , ( this . _ FBU . x + this . _ FBU . width ) - x ) ;
var low = _ ref5 . low ;:==:var offset:==:_ ref5 . offset ;
var Previewer = imports . Previewer ;:==:var c9:==:imports . c9 ;
var positions = corridor . positions ;:==:var show:==:corridor . show ;
var context = this . context _ ;:==:var contextTextState:==:this . contextTextState _ ;
var torrents = this . model . get ( ' torrents ' ) ;:==:var quality:==:Settings . movies_default_quality ;
var y = ( ( ( value1 . y * part1 ) + ( value2 . y * part2 ) ) + ( tangent1 . y * part3 ) ) + ( tangent2 . y * part4 ) ;:==:var z:==:( ( ( value1 . z * part1 ) + ( value2 . z * part2 ) ) + ( tangent1 . z * part3 ) ) + ( tangent2 . z * part4 ) ;
var type = hosts . hosts [ key ] . type ;:==:var os:==:hosts . hosts [ key ] . os ;
var stride = data . stride ;:==:var offset:==:data . offset ;
var e = new Experience ( ) ;:==:var n:==:this . window_size ;
var d = goog . dom . createDom ( ' p ' , null , ' a paragraph ' ) ;:==:var t:==:d . firstChild ;
var command2 = commandManager . register ( ' enabled when previous is checked ' , ' extensionTest . command2 ' , testCommand2 ) ;:==:var command3:==:commandManager . register ( ' enabled when text selected ' , ' extensionTest . command3 ' , testCommand3 ) ;
var Helpers = leafletHelpers ;:==:var isString:==:leafletHelpers . isString ;
var stack = this . stacks [ fontstack ] ;:==:var atlas:==:this . atlases [ fontstack ] ;
var dynCall_viiiiid = Module [ ' dynCall_viiiiid ' ] = asm [ ' dynCall_viiiiid ' ] ;:==:var dynCall_v:==:Module [ ' dynCall_v ' ]    asm [ ' dynCall_v ' ] ;
var rowStopIndex = _ ref . rowStopIndex ;:==:var scrollLeft:==:_ ref . scrollLeft ;
var settings = imports . settings ;:==:var save:==:imports . save ;
var seleniumPort = grunt . option ( ' seleniumPort ' ) ;:==:var useSeleniumJar:==:grunt . option ( ' useSeleniumJar ' ) ;
var params = this . params = rawParams . slice ( 1 ) ;:==:var eligibleHelper:==:this . eligibleHelper    i d . isSimple ;
var dx = e . detail . relative . dx ;:==:var dy:==:e . detail . relative . dy ;
var method = req . method ;:==:var signature:==:req . query . msg_signature ;
var raw = o . raw ;:==:var defval:==:o . defval ;
var nconf = require ( ' nconf ' ) ;:==:var async:==:require ( ' async ' ) ;
var argv = require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;:==:var gulp:==:require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;
var uvs = this . _ uvs ;:==:var vertices:==:this . _ vertices ;
var home = this . peekState ( ) . home ;:==:var superGet:==:this . getRuntimeExpression ( ' superGet ' ) ;
var root = tree . root ;:==:var obj:==:this . obj ;
var offset = error . offset ;:==:var rule:==:error . rule ;
var w = el . width ( ) , h = el . height ( ) ;:==:var r:==:raphael ( el [ 0 ] , w , h ) ;
var align = this . align . split ( ' ' ) ;:==:var className:==:this . className + ' - ' ;
var disp = this . disp ;:==:var options:==:this . options ;
var total = track . total ( )  |  |  track . revenue ( ) ;:==:var orderId:==:track . orderId ( ) ;
var scrollToAlignment = _ props3 . scrollToAlignment ;:==:var scrollToColumn:==:_ props3 . scrollToColumn ;
var title = item . title ;:==:var description:==:item . description  |  |  item . summary  |  |  item . content  |  |  ' ' ;
var grid = ignorePlacement ? this . ignoredGrid : this . grid ;:==:var collisionBoxArray:==:this . collisionBoxArray ;
var focus = opts & & opts . focusNewTab  |  |  true ;:==:var sel:==:tree . selection . getSelectedNodes ( ) ;
var m = matrices [ 0 ] ;:==:var s:==:cs_sqr ( 2 , m , false ) ;
var vfs = imports . vfs ;:==:var info:==:imports . info ;
var scrollbarWidth = this . state . scrollbarWidth ;:==:var rowClass:==:rowClassName instanceof function ? rowClassName ( index : index ) : rowClassName ;
var _ i64Subtract = module [ ' _ i64Subtract ' ] = asm [ ' _ i64Subtract ' ] ;:==:var _ memset:==:module [ ' _ memset ' ]    asm [ ' _ memset ' ] ;
var identity = elements . identity . value ;:==:var eap:==:elements . eap . value ;
var debug = require ( ' debug ' ) ( ' nodemon ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var source = this . source ;:==:var filename:==:options . filename ;
var expertEncoding = coreEncodings . expertEncoding ;:==:var getEncoding:==:coreEncodings . getEncoding ;
var identitycMap = corecMap . identitycMap ;:==:var getMetrics:==:coreMetrics . getMetrics ;
var target = targetMap . get ( name ) ;:==:var selectedMode:==:this . get ( ' selectedMode ' ) ;
var selectionId = powerbi . visuals . selectionId ;:==:var legendIcon:==:powerbi . visuals . legendIcon ;
var Clipboard = require ( ' Clipboard ' ) ;:==:var f8Button:==:require ( ' f8Button ' ) ;
var WRONG_DOCUMENT_ERR    = exceptionCode . wrong_document_err    = ( ( exceptionMessage [ 4 ] = ' wrong document ' ) , 4 ) ;:==:var invalid_character_err:==:exceptionCode . invalid_character_err     ( ( exceptionMessage [ 5 ]   ' invalid character ' ) , 5 ) ;
var aspectRatio = options . aspectRatio ;:==:var container:==:self . container ;
var ast = Sk . astFromParse ( cst , filename ) ;:==:var st:==:sk . symboltable ( ast , filename ) ;
var active = activeElement ( ) ;:==:var placeholder:==:that . options . placeholder ;
var glyph = glyphs . get ( i ) ;:==:var advanceWidth:==:glyph . advanceWidth  |  |  0 ;
var module = this [ ' @module ' ] ;:==:var keys:==:Object . keys ( module ) ;
var util = require ( ' util ' ) ;:==:var tmp:==:require ( ' tmp ' ) ;
var lineNumber = frame . location ? frame . location . lineNumber : frame . lineNumber ;:==:var columnNumber:==:frame . location ? frame . location . columnNumber : frame . columnNumber ;
var reverse = step . reverse ;:==:var iter:==:nodeset . iterator ( reverse ) ;
var params = ob . params ;:==:var validateUserForDataReadapi:==:ob . validateUserForDataReadapi ;
var reducer = def . reducer ;:==:var ddocValidator:==:def . ddocValidator ;
var reactNativedomidOperations = require ( ' reactNativedomidOperations ' ) ;:==:var reactNativeReconcileTransaction:==:require ( ' reactNativeReconcileTransaction ' ) ;
var start = delta . start ;:==:var end:==:delta . end ;
var wq = World_step_step_wq ;:==:var stepnumber:==:this . stepnumber ;
var granularity = corridorGeometry . _ granularity ;:==:var ellipsoid:==:corridorGeometry . _ ellipsoid ;
var bodySpacing = vm . bodySpacing ;:==:var body:==:vm . body ;
var A = db . model ( ' gh4278_0 ' , aSchema ) ;:==:var b:==:db . model ( ' gh4278_1 ' , bSchema ) ;
var href = evt . detail . href ;:==:var sizes:==:evt . detail . sizes ;
var dateTimeSequence = powerbi . dateTimeSequence ;:==:var dataViewObjects:==:powerbi . dataViewObjects ;
var fullLayout = gd . _ fullLayout ;:==:var index:==:trace . ids . indexOf ( i d ) ;
var tokenType = traceur . syntax . tokenType ;:==:var argumentList:==:traceur . syntax . trees . argumentList ;
var geometry = line . geometry ;:==:var type:==:line . type ;
var isNum = sharedUtil . isNum ;:==:var readUint32:==:sharedUtil . readUint32 ;
var accessors = gltf . accessors ;:==:var skins:==:gltf . skins ;
var reactNativeTagHandles = require ( ' reactNativeTagHandles ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var start = e . data . range . start ;:==:var end:==:e . data . range . end ;
var COMPILER_REVISION = _ _ dependency3 _ _ . COMPILER_REVISION ;:==:var REVISION_CHANGES:==:_ _ dependency3 _ _ . REVISION_CHANGES ;
var doc = object ? object . ownerDocument  |  |  object : document ;:==:var defaultView:==:doc . defaultView  |  |  window ;
var fingerprintFormatError = errs . fingerprintFormatError ;:==:var invalidAlgorithmError:==:errs . invalidAlgorithmError ;
var fontSizeFreq = fontSizeFreq  |  |  ' 12px ' ;:==:var fontSizeUnit:==:fontSizeUnit  |  |  ' 10px ' ;
var i d = cookie . get ( ' i d ' ) ;:==:var token:==:cookie . get ( ' oauth - token ' ) ;
var async = require ( ' async ' ) ;:==:var join:==:require ( ' path ' ) . join ;
var scale = label . _ scale ;:==:var horizontalOrigin:==:label . _ horizontalOrigin ;
var getStdFontMap = coreStandardFonts . getStdFontMap ;:==:var getNonStdFontMap:==:coreStandardFonts . getNonStdFontMap ;
var svgUtil = powerbi . visuals . svgUtil ;:==:var axisHelper:==:powerbi . visuals . axisHelper ;
var eventPluginRegistry = require ( ' eventPluginRegistry ' ) ;:==:var eventPluginUtils:==:require ( ' eventPluginUtils ' ) ;
var topic_id = req . params . topic_id ;:==:var content:==:req . body . content  |  |  '' ;
var NAME = 7 ;:==:var COMMENT:==:8 ;
var east = queryNumericValue ( latLonBox , ' east ' , namespaces . kml ) ;:==:var north:==:queryNumericValue ( latLonBox , ' north ' , namespaces . kml ) ;
var video = window . video = document . querySelector ( ' video ' ) ;:==:var canvas:==:window . canvas    document . querySelector ( ' canvas ' ) ;
var barPercentage = yScale . options . barPercentage ;:==:var stacked:==:yScale . options . stacked ;
var tagName = event . target . tagName . toLowerCase ( ) ;:==:var type:==:event . target . type ;
var width = size . width  |  |  size . height * aspect ;:==:var height:==:size . height  |  |  size . width * aspect ;
var b = locations [ bi ] ;:==:var c:==:locations [ ci ] ;
var skins = model . skins ;:==:var meshes:==:model . meshes ;
var should   = require ( ' should ' ) ;:==:var nssocket:==:require ( ' nssocket ' ) ;
var context = this . _ context ;:==:var uniformState:==:context . uniformState ;
var colorPropType = require ( ' colorPropType ' ) ;:==:var requireNativeComponent:==:require ( ' requireNativeComponent ' ) ;
var ui = imports . ui ;:==:var scm:==:imports . scm ;
var post = hexo . post ;:==:var now:==:Date . now ( ) ;
var tileProvider = surface . tileProvider ;:==:var terrainProvider:==:this . terrainProvider ;
var grid = uiGridCtrl . grid ;:==:var rowContainer:==:containerCtrl . rowContainer ;
var echarts = require ( ' echarts ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var util   = require ( ' util ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var darkWhite = exports . darkWhite = ' rgba ( 255 , 255 , 255 , 0 . 87 ) ' ;:==:var lightWhite:==:exports . lightWhite    ' rgba ( 255 , 255 , 255 , 0 . 54 ) ' ;
var user = options . user  |  |  '' ;:==:var pwd:==:options . pwd  |  |  '' ;
var marker = imports [ ' language . marker ' ] ;:==:var question:==:imports [ ' dialog . question ' ] ;
var fs = require ( ' graceful - fs ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var createCallExpression = traceur . codegeneration . parseTreeFactory . createCallExpression ;:==:var createFunctionDeclaration:==:traceur . codegeneration . parseTreeFactory . createFunctionDeclaration ;
var nodeName = item . nodeName . toUpperCase ( ) ;:==:var documenturi:==:item . data . documenturi ;
var forwardMethodsToWrapper = scope . forwardMethodsToWrapper ;:==:var mixin:==:scope . mixin ;
var View = require ( ' View ' ) ;:==:var Text:==:require ( ' f8Text ' ) ;
var exaggeration = meshData . exaggeration ;:==:var elementsPerHeight:==:structure . elementsPerHeight ;
var editor    = this . editor ;:==:var preview:==:this . preview ;
var glob   = bluebird . promisify ( require ( ' glob ' ) ) ;:==:var fs:==:require ( ' fs ' ) ;
var View = require ( ' View ' ) ;:==:var f8Button:==:require ( ' f8Button ' ) ;
var version = util . getArg ( sourceMap , ' version ' ) ;:==:var sources:==:util . getArg ( sourceMap , ' sources ' ) ;
var springConfig = _ props2 . springConfig ;:==:var isOpenedChanged:==:this . state . isOpenedChanged ;
var O = new Schema ( _ i d : Schema . objectId ) ;:==:var b:==:new schema ( _ i d : mongoose . schema . types . buffer ) ;
var row = mouseEvent . getDocumentPosition ( ) . row ;:==:var annotation:==:gutter . $ annotations [ row ] ;
var marginLeft = parseInt ( style . marginLeft , 10 ) ;:==:var marginTop:==:parseInt ( style . marginTop , 10 ) ;
var l = left  |  |  0 ;:==:var r:==:right !    undefined ? right : this . length ;
var testRunner = imports . testRunner ;:==:var proc:==:imports . proc ;
var name = data . name ;:==:var parent:==:data . parent ;
var roleKindByQueryRef = options . roleKindByQueryRef ;:==:var queryProjectionsByRole:==:options . queryProjectionsByRole ;
var matrix = data . matrix ;:==:var nodes:==:data . nodes ;
var parent = getMapMatch ( config . submap , parentKey ) ;:==:var submap:==:config . submap [ parent ] ;
var values = $ ( element ) . data ( ) . values ;:==:var valueMin:==:$ ( element ) . data ( ) . valueMin ;
var path   = require ( ' path ' ) ;:==:var util:==:require ( ' util ' ) ;
var quatNormalize = stepnumber % ( this . quatNormalizeSkip+1 ) = = = 0 ;:==:var quatNormalizeFast:==:this . quatNormalizeFast ;
var cropper = $ image2 . data ( ' cropper ' ) ;:==:var image:==:cropper . image ;
var d = new assignmentNode ( a , i , v ) ;:==:var e:==:d . clone ( ) ;
var view = this . _ delegate . viewForFile ( uiSourceCode ) ;:==:var title:==:this . _ titleForFile ( uiSourceCode ) ;
var elements = this . _ elements ;:==:var chunkManager:==:this . _ chunkManager ;
var iframe = element ( ' < iframe name='iframeTransport ' + date . now ( ) + ' ' > ' ) ;:==:var input:==:item . _ input ;
var el = this . el ;:==:var sinon:==:this . sinon ;
var td = d . createElement ( ' td ' ) ;:==:var tr:==:d . createElement ( ' tr ' ) ;
var flyoutPointerReleasedHandler = this . _ flyoutPointerReleasedHandler . bind ( this ) ;:==:var inputOrImeChangeHandler:==:this . _ inputOrImeChangeHandler . bind ( this ) ;
var connect = imports [ ' collab . connect ' ] ;:==:var workspace:==:imports [ ' collab . workspace ' ] ;
var inp = + ( input  |  |  0 ) ;:==:var prev:==:+ ( previousOutput  |  |  0 ) ;
var g = rgba [ 1 ] ;:==:var b:==:rgba [ 2 ] ;
var fs = require ( ' fs ' ) ;:==:var server:==:require ( ' webserver ' ) . create ( ) ;
var View = require ( ' View ' ) ;:==:var f8Header:==:require ( ' f8Header ' ) ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var argv:==:require ( ' yargs ' ) . argv ;
var errorStyle = _ props2 . errorStyle ;:==:var errorText:==:_ props2 . errorText ;
var isHighLighted = flow . isHighLighted ;:==:var f:==:flow . flow ;
var net = require ( ' net ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var valueFormatter = powerbi . visuals . valueFormatter ;:==:var legendProps:==:powerbi . visuals . legendProps ;
var oCol = oSettings . aoColumns [ iCol ] ;:==:var oData:==:oSettings . aoData [ iRow ] . _ aData ;
var width = rectData . width ;:==:var height:==:rectData . height ;
var path = require ( ' path ' ) ;:==:var through:==:require ( ' through2 ' ) ;
var width = _ ref2 . width ;:==:var cellCount:==:this . props . cellCount ;
var assertion = this . assertions [ i ] ;:==:var li:==:document . createElement ( ' li ' ) ;
var allbackMaker = $ allback . allbackMaker ;:==:var compositeIncomingAccount:==:incoming . compositeIncomingAccount ;
var account = accounts [ key ] ;:==:var provider:==:core . providerFactory . get ( account . providerType ) ;
var location = this . _ location ;:==:var orient:==:this . _ orient ;
var alpha = isAlphaValid ? parseFloat ( alphaString ) : -1 ;:==:var beta:==:isBetaValid ? parseFloat ( betaString ) : -1 ;
var t = graph . view . translate ;:==:var s:==:graph . view . scale ;
var buffer = this . view . buffer ;:==:var defaultColor:==:this . view . defaultColor ;
var index = this . index ? this . index . toTex ( options ) : '' ;:==:var value:==:this . value . toTex ( options ) ;
var min = config . min  |  |  MIN ;:==:var max:==:config . max  |  |  MAX ;
var shapeText = shaping . shapeText ;:==:var shapeIcon:==:shaping . shapeIcon ;
var brown700 = exports . brown700 = ' # 5d4037 ' ;:==:var brown800:==:exports . brown800    ' # 4e342e ' ;
var object = _ react . propTypes . object ;:==:var shape:==:_ react . propTypes . shape ;
var x = round4 ( cx + rx * mathCos ( theta + dTheta ) ) ;:==:var y:==:round4 ( cy + ry * mathSin ( theta + dTheta ) * sign ) ;
var target = eventPath [ i ] . target ;:==:var currentTarget:==:eventPath [ i ] . currentTarget ;
var objectEnumerationBuilder = powerbi . visuals . objectEnumerationBuilder ;:==:var legendPosition:==:powerbi . visuals . legendPosition ;
var p = path . win32 ;:==:var props:==:String ( conf . props ) . split ( '  |  ' ) ;
var R = CMD . R ;:==:var A:==:CMD . A ;
var slices = this . slices = options . slices ;:==:var highlightSlices:==:this . highlightSlices    options . highlightSlices ;
var clean = require ( ' gulp - clean ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var process = Promise . method ( post . process . bind ( hexo ) ) ;:==:var pattern:==:post . pattern ;
var nodes = this . nodes ;:==:var node:==:exists ? nodes [ idx ] : undefined ;
var createMemberExpression = parseTreeFactory . createMemberExpression ;:==:var createNullLiteral:==:parseTreeFactory . createNullLiteral ;
var keyValue = keyValues [ i ] ;:==:var value:==:keyValue . value ( self , locals ) ;
var mime = require ( ' mime ' ) ;:==:var errors:==:require ( ' restify - errors ' ) ;
var fn = opTree [ x ] . fn ;:==:var fnId:==:opTree [ x ] . fnId ;
var config = editor . config ;:==:var history:==:editor . history ;
var yellow800 = exports . yellow800 = ' # f9a825 ' ;:==:var yellow900:==:exports . yellow900    ' # f57f17 ' ;
var title = options . title  |  |  page . title  |  |  config . title ;:==:var type:==:options . type  |  |  ( this . is_post ( ) ? ' article ' : ' website ' ) ;
var deepOrange900 = exports . deepOrange900 = ' # bf360c ' ;:==:var deepOrangea100:==:exports . deepOrangea100    ' # ff9e80 ' ;
var hasOwn = object . prototype . hasOwnProperty ;:==:var toString:==:object . prototype . toString ;
var codec = protobuf . codec ;:==:var constant:==:protobuf . constants ;
var fs = require ( ' fs ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var a = new constantNode ( 2 ) ;:==:var n:==:new functionNode ( s , [ a ] ) ;
var max = this . max ;:==:var min:==:this . min ;
var http   = require ( ' http ' ) ;:==:var path:==:require ( ' path ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var jshint:==:require ( ' gulp - jshint ' ) ;
var principalType = context . principalType  |  |  principal . user ;:==:var principalId:==:context . principalId  |  |  undefined ;
var themePrefix = options . themePrefix ;:==:var packed:==:ui . packedThemes ;
var darkBlack = exports . darkBlack = ' rgba ( 0 , 0 , 0 , 0 . 87 ) ' ;:==:var lightBlack:==:exports . lightBlack    ' rgba ( 0 , 0 , 0 , 0 . 54 ) ' ;
var options = this . options , that = this ;:==:var ignoreVal:==:options . ignoreVal ;
var . . . x = a . b ;:==:var . . . x:==:a ( ) ;
var button = options . buttons [ i ] ;:==:var b:==:$ ( ' < button > ' ) . button ( ) . appendTo ( buttonBar ) ;
var path = require ( ' path ' ) ;:==:var nunjucks:==:require ( ' nunjucks ' ) ;
var ref = element . ref ;:==:var self:==:element . _ self ;
var node = this . nodes [ this . nodes . length - 1 ] ;:==:var transform:==:this . transforms [ this . transforms . length - 1 ] ;
var dir = path . dirname ( node . template ) ;:==:var base:==:path . basename ( node . template ) ;
var y = rrectData . y ;:==:var width:==:rrectData . width ;
var batcher = this . batcher ;:==:var skeletonRenderer:==:this . skeletonRenderer ;
var crypto = Npm . require ( ' crypto ' ) ;:==:var connect:==:Npm . require ( ' connect ' ) ;
var complete = imports [ ' language . complete ' ] ;:==:var afterNoCompleteOpen:==:helpers . afterNoCompleteOpen ;
var sqrt = Math . sqrt ;:==:var min:==:Math . min ;
var points = options . points ;:==:var tangents:==:options . tangents ;
var util = require ( ' gulp - util ' ) ;:==:var watch:==:require ( ' gulp - watch ' ) ;
var yieldStatement = traceur . syntax . trees . yieldStatement ;:==:var setAccessor:==:traceur . syntax . trees . setAccessor ;
var name = content . getAttribute ( ' data - name ' ) ;:==:var address:==:content . getAttribute ( ' data - address ' ) ;
var decimal = $ . data ( this , ' numeric . decimal ' ) ;:==:var negative:==:$ . data ( this , ' numeric . negative ' ) ;
var Plugin = imports . Plugin ;:==:var scm:==:imports . scm ;
var cachedSprite = this . _ cachedSprite ;:==:var texture:==:cachedSprite . texture ;
var checkEl = instance . get ( ' checkEl ' ) ;:==:var checked:==:checkEl . attr ( ' checked ' ) ;
var renderPhoto = this . opts . renderPhoto ;:==:var skip:==:renderOpts . skip  |  |  [ ] ;
var observable = ko . observable ( ) . extend ( rateLimit : 500 ) ;:==:var notifySpy:==:jasmine . createSpy ( ' notifySpy ' ) ;
var title = options . title  |  |  document . title ;:==:var state:==:options . state  |  |  null ;
var height = corridorOutlineGeometry . _ height ;:==:var width:==:corridorOutlineGeometry . _ width ;
var el = this . el ;:==:var hasPositionalTracking:==:this . hasPositionalTracking !    undefined ? this . hasPositionalTracking : checkHasPositionalTracking ( ) ;
var transaction = this . _ db . transaction ( [ ' search_engines ' ] , ' readwrite ' ) ;:==:var objectStore:==:transaction . objectStore ( ' search_engines ' ) ;
var router = require ( ' router ' ) ;:==:var flaverr:==:require ( ' flaverr ' ) ;
var tilingScheme = this . _ tileProvider . tilingScheme ;:==:var ellipsoid:==:tilingScheme . ellipsoid ;
var columns = provider . columns ;:==:var config:==:this . config ;
var analysis = self . analysis ;:==:var input:==:self . input ;
var crypto = require ( ' crypto ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var link = getStyleProperty ( item , styleContextStack , ' link ' , null ) ;:==:var linkToPage:==:getStyleProperty ( item , styleContextStack , ' linkToPage ' , null ) ;
var showWeek = this . _ get ( inst , ' showWeek ' ) ;:==:var dayNames:==:this . _ get ( inst , ' dayNames ' ) ;
var terrainCache = this . _ terrainCache ;:==:var metadata:==:this . _ metadata ;
var headerHeight = _ props . headerHeight ;:==:var height:==:_ props . height ;
var next = head . next ;:==:var prev:==:head . prev ;
var shouldEnableFill = this . shouldEnableFill ;:==:var colorBorder:==:this . colorBorder ;
var complete = imports [ ' language . complete ' ] ;:==:var tooltip:==:imports [ ' language . tooltip ' ] ;
var child_process = require ( ' child_process ' ) ;:==:var spawn:==:child_process . spawn ;
var style = _ props4 . style ;:==:var children:==:_ props4 . children ;
var flatten = require ( ' array - flatten ' ) ;:==:var merge:==:require ( ' utils - merge ' ) ;
var models = _ _ alloyId7 . models ;:==:var len:==:models . length ;
var greenA400 = exports . greenA400 = ' # 00e676 ' ;:==:var greenA700:==:exports . greenA700    ' # 00c853 ' ;
var ao = this . ao ? this . ao . buildCode ( builder , ' fv1 ' ) : undefined ;:==:var ambient:==:this . ambient ? this . ambient . buildCode ( builder , ' c ' ) : undefined ;
var dateFromId = calc . dateFromId ;:==:var monthStart:==:calc . monthStart ;
var path = require ( ' path ' ) ;:==:var replace:==:require ( ' gulp - replace ' ) ;
var project = this . project ;:==:var url:==:this . url ;
var ellipsoid = globe . ellipsoid ;:==:var modelMatrix:==:model . modelMatrix ;
var gulp = require ( ' gulp ' ) ;:==:var filter:==:require ( ' gulp - filter ' ) ;
var host = this . host ;:==:var port:==:portPattern . exec ( host ) ;
var postId = req . params . postId ;:==:var content:==:req . fields . content ;
var controller = current . controller ;:==:var template:==:current . templateUrl ;
var type = utils . type ;:==:var undefinedError:==:utils . undefinedError ;
var fixedDataTableBufferedRows = require ( ' fixedDataTableBufferedRows . react ' ) ;:==:var fixedDataTableColumnResizeHandle:==:require ( ' fixedDataTableColumnResizeHandle . react ' ) ;
var NAME_SPACE_IMPORT = ' NAME_SPACE_IMPORT ' ;:==:var NAMED_EXPORT:==:' NAMED_EXPORT ' ;
var badHtml = badHtmlElement . text ( ) . trim ( ) ;:==:var t:==:$ ( ' # templates . report ' ) . clone ( ) ;
var graph = this . editor . graph ;:==:var model:==:graph . model ;
var ELEMENT_DELETE = traceur . syntax . predefinedName . element_delete ;:==:var element_get:==:traceur . syntax . predefinedName . element_get ;
var n1 = new redNode ( i d : ' n1',type : ' abc',wires : [ [ ' n2 ' ] ] ) ;:==:var n2:==:new redNode ( i d : ' n2',type : ' abc ' ) ;
var session_state = _ ref . session_state ;:==:var access_token:==:_ ref . access_token ;
var selector = selectors [ j ] ;:==:var match:==:selector . matchElementAncestry ( elementAncestry ) ;
var a = ' var a ' ;:==:var b:==:' var b ' ;
var address = opts . address  |  |  0x23 ;:==:var mode:==:opts . mode  |  |  0x10 ;
var t = doc . types . pop ( ) ;:==:var n:==:doc . nums . pop ( ) ;
var dataView = this . dataView = options . dataViews [ 0 ] ;:==:var isFilledMap:==:this . isFilledMap ;
var check = args . check ;:==:var periods:==:args . periods  |  |  [ ] ;
var dynCall_viiiiid = Module [ ' dynCall_viiiiid ' ] = asm [ ' dynCall_viiiiid ' ] ;:==:var dynCall_viiiiiiii:==:Module [ ' dynCall_viiiiiiii ' ]    asm [ ' dynCall_viiiiiiii ' ] ;
var strict = ! ! this . opts . strict ;:==:var noInterop:==:! ! this . opts . noInterop ;
var sqh = window . _ sqh ;:==:var accountId:==:identify . proxy ( ' traits . accountId ' ) ;
var fs = require ( ' fs ' ) ;:==:var resolve:==:require ( ' path ' ) . resolve ;
var exchange = config . watch . exchange ;:==:var currency:==:config . watch . currency ;
var type = this . _ type ( ) ;:==:var snapshot:==:this . _ snapshot ;
var touchableHighlight = require ( ' touchableHighlight ' ) ;:==:var touchableOpacity:==:require ( ' touchableOpacity ' ) ;
var body = this . getDom ( ' body ' ) ;:==:var width:==:uiUtils . getClientRect ( this . getDom ( ' content ' ) ) . width ;
var keys = Object . keys ( five . LCD . Characters . DEFAULT ) ;:==:var length:==:keys . length ;
var st = this . styles , allText = this . text , marked = this . markedSpans ;:==:var len:==:allText . length ;
var postDigestQueue = $ rootScope . $ $ postDigestQueue = [ ] ;:==:var applyAsyncQueue:==:$ rootScope . $ $ applyAsyncQueue    [ ] ;
var validate = validateAnyAdmin ;:==:var paths:==:ob . paths ;
var m = SIMD . Uint32x4 . fromInt32x4Bits ( simd . int32x4 ( 0x3f800000 , 0x40000000 , 0x40400000 , 0x40800000 ) ) ;:==:var n:==:simd . int32x4 . fromUint32x4Bits ( m ) ;
var operatorArgs = inputState . operatorArgs  |  |  ;:==:var registerName:==:inputState . registerName ;
var line = pos . line + code . length - ( to . line - from . line ) - 1 ;:==:var ch:==:pos . ch ;
var invert = options . invert ;:==:var filter:==:options . filter ;
var foreach = require ( ' gulp - foreach ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var readFileSync = opts . readFileSync  |  |  fs . readFileSync ;:==:var extensions:==:opts . extensions  |  |  [ ' . js ' ] ;
var deepOrangea700 = exports . deepOrangea700 = ' # dd2c00 ' ;:==:var brown50:==:exports . brown50    ' # efebe9 ' ;
var blur = document . getElementById ( ' blur ' ) ;:==:var radius:==:document . getElementById ( ' radius ' ) ;
var item = options . items [ options . index ] ;:==:var multi:==:$ ( obj . helpers . multi ) . find ( ' input ' ) ;
var satisfactory = getRangeValue ( categoricalValues . satisfactory , settings . values . satisfactoryPercent ) ;:==:var good:==:getRangeValue ( categoricalValues . good , settings . values . goodPercent ) ;
var index = current . index ;:==:var opts:==:current . opts ;
var r = this . pointSize + this . blurSize ;:==:var canvas:==:this . canvas ;
var x = this . x ;:==:var n:==:x . length ;
var key = keys [ ii ] ;:==:var subscription:==:subscriptions [ key ] ;
var def = ' default ' ;:==:var label:==:' label ' ;
var removeRangeFromContentState = require ( ' removeRangeFromContentState ' ) ;:==:var contentBlock:==:require ( ' contentBlock ' ) ;
var def = $ q . defer ( ) ;:==:var ref:==:this . $ ref ( ) . ref . push ( ) ;
var stream = this . mp3_stream ;:==:var frame:==:this . frame ;
var y = this . y ;:==:var index:==:this . detail . index ;
var div = myIframeDoc . createElement ( ' div ' ) ;:==:var b:==:myIframeDoc . createElement ( ' b ' ) ;
var wraphtmlCollection = scope . wraphtmlCollection ;:==:var unwrap:==:scope . unwrap ;
var minContainerWidth = number ( options . minContainerWidth )  |  |  200 ;:==:var minContainerHeight:==:number ( options . minContainerHeight )  |  |  100 ;
var test = require ( ' tap ' ) . test ;:==:var through:==:require ( ' through2 ' ) ;
var columnIndex = _ ref4 . columnIndex ;:==:var isScrolling:==:_ ref4 . isScrolling ;
var multiparty = require ( ' multiparty ' ) ;:==:var format:==:require ( ' util ' ) . format ;
var suggested = devicestatusEntry . openaps . suggested ;:==:var enacted:==:devicestatusEntry . openaps . enacted ;
var keys = evt . getProperty ( ' keys ' ) ;:==:var values:==:evt . getProperty ( ' values ' ) ;
var EXPORT_MAPPING_LIST = parseTreeType . export_mapping_list ;:==:var export_specifier:==:parseTreeType . export_specifier ;
var Scale = Tone_signal_Scale ;:==:var Tone:==:Tone_core_Tone ;
var t = percentage ;:==:var x:==:Math . pow ( 1 - t , 2 ) * this . fromPoint . x + 2 * t * ( 1 - t ) * viaNode . x + math . pow ( t , 2 ) * this . toPoint . x ;
var parent = this . _ idTodomNode [ parentId ] ;:==:var prev:==:this . _ idTodomNode [ prevId ] ;
var iceGatherer = transceiver . iceGatherer ;:==:var iceTransport:==:transceiver . iceTransport ;
var forceState = opts . forceState ;:==:var visualMapModel:==:this . visualMapModel ;
var aFields = window . aFields ;:==:var createTables:==:window . createTables ;
var dynCall_viiiddddi = Module [ ' dynCall_viiiddddi ' ] = asm [ ' dynCall_viiiddddi ' ] ;:==:var dynCall_iddddiii:==:Module [ ' dynCall_iddddiii ' ]    asm [ ' dynCall_iddddiii ' ] ;
var onMouseEnter = _ props . onMouseEnter ;:==:var onMouseLeave:==:_ props . onMouseLeave ;
var moveToCol = settings . moveToCol ;:==:var doneFunc:==:settings . doneFunc ;
var slicePartitions = math . round ( defaultValue ( options . slicePartitions , 8 ) ) ;:==:var subdivisions:==:math . round ( defaultValue ( options . subdivisions , 128 ) ) ;
var Product = db . model ( ' Product ' ) ;:==:var Comment:==:db . model ( ' Comment ' ) ;
var i d = $ ( el ) . closest ( ' li ' ) . data ( ' i d ' ) ;:==:var todos:==:this . todos ;
var models = descriptor . models ;:==:var isParam:==:descriptor . config . isParam ;
var sin = sinAmplitude ;:==:var cos:==:cosAmplitude ;
var through = require ( ' through2 ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var padLeft = _ require . padLeft ;:==:var splitIntoLines:==:_ require . splitIntoLines ;
var zip = require ( ' gulp - zip ' ) ;:==:var tar:==:require ( ' gulp - tar ' ) ;
var step = stepState . step ;:==:var importingModuleName:==:stepState . moduleMetadata . importingModuleName ;
var name = track . proxy ( ' properties . name ' )  |  |  track . proxy ( ' properties . label ' ) ;:==:var value:==:track . value ( )  |  |  track . revenue ( ) ;
var parentNodeInterface = scope . parentNodeInterface ;:==:var nonElementParentNodeInterface:==:scope . nonElementParentNodeInterface ;
var async = require ( ' async ' ) ;:==:var assert:==:require ( ' power - assert ' ) ;
var dx = Math . max ( 0 , Math . min ( Math . min ( bounds . width , bounds . height ) - arrowHead , parseFloat ( mxUtils . getValue ( this . state . style , ' dx ' , this . dx ) ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( arrowHead , parseFloat ( mxUtils . getValue ( this . state . style , ' dy ' , this . dy ) ) ) ) ;
var seleniumAddressProxy = grunt . option ( ' seleniumAddressProxy ' ) ;:==:var take:==:grunt . option ( ' take ' ) ;
var quasiSubstitution = traceur . syntax . trees . quasiSubstitution ;:==:var returnStatement:==:traceur . syntax . trees . returnStatement ;
var l = 0 + ( sleft ? pleft . sizeCalculated + this . padding : 0 ) ;:==:var t:==:0 + ( stop ? ptop . sizeCalculated + this . padding : 0 ) ;
var notch = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' notch ' , this . notch ) ) ) ) ;:==:var feather:==:h * 0 . 5 * math . max ( 0 , math . min ( 1 , parseFloat ( mxUtils . getValue ( this . style , ' feather ' , this . feather ) ) ) ) ;
var direction = Cartesian3 . clone ( orientation . direction , scratchTohprDirection ) ;:==:var up:==:cartesian3 . clone ( orientation . up , scratchTohprUp ) ;
var mux = muxConfig [ i ] ;:==:var probe:==:mux . demux . probe ;
var n = this . n ;:==:var e:==:new BN ( msg ) ;
var a = new angular . scenario . Describe ( ) ;:==:var b:==:new angular . scenario . Describe ( ) ;
var aws = require ( ' aws - sdk ' ) ;:==:var mime:==:require ( ' mime ' ) ;
var wrench = require ( ' wrench ' ) ;:==:var inquirer:==:require ( ' inquirer ' ) ;
var center = sphere . center ;:==:var radius:==:sphere . radius ;
var item = results . rows . item ( 0 ) ;:==:var metadata:==:safeJsonParse ( item . metadata ) ;
var rect = paper . rect ( bb . x+ . 5 , bb . y + . 5 , bb . width , bb . height ) . attr ( ' stroke - width ' : 1 ) ;:==:var rect:==:this . g . rect ( x , y , boxWidth , height ) . attr ( ' stroke - width ' : 1 ) . attr ( boxStyle ) . hide ( ) ;
var panelId = item . panelId ;:==:var menuItem:==:item . menuItem ;
var dispatcher = scope . dispatcher ;:==:var pointermap:==:dispatcher . pointermap ;
var user = this . analytics . user ( ) ;:==:var orderId:==:track . orderId ( ) ;
var layout = imports . layout ;:==:var question:==:imports [ ' dialog . question ' ] ;
var Writable = require ( ' readable - stream ' ) . Writable ;:==:var util:==:require ( ' util ' ) ;
var async = require ( ' async ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var Display = Windows . Graphics . Display ;:==:var displayOrientations:==:windows . graphics . display . displayOrientations ;
var listViewDataSource = require ( ' listViewDataSource ' ) ;:==:var platform:==:require ( ' platform ' ) ;
var targetTouches = this . createTouchList ( options . targetTouches , target ) ;:==:var changedTouches:==:this . createTouchList ( options . changedTouches , target ) ;
var fs = require ( ' fs ' ) ;:==:var json:==:( argv . json ? JSON . parse ( fs . readFileSync ( argv . json ) ) : ) ;
var left = rect . left + x ;:==:var top:==:rect . top + y ;
var createIdentifierExpression = parseTreeFactory . createIdentifierExpression ;:==:var createIdentifierToken:==:parseTreeFactory . createIdentifierToken ;
var keyEscapeUtils = require ( ' keyEscapeUtils ' ) ;:==:var traverseStackChildren:==:require ( ' traverseStackChildren ' ) ;
var xOffset = reflowItemRecord . xOffset ;:==:var yOffset:==:reflowItemRecord . yOffset ;
var total = lastState . total ;:==:var rendered:==:lastState . rendered++ ;
var cylinder = BABYLON . Mesh . createCylinder ( ' cylinder ' , 3 , 3 , 3 , 6 , 1 , scene , false ) ;:==:var torus:==:babylon . mesh . createTorus ( ' torus ' , 5 , 1 , 10 , scene , false ) ;
var oy = parseInt ( lasso . attr ( ' oy ' ) ) ;:==:var x:==:parseInt ( lasso . attr ( ' x ' ) ) ;
var h = hsl [ 0 ] ;:==:var s:==:hsl [ 1 ] ;
var name = url . hostname . replace ( ' . host ' , '' ) ;:==:var server:==:this . server [ name ] ;
var utils = require ( ' utils ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var nodemailer = require ( ' nodemailer ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var leave = data . leave ;:==:var afterLeave:==:data . afterLeave ;
var x = xValues [ i ] ;:==:var y:==:yValues [ i ] ;
var   LENLENS = 18 ;:==:var   CODELENS:==:19 ;
var options = $ modal . $ options = angular . extend ( , defaults , config ) ;:==:var promise:==:$ modal . $ promise    $ bsCompiler . compile ( options ) ;
var scrollLeft = _ ref4 . scrollLeft ;:==:var scrollTop:==:_ ref4 . scrollTop ;
var y = this . orientation . y ;:==:var z:==:this . orientation . z ;
var initialWidth = setSize ( settings . get ( ' initialWidth ' ) , ' x ' ) ;:==:var initialHeight:==:setSize ( settings . get ( ' initialHeight ' ) , ' y ' ) ;
var sourceType = sourceCode . ast . sourceType ;:==:var variables:==:scope . variables ;
var meshes = this . _ meshes ;:==:var index:==:meshes . indexOf ( mesh ) ;
var prevLine = this . prevLine ;:==:var line:==:this . line ;
var File = test . File ;:==:var basename:==:require ( ' path ' ) . basename ;
var c = ' c ' ;:==:var d:==:fulfillSoon ( ' d ' , 20 ) ;
var data = $ target . data ( ' amui . collapse ' ) ;:==:var option:==:data ? ' toggle ' : options ;
var db = imports . db ;:==:var ensureLoggedIn:==:imports [ ' c9 . login ' ] . ensureLoggedIn ( ) ;
var pi = math . pi ;:==:var acoth:==:math . acoth ;
var ejs = require ( ' ejs ' ) ;:==:var yaml:==:require ( ' js - yaml ' ) ;
var position = attributes [ ' position ' ] ;:==:var normal:==:attributes [ ' normal ' ] ;
var accessToken = twilio . accessToken ;:==:var ipMessagingGrant:==:accessToken . ipMessagingGrant ;
var win = goog . getObjectByName ( ' window ' ) ;:==:var doc:==:win . document ;
var a = merge ( args , arguments ) , c = context ;:==:var c:==:this instanceof bound ? this : context ;
var APN_PROPERTIES = apnEditorConst . apn_properties ;:==:var apn_property_defaults:==:apnEditorConst . apn_property_defaults ;
var start = state . start ;:==:var index:==:state . index ;
var firstPage = jQuery . sap . byId ( i d + ' --firstPageLink ' ) . toggleClass ( ' sapUiLnk ' , ! isFirst ) . toggleClass ( ' sapUiLnkDsbl ' , isFirst ) ;:==:var backLink:==:jQuery . sap . byId ( i d + ' --backLink ' ) . toggleClass ( ' sapUiLnk ' , ! isFirst ) . toggleClass ( ' sapUiLnkDsbl ' , isFirst ) ;
var readonly = ' readonly ' in options ? options . readonly : false ;:==:var blocked:==:! ! options . blocked ;
var b = _ b ;:==:var a:==:_ a ;
var s = require ( ' underscore . string ' ) ;:==:var exec:==:childProcess . exec ;
var t = frustum . top ;:==:var b:==:frustum . bottom ;
var selection = this . textEditor . selection ( ) . normalize ( ) ;:==:var token:==:this . textEditor . tokenAtTextPosition ( selection . startLine , selection . startColumn ) ;
var keys = Object . keys ( obj ) ;:==:var length:==:keys . length ;
var date = req . headers . date ;:==:var log:==:req . log ;
var edgeWeakType = this . _ edgeWeakType ;:==:var firstEdgeIndexes:==:this . _ firstEdgeIndexes ;
var encoding = ' transfer - encoding ' in req . headers ;:==:var length:==:' content - length ' in req . headers & & req . headers [ ' content - length ' ] !    ' 0 ' ;
var Promise = goog . require ( ' goog . Promise ' ) ;:==:var propertyReplacer:==:goog . require ( ' goog . testing . propertyReplacer ' ) ;
var React = require ( ' React ' ) ;:==:var Metadata:==:require ( ' Metadata ' ) ;
var isValidCenter = leafletHelpers . isValidCenter ;:==:var isValidBounds:==:leafletBoundsHelpers . isValidBounds ;
var OBJECT_PATTERN_FIELD = ' OBJECT_PATTERN_FIELD ' ;:==:var OBJECT_TYPE:==:' OBJECT_TYPE ' ;
var replace = require ( ' gulp - replace ' ) ;:==:var header:==:require ( ' gulp - header ' ) ;
var fs = require ( ' hexo - fs ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var trigger = t . trigger ;:==:var isEventDraggable:==:t . isEventDraggable ;
var shadowOffsetx = style . shadowOffsetx ;:==:var shadowOffsety:==:style . shadowOffsety ;
var http = require ( ' http ' ) ;:==:var querystring:==:require ( ' querystring ' ) ;
var DOM = domUtils . dom ;:==:var extend:==:tools . extend , each    tools . each ;
var Gaze = require ( ' gaze ' ) . Gaze ;:==:var closure:==:require ( ' closure - util ' ) ;
var options = this . options ;:==:var canvas:==:this . canvas ;
var direction = shadowMapCamera . directionwc ;:==:var up:==:shadowMapCamera . upwc ;
var chalk = require ( ' chalk ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var axis = axisProxy . getAxisModel ( ) . axis ;:==:var range:==:this . _ range ;
var header = segment . header ;:==:var data:==:segment . data , position    segment . start , end    segment . end ;
var sass = require ( ' gulp - sass ' ) ;:==:var autoprefixer:==:require ( ' gulp - autoprefixer ' ) ;
var wallet = profileService . getWallet ( $ stateParams . walletId ) ;:==:var walletId:==:wallet . credentials . walletId ;
var dataViewObject = powerbi . dataViewObject ;:==:var interactivityUtils:==:powerbi . visuals . interactivityUtils ;
var lightGreen50 = exports . lightGreen50 = ' # f1f8e9 ' ;:==:var lightGreen100:==:exports . lightGreen100    ' # dcedc8 ' ;
var draggedElement = that . draggedElement = e . currentTarget ;:==:var placeholder:==:that . options . draggable . placeholder ;
var autoprefixer = require ( ' autoprefixer ' ) ;:==:var cssnano:==:require ( ' cssnano ' ) ;
var type = head . type ;:==:var tag:==:head . tag ;
var polyline = polylines [ i ] ;:==:var width:==:polyline . width ;
var mesh = meshes [ i ] ;:==:var boundingBox:==:mesh . getBoundingInfo ( ) . boundingBox ;
var color = colors [ setIdx ] ;:==:var axis:==:g . axisPropertiesForSeries ( setName ) ;
var i d = observable . _ _ i d _ _ ;:==:var waiting:==:extenderHelper . waiting ;
var invalidArgumentError = errors . invalidArgumentError ;:==:var invalidVersionError:==:errors . invalidVersionError ;
var redisBeacon = config . redisBeacon ;:==:var watch:==:config . watch ;
var group = $ ( ' . controlgroup - single - button ' ) . controlgroup ( ) ;:==:var button:==:group . find ( ' button ' ) ;
var prop = property . data ( ' prop ' ) ;:==:var empty:==:helper . isTrue ( property . data ( ' empty ' ) ) ;
var max = Math . max ( normR , normG , normB ) ;:==:var min:==:Math . min ( normR , normG , normB ) ;
var tileSize = windows . ui . startScreen . tileSize ;:==:var uri:==:windows . foundation . uri ;
var User = db . model ( ' gh4213 ' , userSchema ) ;:==:var post:==:db . model ( ' gh4213_0 ' , postSchema ) ;
var assert = require ( ' assert ' ) ;:==:var nock:==:require ( ' nock ' ) ;
var item = obj . item ;:==:var frame:==:obj . frame ;
var axisHelper = powerbi . visuals . axisHelper ;:==:var textMeasurementService:==:powerbi . textMeasurementService ;
var fs = require ( ' fs ' ) ;:==:var dirname:==:require ( ' path ' ) . dirname ;
var parent = $ ( ' parentNode ' ) ;:==:var def:==:$ ( ' def ' ) ;
var dataViewObject = powerbi . dataViewObject ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var records = this . observer . records _ ;:==:var length:==:records . length ;
var width = Math . max ( 400 , win . width ) ;:==:var height:==:Math . max ( 300 , win . height ) ;
var Dummy3 = mongoose . model ( ' Dummy3 ' , dummy3Schema ) ;:==:var dummy4:==:mongoose . model ( ' dummy4 ' , dummy4Schema ) ;
var React = require ( ' React ' ) ;:==:var styleSheet:==:require ( ' f8StyleSheet ' ) ;
var height = this . attribute ( ' height ' ) . Length . toPixels ( ' y ' ) ;:==:var rx:==:this . attribute ( ' rx ' ) . length . toPixels ( ' x ' ) ;
var creditDisplay = frameState . creditDisplay ;:==:var terrainData:==:surfaceTile . terrainData ;
var postMessage = imports [ ' remote . postMessage ' ] ;:==:var cssDocument:==:imports . cssDocument ;
var authData = user . get ( ' authData ' ) ;:==:var token:==:authData . facebook . access_token ;
var forOfStatement = traceur . syntax . trees . forOfStatement ;:==:var forStatement:==:traceur . syntax . trees . forStatement ;
var isDefined = angular . isDefined ;:==:var isFunction:==:angular . isFunction ;
var x2 = obj . x2 = = null ? 1 : obj . x2 ;:==:var y:==:obj . y     null ? 0 : obj . y ;
var enableJsonpCallback = defined ( request . enableJsonpCallback , this . enableJsonpCallback ) ;:==:var callbackParameterName:==:defined ( request . callbackParameterName , this . callbackParameterName ) ;
var oscpu = navigator . oscpu ;:==:var platform:==:navigator . platform . toLowerCase ( ) ;
var tokenType = traceur . syntax . tokenType ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var orderedKey = three . geometryUtils . orderedKey ;:==:var computeEdgeFaces:==:three . geometryUtils . computeEdgeFaces ;
var BLOCK = ' BLOCK ' ;:==:var BREAK_STATEMENT:==:' BREAK_STATEMENT ' ;
var header = $ ( ' # grid_'+ this . name + ' _ header ' ) ;:==:var toolbar:==:$ ( ' # grid_'+ this . name + ' _ toolbar ' ) ;
var axisPointerModel = axisInfo . axisPointerModel ;:==:var scale:==:axisInfo . axis . scale ;
var semver = require ( ' semver ' ) ;:==:var should:==:require ( ' should ' ) ;
var _ im_get_spl_start = Module [ ' _ im_get_spl_start ' ] = asm [ ' _ im_get_spl_start ' ] ;:==:var _ im_close_decoder:==:Module [ ' _ im_close_decoder ' ]    asm [ ' _ im_close_decoder ' ] ;
var imul = stdlib . Math . imul ;:==:var fround:==:stdlib . Math . fround ;
var lngField = this . cfg . lngField  |  |  ' lng ' ;:==:var valueField:==:this . cfg . valueField  |  |  ' value ' ;
var children = this . children ;:==:var len:==:children . length ;
var exceptSnakeCase = this . _ exceptSnakeCase ;:==:var exceptKeywords:==:this . _ exceptKeywords ;
var m = mean  |  |  0 ;:==:var s:==:sd  |  |  1 ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var locationFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' locationFieldTestObject ' ) ) ;
var sparse = math . sparse ;:==:var unit:==:math . unit ;
var type = this . props . type ;:==:var value:==:this . state . value ;
var manifest = appData . manifesturl ;:==:var type:==:appData . type ;
var gltf = model . gltf ;:==:var accessors:==:gltf . accessors ;
var extend = $ . extend ;:==:var noop:==:$ . noop ;
var join = pathFn . join ;:==:var sep:==:pathFn . sep ;
var setupTestHooks   = blueprintHelpers . setupTestHooks ;:==:var emberNew:==:blueprintHelpers . emberNew ;
var color = lparams . color . getHex ( ) ;:==:var intensity:==:lparams . intensity ;
var b = goog . Promise . resolve ( ' b ' ) ;:==:var c:==:rejectSoon ( ' rejected - c ' , 10 ) ;
var push = [ ] . push ;:==:var slice:==:Array . prototype . slice ;
var iter = goog . iter . slice ( ' ABCDEFG ' . split ( '' ) , 10 ) ;:==:var ex:==:assertThrows ( function ( ) iter . next ( ) ) ;
var notifier = require ( ' node - notifier ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var h = renderer . $ size . scrollerHeight - renderer . lineHeight ;:==:var scrollTop:==:renderer . scrollTop ;
var name = res . attributes [ i ] . name ;:==:var value:==:res . attributes [ i ] . value ;
var modifyPackages = blueprintHelpers . modifyPackages ;:==:var setupPodConfig:==:blueprintHelpers . setupPodConfig ;
var btoa = require ( ' btoa ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var positions = params . positions ;:==:var ellipsoid:==:params . ellipsoid ;
var el = setupSelect ( ' ng - model='$root . model ' ' , [ 1 , 2 , 3 ] ) ;:==:var select:==:el . find ( ' md - select ' ) ;
var gzip = require ( ' gulp - gzip ' ) ;:==:var header:==:require ( ' gulp - header ' ) ;
var source = this . source ;:==:var geo:==:this . geometry ;
var errorMoreInfo = errorWrapperConfig . errorMoreInfo ;:==:var moreInfoButton:==:errorWrapperConfig . moreInfoButton ;
var node = this . _ node ;:==:var contentSize:==:node . _ contentSize ;
var address = opts . address  |  |  this . ADDRESSES [ 0 ] ;:==:var calibrationMask:==:opts . calibrationMask  |  |  0xc0 ;
var updatable = options . updatable ;:==:var sideOrientation:==:( options . sideOrientation      0 ) ? 0 : options . sideOrientation  |  |  babylon . mesh . defaultside ;
var debug = require ( ' debug ' ) ( ' marionette - js - logger ' ) ;:==:var util:==:require ( ' util ' ) ;
var showFilesCheckbox = ( options & & options . showFilesCheckbox ) ! = = false ;:==:var hideFileInput:==:options & & options . hideFileInput ;
var isCombinationalField = localUtils . isCombinationalField ;:==:var getKey:==:localUtils . getKey ;
var body = this . getDomHelper ( ) . getDocument ( ) . body ;:==:var active:==:this . getDomHelper ( ) . getDocument ( ) . activeElement  |  |  body ;
var eventPluginHub = require ( ' eventPluginHub ' ) ;:==:var reactTreeTraversal:==:require ( ' reactTreeTraversal ' ) ;
var path1 = options . path1  |  |  options . path  |  |  ' _ ' ;:==:var path2:==:options . path2  |  |  path1 ;
var blockTree = require ( ' blockTree ' ) ;:==:var draftModifier:==:require ( ' draftModifier ' ) ;
var technique = techniques [ techniqueName ] ;:==:var parameters:==:technique . parameters ;
var l = $ ( target ) . offset ( ) . left+10 ;:==:var t:==:$ ( target ) . offset ( ) . top + $ ( target ) . offset ( ) . height -10 ;
var scale = Math . min ( scalex , scaley ) ;:==:var w:==:target_width * scale ;
var uglify   = require ( ' gulp - uglify ' ) ;:==:var del:==:require ( ' del ' ) ;
var vertical = font . vertical ;:==:var defaultvMetrics:==:font . defaultvMetrics ;
var startBufferEvery = this . startBufferEvery = = null ? bufferSize : this . startBufferEvery ;:==:var buffers:==:this . buffers ;
var objects = categoryColumn . objects & & categoryColumn . objects [ categoryIndex ] ;:==:var color:==:colorHelper . getColorForSeriesValue ( objects , categoryColumn . identityFields , categoryColumn . values [ categoryIndex ] ) ;
var Dict = definitions . Dict ;:==:var Stack:==:definitions . Stack ;
var calls = Object . getOwnPropertyNames ( source . _ calls  |  |  ) ;:==:var inherited:==:source . _ inherited  |  |  [ ] ;
var v = Sk . builtin . lng . mulInt$ ( v1 , d ) ;:==:var w:==:sk . builtin . lng . mulInt$ ( w1 , d ) ;
var createCallExpression = parseTreeFactory . createCallExpression ;:==:var createEmptyParameterList:==:parseTreeFactory . createEmptyParameterList ;
var reactGenericBatching = require ( ' reactGenericBatching ' ) ;:==:var syntheticEvent:==:require ( ' syntheticEvent ' ) ;
var west = queryNumericValue ( latLonBox , ' west ' , namespaces . kml ) ;:==:var south:==:queryNumericValue ( latLonBox , ' south ' , namespaces . kml ) ;
var Cursor = firepad . Cursor ;:==:var undoManager:==:firepad . undoManager ;
var split = stack . split ( rline ) ;:==:var len:==:split . length ;
var cursorLayer = imports . cursorLayer ;:==:var authorLayer:==:imports . authorLayer ;
var el = this . el ;:==:var mtlLoader:==:this . mtlLoader ;
var element = elementFinder . findElement ( msg . element ) ;:==:var el:==:createFocusElement ( msg . peer , element ) ;
var events   = require ( ' events ' ) ;:==:var path:==:require ( ' path ' ) ;
var preferencePanel = imports . preferencePanel ;:==:var commands:==:imports . commands ;
var createMemberLookupExpression = parseTreeFactory . createMemberLookupExpression ;:==:var createNumberLiteral:==:parseTreeFactory . createNumberLiteral ;
var equal = require ( ' assert - dir - equal ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var effector = bones [ ik . effector ] ;:==:var target:==:bones [ ik . target ] ;
var shallowEqual = require ( ' shallowEqual ' ) ;:==:var cellDefault:==:require ( ' fixedDataTableCellDefault . react ' ) ;
var type = track . type ;:==:var i d:==:track . streamInfo . i d ;
var file = path . resolve ( manifestDir , files . shift ( ) ) ;:==:var extname:==:path . extname ( file ) ;
var x = node . x ;:==:var y:==:node . y ;
var p = myModel . definition . properties [ key ] ;:==:var o:==:myModel . definition . properties [ key ] ;
var tooltipModel = this . _ tooltipModel ;:==:var ecModel:==:this . _ ecModel ;
var fixedHeight = _ props3 . fixedHeight ;:==:var keepCollapsedContent:==:_ props3 . keepCollapsedContent ;
var expires = Number ( tokenData . expires ) ;:==:var token_ts:==:tokenData . token_ts ;
var literalToken = traceur . syntax . literalToken ;:==:var parenExpression:==:traceur . syntax . trees . parenExpression ;
var camera = scene . camera ;:==:var canvas:==:scene . canvas ;
var to = _ props2 . to ;:==:var query:==:_ props2 . query ;
var arrayBuffer = window . arrayBuffer ;:==:var uint8Array:==:window . uint8Array ;
var assert = utils . assert ;:==:var cachedProperty:==:utils . cachedProperty ;
var password = password  |  |  '' ;:==:var common:==:this . formItems . common ;
var e = Import ( a . y , a . y_off + j * a . y_stride , a . y_stride , b - j , p . scaler_y ) ;:==:var f:==:Import ( a . u , a . u_off + uv_j * a . uv_stride , a . uv_stride , c - uv_j , p . scaler_u ) ;
var submitButton = this . _ options . submitButton ;:==:var cancelButton:==:this . _ options . cancelButton ;
var length   = options . length ;:==:var anchor:==:options . anchor  |  |  source . position ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var front = this . _ front ;:==:var capacity:==:this . _ capacity ;
var comprehensionForList = this . transformList ( tree . comprehensionForList ) ;:==:var ifExpression:==:this . transformAny ( tree . ifExpression ) ;
var notifySubscribers = source . notifySubscribers ;:==:var arrayChange:==:source . subscribe ( function ( ) , null , ' arrayChange ' ) ;
var moveFromCol = settings . moveFromCol ;:==:var moveToRow:==:settings . moveToRow ;
var notify = self . notify ;:==:var storageType:==:self . storageType ;
var dim   = _ dim  |  |  false ;:==:var timeout:==:_ timeout  |  |  50000 ;
var React = require ( ' React ' ) ;:==:var rnTesterBlock:==:require ( ' rnTesterBlock ' ) ;
var TRUE2 = C . TRUE2 = 0x22 ;:==:var TRUE3:==:C . TRUE3    0x23 ;
var Touchable = require ( ' Touchable ' ) ;:==:var touchableWithoutFeedback:==:require ( ' touchableWithoutFeedback ' ) ;
var callButton = document . querySelector ( ' button#callButton ' ) ;:==:var sendTonesButton:==:document . querySelector ( ' button#sendTonesButton ' ) ;
var View = require ( ' View ' ) ;:==:var Animated:==:require ( ' Animated ' ) ;
var materials = template . materials ;:==:var components:==:template . components ;
var curry = zrUtil . curry ;:==:var each:==:zrUtil . each ;
var frameState = scene . frameState ;:==:var actualPosition:==:sceneTransforms . computeActualWgs84Position ( frameState , position , actualPositionScratch ) ;
var instance = instances [ i ] ;:==:var geometry:==:instance . geometry ;
var level = levels [ i ] ;:==:var option:==:dh . createDom ( ' option ' , , level . name ) ;
var items = this . get ( ' items ' ) ;:==:var i:==:items . length ;
var Dummy1 = mongoose . model ( ' Dummy1 ' , dummy1Schema ) ;:==:var dummy2:==:mongoose . model ( ' dummy2 ' , dummy2Schema ) ;
var nunjucks = require ( ' nunjucks ' ) ;:==:var inherits:==:require ( ' util ' ) . inherits ;
var bundle = fs . readFileSync ( path . join ( _ _ dirname , ' bundle0 . js ' ) , ' utf-8 ' ) ;:==:var style:==:fs . readFileSync ( path . join ( _ _ dirname , ' style . css ' ) , ' utf-8 ' ) ;
var lean = options . options & & options . options . lean ;:==:var len:==:vals . length ;
var rotationSkewx = options [ ' rotationSkewx ' ] ;:==:var rotationSkewy:==:options [ ' rotationSkewy ' ] ;
var foldWidgets = this . $ showFoldWidgets & & session . foldWidgets ;:==:var breakpoints:==:session . $ breakpoints ;
var rx = require ( ' rx - lite ' ) ;:==:var util:==:require ( ' util ' ) ;
var anchor = vim . sel . anchor ;:==:var head:==:vim . sel . head ;
var raygun = imports . raygun ;:==:var errorClient:==:raygun . errorClient ;
var upload = imports . upload ;:==:var tree:==:imports . tree ;
var showBackground = label . _ showBackground & & ( text . split ( ' \n ' ) . join ( '' ) . length > 0 ) ;:==:var backgroundBillboard:==:label . _ backgroundBillboard ;
var posts = json . posts ;:==:var pages:==:json . pages ;
var nock = require ( ' nock ' ) ;:==:var http:==:require ( ' http ' ) ;
var assert = require ( ' assert ' ) ;:==:var os:==:require ( ' os ' ) ;
var readdirSync = require ( ' fs ' ) . readdirSync ;:==:var statSync:==:require ( ' fs ' ) . statSync ;
var createBlock = parseTreeFactory . createBlock ;:==:var createBreakStatement:==:parseTreeFactory . createBreakStatement ;
var launch = target . getAttribute ( ' data - launch ' ) ;:==:var args:==:json . parse ( target . getAttribute ( ' data - args ' ) ) ;
var suffix = kTransforms [ transform ] . suffix ;:==:var t:==:kTransforms [ transform ] . transform ;
var createMemberExpression = parseTreeFactory . createMemberExpression ;:==:var createStringLiteral:==:parseTreeFactory . createStringLiteral ;
var el = this . el ;:==:var fog:==:this . el . object3D . fog ;
var doc = context . document  |  |  ;:==:var opera:==:context . operamini  |  |  context . opera ;
var evalExpr = ' ( evalExpr ( ' + args . path + ' . tabs [ ' + index + ' ] ' + ' . condition , model : model , ' arrayIndex ' : $ index ) ) ' ;:==:var div:==:document . createElement ( ' div ' ) ;
var date = this . _ $ datePicker . val ( ) ;:==:var city:==:this . _ $ cityPicker . val ( ) ;
var createArgumentList = parseTreeFactory . createArgumentList ;:==:var createCallExpression:==:parseTreeFactory . createCallExpression ;
var up = this . up ;:==:var right:==:this . right ;
var extrudedHeight = options . extrudedHeight ;:==:var extrude:==:( defined ( extrudedHeight ) & & math . abs ( height - extrudedHeight ) > 1 . 0 ) ;
var bgColor = defaultValue ( parseColorString ( queryStringValue ( node , ' bgColor ' , namespaces . kml ) ) , color . white ) ;:==:var textColor:==:defaultValue ( parseColorString ( queryStringValue ( node , ' textColor ' , namespaces . kml ) ) , color . black ) ;
var tildify = require ( ' tildify ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var feature = this . feature ;:==:var geom:==:feature . geometry ;
var Document = imports . Document ;:==:var language:==:imports . language ;
var enterActiveClass = ref . enterActiveClass ;:==:var appearClass:==:ref . appearClass ;
var HCRC = 9 ;:==:var DICTID:==:10 ;
var target = seriously . target ( ' # p5canvas ' ) ;:==:var chroma:==:seriously . effect ( ' chroma ' ) ;
var i d = newBusytime . _ i d ;:==:var trans:==:db . transaction ( ' busytimes ' ) ;
var membersPanel = imports . membersPanel ;:==:var commands:==:imports . commands ;
var green300 = exports . green300 = ' # 81c784 ' ;:==:var green400:==:exports . green400    ' # 66bb6a ' ;
var scope = $ tooltip . $ scope = options . scope & & options . scope . $ new ( )  |  |  $ rootScope . $ new ( ) ;:==:var nodeName:==:element [ 0 ] . nodeName . toLowerCase ( ) ;
var plan = testDoc . plan ;:==:var requires:==:testDoc . requires ;
var hitPoint = intersectplane_hitpoint ;:==:var normal:==:intersectplane_normal ;
var tab   = _ . trim ( req . body . tab ) ;:==:var content:==:_ . trim ( req . body . content ) ;
var lightBlack = exports . lightBlack = ' rgba ( 0 , 0 , 0 , 0 . 54 ) ' ;:==:var minBlack:==:exports . minBlack    ' rgba ( 0 , 0 , 0 , 0 . 26 ) ' ;
var Location = Struct ( ' Location ' ) ;:==:var memoryWriter:==:struct ( ' memoryWriter ' ) ;
var minimist = require ( ' minimist ' ) ;:==:var rc:==:require ( ' rc ' ) ;
var limit = self . _ limit ;:==:var comparator:==:self . _ comparator ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var weekNumberCalculation = opts . weekNumberCalculation ;:==:var firstDay:==:opts . firstDay ;
var m = JSON . parse ( JSON . stringify ( minify_options ) ) ;:==:var o:==:JSON . parse ( JSON . stringify ( options ) ) ;
var predefinedName = traceur . syntax . predefinedName ;:==:var tempVarTransformer:==:traceur . codegeneration . tempVarTransformer ;
var Annotation = coreAnnotation . annotation ;:==:var annotationFactory:==:coreAnnotation . annotationFactory ;
var assert = require ( ' assert ' ) ;:==:var co:==:require ( ' co ' ) ;
var oldStyle = oldStaticStyle  |  |  oldStyleBinding ;:==:var style:==:normalizeStyleBinding ( vnode . data . style )  |  |  ;
var debug = require ( ' debug ' ) ( ' pm2 : serve ' ) ;:==:var probe:==:require ( ' pmx ' ) . probe ( ) ;
var tag = missingOpts . tag ;:==:var classname:==:missingOpts . classname ;
var len = operations . length ( ops [ i ] ) ;:==:var type:==:operations . type ( ops [ i ] ) ;
var name = _ ref . name ;:==:var description:==:_ ref . description ;
var amber100 = exports . amber100 = ' # ffecb3 ' ;:==:var amber200:==:exports . amber200    ' # ffe082 ' ;
var cellDataGetter = _ column$props . cellDataGetter ;:==:var cellRenderer:==:_ column$props . cellRenderer ;
var off = stream . offset ;:==:var s:==:new mp3Stream ( new av . bitstream ( stream ) ) ;
var panResponder = require ( ' panResponder ' ) ;:==:var scrollView:==:require ( ' scrollView ' ) ;
var isNewLine = _ . isNewLine ;:==:var sourceLocation:==:_ . sourceLocation ;
var HAS_MOZ_NATIVE_FULLSCREEN = exports . HAS_MOZ_NATIVE_FULLSCREEN = hasMozNativeFullScreen ;:==:var has_ms_native_fullscreen:==:exports . has_ms_native_fullscreen    hasMsNativeFullScreen ;
var hour = getOption ( options , ' hour ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;:==:var minute:==:getOption ( options , ' minute ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;
var body = dom . getDocument ( ) . body ;:==:var documentElement:==:dom . getDocument ( ) . documentElement ;
var antialias = options . antialias ;:==:var preserveBuffer:==:options . preserveBuffer ;
var fontStringify = _ _ webpack_require _ _ ( 13 ) . fontStringify ;:==:var isFunction:==:_ _ webpack_require _ _ ( 13 ) . isFunction ;
var buffer = this . ensureBuffer ( bufferLength + rowBytes ) ;:==:var bits:==:this . bits ;
var event = track . event ( ) ;:==:var events:==:this . events ( event ) ;
var viewState = frameState . viewState ;:==:var rotation:==:viewState . rotation ;
var points = shape . points ;:==:var stackedOnPoints:==:shape . stackedOnPoints ;
var mesh = this . meshes [ i ] ;:==:var mixer:==:mesh . mixer ;
var registerName = inputState . registerName ;:==:var sel:==:vim . sel ;
var error = require ( ' http - error ' ) ;:==:var kaefer:==:require ( ' kaefer ' ) ;
var dataGrid = options . dataGrid ? options . dataGrid : $ ( ' # dataGrid ' ) ;:==:var dataGridPage:==:options . dataGridPage ? options . dataGridPage : $ ( ' # dataGridPage ' ) ;
var defineWrapGetter = scope . defineWrapGetter ;:==:var elementFromPoint:==:scope . elementFromPoint ;
var pick_language = $ ( ' . pick_language ' ) ;:==:var translate_content:==:$ ( ' . translate_content ' ) ;
var propertyNames = context [ ' propertyNames ' ] ;:==:var srsName:==:context [ ' srsName ' ] ;
var topLevelTypes = eventConstants . topLevelTypes ;:==:var getFirstReactdom:==:reactMount . getFirstReactdom ;
var method = obj [ methodName ] ;:==:var mock:==:initMock ( mockMethod , context  |  |  obj ) ;
var fs = require ( ' fs - extra ' ) ;:==:var istanbul:==:require ( ' istanbul ' ) ;
var primitive = this . primitive ;:==:var primitives:==:this . primitives ;
var debug = require ( ' debug ' ) ( ' socket . io : client ' ) ;:==:var url:==:require ( ' url ' ) ;
var semVer = semver . semVer ;:==:var range:==:semver . range ;
var axisType = thisOption . axisType ;:==:var names:==:this . _ names    [ ] ;
var babel   = require ( ' gulp - babel ' ) ;:==:var bump:==:require ( ' gulp - bump ' ) ;
var dateIntervalPatterns = goog . require ( ' goog . i18n . dateIntervalPatterns ' ) ;:==:var dateIntervalSymbols:==:goog . require ( ' goog . i18n . dateIntervalSymbols ' ) ;
var enumExtensions = jsCommon . enumExtensions ;:==:var dataRoleHelper:==:powerbi . data . dataRoleHelper ;
var path = require ( ' path ' ) ;:==:var exists:==:fs . exists  |  |  path . exists ;
var len = s . length ;:==:var r:==:Caml_string . caml_create_string ( len ) ;
var period = this . _ period ;:==:var dueTime:==:this . dueTime ;
var selectMenu = powerbi . visual . controls . selectMenu ;:==:var pixelConverter:==:jsCommon . pixelConverter ;
var offset = jQuery ( this . splitterBar ) . offset ( ) ;:==:var height:==:jQuery ( this . splitterBar ) . height ( ) ;
var child_process = require ( ' child_process ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var popupWindowTarget = _ ref . popupWindowTarget ;:==:var silent_redirect_uri:==:_ ref . silent_redirect_uri ;
var o = options  |  |  ;:==:var prefix:==:typeof o . prefix      ' undefined ' & & ' assert '  |  |  o . prefix ;
var proxyquire = require ( ' proxyquire ' ) ;:==:var test:==:require ( ' tap ' ) . test ;
var showModalAnimation = animation . showModalAnimation ;:==:var hideModalAnimation:==:animation . hideModalAnimation ;
var extend = require ( ' util ' ) . _ extend ;:==:var format:==:require ( ' util ' ) . format ;
var title = $ ( this ) . attr ( ' gs_title ' ) ? $ ( this ) . attr ( ' gs_title ' ) : '' ;:==:var width:==:$ ( this ) . attr ( ' gs_width ' ) ;
var newline_between_rules = ( options . newline_between_rules = = = undefined ) ? true : options . newline_between_rules ;:==:var space_around_combinator:==:( options . space_around_combinator      undefined ) ? false : options . space_around_combinator ;
var offset = session . offsetDelta  |  |  ;:==:var prevDelta:==:session . prevDelta  |  |  ;
var jsonStreamParser = goog . require ( ' goog . net . streams . jsonStreamParser ' ) ;:==:var streamParser:==:goog . require ( ' goog . net . streams . streamParser ' ) ;
var Timer = goog . require ( ' goog . Timer ' ) ;:==:var promise:==:goog . require ( ' goog . labs . promise ' ) ;
var filter = params . qstring . filter  |  |  ' ' ;:==:var project:==:params . qstring . project  |  |  ' ' ;
var wordSpacing = current . wordSpacing ;:==:var texthScale:==:current . texthScale * fontDirection ;
var type = ref . type ;:==:var payload:==:ref . payload ;
var data = message . data ;:==:var clientId:==:data . clientId ;
var isName = corePrimitives . isName ;:==:var isRef:==:corePrimitives . isRef ;
var f = function ( ) ;:==:var a:==:foo : ' bar ' ;
var insertIntoList = require ( ' insertIntoList ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var i = this . $ getRowCacheIndex ( rowCache , docRow ) ;:==:var l:==:rowCache . length ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var stringify:==:require ( ' stringify ' ) ;
var arrayLength = webInspector . remoteObject . arrayLength ( preview ) ;:==:var properties:==:preview . properties ;
var closeArray = options . closeArray  |  |  false ;:==:var closePath:==:options . closePath  |  |  false ;
var options = this . options ;:==:var actions:==:options . actions ;
var axis = this . _ axis ;:==:var isHorizontal:==:axis . isHorizontal ( ) ;
var document = window . document ;:==:var slice:==:deletedIds . slice ;
var top = region . top + dest . y ;:==:var right:==:region . right + dest . x ;
var parseQueryString = _ props3 . parseQueryString ;:==:var stringifyQuery:==:_ props3 . stringifyQuery ;
var tvdb = this . model . get ( ' tvdb_id ' ) ;:==:var auto_id:==:this . model . get ( ' auto_id ' ) ;
var plumber = require ( ' gulp - plumber ' ) ;:==:var filter:==:require ( ' gulp - filter ' ) ;
var getSnapDuration = t . getSnapDuration ;:==:var getSlotHeight:==:t . getSlotHeight ;
var dataZoomModel = this . dataZoomModel ;:==:var api:==:this . api ;
var maxZoomLevel = props . maxZoomLevel ;:==:var numZoomLevels:==:props . numZoomLevels ;
var events = require ( ' events ' ) ;:==:var has:==:require ( ' has ' ) ;
var groupedChunk = groupedChunksToRequest [ i ] ;:==:var begin:==:groupedChunk . beginChunk * this . chunkSize ;
var reactdomFrameScheduling = require ( ' reactdomFrameScheduling ' ) ;:==:var reactdomInjection:==:require ( ' reactdomInjection ' ) ;
var edgeWeakType = this . _ edgeWeakType ;:==:var edgeShortcutType:==:this . _ edgeShortcutType ;
var tpl = this . tpl ;:==:var buttons:==:this . button . buttons ;
var drawOrder = this . skeleton . drawOrder ;:==:var batcher:==:this . batcher ;
var toWorldPoint = orbitCameraInputMouse . toWorldPoint ;:==:var worldDiff:==:orbitCameraInputMouse . worldDiff ;
var replace = require ( ' rollup - plugin - replace ' ) ;:==:var inject:==:require ( ' rollup - plugin - inject ' ) ;
var formatStringProp = waterfallChart . formatStringProp ;:==:var categories:==:dataView . categorical . categories  |  |  [ ] ;
var api = imports . api ;:==:var cache:==:imports [ ' vfs . cache ' ] ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var testModule:==:require ( ' nativeModules ' ) ;
var node = this . node ;:==:var popup:==:this . _ _ popup ;
var semver = require ( ' semver ' ) ;:==:var mout:==:require ( ' mout ' ) ;
var Unit = math . type . Unit ;:==:var median:==:math . median ;
var createCallStatement = parseTreeFactory . createCallStatement ;:==:var createExpressionStatement:==:parseTreeFactory . createExpressionStatement ;
var validator = v . validator ;:==:var message:==:v . message ;
var dynCall_iiiiii = Module [ ' dynCall_iiiiii ' ] = asm [ ' dynCall_iiiiii ' ] ;:==:var dynCall_viii:==:Module [ ' dynCall_viii ' ]    asm [ ' dynCall_viii ' ] ;
var focusHeight = chart . focusHeight = chartHeight * . 7 ;:==:var contextHeight:==:chart . contextHeight    chartHeight * . 2 ;
var colors = require ( ' colors ' ) ;:==:var request:==:require ( ' request ' ) ;
var amber900 = exports . amber900 = ' # ff6f00 ' ;:==:var amberA100:==:exports . amberA100    ' # ffe57f ' ;
var ejs = require ( ' ejs ' ) ;:==:var exists:==:fs . existsSync  |  |  path . existsSync ;
var visualMapModel = this . visualMapModel ;:==:var dataInterval:==:this . _ dataInterval    visualMapModel . getSelected ( ) ;
var bufferView = runtime . gltf . bufferViews [ source . bufferView ] ;:==:var buffer:==:gltf2 . gltfUtils . getBufferFromBufferView ( runtime , bufferView , 0 , bufferView . byteLength , gltf2 . eComponentType . unsigned_byte ) ;
var rpc    = require ( ' pm2-axon - rpc ' ) ;:==:var async:==:require ( ' async ' ) ;
var defaultColor = this . view . defaultColor ;:==:var defaultBackground:==:this . view . defaultBackground ;
var fs   = require ( ' fs ' ) ;:==:var readFile:==:bluebird . promisify ( fs . readFile ) ;
var hours   = makeGetter ( ' hours ' ) ;:==:var days:==:makeGetter ( ' days ' ) ;
var x1 = this . x1 _ ;:==:var x2:==:this . x2 _ ;
var $ element = this . $ element ;:==:var $ pureview:==:this . $ pureview ;
var path = uiSourceCode . path ( ) ;:==:var sourceFileId:==:webInspector . breakpointManager . _ sourceFileId ( uiSourceCode ) ;
var divisionByZero = fraction [ ' divisionByZero ' ] = createError ( ' divisionByZero ' ) ;:==:var invalidParameter:==:fraction [ ' invalidParameter ' ]    createError ( ' invalidParameter ' ) ;
var sol = stream . sol ( )  |  |  state . afterSection ;:==:var eol:==:stream . eol ( ) ;
var sigBytes = wordArray . sigBytes ;:==:var map:==:this . _ map ;
var options = opt_options  |  |  ;:==:var callback:==:opt_callback  |  |  goog . nullFunction ;
var createCallExpression = parseTreeFactory . createCallExpression ;:==:var createCascadeExpression:==:parseTreeFactory . createCascadeExpression ;
var draftRemovableWord = require ( ' draftRemovableWord ' ) ;:==:var editorState:==:require ( ' editorState ' ) ;
var sleep = ( this . sleepTimeThreshold ! = = infinity ) ;:==:var bodies:==:this . bodies ;
var data = this . data ;:==:var elementSize:==:this . elementSize ;
var endPixel = this . endPixel _ ;:==:var px:==:' px ' ;
var visualDataRoleKind = powerbi . visualDataRoleKind ;:==:var dataViewObjects:==:powerbi . dataViewObjects ;
var success = Promise . promisify ( successNode ) ;:==:var syncSuccess:==:promise . promisify ( syncSuccessNode ) ;
var settings    = this . settings ;:==:var codeMirror:==:this . codeMirror ;
var init = program . init ;:==:var update:==:program . update ;
var isObject = leafletHelpers . isObject ;:==:var obtainEffectiveMapId:==:leafletHelpers . obtainEffectiveMapId ;
var aceAdapter = firepad . aceAdapter ;:==:var firebaseAdapter:==:firepad . firebaseAdapter ;
var slice = Array . prototype . slice ;:==:var hasOwn:==:object . prototype . hasOwnProperty ;
var element = animationDetails . element ;:==:var options:==:animationDetails . options  |  |  ;
var asyncTransformer = traceur . codegeneration . generator . asyncTransformer ;:==:var createForOfStatement:==:traceur . codegeneration . parseTreeFactory . createForOfStatement ;
var path = getRealPath ( iter . path ) ;:==:var dirname:==:utils . dirname ( path ) ;
var x = ' x ' ;:==:var derivedDataProperty:==:' derivedDataProperty ' ;
var parameterList = this . transformAny ( tree . parameterList ) ;:==:var typeAnnotation:==:this . transformAny ( tree . typeAnnotation ) ;
var deepPurple200 = exports . deepPurple200 = ' # b39ddb ' ;:==:var deepPurple300:==:exports . deepPurple300    ' # 9575cd ' ;
var checkpointInterval = opts . checkpointInterval  |  |  null ;:==:var maxMessages:==:opts . maxMessages  |  |  infinity ;
var start = me . options . start ! = undefined ? me . options . start : range . min ;:==:var end:==:me . options . end !   undefined ? me . options . end : range . max ;
var createStatementList = parseTreeFactory . createStatementList ;:==:var createThrowStatement:==:parseTreeFactory . createThrowStatement ;
var name = headers [ i ] [ ' name ' ] ;:==:var value:==:headers [ i ] [ ' value ' ] ;
var planes = this . planes ;:==:var me:==:m . elements ;
var isScrolling = _ state . isScrolling ;:==:var scrollTop:==:_ state . scrollTop ;
var smoothPlotter = dygraph . smoothPlotter ;:==:var getControlPoints:==:smoothPlotter . _ getControlPoints ;
var position1 = property . getValue ( time , position1Scratch ) ;:==:var position2:==:property . getValue ( julianDate . addSeconds ( time , step , timeScratch ) , position2Scratch ) ;
var key = keys [ i ] ;:==:var li:==:createElement ( ' li ' , '' ) ;
var forSubtree = scope . forSubtree ;:==:var forDocumentTree:==:scope . forDocumentTree ;
var t = SVG . TeX . rule_thickness * scale ;:==:var h:==:( sub |  | presub ) . h , d    ( sup |  | presup ) . d ;
var passphrase = options . passphrase  |  |  null ;:==:var padding:==:options . padding  |  |  defaultPadding ;
var opacity = _ props . opacity ;:==:var style:==:_ props . style ;
var typescript = require ( ' gulp - typescript ' ) ;:==:var assign:==:Object . assign  |  |  require ( ' object . assign ' ) ;
var message = evt . detail . message  |  |  '' ;:==:var type:==:evt . detail . promptType  |  |  evt . detail . type ;
var utils = require ( ' keystone - utils ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' keystone : core : list : getSearchFilters ' ) ;
var HOVERARROWSIZE = constants . HOVERARROWSIZE ;:==:var HOVERTEXTPAD:==:constants . HOVERTEXTPAD ;
var parent = list . parent ( ' . k - animation - container ' ) ;:==:var height:==:that . options . height ;
var maxSimple = natives . importNow ( ' maxSimple ' ) ;:==:var minSimple:==:natives . importNow ( ' minSimple ' ) ;
var pm2 = require ( ' pm2 ' ) ;:==:var nodemailer:==:require ( ' nodemailer ' ) ;
var util = require ( ' util ' ) ;:==:var Pins:==:Board . Pins ;
var assert = util . assert ;:==:var assertionError:==:util . assertionError ;
var naturalWidth = image . naturalWidth ;:==:var naturalHeight:==:image . naturalHeight ;
var fov = camera . frustum . fov ;:==:var viewport:==:this . _ viewport ;
var options = that . options ;:==:var template:==:options . template ;
var formatString = visuals . valueFormatter . getFormatString ( metadataColumn , gauge . formatStringProp ) ;:==:var precision:==:visuals . dataLabelUtils . getLabelPrecision ( dataLabelSettings . precision , formatString ) ;
var outlineWidth = polylineVolume . outlineWidth ;:==:var cornerType:==:polylineVolume . cornerType ;
var iq = $ iq ( type : ' set ' ) . c ( ' query ' , xmlns : ' jabber : iq : roster ' ) . c ( ' item ' , jid : jid , subscription : ' remove ' ) ;:==:var suc:==:options . success  |  |  emptyFn ;
var s = sources [ sourceIndex++ % sources . length ] ;:==:var f:==:flags [ flagIndex++ % flags . length ] ;
var treeWriter = traceur . outputgeneration . treeWriter ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var log4js = require ( ' log4js ' ) ;:==:var async:==:require ( ' async ' ) ;
var sampler = rendererSamplers [ texture . sampler ] ;:==:var internalFormat:==:gltfTexture . internalFormat ;
var dynCall_iiiii = Module [ ' dynCall_iiiii ' ] = asm [ ' dynCall_iiiii ' ] ;:==:var dynCall_fii:==:Module [ ' dynCall_fii ' ]    asm [ ' dynCall_fii ' ] ;
var left = region . left ;:==:var top:==:region . top ;
var mout = require ( ' mout ' ) ;:==:var multiline:==:require ( ' multiline ' ) . stripIndent ;
var high = encodedP . high ;:==:var low:==:encodedP . low ;
var eventTime = $ ( ' # eventTimeValue ' ) ;:==:var eventDate:==:$ ( ' # eventDateValue ' ) ;
var replacementIndex = rollup . replacementIndexes [ k ] ;:==:var command:==:commands [ replacementIndex ] ;
var http = require ( ' http ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var color = colors [ feature . get ( ' PLT ' ) ] ;:==:var style:==:styleCache [ color ] ;
var w = Math . min ( width , $ ( window ) . width ( ) -10 ) ;:==:var h:==:Math . min ( height , $ ( window ) . height ( ) -80 ) ;
var value = element ( by . binding ( ' value  |  date : ' yyyy - MM - ddTHH : mm : ss ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var ny = vNode . getElementsByTagName ( ' ny ' ) [ 0 ] . textContent ;:==:var nz:==:vNode . getElementsByTagName ( ' nz ' ) [ 0 ] . textContent ;
var asserts = goog . require ( ' goog . asserts ' ) ;:==:var dateIntervalSymbols:==:goog . require ( ' goog . i18n . dateIntervalSymbols ' ) ;
var temporal = require ( ' temporal ' ) ;:==:var minimist:==:require ( ' minimist ' ) ;
var getMaxTime = t . getMaxTime ;:==:var calendar:==:t . calendar ;
var options = _ ref6 . options ;:==:var maxHeight:==:this . props . maxHeight ;
var diag = math . diag ;:==:var eye:==:math . eye ;
var group = this . itemSet . groupFromTarget ( event ) ;:==:var customTime:==:customTime . customTimeFromTarget ( event ) ;
var params = ob . params ;:==:var app_id:==:params . qstring . app_id ;
var cfg = this . cfg ;:==:var iv:==:cfg . iv ;
var label = item . label ;:==:var show:==:entity . isShowing & & entity . isAvailable ( time ) & & property . getValueOrDefault ( labelGraphics . _ show , time , true ) ;
var t1h = t1h + chh + ( ( t1l > > > 0 ) < ( chl > > > 0 ) ? 1 : 0 ) ;:==:var t1l:==:t1l + Kil ;
var cpy2 = shape . cpy2 ;:==:var percent:==:shape . percent ;
var y = itemLayout . y ;:==:var width:==:itemLayout . width ;
var domQuery = blocks . domQuery ( domElement ) ;:==:var context:==:blocks . context ( domElement ) ;
var demo = demos [ i ] ;:==:var canvas:==:demo . canvas ;
var tag = el . prop ( ' tagName ' ) ;:==:var type:==:( el . prop ( ' type ' )  |  |  ' text ' ) . toLowerCase ( ) ;
var toastAndroid = require ( ' toastAndroid ' ) ;:==:var platform:==:require ( ' platform ' ) ;
var lime500 = exports . lime500 = ' # cddc39 ' ;:==:var lime600:==:exports . lime600    ' # c0ca33 ' ;
var _ sass_compile_emscripten = Module [ ' _ sass_compile_emscripten ' ] = asm [ ' _ sass_compile_emscripten ' ] ;:==:var _ memmove:==:Module [ ' _ memmove ' ]    asm [ ' _ memmove ' ] ;
var d = rejectBuiltInSoon ( ' rejected - d ' , 20 ) ;:==:var e:==:fulfillThenableSoon ( ' e ' , 40 ) ;
var autoHeight = _ props4 . autoHeight ;:==:var className:==:_ props4 . className ;
var debug = require ( ' debug ' ) ( ' interface : watchdog ' ) ;:==:var shelljs:==:require ( ' shelljs ' ) ;
var step = stepResult . step ;:==:var snippet:==:snippetBuilder . build ( step ) ;
var visibleMin = nodeModel . get ( ' visibleMin ' ) ;:==:var len:==:orderedChildren . length ;
var chunkLengths = this . chunkLengths ;:==:var i d:==:elementsData . i d ( wrapper ) ;
var start = codeMirror . posFromIndex ( interval . start ) ;:==:var end:==:codeMirror . posFromIndex ( interval . end ) ;
var AFTER_GROUP_ID = nconf . get ( ' AFTER_GROUP_ID ' ) ;:==:var BEFORE_GROUP_ID:==:nconf . get ( ' BEFORE_GROUP_ID ' ) ;
var barcodeSymbologies = windows . devices . pointOfService . barcodeSymbologies ;:==:var barcodeSymbologyDecodeLengthKind:==:windows . devices . pointOfService . barcodeSymbologyDecodeLengthKind ;
var emptyFunction = require ( ' emptyFunction ' ) ;:==:var normalizeWheel:==:require ( ' normalizeWheel ' ) ;
var ownerDocument = hostContainerInfo . _ ownerDocument ;:==:var node:==:ownerDocument . createComment ( nodeValue ) ;
var Image = require ( ' Image ' ) ;:==:var Text:==:require ( ' f8Text ' ) ;
var errorClient = raygun . errorClient ;:==:var warningClient:==:raygun . warningClient ;
var write = process . stdout . write ;:==:var exit:==:process . exit ;
var getColumnHeader = window . getColumnHeader ;:==:var iNumberOfCols:==:window . iNumberOfCols ;
var old = model . get ( ' oldpath ' ) ;:==:var name:==:util . extractFilename ( old ) [ 1 ] ;
var startLine = messageObject . params . startLine + 3 ;:==:var endLine:==:messageObject . params . endLine ;
var ev = event . originalEvent  |  |  event ;:==:var timeStamp:==:ev . $ manualTimeStamp  |  |  ev . timeStamp  |  |  date . now ( ) ;
var x = capInsets . x , y = capInsets . y ;:==:var width:==:capInsets . width , height    capInsets . height ;
var util = require ( ' util ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var shelljs   = require ( ' shelljs ' ) ;:==:var path:==:require ( ' path ' ) ;
var columnStopIndex = _ ref . columnStopIndex ;:==:var rowStartIndex:==:_ ref . rowStartIndex ;
var height = ellipse . height ;:==:var extrudedHeight:==:ellipse . extrudedHeight ;
var videoSendInitialBitrate = options . videoSendInitialBitrate ;:==:var audioSendCodec:==:options . audioSendCodec  |  |  '' ;
var fs = require ( ' fs - extra ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var regex_allowed = S . regex_allowed ;:==:var i:==:find_eol ( ) , ret ;
var touch = e . type . indexOf ( ' touch ' ) = = = 0 ;:==:var mouse:==:e . type . indexOf ( ' mouse ' )      0 ;
var T_COMMENT = Sk . Tokenizer . T_COMMENT ;:==:var T_NL:==:Sk . Tokenizer . T_NL ;
var name = encodeuriComponent ( _ this2 . nameInput . value ) ;:==:var description:==:encodeuriComponent ( _ this2 . descriptionInput . value ) ;
var scheduler = instance . get ( ' scheduler ' ) ;:==:var viewDate:==:dateMath . safeClearTime ( scheduler . get ( ' viewDate ' ) ) ;
var join = path . join ;:==:var resolve:==:path . resolve ;
var width = sprite . width ;:==:var height:==:sprite . height ;
var assert   = require ( ' chai ' ) . assert ;:==:var sinon:==:require ( ' sinon ' ) ;
var name = symbol . name ;:==:var tree:==:symbol . tree ;
var ghost = params . ghost = = = true ;:==:var constrain:==:ghost  |  |  ( params . constrain      true ) ;
var size = require ( ' gulp - size ' ) ;:==:var streamify:==:require ( ' gulp - streamify ' ) ;
var forOfTransformer = traceur . codegeneration . forOfTransformer ;:==:var freeVariableChecker:==:traceur . semantics . freeVariableChecker ;
var spawnSync = require ( ' child_process ' ) . spawnSync ;:==:var tslint:==:require ( ' gulp - tslint ' ) ;
var negative = $ . data ( this , ' numeric . negative ' ) ;:==:var val:==:this . value ;
var callback = options . callback  |  |  function ( ) ;:==:var scope:==:options . scope  |  |  window ;
var currentScale = this . _ currentScale ;:==:var currentScaleValue:==:this . _ currentScaleValue ;
var target = options . target ;:==:var content:==:options . content ;
var shape    = pair . value . shape ;:==:var newHeight:==:pair . value . newHeight ;
var rectangle = options . rectangle ;:==:var granularity:==:defaultValue ( options . granularity , cesiumMath . radians_per_degree ) ;
var compareExchange = stdlib . atomics . compareExchange ;:==:var fround:==:stdlib . math . fround ;
var one = props . one ;:==:var many:==:props . many ;
var scope = angular . element ( $ ( ' body ' ) ) . scope ( ) ;:==:var i d:==:obj . i d . split ( ' . ' ) ;
var Formatting = jsCommon . formatting ;:==:var regExpExtensions:==:jsCommon . regExpExtensions ;
var acquit = require ( ' acquit ' ) ;:==:var hl:==:require ( ' highlight . js ' ) ;
var data = self . data ;:==:var el:==:self . el ;
var callExpression = traceur . syntax . trees . callExpression ;:==:var cascadeExpression:==:traceur . syntax . trees . cascadeExpression ;
var transforms = ol . proj . transforms . cache _ ;:==:var transform:==:transforms [ sourceCode ] [ destinationCode ] ;
var viewManagement = windows . ui . viewManagement ;:==:var applicationViewWindowingMode:==:viewManagement . applicationViewWindowingMode ;
var lunr = require ( ' lunr ' ) ;:==:var Entities:==:require ( ' html - entities ' ) . allHtmlEntities ;
var error = resp . error ;:==:var req:==:resp . request ;
var enabled = passedArguments [ 0 ] . enabled ;:==:var newPin:==:passedArguments [ 0 ] . newPin ;
var v = this . v ;:==:var w:==:w . v ;
var cx = posInfo . cx ;:==:var cy:==:posInfo . cy ;
var createNullLiteral = parseTreeFactory . createNullLiteral ;:==:var createObjectLiteralExpression:==:parseTreeFactory . createObjectLiteralExpression ;
var db = new PouchDB ( dbs . name ) ;:==:var remote:==:new PouchDB ( dbs . remote ) ;
var missingDataException = sharedUtil . missingDataException ;:==:var createPromiseCapability:==:sharedUtil . createPromiseCapability ;
var home = this . peekState ( ) . home ;:==:var superSet:==:this . getRuntimeExpression ( ' superSet ' ) ;
var orient = visualMapModel . get ( ' orient ' ) ;:==:var inverse:==:visualMapModel . get ( ' inverse ' ) ;
var promise = follower . _ promise0 ;:==:var receiver:==:follower . _ receiverAt ( 0 ) ;
var charSpacing = current . charSpacing ;:==:var wordSpacing:==:current . wordSpacing ;
var layout = imports . layout ;:==:var tree:==:imports . tree ;
var pwd = options . pwd  |  |  '' ;:==:var appName:==:this . context . appName ;
var _ testSetjmp = module [ ' _ testSetjmp ' ] = asm [ ' _ testSetjmp ' ] ;:==:var _ _ global__i_a:==:module [ ' _ _ global__i_a ' ]    asm [ ' _ _ global__i_a ' ] ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var text , heading1 , paragraph:==:require ( ' f8Text ' ) ;
var AWAIT_EXPRESSION = ' AWAIT_EXPRESSION ' ;:==:var BINARY_EXPRESSION:==:' BINARY_EXPRESSION ' ;
var Status = goog . net . streams . xhrStreamReader . status ;:==:var eventType:==:goog . net . streams . nodeReadableStream . eventType ;
var Plugin = imports . Plugin ;:==:var format:==:imports . format ;
var ace = imports . ace ;:==:var configure:==:imports . configure ;
var watcher = imports . watcher ;:==:var commands:==:imports . commands ;
var categorical = dataView . categorical ;:==:var categories:==:categorical . categories  |  |  [ ] ;
var createArgumentList = traceur . codegeneration . parseTreeFactory . createArgumentList ;:==:var createBlock:==:traceur . codegeneration . parseTreeFactory . createBlock ;
var hosts = test . hosts ;:==:var options:==:test . options ;
var alias = this . alias ;:==:var iterator:==:this . iterator ;
var getRangesForDraftEntity = require ( ' getRangesForDraftEntity ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var x = Math . floor ( rect . x * pixelWidth ) ;:==:var y:==:math . floor ( rect . y * pixelHeight ) ;
var lastFocus = apf . menu . lastFocussed ;:==:var opener:==:this . opener ;
var cyanA700 = exports . cyanA700 = ' # 00b8d4 ' ;:==:var teal50:==:exports . teal50    ' # e0f2f1 ' ;
var contextOptions = options . contextOptions ;:==:var creditContainer:==:options . creditContainer ;
var extent = this . _ extent ;:==:var scale:==:this . scale ;
var isRTL = this . _ get ( inst , ' isRTL ' ) ;:==:var showButtonPanel:==:this . _ get ( inst , ' showButtonPanel ' ) ;
var l = Observable . never ( ) ;:==:var r:==:Observable . never ( ) ;
var vizion = require ( ' vizion ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var rule = Handle . rule ( name ) ;:==:var type:==:Util . type ( template ) ;
var bottom = this . el . bottom ;:==:var top:==:this . el . top ;
var y = Math . floor ( rect . y * pixelHeight ) ;:==:var w:==:math . floor ( rect . width * pixelWidth ) ;
var Index = math . type . Index ;:==:var Range:==:math . type . Range ;
var ErrorA = function ErrorA ( ) ;:==:var ErrorB:==:function ErrorB ( ) ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var Agent:==:require ( ' smith ' ) . Agent ;
var emberNew = blueprintHelpers . emberNew ;:==:var emberGenerate:==:blueprintHelpers . emberGenerate ;
var green100 = exports . green100 = ' # c8e6c9 ' ;:==:var green200:==:exports . green200    ' # a5d6a7 ' ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var reactServerUpdateQueue:==:require ( ' reactServerUpdateQueue ' ) ;
var e = document . getElementById ( ' cronExpression ' ) ;:==:var value:==:e . selectedItem ? e . selectedItem . value : e . value ;
var Log = require ( ' grunt - legacy - log ' ) . Log ;:==:var assert:==:require ( ' assert ' ) ;
var g = m . g ;:==:var h:==:m . h ;
var castShadows = shadowMode . castShadows ( primitive . shadows ) ;:==:var receiveShadows:==:shadowMode . receiveShadows ( primitive . shadows ) ;
var isExpressionTransformer = traceur . codegeneration . isExpressionTransformer ;:==:var moduleTransformer:==:traceur . codegeneration . moduleTransformer ;
var data = this . data ;:==:var hasHighlights:==:data & & data . hasHighlights ;
var updatable = options . updatable ;:==:var sideOrientation:==:this . updateSideOrientation ( options . sideOrientation , scene ) ;
var Track = require ( ' facade ' ) . Track ;:==:var each:==:require ( ' each ' ) ;
var source = channelManager . currentTuners . tuner1 . sources . source1 ;:==:var channel:==:source . channels [ 1 ] ;
var p = this . positions [ index ] ;:==:var b:==:glyph . bbox ;
var mongo = require ( ' mongoskin ' ) ;:==:var async:==:require ( ' async ' ) ;
var left = this . _ getPropertyValueAsPx ( computedStyle , componentName + ' -left ' + suffix ) ;:==:var top:==:this . _ getPropertyValueAsPx ( computedStyle , componentName + ' -top ' + suffix ) ;
var snap = snaps [ i ] ;:==:var offsetLeft:==:snap . offsetLeft ;
var Plugin = imports . Plugin ;:==:var Form:==:imports . Form ;
var TESTING_HOST = process . env . AMP_TESTING_HOST ;:==:var target:==:argv . target  |  |  TESTING_HOST ;
var html = doc . appendChild ( doc . createElementns ( ns , ' html ' ) ) ;:==:var head:==:html . appendChild ( doc . createElementns ( ns , ' head ' ) ) ;
var vim = cm . state . vim ;:==:var inReplay:==:vimGlobalState . macroModeState . inReplay ;
var limit = options . limit ;:==:var hint:==:options . hint ;
var Class = kendo . Class ;:==:var extend:==:$ . extend ;
var deepOrange500 = exports . deepOrange500 = ' # ff5722 ' ;:==:var deepOrange600:==:exports . deepOrange600    ' # f4511e ' ;
var password = _ . get ( options , ' password ' ) ;:==:var hostPort:==:_ . get ( options , ' hostPort ' ) ;
var rQ = this . _ sock . get_rQ ( ) ;:==:var rQi:==:this . _ sock . get_rqi ( ) ;
var cancelable = typeof options . cancelable ! = ' undefined ' ? options . cancelable : ( type ! = ' touchcancel ' ) ;:==:var view:==:typeof options . view !   ' undefined ' ? options . view : window ;
var selectors = $ animateProvider . $ $ selectors ;:==:var isArray:==:angular . isArray ;
var ratios = this . _ ratios . get ( ) ;:==:var direction:==:this . options . direction ;
var flush = Caml_io . caml_ml_flush ;:==:var output_char:==:Caml_io . caml_ml_output_char ;
var index = slot . index ;:==:var simCard:==:slot . simCard ;
var gulp = require ( ' gulp ' ) ;:==:var insert:==:require ( ' gulp - insert ' ) ;
var editor = this . editor ;:==:var debug:==:editor . config . debug ;
var a = merge ( args , arguments ) ;:==:var c:==:this instanceof bound ? this : context ;
var domain = AWS . util . domain ;:==:var jmespath:==:require ( ' jmespath ' ) ;
var selection = selections [ i ] ;:==:var line:==:codeMirror . getLine ( selection . head . line ) ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var todo:==:require ( ' gulp - todo ' ) ;
var unicode = glyph [ i ] . getAttribute ( ' unicode ' ) ;:==:var name:==:glyph [ i ] . getAttribute ( ' glyph - name ' ) ;
var format = defaultValue ( options . format , renderbufferFormat . rgba4 ) ;:==:var width:==:defined ( options . width ) ? options . width : gl . drawingBufferWidth ;
var editor = env . editor ;:==:var session:==:editor . session ;
var isRtl = kendo . support . isRtl ( that . wrapper ) ;:==:var visible:==:that . popup . visible ( ) ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var createStatementList:==:parseTreeFactory . createStatementList ;
var payloadBatch = payloadInfo . payloadBatch ;:==:var snapToValue:==:payloadInfo . snapToValue ;
var createBinaryOperator = traceur . codegeneration . parseTreeFactory . createBinaryOperator ;:==:var createCallExpression:==:traceur . codegeneration . parseTreeFactory . createCallExpression ;
var projectId = webInspector . networkProject . projectId ( this . target ( ) , projecturl , isContentScripts ) ;:==:var projectType:==:isContentScripts ? webInspector . projectTypes . contentScripts : webInspector . projectTypes . network ;
var extname = pathFn . extname ( path ) ;:==:var name:==:path . substring ( 0 , path . length - extname . length ) ;
var done = self . _ done ( resolve , self ) ;:==:var detach:==:self . _ simpleBind ( self . detach , self ) ;
var logList = cc . _ logList ;:==:var doc:==:document ;
var scrollToColumn = _ state . scrollToColumn ;:==:var scrollToRow:==:_ state . scrollToRow ;
var x = this . _ tempPoint . x ;:==:var y:==:this . _ tempPoint . y ;
var dim = _ dim  |  |  false ;:==:var text:==:_ text  |  |  ' Warning ' ;
var rule = rules [ j ] ;:==:var cssText:==:rule . cssText ;
var s = itemData . start . valueOf ( ) ;:==:var e:==:' end ' in itemData ? itemData . end . valueOf ( ) : itemData . start . valueOf ( ) ;
var arb = arbiters [ i ] ;:==:var a:==:arb . body_a , b    arb . body_b ;
var key = this . parseProperty ( pair , ' * ' , ' key ' ) ;:==:var styleUrl:==:this . parseProperty ( pair , ' * ' , ' styleUrl ' ) ;
var r = results [ i ] ;:==:var ex:==:expected [ i ] ;
var deepOrange200 = exports . deepOrange200 = ' # ffab91 ' ;:==:var deepOrange300:==:exports . deepOrange300    ' # ff8a65 ' ;
var edgeSettings = tablixUtils . edgeSettings ;:==:var edgeType:==:tablixUtils . edgeType ;
var selectionManager = powerbi . visuals . utility . selectionManager ;:==:var createEnumType:==:powerbi . createEnumType ;
var leave = ref . leave ;:==:var afterLeave:==:ref . afterLeave ;
var vertices = geometry . vertices ;:==:var faceVertexUvs:==:geometry . faceVertexUvs ;
var docsSidebar = require ( ' docsSidebar ' ) ;:==:var ejectBanner:==:require ( ' ejectBanner ' ) ;
var button = document . createElement ( ' button ' ) ;:==:var option:==:document . createElement ( ' option ' ) ;
var references = variable . references ;:==:var identifier:==:variable . identifiers [ 0 ] ;
var marked = require ( ' marked ' ) ;:==:var diff:==:require ( ' diff ' ) ;
var tooltipManager = powerbi . visuals . tooltipManager ;:==:var dataLabelUtils:==:powerbi . visuals . dataLabelUtils ;
var height = this . height ;:==:var numComps:==:this . numComps ;
var shell = require ( ' shelljs ' ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var pid = this . pid . toString ( 16 ) ;:==:var increment:==:this . increment . toString ( 16 ) ;
var Flags = reactdomComponentFlags ;:==:var deleteListener:==:eventPluginHub . deleteListener ;
var insert = require ( ' gulp - insert ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var usageSilentSms = mockasyncStorage . keys . usageSilentSms ;:==:var alarmId:==:usageSilentSms [ message . type ] . alarmId ;
var shadowRoot = scope . wrappers . shadowRoot ;:==:var assert:==:scope . assert ;
var zindex = options . zindex ;:==:var allowClose:==:options . allowClose ;
var totalSize = this . _ totalSizedip ( ) ;:==:var zoomFactor:==:this . _ constraintsInDip ? 1 : webInspector . zoomManager . zoomFactor ( ) ;
var err = _ ref2 . err ;:==:var subscriber:==:_ ref2 . subscriber ;
var createLegend = powerbi . visuals . createLegend ;:==:var tooltipManager:==:powerbi . visuals . tooltipManager ;
var sax = require ( ' sax ' ) ;:==:var inherits:==:require ( ' util ' ) . inherits ;
var controllerHost = this . _ controllerHost ;:==:var group:==:this . group ;
var g = effect . got ? effect . got : effect . gets ;:==:var p:==:effect . paid ? effect . paid : effect . pays ;
var optionRenderer = _ ref . optionRenderer ;:==:var options:==:_ ref . options ;
var errorObj = util . errorObj ;:==:var tryCatch1:==:util . tryCatch1 ;
var nconf = require ( ' nconf ' ) ;:==:var validator:==:require ( ' validator ' ) ;
var through = require ( ' through2 ' ) ;:==:var test:==:require ( ' tap ' ) . test ;
var lightBlue800 = exports . lightBlue800 = ' # 0277bd ' ;:==:var lightBlue900:==:exports . lightBlue900    ' # 01579b ' ;
var attrs = data . attrs ;:==:var props:==:data . props ;
var version = sandbox . helpers . set ( ' version ' ) ;:==:var runner:==:sandbox . helpers . runner ;
var expect = require ( ' chai ' ) . expect ;:==:var assert:==:require ( ' assert ' ) ;
var w = menuView . $ el . width ( ) ;:==:var h:==:menuView . $ el . height ( ) ;
var table = this . dom _ . createElement ( ' table ' ) ;:==:var thead:==:this . dom _ . createElement ( ' thead ' ) ;
var value = this . arg ( ' value ' ) ;:==:var selected:==:this . arg ( ' selected ' ) ;
var x = p . x ;:==:var y:==:p . y ;
var ngModel     = sfBuilderProvider . builders . ngModel ;:==:var ngModelOptions:==:sfBuilderProvider . builders . ngModelOptions ;
var pushState = history . pushState ;:==:var replaceState:==:history . replaceState ;
var commentDirectivesEnabled = commentDirectivesEnabledConfig ;:==:var cssClassDirectivesEnabled:==:cssClassDirectivesEnabledConfig ;
var iks = mesh . geometry . iks ;:==:var bones:==:mesh . skeleton . bones ;
var bufferView = runtime . gltf . bufferViews [ accessor . bufferView ] ;:==:var byteOffset:==:accessor . byteOffset  |  |  0 ;
var COMMENT = 8 ;:==:var HCRC:==:9 ;
var flateStream = coreStream . flateStream ;:==:var jbig2Stream:==:coreStream . jbig2Stream ;
var stateMachine = traceur . syntax . trees . stateMachine ;:==:var asyncState:==:traceur . codegeneration . generator . asyncState ;
var editor = tab . editor ;:==:var string:==:JSON . stringify ( event . data ) ;
var assert = require ( ' assert ' ) ;:==:var jsdom:==:require ( ' jsdom ' ) ;
var x = xy . x  |  0 ;:==:var y:==:xy . y  |  0 ;
var url = require ( ' url ' ) . parse ( request . url , true , true ) ;:==:var query:==:url . query ;
var port = ! socket ? ( options . redis . port  |  |  6379 ) : null ;:==:var host:==:! socket ? ( options . redis . host  |  |  ' 127 . 0 . 0 . 1 ' ) : null ;
var _ im_get_predicts = Module [ ' _ im_get_predicts ' ] = asm [ ' _ im_get_predicts ' ] ;:==:var _ free:==:Module [ ' _ free ' ]    asm [ ' _ free ' ] ;
var tile = tiles [ j ] [ i ] ;:==:var ch:==:this . charMap [ tile . ch ] ;
var lineNumber = math . max ( 0 , call . lineNumber - 1 )  |  |  0 ;:==:var columnNumber:==:math . max ( 0 , call . columnNumber - 1 )  |  |  0 ;
var value = ( item . getAttribute ( ' data - value ' )  |  |  '' ) . toLowerCase ( ) ;:==:var tags:==:( item . getAttribute ( ' data - tags ' )  |  |  '' ) . toLowerCase ( ) ;
var commands = imports . commands ;:==:var panels:==:imports . panels ;
var words = rs . words ( ) ;:==:var pos:==:rs . pos ( ) ;
var Util = sharedUtil . util ;:==:var bytesToString:==:sharedUtil . bytesToString ;
var queryHash = queryTools . queryHash ;:==:var matchesQuery:==:queryTools . matchesQuery ;
var geometryUpdater = this . _ geometryUpdater ;:==:var entity:==:geometryUpdater . _ entity ;
var assert = require ( ' assert ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var toString = objProto . toString ;:==:var hasOwnProperty:==:objProto . hasOwnProperty ;
var axisHelper = powerbi . visuals . axisHelper ;:==:var axisScale:==:powerbi . visuals . axisScale ;
var top = ~dir . indexOf ( ' top ' )   & & ' top ' ;:==:var bottom:==:~dir . indexOf ( ' bottom ' ) & & ' bottom ' ;
var match = matchSpec [ idx ] ;:==:var version:==:match . version ;
var l = Expression . lambda ( e ) ;:==:var c:==:l . compileToFunction ( ) ;
var type = group . type ;:==:var emergency:==:group . emergency ;
var updated = ref . updated ;:==:var deactivated:==:ref . deactivated ;
var ADD_TODO_ERROR = exports . ADD_TODO_ERROR = ' ADD_TODO_ERROR ' ;:==:var ADD_TODO_OK:==:exports . ADD_TODO_OK    ' ADD_TODO_OK ' ;
var fieldType = goog . labs . testing . jsonFuzzing . fieldType _ ;:==:var random:==:this . random _ . random ( ) ;
var M = CMD . M ;:==:var C:==:CMD . C ;
var controllerEuler = this . controllerEuler ;:==:var deltaControllerPosition:==:this . deltaControllerPosition ;
var yaml = require ( ' yamljs ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var tryCatchApply = util . tryCatchApply ;:==:var rangeError:==:errors . rangeError ;
var storePurchaseStatus = windows . services . store . storePurchaseStatus ;:==:var storeConsumableStatus:==:windows . services . store . storeConsumableStatus ;
var    MATCH = 25 ;:==:var    LIT:==:26 ;
var options = opt_options  |  |  ;:==:var params:==:options . params  |  |  ;
var spectrumHelper = this . editablePane ( ) & & this . editablePane ( ) . _ spectrumHelper ;:==:var spectrum:==:spectrumHelper ? spectrumHelper . spectrum ( ) : null ;
var expectedUnsafeUrl = params . expectedUnsafeUrl ;:==:var expectedNewWindow:==:params . expectedNewWindow ;
var errorArea = options . errorArea ;:==:var relocator:==:options . relocator ;
var w = rect . width ;:==:var h:==:rect . height ;
var reactBrowserEventEmitter = require ( ' reactBrowserEventEmitter ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var s = 1 - x * isx ;:==:var a:==:1 - 2 * Math . min ( l * s , ( 1 - l ) * s ) ;
var internalInterleavedLength = config . internalInterleavedLength ;:==:var desiredSampRate:==:config . desiredSampRate ;
var required = element ( by . binding ( ' form . input . $ error . required ' ) ) ;:==:var model:==:element ( by . binding ( ' model ' ) ) ;
var a = _ . extend ( , Backbone . Events ) ;:==:var b:==:_ . extend ( , Backbone . Events ) ;
var o = new operatorNode ( ' + ' , ' add ' , [ a , x ] ) ;:==:var n:==:new functionAssignmentNode ( ' f ' , [ name : ' x ' , type : ' number ' ] , o ) ;
var chai = require ( ' chai ' ) ;:==:var expect:==:chai . expect ;
var session    = zombie_array [ index ] [ ' session ' ] ;:==:var browser_name:==:zombie_array [ index ] [ ' browser_name ' ] ;
var oLang = oSettings . oLanguage ;:==:var sZero:==:oLang . sZeroRecords ;
var which = require ( ' which ' ) ;:==:var proxyquire:==:require ( ' proxyquire ' ) . noCallThru ( ) . noPreserveCache ( ) ;
var sourceRoot = util . getArg ( sourceMap , ' sourceRoot ' , null ) ;:==:var sourcesContent:==:util . getArg ( sourceMap , ' sourcesContent ' , null ) ;
var order = $ scope . order ;:==:var currency:==:order . first_currency ;
var a = i d : 1 , name : ' a ' ;:==:var b:==:i d : 2 , name : ' b ' ;
var React = require ( ' React ' ) ;:==:var reactNative:==:require ( ' reactNative ' ) ;
var u = ( a . yuv_p _ ) ;:==:var v:==:( a . yuv_p_off + bG ) ;
var path = require ( ' path ' ) ;:==:var nock:==:require ( ' nock ' ) ;
var maxSatisfying = semver . maxSatisfying ;:==:var resourceNotFoundError:==:errors . resourceNotFoundError ;
var power = opt_power  |  |  2 ;:==:var maxResolution:==:this . maxResolution _ ;
var createParenExpression = parseTreeFactory . createParenExpression ;:==:var createVariableDeclaration:==:parseTreeFactory . createVariableDeclaration ;
var controller = current . controller ;:==:var scope:==:current . scope ;
var before = test . before ;:==:var after:==:test . after ;
var step = data . step ;:==:var tour:==:data . tour ;
var yr = this . yr ;:==:var kl:==:this . kl ;
var dynCall_iid = Module [ ' dynCall_iid ' ] = asm [ ' dynCall_iid ' ] ;:==:var dynCall_viiiiiii:==:Module [ ' dynCall_viiiiiii ' ]    asm [ ' dynCall_viiiiiii ' ] ;
var vertexCacheOptimize = parameters . vertexCacheOptimize ;:==:var compressVertices:==:parameters . compressVertices ;
var from = this . from < pos  |  |  this . from = = null ? null : this . from - pos + lenBefore ;:==:var to:==:this . to     null ? null : this . to - pos + lenBefore ;
var cos = Math . cos ;:==:var sqrt:==:Math . sqrt ;
var s = this . _ createEmbeddedViewInContainerScope ( ) ;:==:var protoView:==:view_ref_1 . internalProtoView ( templateRef . protoViewRef ) ;
var start = range . startContainer ;:==:var end:==:range . endContainer ;
var bounds = this . bounds ;:==:var oldBounds:==:this . _ oldBounds ;
var isMoveish = eventPluginUtils . isMoveish ;:==:var isEndish:==:eventPluginUtils . isEndish ;
var a = grid [ x ] [ y ] . a ;:==:var b:==:grid [ x ] [ y ] . b ;
var gateway = wanlink_gateway ( ) ;:==:var dns:==:wanlink_dns ( ) ;
var defaultLabelColor = visuals . dataLabelUtils . defaultLabelColor ;:==:var defaultFontSizeInPt:==:visuals . dataLabelUtils . defaultFontSizeInPt ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var findSessionByuri:==:require ( ' findSessionByuri ' ) ;
var showTitle = powerbi . dataViewObjects . getValue ( legendObjectProperties , visuals . treemapProps . legend . showTitle , true ) ;:==:var titleText:==:powerbi . dataViewObjects . getValue ( legendObjectProperties , visuals . treemapProps . legend . titleText , this . data . legendData . title ) ;
var dynCall_viiiiii = Module [ ' dynCall_viiiiii ' ] = asm [ ' dynCall_viiiiii ' ] ;:==:var dynCall_ddd:==:Module [ ' dynCall_ddd ' ]    asm [ ' dynCall_ddd ' ] ;
var backgroundColor = _ props . backgroundColor ;:==:var icon:==:_ props . icon ;
var range = math . range ;:==:var log:==:math . log ;
var data = this . data ;:==:var Shader:==:shaders [ shaderName ] & & shaders [ shaderName ] . shader ;
var reactTreeTraversal = require ( ' reactTreeTraversal ' ) ;:==:var responderSyntheticEvent:==:require ( ' responderSyntheticEvent ' ) ;
var reliableSocket = kaefer . reliableSocket ;:==:var reconnectSocket:==:kaefer . reconnectSocket ;
var time_start = this . options . time_start . split ( ' : ' ) ;:==:var time_end:==:this . options . time_end . split ( ' : ' ) ;
var isCordova = platformInfo . isCordova ;:==:var iswp:==:platformInfo . iswp ;
var token = client . browserUtils . queryParms ( ) . token ;:==:var secret:==:client . hashauth . apisecrethash  |  |  $ . localStorage . get ( ' apisecrethash ' ) ;
var sub = new operatorNode ( ' - ' , ' subtract ' , [ a , b ] ) ;:==:var add:==:new operatorNode ( ' + ' , ' add ' , [ a , b ] ) ;
var viewState = frameState . viewState ;:==:var resolution:==:viewState . resolution ;
var less = require ( ' gulp - less ' ) ;:==:var browserify:==:require ( ' gulp - browserify ' ) ;
var registerElement = re . registerElement ;:==:var warn:==:utils . debug ( ' core : a - scene : warn ' ) ;
var plugins = require ( util . dirs ( ) . gekko + ' plugins ' ) ;:==:var version:==:adapter . version ;
var b = this . bottom ;:==:var r:==:this . right ;
var layoutAttributes = geo . layoutAttributes ;:==:var supplyLayoutDefaults:==:geo . supplyLayoutDefaults ;
var subscribable = new ko . subscribable ( ) . extend ( rateLimit : 250 ) . extend ( rateLimit : 500 ) ;:==:var notifySpy:==:jasmine . createSpy ( ' notifySpy ' ) ;
var defineWrapGetter = scope . defineWrapGetter ;:==:var registerWrapper:==:scope . registerWrapper ;
var widgetConfig = modalData . widgetConfig ;:==:var component:==:modalData . dashboard . application . components [ 0 ] ;
var home = this . _ home ;:==:var card:==:home . cardManager . findCardFromCardList ( data ) ;
var elements = tree . elements ;:==:var getTemplateObject:==:this . getRuntimeExpression ( ' getTemplateObject ' ) ;
var min = data . min ;:==:var data:==:data . data ;
var setup = config . setup  |  |  $ . noop ;:==:var teardown:==:config . teardown  |  |  $ . noop ;
var m = matrices [ 0 ] ;:==:var s:==:cs_sqr ( 3 , m , false ) ;
var es6     = require ( ' broccoli - es6-module - transpiler ' ) ;:==:var merge:==:require ( ' broccoli - merge - trees ' ) ;
var Sensors = Windows . Devices . Sensors ;:==:var simpleOrientation:==:windows . devices . sensors . simpleOrientation ;
var layerId = layers [ i ] . layerId ;:==:var layer:==:oldLayersById [ layerId ] ;
var menus = imports . menus ;:==:var util:==:imports . util ;
var Linking = require ( ' Linking ' ) ;:==:var React:==:require ( ' React ' ) ;
var grid = gridModel . coordinateSystem ;:==:var axis:==:axisModel . axis ;
var first = this . transformAny ( tree . first ) ;:==:var second:==:this . transformAny ( tree . second ) ;
var lt = semver . lt ;:==:var neq:==:semver . neq ;
var rangeNode = math . expression . node . rangeNode ;:==:var arrayNode:==:math . expression . node . arrayNode ;
var karma = require ( ' karma ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var left = ( leftyAxisChildren ( ) . length ! = = 0 ) ;:==:var right:==:( rightyAxisChildren ( ) . length !    0 ) ;
var layout = this . layer . layout ;:==:var maxScale:==:collisionTile . maxScale ;
var model = that . reader . model ;:==:var idField:==:model ? model . idField : ' i d ' ;
var prefs = require ( ' prefs ' ) ;:==:var utils:==:require ( ' utils ' ) ;
var React = require ( ' React ' ) ;:==:var fixedDataTableCell:==:require ( ' fixedDataTableCell . react ' ) ;
var falafel = require ( ' falafel ' ) ;:==:var glob:==:require ( ' glob ' ) ;
var changedIndex = options . changedIndex ;:==:var criticalOnly:==:options . criticalOnly ;
var size = config . size  |  |  100 ;:==:var precision:==:config . precision  |  |  2 ;
var axisList = this . axisList ;:==:var lower:==:aabb . lowerBound [ axis ] ;
var a = ' abc ' ;:==:var b:==:' abc ' ;
var controllerEuler = this . controllerEuler ;:==:var controllerPosition:==:this . controllerPosition ;
var assert = require ( ' assert ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' loopback : security : acl ' ) ;
var _ strcpy = Module [ ' _ strcpy ' ] = asm [ ' _ strcpy ' ] ;:==:var runPostSets:==:module [ ' runPostSets ' ]    asm [ ' runPostSets ' ] ;
var skipTermination = typeof options . skipTermination = = ' boolean ' ? options . skipTermination : false ;:==:var setName:==:options . setName  |  |  ' rs ' ;
var emptyItemWidth = layoutParam . emptyItemWidth ;:==:var height:==:seriesModel . get ( ' breadcrumb . height ' ) ;
var INVALID = ' INVALID ' ;:==:var PENDING:==:' PENDING ' ;
var Model = kendo . data . Model ;:==:var dataSource:==:kendo . data . dataSource ;
var isLoading = this . state . isLoading ;:==:var inputValue:==:this . inputValue ( ) ;
var isIOS = platformInfo . isios ;:==:var iswp:==:platformInfo . iswp ;
var Util = sharedUtil . util ;:==:var assert:==:sharedUtil . assert ;
var down = $ ( this ) . hasClass ( ' th - sort - down ' ) ;:==:var url:==:$ ( this ) . data ( ' url ' ) ;
var slices = cylinderGeometry . _ slices ;:==:var numberOfVerticalLines:==:cylinderGeometry . _ numberOfVerticalLines ;
var style = this . style ;:==:var vmlEl:==:this . _ vmlEl ;
var canvas = document . createElement ( ' canvas ' ) ;:==:var w:==:parseInt ( svgRoot . getAttribute ( ' width ' ) ) ;
var components = exports . components = internalPropTypes . components ;:==:var route:==:exports . route    internalPropTypes . route ;
var surfaceHeight = options . surfaceHeight ;:==:var extrudedHeight:==:options . extrudedHeight ;
var resolve = angular . extend ( , options . resolve ) ;:==:var locals:==:angular . extend ( , options . locals ) ;
var focusStyle = props . focusStyle ;:==:var muiTheme:==:props . muiTheme ;
var h2 = listItem . querySelector ( ' h2 ' ) ;:==:var button:==:listItem . querySelector ( ' button [ data - email ] ' ) ;
var top = nextTop  |  |  cm . charCoords ( ann . from , ' local ' ) . top * hScale ;:==:var bottom:==:cm . charCoords ( ann . to , ' local ' ) . bottom * hScale ;
var mailParser = require ( ' mailparser ' ) . mailParser ;:==:var f:==:imap . fetch ( results , bodies : '' ) ;
var dataViewTransform = powerbi . data . dataViewTransform ;:==:var valueType:==:powerbi . valueType ;
var alert = imports [ ' dialog . alert ' ] . show ;:==:var apf:==:imports . apf ;
var c = this . canvas ;:==:var g:==:this . grid ;
var n = _ n ;:==:var i:==:_ i ;
var net = require ( ' net ' ) ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var top = pixelPos . top ;:==:var left:==:pixelPos . left ;
var priorityFunction = this . priorityFunction _ ;:==:var elements:==:this . elements _ ;
var uid = require ( ' uid2 ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var treeScope = scope . treeScope ;:==:var elementFromPoint:==:scope . elementFromPoint ;
var buffer = require ( ' vinyl - buffer ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var memberExpression = traceur . syntax . trees . memberExpression ;:==:var memberLookupExpression:==:traceur . syntax . trees . memberLookupExpression ;
var dataMin = me . dataMin ;:==:var dataMax:==:me . dataMax ;
var newRev = msg . newRev ;:==:var changeset:==:msg . changeset ;
var outer = document . getElementById ( setup . outer ) ;:==:var template:==:setup . template ;
var forEach = array . prototype . forEach . call . bind ( array . prototype . forEach ) ;:==:var filter:==:array . prototype . filter . call . bind ( array . prototype . filter ) ;
var bar = bar ( _ templateObject2 , 42 , _ . foobar ( ) ) ;:==:var bar:==:bar ( _ templateObject3 , 42 , _ . baz ( ) ) ;
var textContainer = ' cesium - credit - textContainer ' ;:==:var text:==:' cesium - credit - text ' ;
var title = options . title ;:==:var heading:==:options . heading ;
var con = this . contacts [ i ] ;:==:var nMass:==:con . nMass ;
var reactInstanceMap = require ( ' reactInstanceMap ' ) ;:==:var reactPortal:==:require ( ' reactPortal ' ) ;
var createEmptyArrayLiteralExpression = parseTreeFactory . createEmptyArrayLiteralExpression ;:==:var createForInStatement:==:parseTreeFactory . createForInStatement ;
var Stream = Struct ( ' Stream ' ) ;:==:var strSlice:==:struct ( ' strSlice ' ) ;
var formField = require ( ' elemental ' ) . formField ;:==:var formInput:==:require ( ' elemental ' ) . formInput ;
var SCALE_BY_DISTANCE_INDEX = Billboard . SCALE_BY_DISTANCE_INDEX ;:==:var TRANSLUCENCY_BY_DISTANCE_INDEX:==:Billboard . TRANSLUCENCY_BY_DISTANCE_INDEX ;
var disabled = _ props3 . disabled ;:==:var disableFocusRipple:==:_ props3 . disableFocusRipple ;
var touchableWithoutFeedback = require ( ' touchableWithoutFeedback ' ) ;:==:var view:==:require ( ' view ' ) ;
var through2 = require ( ' through2 ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var LABEL0 = ' LABEL0 ' ;:==:var VALUE0:==:' VALUE0 ' ;
var dynCall_iiiiiiiiiiiidd = Module [ ' dynCall_iiiiiiiiiiiidd ' ] = asm [ ' dynCall_iiiiiiiiiiiidd ' ] ;:==:var dynCall_vidii:==:Module [ ' dynCall_vidii ' ]    asm [ ' dynCall_vidii ' ] ;
var instance = options . instance ;:==:var lines:==:options . lines ;
var util = _ _ webpack_require _ _ ( 5 ) . util ;:==:var typeOf:==:_ _ webpack_require _ _ ( 407 ) . typeOf ;
var symbolDraw = this . _ symbolDraw ;:==:var lineDraw:==:this . _ lineDraw ;
var maindiv = this . maindiv _ ;:==:var i d:==:( maindiv & & maindiv . i d ) ? maindiv . i d : maindiv ;
var carriers = mobileInfo . brazil . carriers ;:==:var regions:==:mobileInfo . brazil . regions ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactdomEventListener:==:require ( ' reactdomEventListener ' ) ;
var value = spec . value ;:==:var timeout:==:( spec . timeout     undefined ) ? TIMEOUT_SEARCH : spec . timeout ;
var scale = chart . scale ;:==:var getValueAtIndexOrDefault:==:helpers . getValueAtIndexOrDefault ;
var debug = imports . debugger ;:==:var immediate:==:imports . immediate ;
var moduleTransformer = traceur . codegeneration . moduleTransformer ;:==:var programTransformer:==:traceur . codegeneration . programTransformer ;
var lhost = splitlhostlport [ 0 ] ;:==:var lport:==:splitlhostlport [ 1 ] ;
var isEndish = eventPluginUtils . isEndish ;:==:var executeDirectDispatch:==:eventPluginUtils . executeDirectDispatch ;
var w = a . mb_w _ ;:==:var h:==:a . mb_h _ ;
var n   = this . normal ;:==:var diffP:==:this . diffP ;
var Text = require ( ' Text ' ) ;:==:var touchableWithoutFeedback:==:require ( ' touchableWithoutFeedback ' ) ;
var Category = hexo . model ( ' Category ' ) ;:==:var postTag:==:hexo . model ( ' postTag ' ) ;
var high = writePositionScratch . high ;:==:var low:==:writePositionScratch . low ;
var Stream = coreStream . stream ;:==:var lexer:==:coreParser . lexer ;
var image = t . image ;:==:var width:==:image . width ;
var switchStatement = traceur . syntax . trees . switchStatement ;:==:var state:==:traceur . codegeneration . generator . state ;
var useCollab = options . useCollab ;:==:var useSend:==:! options . useCollab & & options . useSend ;
var dict = params . dict ;:==:var data:==:this . data    ;
var ref = element . ref ;:==:var owner:==:element . _ owner ;
var Node = scope . wrappers . Node ;:==:var parentNodeInterface:==:scope . parentNodeInterface ;
var getProto = object . getPrototypeOf ;:==:var slice:==:arr . slice ;
var isArrayBuffer = sharedUtil . isArrayBuffer ;:==:var isString:==:sharedUtil . isString ;
var row = annotation . row ;:==:var col:==:annotation . column ;
var preview = config . preview ;:==:var fastMode:==:config . fastMode ;
var child_process = require ( ' child_process ' ) ;:==:var os:==:require ( ' os ' ) ;
var findInFunctionScope = traceur . codegeneration . findInFunctionScope ;:==:var formalParameterList:==:traceur . syntax . trees . formalParameterList ;
var w = ( settings . width = = null ) ? 100 : settings . width ;:==:var h:==:( settings . height     null ) ? 100 : settings . height ;
var granularity = polygonGeometry . _ granularity ;:==:var stRotation:==:polygonGeometry . _ stRotation ;
var vertSizef = this . _ vertSizef ;:==:var offsetpf:==:this . _ offsetpf ;
var index = c . indexOf ( getCurrentCity ( ) ) ;:==:var i:==:index % num_dots_at_bottom ;
var height = image . height ;:==:var left:==:cropBox . left - canvas . left - image . left ;
var clientWidth = _ state . clientWidth ;:==:var scrollHeight:==:_ state . scrollHeight ;
var outerWidth = kendo . _ outerWidth ;:==:var outerHeight:==:kendo . _ outerHeight ;
var getSnapHeight = t . getSnapHeight ;:==:var getSnapMinutes:==:t . getSnapMinutes ;
var prefixIntervalTree = require ( ' prefixIntervalTree ' ) ;:==:var clamp:==:require ( ' clamp ' ) ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var geoPointFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' geoPointFieldTestObject ' ) ) ;
var db = syncBrowserdb . db . _ db ;:==:var transaction:==:db . transaction ( dbos_places , ' readwrite ' ) ;
var lookup = this . lookup ;:==:var length:==:input . length ;
var clearInterval = global . clearInterval ;:==:var isatty:==:tty . isatty ( 1 ) & & tty . isatty ( 2 ) ;
var axisModel = this . axisModel ;:==:var name:==:retrieve ( opt . axisName , axisModel . get ( ' name ' ) ) ;
var axisA = this . axisA ;:==:var axisB:==:this . axisB ;
var async = require ( ' async ' ) ;:==:var Frame:==:debug . Frame ;
var seg = data . _ segments ;:==:var path:==:data . path ;
var log = stdlib . Math . log ;:==:var atan2:==:stdlib . Math . atan2 ;
var reactComponentEnvironment = require ( ' reactComponentEnvironment ' ) ;:==:var reactComponentBrowserEnvironment:==:require ( ' reactComponentBrowserEnvironment ' ) ;
var node = model . nodes [ data . node ] ;:==:var mesh:==:model . meshes [ data . mesh ] ;
var min = index . min ( ) ;:==:var max:==:index . max ( ) ;
var fsummary = $ ( ' # grid_'+ this . name + ' _ fsummary ' ) ;:==:var footer:==:$ ( ' # grid_'+ this . name + ' _ footer ' ) ;
var mi = cTop . appendToken ( parentNode,'mi',cTop . getTextContent ( contentmmlNode ) ) ;:==:var type:==:contentmmlNode . getAttribute ( ' type ' ) ;
var watcher = imports . watcher ;:==:var panels:==:imports . panels ;
var username = element ( by . model ( ' username ' ) ) ;:==:var name:==:element ( by . binding ( ' username ' ) ) ;
var OUTLINE_WIDTH_INDEX = pointPrimitive . outline_width_index ;:==:var pixel_size_index:==:pointPrimitive . pixel_size_index ;
var executes = options . executes ;:==:var db:==:dbmap [ dbname ] ;
var computeMetadataCallback = _ ref . computeMetadataCallback ;:==:var computeMetadataCallbackProps:==:_ ref . computeMetadataCallbackProps ;
var cyan300 = exports . cyan300 = ' # 4dd0e1 ' ;:==:var cyan400:==:exports . cyan400    ' # 26c6da ' ;
var lefts = this . lefts ;:==:var rights:==:this . rights ;
var BAD = 30 ;:==:var MEM:==:31 ;
var shaderParam = shaderParams [ pname ] ;:==:var semantic:==:shaderParam . semantic ;
var classDeclaration = traceur . syntax . trees . classDeclaration ;:==:var commaExpression:==:traceur . syntax . trees . commaExpression ;
var assert = utils . assert ;:==:var parseBytes:==:utils . parseBytes ;
var segmentDataMatch = segmentDataMatches [ i ] ;:==:var segment:==:segmentDataMatch . segment ;
var attribute = attributes [ key ] ;:==:var array:==:Array . prototype . slice . call ( attribute . array ) ;
var fs = require ( ' fs ' ) ;:==:var url:==:require ( ' url ' ) ;
var x = ( snakePath [ i * snakeSpacer ] ) . x ;:==:var y:==:( snakePath [ i * snakeSpacer ] ) . y ;
var callButton = document . querySelector ( ' button#callButton ' ) ;:==:var hangupButton:==:document . querySelector ( ' button#hangupButton ' ) ;
var c = processDiagramCanvas . g . path ( ' m'+nextSrcx+','+nextSrcy+'l'+bx+','+by ) . attr ( stroke : color . get ( 255 , 153 , 51 ) , ' stroke - dasharray ' : ' - ' ) ;:==:var c:==:processDiagramCanvas . g . ellipse ( ax , ay , 2 , 2 ) . attr ( stroke : color . slateGrey ) ;
var pre = detail . find ( ' . pre ' ) ;:==:var next:==:detail . find ( ' . next ' ) ;
var objectPatternField = traceur . syntax . trees . objectPatternField ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var Map   = Immutable . Map ;:==:var isMap:==:immutable . map . isMap ;
var read = require ( ' fs ' ) . readFileSync ;:==:var path:==:require ( ' path ' ) ;
var Stream = coreStream . stream ;:==:var streamsSequenceStream:==:coreStream . streamsSequenceStream ;
var ellipsoid = polygonGeometry . _ ellipsoid ;:==:var granularity:==:polygonGeometry . _ granularity ;
var faceColors = options . faceColors ;:==:var flat:==:( options . flat      undefined ) ? true : options . flat ;
var titleStyle = _ props . titleStyle ;:==:var iconStyleLeft:==:_ props . iconStyleLeft ;
var minor = new CS . Solver . Step ( stepBaseName + ' _ minor ' ) ;:==:var patch:==:new cs . solver . step ( stepBaseName + ' _ patch ' ) ;
var options = calendar . options ;:==:var nextDayThreshold:==:moment . duration ( options . nextDayThreshold ) ;
var hash = require ( ' hash - sum ' ) ;:==:var uniq:==:require ( ' lodash . uniq ' ) ;
var x = Math . max ( readState . x  |  |  0 , 0 ) ;:==:var y:==:math . max ( readState . y  |  |  0 , 0 ) ;
var addon = spec . addon ;:==:var button:==:spec . button ;
var history = _ props2 . history ;:==:var location:==:_ props2 . location ;
var concat   = require ( ' gulp - concat ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var connection = node . _ connection ;:==:var parent:==:node . parent ;
var RIGHT_BRACE = C . RIGHT_BRACE = 0x2 ;:==:var LEFT_BRACKET:==:C . LEFT_BRACKET    0x3 ;
var e = this . parentNode ;:==:var a:==:[ this . attributes [ c ] ] ;
var fixedTop = this . options . fixedTop ;:==:var offset:==:this . options . offset ;
var bind = _ angular . bind ;:==:var isUndefined:==:_ angular . isUndefined ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var less:==:require ( ' gulp - less ' ) ;
var u = uvLayer [ uvIndex * 2 ] ;:==:var v:==:uvLayer [ uvIndex * 2 + 1 ] ;
var temporary = opts . temporary ;:==:var pluginName:==:opts . pluginName ;
var max_size_y = this . resize_max_size_y ;:==:var min_size_y:==:this . resize_min_size_y ;
var createObjectLiteralExpression = parseTreeFactory . createObjectLiteralExpression ;:==:var createPropertyNameAssignment:==:parseTreeFactory . createPropertyNameAssignment ;
var getter = animator . _ getter ;:==:var setter:==:animator . _ setter ;
var to = moment . utc ( daterange . to ) ;:==:var from:==:moment . utc ( daterange . from ) ;
var identifierExpression = traceur . syntax . trees . identifierExpression ;:==:var ifStatement:==:traceur . syntax . trees . ifStatement ;
var west = cesiumMath . toDegrees ( rectangle . west ) ;:==:var south:==:cesiumMath . toDegrees ( rectangle . south ) ;
var animationDelay = goog . require ( ' goog . async . animationDelay ' ) ;:==:var promise:==:goog . require ( ' goog . promise ' ) ;
var observable = ko . observable ( ) ;:==:var evalSpy:==:jasmine . createSpy ( ' evalSpy ' ) ;
var ms = 0 , msMin = infinity , msMax = 0 ;:==:var fps:==:0 , fpsMin    infinity , fpsMax    0 ;
var scheduler = state . scheduler ;:==:var destination:==:state . destination ;
var tag = info . tag ;:==:var onEffects:==:info . onEffects ;
var page = require ( ' webpage ' ) . create ( ) ;:==:var system:==:require ( ' system ' ) ;
var polygonHierarchy = options . polygonHierarchy ;:==:var ellipsoid:==:defaultValue ( options . ellipsoid , ellipsoid . wgs84 ) ;
var boundingVolume = scene . frameState . commandList [ 0 ] . boundingVolume ;:==:var positions:==:one . positions ;
var geocodeCache = this . geocodeCache ;:==:var maxCacheSize:==:this . maxCacheSize ;
var git = ' https : ilovegit . git ' ;:==:var summary:==:' Test summary ' ;
var iccId = this . conns [ i ] . iccId ;:==:var icc:==:this . iccManager . getIccById ( iccId ) ;
var tileInfo = this . _ tileInfo ;:==:var key:==:this . key ;
var assign = Object . assign  |  |  require ( ' object . assign ' ) ;:==:var del:==:require ( ' del ' ) ;
var cancelable = typeof options . cancelable ! = ' undefined ' ? options . cancelable : ( event ! = ' touchcancel ' ) ;:==:var view:==:typeof options . view !   ' undefined ' ? options . view : window ;
var glTexture = texture . _ glTextures [ i ] ;:==:var gl:==:pixi . glContexts [ i ] ;
var source = this . source ;:==:var subscription:==:this . subscription ;
var fs   = require ( ' fs ' ) ;:==:var config:==:require ( ' config ' ) ;
var fillColor = node . _ style . fillColor ;:==:var strokeColor:==:node . _ style . strokeColor ;
var matrix = math . matrix ;:==:var unit:==:math . unit ;
var gulp = require ( ' gulp ' ) ;:==:var handlebars:==:require ( ' gulp - handlebars ' ) ;
var messageId = request . arguments . messageId ;:==:var objectId:==:request . arguments . objectId ;
var characterMetadata = require ( ' characterMetadata ' ) ;:==:var dataTransfer:==:require ( ' dataTransfer ' ) ;
var message = _ ref5 . message ;:==:var assert:==:_ ref5 . assert ;
var trans = core . db . transaction ( this . _ store ) ;:==:var store:==:trans . objectStore ( this . _ store ) ;
var panelcssClass = options . panelcssClass ;:==:var caption:==:options . caption ;
var viewState = frameState . viewState ;:==:var layerStates:==:frameState . layerStatesArray ;
var fs = require ( ' graceful - fs ' ) ;:==:var optimist:==:require ( ' optimist ' ) ;
var bytesFilled = pullIntoDescriptor . bytesFilled ;:==:var elementSize:==:pullIntoDescriptor . elementSize ;
var listener = listenerObj . listener ;:==:var bindTo:==:listenerObj . bindTo  |  |  listenerObj . target ;
var y1 = y + box . y1 * yStretch ;:==:var x2:==:x + box . x2 ;
var start1 = bigpatch . start1 ;:==:var start2:==:bigpatch . start2 ;
var line = position & & position . line ;:==:var column:==:position & & position . column ;
var src = el . getAttribute ( ' data - src ' ) ;:==:var controls:==:el . getAttribute ( ' data - controls ' ) ;
var draftModifier = require ( ' draftModifier ' ) ;:==:var editorState:==:require ( ' editorState ' ) ;
var iter = goog . iter . slice ( ' ABCDEFG ' . split ( '' ) , 1 , 1 ) ;:==:var ex:==:assertThrows ( function ( ) iter . next ( ) ) ;
var ui = baidu . editor . ui ;:==:var div:==:document . createElement ( ' div ' ) ;
var source = this . source ;:==:var scheduler:==:this . scheduler ;
var switchStatement = traceur . syntax . trees . switchStatement ;:==:var whileStatement:==:traceur . syntax . trees . whileStatement ;
var node = _ this3 . body . nodes [ branchNode ] ;:==:var level:==:_ this3 . hierarchical . levels [ node . i d ] ;
var o = plot . getOptions ( ) ;:==:var offset:==:plot . getPlaceholder ( ) . offset ( ) ;
var limit = parseInt ( params . qstring . limit  |  |  20 ) ;:==:var skip:==:parseInt ( params . qstring . skip  |  |  0 ) ;
var enterToClass = ref . enterToClass ;:==:var enterActiveClass:==:ref . enterActiveClass ;
var node = this . node ;:==:var props:==:node . props ;
var len = this . data . length ;:==:var cur:==:this . currentIndex ;
var context = frameState . context ;:==:var ellipsoid:==:frameState . mapProjection . ellipsoid ;
var ceil = stdlib . Math . ceil ;:==:var floor:==:stdlib . Math . floor ;
var bulkOutPipes = usbInterface . bulkOutPipes ;:==:var interruptInPipes:==:usbInterface . interruptInPipes ;
var OUTLINE_COLOR_INDEX = pointPrimitive . outline_color_index ;:==:var outline_width_index:==:pointPrimitive . outline_width_index ;
var editorState = require ( ' editorState ' ) ;:==:var moveSelectionBackward:==:require ( ' moveSelectionBackward ' ) ;
var l = this . getStyle ( left ) ;:==:var t:==:this . getStyle ( top ) ;
var CP_APN_KEY = apnConst . cp_apn_key ;:==:var default_apn_key:==:apnConst . default_apn_key ;
var Request = fxdriver . Request ;:==:var Response:==:fxdriver . Response ;
var console = global$1 . console ;:==:var setTimeout:==:global$1 . setTimeout ;
var acosh = math . acosh ;:==:var cosh:==:math . cosh ;
var dayNamesShort = settings . dayNamesShort  |  |  this . local . dayNamesShort ;:==:var dayNames:==:settings . dayNames  |  |  this . local . dayNames ;
var light = this . light ? this . light . buildCode ( builder , ' v3 ' , cache : ' light ' ) : undefined ;:==:var ao:==:this . ao ? this . ao . buildCode ( builder , ' fv1 ' ) : undefined ;
var disp   = this . disp ;:==:var strength:==:options . strength ;
var monthDay = app . monthDay ;:==:var events:==:monthDay . events ;
var fs = imports . fs ;:==:var settings:==:imports . settings ;
var startIndex = _ ref2 . startIndex ;:==:var stopIndex:==:_ ref2 . stopIndex ;
var start = new Range ( 0 , 0 , range . start . row , range . start . column ) ;:==:var end:==:new Range ( range . end . row , range . end . column , Number . MAX_VALUE , Number . MAX_VALUE ) ;
var interactionManager = require ( ' interactionManager ' ) ;:==:var interpolation:==:require ( ' interpolation ' ) ;
var dist = ' dist ' + path . sep ;:==:var today:==:grunt . template . today ( ' UTC : yyyy ' ) ;
var nodeBin = options . nodeBin  |  |  [ ' node ' ] ;:==:var nodePath:==:options . nodePath  |  |  ' ' ;
var it = mocha . it ;:==:var describe:==:mocha . describe ;
var a = fulfillThenableSoon ( ' a ' , 40 ) ;:==:var b:==:rejectThenableSoon ( ' rejected - b ' , 30 ) ;
var prompt = require ( ' gulp - prompt ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var _ url = this . _ _ url ;:==:var _ i d:==:this . _ _ i d ;
var winston = require ( ' winston ' ) ;:==:var less:==:require ( ' less ' ) ;
var destroy = require ( ' destroy ' ) ;:==:var tmp:==:require ( ' tmp ' ) ;
var transaction = this . _ db . transaction ( [ DBOS_VISITS ] , ' readwrite ' ) ;:==:var objectStore:==:transaction . objectStore ( dbos_visits ) ;
var t = this . _ loading  |  |  this . _ disabled ;:==:var d:==:this . _ disabled ;
var doc = this . document ;:==:var script:==:doc . createElement ( ' script ' ) ;
var os    = require ( ' os ' ) ;:==:var p:==:path ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var requirejs:==:require ( ' gulp - requirejs ' ) ;
var duration = this . _ model . get ( ' duration ' ) ;:==:var streamType:==:this . _ model . get ( ' streamType ' ) ;
var rayvector = castRay_rayvector ;:==:var target:==:castRay_target ;
var testIdentifier = this . props . testIdentifier  |  |  ' test ' ;:==:var onSnapshotReady:==:this . props . onSnapshotReady  |  |  this . onDefaultAction ;
var localVideo = document . querySelector ( ' video#localVideo ' ) ;:==:var callButton:==:document . querySelector ( ' button#callButton ' ) ;
var cascade = this . shared . cascade ;:==:var interval:==:this . shared . interval ;
var contentWidth = this . state . contentWidth ;:==:var btnsLeftWidth:==:this . state . btnsLeftWidth ;
var debug = window . debug ;:==:var jasmine:==:window . jasmine ;
var after = require ( ' after ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var require = patchRequire ( require ) ;:==:var casper:==:require ( ' casper ' ) . create ( ) ;
var animate = angular . isDefined ( $ attrs . animate ) ? $ scope . $ eval ( $ attrs . animate ) : progressConfig . animate ;:==:var autoType:==:angular . isDefined ( $ attrs . autoType ) ? $ scope . $ eval ( $ attrs . autoType ) : progressConfig . autoType ;
var e = Fe . G ( ' feDialogFactoryInset _ ' + me . hashCode ) ;:==:var t:==:fe . g ( ' feDialogContent _ ' + me . hashCode ) . childNodes [ 0 ] ;
var whileStatement = traceur . syntax . trees . whileStatement ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var shadowTree = shadowTrees [ i ] ;:==:var shadow:==:getShadowInsertionPoint ( shadowTree ) ;
var aiDisplay = oSettings . aiDisplay ;:==:var aiDisplayMaster:==:oSettings . aiDisplayMaster ;
var fillStyle = ctx . fillStyle ;:==:var arcScalex:==:ctx . arcScalex _ ;
var xa = plotinfo . xaxis ;:==:var ya:==:plotinfo . yaxis ;
var isIOS = utils . device . isIOS ( ) ;:==:var isMobile:==:utils . device . isMobile ( ) ;
var FOR_IN_STATEMENT = ' FOR_IN_STATEMENT ' ;:==:var FOR_OF_STATEMENT:==:' FOR_OF_STATEMENT ' ;
var movement = aggregator . _ movement ;:==:var lastMovement:==:aggregator . _ lastMovement ;
var value = node . value ;:==:var options:==:self . options ;
var from = this . attribute ( ' from ' ) . numValue ( ) ;:==:var to:==:this . attribute ( ' to ' ) . numValue ( ) ;
var price = order . price_amount . to_human ( group_sep : false ) ;:==:var currency:==:order . price_amount . currency ( ) . to_json ( ) ;
var tabManager = imports . tabManager ;:==:var settings:==:imports . settings ;
var labelGroup = this . _ labelGroup ;:==:var viewRect:==:layoutInfo . viewRect ;
var httpFormUrlEncodedContent = windows . web . http . httpFormUrlEncodedContent ;:==:var httpMediaTypeHeaderValue:==:windows . web . http . headers . httpMediaTypeHeaderValue ;
var left = ! isNan ( rect . left ) ? rect . left : null ;:==:var width:==:! isNan ( rect . width ) ? rect . width : 0 ;
var w = target_width * scale ;:==:var h:==:target_height * scale ;
var programTransformer = traceur . codegeneration . programTransformer ;:==:var parser:==:traceur . syntax . parser ;
var attributes = geometry . attributes ;:==:var modelMatrix:==:matrix4 . clone ( defaultValue ( options . modelMatrix , matrix4 . identity ) ) ;
var element = that . element ;:==:var wrapper:==:that . wrapper ;
var utils = require ( ' utils ' ) ;:==:var webpage:==:require ( ' webpage ' ) ;
var Ref = Git . Ref ;:==:var Branch:==:Git . Branch ;
var operations = req . service . api . operations  |  |  ;:==:var operation:==:operations [ req . operation ] ;
var getBounds = utils . getBounds ;:==:var parseBackgrounds:==:utils . parseBackgrounds ;
var sizeInBytes = options . sizeInBytes ;:==:var usage:==:options . usage ;
var fs = require ( ' fs ' ) ;:==:var git:==:require ( ' gulp - git ' ) ;
var tessellation = options . tessellation  |  |  64 ;:==:var updatable:==:options . updatable ;
var doc = goog . global . document ;:==:var currentScript:==:doc . currentScript ;
var singleChar = node . getAttribute ( ' singleChar ' ) ;:==:var esc:==:node . getAttribute ( ' escapeChar ' ) ;
var level = _ levelMap [ i d ] ;:==:var sequenceName:==:level . sequenceName ;
var name = req . fields . name ;:==:var gender:==:req . fields . gender ;
var rawIds = o . rawIds ;:==:var options:==:o . options ;
var start = parseISO8601 ( startStr , true ) ;:==:var end:==:parseiso8601 ( entry [ ' gd$when ' ] [ 0 ] [ ' endTime ' ] , true ) ;
var bootstrap = require ( ' bootstrap ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var ObjectID = require ( ' mongodb ' ) . ObjectID ;:==:var BSON:==:require ( ' mongodb ' ) . bsonPure ;
var send = require ( ' send ' ) ;:==:var extname:==:path . extname ;
var _ im_cancel_last_choice = Module [ ' _ im_cancel_last_choice ' ] = asm [ ' _ im_cancel_last_choice ' ] ;:==:var _ memset:==:Module [ ' _ memset ' ]    asm [ ' _ memset ' ] ;
var draftOffsetKey = require ( ' draftOffsetKey ' ) ;:==:var nullthrows:==:require ( ' nullthrows ' ) ;
var log = Math . log ;:==:var max:==:Math . max ;
var unlend = astUtils . unlend ;:==:var guessSingularName:==:moMetadata . _ guessSingularName ;
var apidoc = require ( ' apidoc - core ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var Person = db . model ( ' gh4288 ' , personSchema ) ;:==:var blogPost:==:db . model ( ' gh4288_0 ' , blogPostSchema ) ;
var gulp = require ( ' gulp ' ) ;:==:var nodemon:==:require ( ' gulp - nodemon ' ) ;
var asCLI = utils . asCLI ;:==:var fork:==:require ( ' child_process ' ) . fork ;
var compute = stringMatch . _ computeRangesAndScore ;:==:var specialMatch:==:stringMatch . _ specialMatch ;
var preferredAdapters = pouchdb . preferredAdapters ;:==:var prefix:==:pouchdb . prefix ;
var rect = this . _ rect ;:==:var axis:==:this . _ axis ;
var childObject = parse . object . extend ( className : ' childObject ' ) ;:==:var parentObject:==:parse . object . extend ( className : ' parentObject ' ) ;
var plan = BABYLON . Mesh . createPlane ( ' plane ' , 10 . 0 , scene ) ;:==:var cylinder:==:babylon . mesh . createCylinder ( ' cylinder ' , 3 , 3 , 3 , 6 , 1 , scene , false ) ;
var parser = require ( ' socket . io - parser ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' socket . io : client ' ) ;
var width = $ embediFrame . attr ( ' width ' ) ;:==:var height:==:$ embediFrame . attr ( ' height ' ) ;
var firstRetainerIndex = this . _ firstRetainerIndex ;:==:var retainingNodes:==:this . _ retainingNodes ;
var request = require ( ' request ' ) ;:==:var glob:==:require ( ' glob ' ) ;
var focus = ( params . focus ! = = undefined ) ? params . focus : 1 . 0 ;:==:var aspect:==:( params . aspect !    undefined ) ? params . aspect : camera . aspect ;
var browserify = require ( ' browserify ' ) ;:==:var brfs:==:require ( ' brfs ' ) ;
var created = identify . created ( ) ;:==:var name:==:identify . name ( ) ;
var $ element = this . $ element ;:==:var $ popover:==:this . $ popover ;
var backgroundExecutionManager = background . backgroundExecutionManager ;:==:var backgroundTaskRegistration:==:background . backgroundTaskRegistration ;
var addr = this . address ( ) ;:==:var pathname:==:opt_pathname  |  |  '' ;
var files = event . dataTransfer . files ;:==:var length:==:files . length ;
var packageName = options . packageName ;:==:var version:==:options . version ;
var getOwnPropertyNames = object . getOwnPropertyNames ;:==:var getOwnPropertyDescriptor:==:object . getOwnPropertyDescriptor ;
var dom = goog . dom . getDomHelper ( ) ;:==:var a:==:dom . createDom ( goog . dom . tagName . a ) ;
var currentConfig = diff . localDiff . currentConfig ;:==:var localDiff:==:diff . localDiff ;
var rename = require ( ' gulp - rename ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var x = Math . round ( ( record . timestamp - minTime ) * xFactor ) ;:==:var y:==:math . round ( ( record . value- minPower ) * yFactor ) ;
var View = require ( ' View ' ) ;:==:var viewPropTypes:==:require ( ' viewPropTypes ' ) ;
var isCustomComponent = require ( ' isCustomComponent ' ) ;:==:var setInnerhtml:==:require ( ' setInnerhtml ' ) ;
var t = self . time ( ) ;:==:var l:==:( gp ) ? t + gp : self . lasttime ;
var newDataLabelUtils = powerbi . visuals . newDataLabelUtils ;:==:var axisHelper:==:powerbi . visuals . axisHelper ;
var x = this . _ global . x ;:==:var y:==:this . _ global . y ;
var elasticPane = kendo . mobile . ui . scrollViewElasticPane ;:==:var scrollViewContent:==:kendo . mobile . ui . scrollViewContent ;
var e = new pointerEvent ( ' lostpointercapture ' , bubbles : true ) ;:==:var t:==:this . captureInfo . target ;
var net = require ( ' net ' ) ;:==:var eachline:==:require ( ' eachline ' ) ;
var parent = angular . element ( $ element . parent ( ) . parent ( ) . parent ( ) ) ;:==:var title:==:angular . element ( parent [ 0 ] . querySelector ( ' . title ' ) ) ;
var xmin = options . xmin  |  |  -1 . 0 ;:==:var zmin:==:options . zmin  |  |  -1 . 0 ;
var readInt8 = sharedUtil . readInt8 ;:==:var readUint16:==:sharedUtil . readUint16 ;
var gulp = require ( ' gulp ' ) ;:==:var streamqueue:==:require ( ' streamqueue ' ) ;
var damping = Math . pow ( this . damping , dt ) ;:==:var gravity:==:this . gravity ;
var mkpath = require ( ' mkpath ' ) ;:==:var resolve:==:require ( ' path ' ) . resolve ;
var insertFragmentIntoContentState = require ( ' insertFragmentIntoContentState ' ) ;:==:var insertTextIntoContentState:==:require ( ' insertTextIntoContentState ' ) ;
var fallThroughState = traceur . codegeneration . generator . fallThroughState ;:==:var finallyFallThroughState:==:traceur . codegeneration . generator . finallyFallThroughState ;
var operatorNode = math . expression . node . operatorNode ;:==:var parenthesisNode:==:math . expression . node . parenthesisNode ;
var ref = self . $ ref ( ) ;:==:var def:==:$ q . defer ( ) ;
var fixedDataTableCell = require ( ' fixedDataTableCell . react ' ) ;:==:var cx:==:require ( ' cx ' ) ;
var x = euler . _ x , y = euler . _ y , z = euler . _ z , order = euler . order ;:==:var cos:==:Math . cos ;
var opts = _ _ alloyId15 . opts  |  |  ;:==:var models:==:_ _ alloyId14 . models ;
var foo = docSet . getByLongname ( ' thingy~foo ' ) [ 0 ] ;:==:var _ bar:==:docSet . getByLongname ( ' thingy#_bar ' ) [ 0 ] ;
var malloc = Module . _ malloc ;:==:var realloc:==:Module . _ realloc ;
var x = point . x ;:==:var y:==:point . y ;
var indices = list . indices = this . indices ;:==:var storage:==:list . _ storage ;
var rack = this . rack ;:==:var pids:==:this . pids ;
var fulfilled = adapter . fulfilled ;:==:var pending:==:adapter . pending ;
var audio = instance . _ audio ;:==:var sourceMp3:==:instance . _ sourceMp3 ;
var linewise = register . linewise ;:==:var blockwise:==:register . blockwise ;
var merge = options . merge ;:==:var remove:==:options . remove ;
var itemsIndom = this . els . itemsIndom ;:==:var items:==:this . els . items ;
var layers = leafletScope . layers ;:==:var createLayer:==:leafletLayerHelpers . createLayer ;
var audio = element . find ( ' audio ' ) , audio_obj = audio [ 0 ] ;:==:var controls:==:element . find ( ' . controls ' ) ;
var unit = math . unit ;:==:var asin:==:math . asin ;
var createUndefinedExpression = parseTreeFactory . createUndefinedExpression ;:==:var createVariableDeclaration:==:parseTreeFactory . createVariableDeclaration ;
var domPropertyOperations = require ( ' domPropertyOperations ' ) ;:==:var eventPluginRegistry:==:require ( ' eventPluginRegistry ' ) ;
var tier = tiers [ index ] ;:==:var td:==:document . createElement ( ' td ' ) ;
var vid1 = document . getElementById ( ' vid1 ' ) ;:==:var vid2:==:document . getElementById ( ' vid2 ' ) ;
var pedding = require ( ' pedding ' ) ;:==:var multiline:==:require ( ' multiline ' ) ;
var isValidBounds = leafletBoundsHelpers . isValidBounds ;:==:var isUndefinedOrEmpty:==:leafletHelpers . isUndefinedOrEmpty ;
var gulp = require ( ' gulp ' ) ;:==:var Server:==:require ( ' karma ' ) . Server ;
var startBufferEvery = ( this . startBufferEvery = = null ) ? bufferSize : this . startBufferEvery ;:==:var buffers:==:this . buffers ;
var template = options . template ;:==:var helpArea:==:options . helpArea ;
var config = this . config ;:==:var content:==:page . content ;
var Syntax = jsdoc . src . Syntax ;:==:var util:==:require ( ' util ' ) ;
var menuItem = imports . menuItem ;:==:var tabManager:==:imports . tabManager ;
var programTree = traceur . syntax . trees . programTree ;:==:var propertyNameShorthandTransformer:==:traceur . codegeneration . propertyNameShorthandTransformer ;
var transitionEnabled = _ props . transitionEnabled ;:==:var zDepth:==:_ props . zDepth ;
var w = object [ ' width ' ] ;:==:var h:==:object [ ' height ' ] ;
var start = offsets . start ;:==:var end:==:offsets . end ;
var a = _ . extend ( , Backbone . Events ) . once ( ' event ' , f ) ;:==:var b:==:_ . extend ( , Backbone . Events ) . on ( ' event ' , f ) ;
var unpaddedIndex = intlHelper . get ( ' unpaddedIndex ' ) ;:==:var paddedIndex:==:intlHelper . get ( ' paddedIndex ' ) ;
var blob = testUtils . makeBlob ( blobData ) ;:==:var doc:==:_ i d : docId , test : true ;
var clientHeight = this . _ scrollContainer . clientHeight ;:==:var scrollTop:==:this . _ scrollContainer . scrollTop ;
var defineGetter = scope . defineGetter ;:==:var enqueueMutation:==:scope . enqueueMutation ;
var settings    = this . settings ;:==:var cm:==:this . cm ;
var addDays = fc . addDays ;:==:var applyAll:==:fc . applyAll ;
var hash = $ liHeadsa . get ( key ) . hash . slice ( 1 ) ;:==:var i d:==:$ ( value ) . attr ( ' i d ' )  |  |  foundation . getYoDigits ( 6 , ' accordion ' ) ;
var ctrlKey = event . srcEvent & & ( event . srcEvent . ctrlKey  |  |  event . srcEvent . metaKey ) ;:==:var shiftKey:==:event . srcEvent & & event . srcEvent . shiftKey ;
var v = this . values ;:==:var m:==:matrix . values ;
var gitCmd = gruntUtils . gitCmd ;:==:var gitCmdAsync:==:gruntUtils . gitCmdAsync ;
var filter = arguments . filter ;:==:var replacement:==:arguments . replacement ;
var tokenType = traceur . syntax . tokenType ;:==:var evaluateStringLiteral:==:traceur . util . evaluateStringLiteral ;
var nonEnumConfig = ' nonEnumConfig ' ;:==:var nonEnumNonConfig:==:' nonEnumNonConfig ' ;
var a = new goog . ui . tree . treeNode ( ' a ' ) ;:==:var b:==:new goog . ui . tree . treeNode ( ' b ' ) ;
var title = item . title ;:==:var style:==:item . style ? ' style ' ' + item . style + ' ' ' : '' ;
var menus = imports . menus ;:==:var alert:==:imports [ ' dialog . alert ' ] . show ;
var sinon = require ( ' sinon ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var traits = identify . traits ( i d : ' userid ' ) ;:==:var email:==:identify . email ( ) ;
var wait = options . wait  |  |  0 ;:==:var d:==:new Deferred ( ) ;
var usedPropTypes = component & & component . usedPropTypes  |  |  [ ] ;:==:var ignorePropsValidation:==:component & & component . ignorePropsValidation  |  |  false ;
var diameterTop = ( options . diameterTop = = = 0 ) ? 0 : options . diameterTop  |  |  options . diameter  |  |  1 ;:==:var diameterBottom:==:( options . diameterBottom      0 ) ? 0 : options . diameterBottom  |  |  options . diameter  |  |  1 ;
var fixedDataTableHelper = require ( ' fixedDataTableHelper ' ) ;:==:var react:==:require ( ' react ' ) ;
var pointerType = defaultValue ( options . pointerType , 0 ) ;:==:var hwTimestamp:==:defaultValue ( options . hwTimestamp , 0 ) ;
var data = this . data ;:==:var position:==:data . position ;
var pagesPromise = pdfViewer . pagesPromise ;:==:var onePageRendered:==:pdfViewer . onePageRendered ;
var scope = frag . scope ;:==:var index:==:scope . $ index ;
var atan2 = Math . atan2 ;:==:var sqrt:==:Math . sqrt ;
var appBar = _ context$muiTheme . appBar ;:==:var iconButtonSize:==:_ context$muiTheme . button . iconButtonSize ;
var diffP = this . diffP ;:==:var diffV:==:this . diffV ;
var animatedImplementation = require ( ' animatedImplementation ' ) ;:==:var image:==:require ( ' image ' ) ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var foreach:==:require ( ' gulp - foreach ' ) ;
var offset = active . bounds . offset ;:==:var size:==:active . bounds . size ;
var frustum = camera . frustum ;:==:var near:==:frustum . near ;
var url = $ ( this ) . data ( ' url ' ) ;:==:var sorter:==:$ ( this ) . data ( ' sorter ' ) ;
var parsePercent = numberUtil . parsePercent ;:==:var each:==:zrUtil . each ;
var obj = ' object ' ;:==:var str:==:' string ' ;
var textCredits = this . _ defaultTextCredits . concat ( this . _ currentFrameCredits . textCredits ) ;:==:var imageCredits:==:this . _ defaultImageCredits . concat ( this . _ currentFrameCredits . imageCredits ) ;
var wrap = scope . wrap ;:==:var wraphtmlCollection:==:scope . wraphtmlCollection ;
var identifiers = parserConf . identifiers |  |  new regExp ( ' ^ [ _ a - za - z ] [ _ a - za - z0 - 9 ] * ' ) ;:==:var hangingIndent:==:parserConf . hangingIndent  |  |  conf . indentUnit ;
var legend = nv . models . legend ( ) ;:==:var tooltip:==:nv . models . tooltip ( ) ;
var el = this . el ;:==:var hasPositionalTracking:==:this . hasPositionalTracking  |  |  checkHasPositionalTracking ( ) ;
var key = event . detail . key ;:==:var oldIndex:==:event . detail . oldIndex ;
var isoAdobeCharset = coreCharsets . isoAdobeCharset ;:==:var expertCharset:==:coreCharsets . expertCharset ;
var startContainer = editor . selection . getRange ( ) . startContainer . outerhtml ;:==:var startOffset:==:editor . selection . getRange ( ) . startOffset ;
var granularity = polygonGeometry . _ granularity ;:==:var ellipsoid:==:polygonGeometry . _ ellipsoid ;
var valueFormatter = powerbi . visuals . valueFormatter ;:==:var tooltipBuilder:==:powerbi . visuals . tooltipBuilder ;
var mac = evt . detail . mac ;:==:var blob:==:evt . detail . blob ;
var top = region . top ;:==:var left:==:region . left ;
var Schema = mongoose . Schema ;:==:var moment:==:require ( ' moment ' ) ;
var protocol = require ( ' pomelo - protocol ' ) ;:==:var logger:==:require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;
var cellSizeAndPositionGetter = _ ref . cellSizeAndPositionGetter ;:==:var sectionSize:==:_ ref . sectionSize ;
var method = this . method ;:==:var s:==:this . res . statusCode ;
var number = opt . number  |  |  '' ;:==:var email:==:opt . email  |  |  '' ;
var w = e . currentTarget . w ;:==:var editor:==:this . editor ;
var osx = processRules ( path . join ( _ _ dirname , ' doc . keybindings . osx . json ' ) ) ;:==:var linux:==:processRules ( path . join ( _ _ dirname , ' doc . keybindings . linux . json ' ) ) ;
var filename = options . filename ;:==:var src:==:options . src ;
var Trainer = global . Trainer ;:==:var maxmin:==:global . maxmin ;
var modelMatrix = this . modelMatrix ;:==:var polylines:==:this . polylines ;
var featureNS = context [ ' featureNS ' ] ;:==:var propertyNames:==:context [ ' propertyNames ' ] ;
var lineNumber = parseInt ( lineNumbers [ i ] , 10 ) ;:==:var columnNumber:==:parseInt ( columnNumbers [ j ] , 10 ) ;
var totalY = totalYl + abs ( y - yl ) ;:==:var total:==:len ( totalx , totaly ) ;
var name = names [ i ] ;:==:var c:==:new mockContactAllFields ( ) ;
var a = x : ' a ' , y : ' a ' , z : ' a ' , t : ' a ' ;:==:var b:==:y : ' b ' , t : ' b ' ;
var tempPlane1 = this . tempPlane1 ;:==:var tempPlane2:==:this . tempPlane2 ;
var htmlAudio = hilo . htmlAudio ;:==:var webAudio:==:hilo . webAudio ;
var pageInfo = ret . pageInfo ;:==:var comments:==:ret . comments ;
var browserify = require ( ' gulp - browserify ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var exists = fs . exists  |  |  path . exists ;:==:var test:==:require ( ' tap ' ) . test ;
var marky = require ( ' marky ' ) ;:==:var median:==:require ( ' median ' ) ;
var width = doc . documentElement . boxObject . width ;:==:var height:==:doc . documentElement . boxObject . height ;
var accessKey = element [ 0 ] . accessKey ;:==:var input:==:that . _ innerWrapper . children ( ' input . k - input ' ) ;
var spaces = this . spaces , out = spine . Utils . setArraySize ( this . positions , spacesCount * 3 + 2 ) , world = null ;:==:var closed:==:path . closed ;
var row = Math . min ( this . rows , this . lines . length ) - 1 ;:==:var line:==:this . lines [ row ] ;
var createEnumType = powerbi . createEnumType ;:==:var selectionId:==:powerbi . visuals . selectionId ;
var fs = require ( ' fs - extra ' ) ;:==:var when:==:require ( ' when ' ) ;
var option = target . dataset . option ;:==:var keyRange:==:target . dataset . keyRange ;
var valueFormatter = powerbi . visuals . valueFormatter ;:==:var selectionIdBuilder:==:powerbi . visuals . selectionIdBuilder ;
var Properties = domPropertyConfig . properties  |  |  ;:==:var domAttributeNames:==:domPropertyConfig . domAttributeNames  |  |  ;
var require = patchRequire ( require ) ;:==:var utils:==:require ( ' utils ' ) ;
var headers = localStorage . getItem ( ' headers ' ) ;:==:var referer:==:localStorage . getItem ( ' referer ' )  |  |  defaultreferer ;
var firstInput = session . firstInput ;:==:var firstMultiple:==:session . firstMultiple ;
var intersectionPoint = ray_intersectsphere_intersectionpoint ;:==:var normal:==:ray_intersectsphere_normal ;
var getDraftEditorSelectionWithNodes = require ( ' getDraftEditorSelectionWithNodes ' ) ;:==:var moveSelectionBackward:==:require ( ' moveSelectionBackward ' ) ;
var backgroundBillboard = label . _ backgroundBillboard ;:==:var backgroundBillboardCollection:==:labelCollection . _ backgroundBillboardCollection ;
var winston = require ( ' winston ' ) ;:==:var util:==:require ( ' util ' ) ;
var calendar = culture . calendar ;:==:var patterns:==:calendar . patterns ;
var clickCallback = g . getFunctionOption ( ' clickCallback ' ) ;:==:var pointClickCallback:==:g . getFunctionOption ( ' pointClickCallback ' ) ;
var copyRowsLimit = settings . copyRowsLimit ;:==:var copyColsLimit:==:settings . copyColsLimit ;
var beforeFooter = this . _ options . tooltips . callbacks . beforeFooter . apply ( this , arguments ) ;:==:var footer:==:this . _ options . tooltips . callbacks . footer . apply ( this , arguments ) ;
var assert = require ( ' chai ' ) . assert ;:==:var helper:==:global . helper    ;
var rectangle = parameters . rectangle ;:==:var west:==:rectangle . west ;
var add = require ( ' add ' ) ;:==:var subtract:==:require ( ' subtract ' ) ;
var buf = this . buf _ ;:==:var inbuf:==:this . inbuf _ ;
var session = require ( ' express - session ' ) ;:==:var useragent:==:require ( ' express - useragent ' ) ;
var split = window . env . split ;:==:var s:==:editor . session ;
var tablixType = controls . tablixType ;:==:var jsCommon:==:window . jsCommon ;
var parseTreeVisitor = traceur . syntax . parseTreeVisitor ;:==:var treeWriter:==:traceur . outputgeneration . treeWriter ;
var bytes = device . bytes ;:==:var delay:==:device . delay ;
var scrollToColumn = props . scrollToColumn ;:==:var width:==:props . width ;
var x = location . x ;:==:var y:==:location . y ;
var imageKind = sharedUtil . imageKind ;:==:var assert:==:sharedUtil . assert ;
var index = bsCollapseCtrl . $ targets . indexOf ( element ) ;:==:var active:==:bsCollapseCtrl . $ activeIndexes ( ) ;
var props = _ assign ( , element . props ) ;:==:var key:==:element . key ;
var view = this . view ;:==:var isRTL:==:this . isRTL ;
var pink600 = exports . pink600 = ' # d81b60 ' ;:==:var pink700:==:exports . pink700    ' # c2185b ' ;
var Dialog = imports . Dialog ;:==:var ui:==:imports . ui ;
var timelines = entry . animation . timelines ;:==:var n:==:timelines . length ;
var expression = this . transformAny ( tree . expression ) ;:==:var statements:==:this . transformList ( tree . statements ) ;
var removeEventListener = eventTool . removeEventListener ;:==:var normalizeEvent:==:eventTool . normalizeEvent ;
var height = props . height ;:==:var overscanColumnCount:==:props . overscanColumnCount ;
var stringify = json . stringify ;:==:var parse:==:json . parse ;
var limeA200 = exports . limeA200 = ' # eeff41 ' ;:==:var limeA400:==:exports . limeA400    ' # c6ff00 ' ;
var sinon = require ( ' sinon ' ) ;:==:var vfs:==:require ( ' vfs - local ' ) ;
var w = this . _ width ;:==:var h:==:this . _ height ;
var doc = e . doc ;:==:var tab:==:e . doc . tab ;
var tap = entry . indexOf ( ' tap ' ) > = 0 ;:==:var drag:==:entry . indexOf ( ' drag ' ) >   0 ;
var metadata = imports . metadata ;:==:var question:==:imports [ ' dialog . question ' ] ;
var activeDrop = instance . activeDrop ;:==:var placeholder:==:instance . get ( ' placeholder ' ) ;
var debugCascadeColors = shadowMap . debugCascadeColors ;:==:var softShadows:==:shadowMap . softShadows ;
var hasOwnProperty = _ _ webpack_require _ _ ( 5 ) . hasOwnProperty ;:==:var getSafeProperty:==:_ _ webpack_require _ _ ( 17 ) . getSafeProperty ;
var action = this . viewOptions . list_actions . items [ i ] ;:==:var html:==:action . html ;
var isArray = sharedUtil . isArray ;:==:var isArrayBuffer:==:sharedUtil . isArrayBuffer ;
var zoomFactor = this . _ constraintsInDip ? 1 : webInspector . zoomManager . zoomFactor ( ) ;:==:var constraints:==:this . _ sidebarView ? this . _ sidebarView . constraints ( ) : new constraints ( ) ;
var c9 = imports . c9 ;:==:var ext:==:imports . ext ;
var parseTree = traceur . syntax . trees . parseTree ;:==:var parseTreeTransformer:==:traceur . codegeneration . parseTreeTransformer ;
var spriteFrameCache = cc . spriteFrameCache ;:==:var path:==:cc . path ;
var children = this . children ;:==:var l:==:children . length ;
var outlineWidth = wall . outlineWidth ;:==:var granularity:==:wall . granularity ;
var Legend = powerbi . visuals . Legend ;:==:var valueType:==:powerbi . valueType ;
var positions = value . _ positions ;:==:var length:==:positions . length ;
var packageName = p . packageName ;:==:var requestedVersion:==:p . requestedVersion ;
var eventMixin = hilo . eventMixin ;:==:var matrix:==:hilo . matrix ;
var normalized = this . normalizedCoords ;:==:var gvar:==:this . font . gvar ;
var propertyNameAssignment = traceur . syntax . trees . propertyNameAssignment ;:==:var restParameter:==:traceur . syntax . trees . restParameter ;
var User = db . model ( ' userWithNumberId ' , userSchema , random ( ) ) ;:==:var note:==:db . model ( ' noteWithNumberId ' , noteSchema , random ( ) ) ;
var operator = kw ( ' operator ' ) , atom = type : ' atom ' , style : ' atom ' , attribute = type : ' attribute ' , style : ' attribute ' ;:==:var type:==:kw ( ' typedef ' ) ;
var p = new operatorNode ( ' ^ ' , ' pow ' , [ o , a ] ) ;:==:var n:==:new functionAssignmentNode ( ' f ' , [ ' x ' ] , p ) ;
var dynCall_viiiii = Module [ ' dynCall_viiiii ' ] = asm [ ' dynCall_viiiii ' ] ;:==:var dynCall_viffiii:==:Module [ ' dynCall_viffiii ' ]    asm [ ' dynCall_viffiii ' ] ;
var uglify   = require ( ' gulp - uglifyjs ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var once = Error ( ' once ' ) ;:==:var twice:==:Error ( ' twice ' ) ;
var node = this . _ node ;:==:var contentSize:==:node . _ contentSize , anchorPoint    node . _ anchorPoint , offsetPoint    node . _ offsetPoint ;
var blacklist = options . blacklist ;:==:var externalPlugins:==:options . externalPlugins  |  |  [ ] ;
var Foo = docSet . getByLongname ( ' foo ' ) [ 0 ] ;:==:var bar:==:docSet . getByLongname ( ' bar ' ) [ 0 ] ;
var defer = utils . deferred ;:==:var uuid:==:utils . uuid ;
var seq = item . seq ;:==:var metadata:==:JSON . parse ( item . metadata ) ;
var require   = patchRequire ( require ) ;:==:var fs:==:require ( ' fs ' ) ;
var help02 = document . getElementById ( ' help02 ' ) ;:==:var loadingText:==:document . getElementById ( ' loadingText ' ) ;
var method = options . method  |  |  ' GET ' ;:==:var headers:==:options . headers  |  |  ;
var testModule = reactNative . nativeModules ;:==:var deepDiffer:==:require ( ' deepDiffer ' ) ;
var jshint   = require ( ' gulp - jshint ' ) ;:==:var sass:==:require ( ' gulp - sass ' ) ;
var w = hand . width * this . scale ;:==:var h:==:hand . height * this . scale ;
var metrics = imports . metrics ;:==:var async:==:require ( ' async ' ) ;
var y = dot . attr ( ' cy ' ) ;:==:var yAxisx:==:( _ chart . _ yAxisx ( ) - _ chart . margins ( ) . left ) ;
var eventproxy = require ( ' eventproxy ' ) ;:==:var Message:==:models . Message ;
var width = e . dygraph . width _ ;:==:var height:==:e . dygraph . height _ ;
var nextChildid = nextChildiDs [ i ] ;:==:var nextChild:==:getItem ( nextChildid ) ;
var parseTree = traceur . syntax . trees . parseTree ;:==:var createFunctionDeclaration:==:parseTreeFactory . createFunctionDeclaration ;
var model = this . _ model ;:==:var animations:==:model . _ runtime . animations ;
var run = imports . run ;:==:var util:==:imports . util ;
var Color = jsCommon . color ;:==:var createClassAndSelector:==:jsCommon . cssConstants . createClassAndSelector ;
var month = this . $ wheelsMonth . find ( ' . selected ' ) . attr ( ' data - month ' ) ;:==:var year:==:this . $ wheelsYear . find ( ' . selected ' ) . attr ( ' data - year ' ) ;
var w = window . open ( undefined , iPython . _ target ) ;:==:var base_url:==:this . base_url ;
var opt = item . option ;:==:var keyInfo:==:item . keyInfo ;
var outer = hotspot . getObjectByName ( ' outer ' ) ;:==:var inner:==:hotspot . getObjectByName ( ' inner ' ) ;
var crypto = require ( ' crypto ' ) ;:==:var zlib:==:require ( ' zlib ' ) ;
var dynCall_v = Module [ ' dynCall_v ' ] = asm [ ' dynCall_v ' ] ;:==:var dynCall_viiiiii:==:Module [ ' dynCall_viiiiii ' ]    asm [ ' dynCall_viiiiii ' ] ;
var objectDescriptors = transformContext . objectDescriptors ;:==:var projectionOrdering:==:transformContext . projectionOrdering ;
var categoryDim = opt . categoryDim ;:==:var valueDim:==:opt . valueDim ;
var head = document . getElementsByTagName ( ' head ' ) [ 0 ]  |  |  document . documentElement ;:==:var s:==:document . createElement ( ' script ' ) ;
var $ cropper = self . $ cropper ;:==:var hidden:==:' cropper - hidden ' ;
var begin = opt . begin  |  |  opt . controls . find ( ' INPUT . begin - input ' ) . val ( ) ;:==:var end:==:opt . end  |  |  opt . controls . find ( ' INPUT . end - input ' ) . val ( ) ;
var KEY   = C . KEY   = 0x72 ;:==:var OBJECT:==:C . OBJECT    0x81 ;
var axe1 = obj . axe1  |  |  [ 1 , 0 , 0 ] ;:==:var axe2:==:obj . axe2  |  |  [ 1 , 0 , 0 ] ;
var modalTerminal = views . modalTerminal ;:==:var modalAlert:==:views . modalAlert ;
var HELPER = sym ( ' HELPER ' ) ;:==:var MATCH:==:sym ( ' MATCH ' ) ;
var property = propertyPathSelect . value ;:==:var additionalProperty:==:additionalPropertyPathSelect . value ;
var importDeclaration = traceur . syntax . trees . importDeclaration ;:==:var importBinding:==:traceur . syntax . trees . importBinding ;
var head = el . querySelector ( ' gui - list - view - head ' ) ;:==:var row:==:document . createElement ( ' gui - list - view - row ' ) ;
var deviceClass = windows . devices . enumeration . deviceClass ;:==:var displayOrientations:==:windows . graphics . display . displayOrientations ;
var domProperty = require ( ' domProperty ' ) ;:==:var reactdomComponentFlags:==:require ( ' reactdomComponentFlags ' ) ;
var domain     = zombie_array [ index ] [ ' domain ' ] ;:==:var port:==:zombie_array [ index ] [ ' port ' ] ;
var atNameDeclaration = traceur . syntax . trees . atNameDeclaration ;:==:var atNameExpression:==:traceur . syntax . trees . atNameExpression ;
var action = $ ( this ) . attr ( ' action ' ) ;:==:var a:==:plugins ( plugin ) . actions [ action ] ;
var hashish = require ( ' hashish ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var draftEntitySegments = require ( ' draftEntitySegments ' ) ;:==:var getRangesForDraftEntity:==:require ( ' getRangesForDraftEntity ' ) ;
var cron = require ( ' cron ' ) . cronJob ;:==:var nconf:==:require ( ' nconf ' ) ;
var text = credit . text ;:==:var link:==:credit . link ;
var underlineStyle = _ props2 . underlineStyle ;:==:var rows:==:_ props2 . rows ;
var uniqueIndex = store . getIndex ( ' uniqueIndex ' ) ;:==:var multirowIndex:==:store . getIndex ( ' multirowIndex ' ) ;
var edgeTypeOffset = this . _ edgeTypeOffset ;:==:var edgeFieldsCount:==:this . _ edgeFieldsCount ;
var options = this . options ;:==:var element:==:this . element ;
var options = this . options ;:==:var rule:==:repeat ( options . rule , options . ruleRepetition ) ;
var fs = require ( ' fs ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var x = self . endPoints [ 0 ] . x ;:==:var y:==:self . endPoints [ 0 ] . y ;
var boneName = skin . boneNames [ j ] ;:==:var bone:==:nodes [ 0 ] . findByName ( boneName ) ;
var c = new objectNode ( a : new symbolNode ( ' a ' ) , b : new constantNode ( 2 ) , c : new constantNode ( 3 ) ) ;:==:var d:==:new objectNode ( a : new symbolNode ( ' foo ' ) , b : new constantNode ( 2 ) ) ;
var d = this . z . redMul ( p . z . redAdd ( p . z ) ) ;:==:var e:==:b . redSub ( a ) ;
var inherits = require ( ' util ' ) . inherits ;:==:var Stream:==:require ( ' stream ' ) . Stream ;
var fs = require ( ' hexo - fs ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var createInteractivityService = powerbi . visuals . createInteractivityService ;:==:var valueFormatter:==:powerbi . visuals . valueFormatter ;
var p = server . port  |  |  server . clientPort ;:==:var host:==:server . host ;
var event = events [ 0 ] ;:==:var text:==:event . text ( ) ;
var isFunction = angular . isFunction ;:==:var isElement:==:angular . isElement ;
var Text = require ( ' Text ' ) ;:==:var renderApplication:==:require ( ' renderApplication ' ) ;
var should = require ( ' should ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var pctThreshold = metrics . pctThreshold ;:==:var histogram:==:metrics . histogram ;
var x = 400 + xx [ i ] * perspective ;:==:var y:==:300 + yy [ i ] * perspective ;
var min = data . min ;:==:var max:==:data . max ;
var disabled = props . disabled ;:==:var disabledStyle:==:props . disabledStyle ;
var async = require ( ' async ' ) ;:==:var p:==:path ;
var React = require ( ' React ' ) ;:==:var Prism:==:require ( ' Prism ' ) ;
var categoryPercentage = yScale . options . categoryPercentage ;:==:var barPercentage:==:yScale . options . barPercentage ;
var tile = context . tiles [ tileIndex ] ;:==:var sopMarkerUsed:==:context . cod . sopMarkerUsed ;
var isArray = _ _ dependency1 _ _ . isArray ;:==:var isFunction:==:_ _ dependency1 _ _ . isFunction ;
var reactdomNullInputValuePropHook = require ( ' reactdomNullInputValuePropHook ' ) ;:==:var reactdomInvalidariaHook:==:require ( ' reactdomInvalidariaHook ' ) ;
var y = Math . max ( readState . y  |  |  0 , 0 ) ;:==:var width:==:readState . width  |  |  gl . drawingBufferWidth ;
var children = span . children ;:==:var message:==:messages [ messages . length - 1 ] ;
var isNumber = leafletHelpers . isNumber ;:==:var isSameCenterOnMap:==:leafletHelpers . isSameCenterOnMap ;
var horizontalOrigin = billboard . horizontalOrigin ;:==:var verticalOrigin:==:billboard . _ verticalOrigin ;
var mcc = iccHelper . iccInfo . mcc ;:==:var mnc:==:iccHelper . iccInfo . mnc ;
var dx2 = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx2 ' , this . dx2 ) ) ) ) ;:==:var dy3:==:h * 0 . 5 * math . max ( 0 , math . min ( 1 , parseFloat ( mxUtils . getValue ( this . style , ' dy3 ' , this . dy3 ) ) ) ) ;
var immediate = immediateQueue . head ;:==:var tail:==:immediateQueue . tail ;
var lastQuadrant = instance . lastQuadrant ;:==:var quadrant:==:instance . quadrant ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var number = options . number ;:==:var enabled:==:! ! options . enabled ;
var createArrayLiteralExpression = traceur . codegeneration . parseTreeFactory . createArrayLiteralExpression ;:==:var createBlock:==:traceur . codegeneration . parseTreeFactory . createBlock ;
var rule = this . rule ( ) ;:==:var range:==:webInspector . textRange . createFromLocation ( rule . style . range . endLine , rule . style . range . endColumn + 1 ) ;
var a = new constantNode ( 1 ) ;:==:var n:==:new parenthesisNode ( a ) ;
var mesh = terrainData . _ mesh ;:==:var vertices:==:mesh . vertices ;
var z = this . z + 1 ;:==:var x:==:this . x * 2 ;
var data = connection . data ;:==:var network:==:data & & data . network ;
var target = e . htmlEvent . target ;:==:var gutter:==:plugin . diffview . gutterEl ;
var fs = require ( ' fs ' ) ;:==:var path:==:require ( ' canonical - path ' ) ;
var examplePages = constants . examplePages ;:==:var otherPages:==:constants . otherPages ;
var lab = exports . lab = Lab . script ( ) ;:==:var before:==:lab . before ;
var star = stars . eq ( i ) ;:==:var state:==:$ rootScope . states [ i ] ;
var _ im_flush_cache = Module [ ' _ im_flush_cache ' ] = asm [ ' _ im_flush_cache ' ] ;:==:var _ im_get_candidate_char:==:Module [ ' _ im_get_candidate_char ' ]    asm [ ' _ im_get_candidate_char ' ] ;
var WIDTH_INDEX = Polyline . WIDTH_INDEX ;:==:var POSITION_INDEX:==:Polyline . POSITION_INDEX ;
var fs = require ( ' fs ' ) ;:==:var http:==:require ( ' http ' ) ;
var ace = imports . ace ;:==:var menus:==:imports . menus ;
var files = self . filesOnlyList ( ) ;:==:var folders:==:self . foldersOnlyList ( ) ;
var touch = require ( ' touch ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var beta = grunt . option ( ' beta ' )  |  |  false ;:==:var alpha:==:grunt . option ( ' alpha ' )  |  |  false ;
var state = env [ env_state ] ;:==:var errflag:==:env [ env_errflag ] ;
var maxLine = options . maxLine  |  |  2 ;:==:var node:==:options . node ;
var x = dataPoint [ this . _ xField ] ;:==:var y:==:dataPoint [ this . _ yField ] ;
var width = option_consume ( options , ' html_width ' ) ;:==:var height:==:option_consume ( options , ' html_height ' ) ;
var chalk = require ( ' chalk ' ) ;:==:var path:==:require ( ' path ' ) ;
var reactInstanceMap = require ( ' reactInstanceMap ' ) ;:==:var reactTestUtils:==:require ( ' reactTestUtils ' ) ;
var length = Property . getValueOrUndefined ( cylinder . length , time ) ;:==:var topRadius:==:property . getValueOrUndefined ( cylinder . topRadius , time ) ;
var vid2 = document . getElementById ( ' vid2 ' ) ;:==:var btn1:==:document . getElementById ( ' btn1 ' ) ;
var f8Button = require ( ' f8Button ' ) ;:==:var react:==:require ( ' react ' ) ;
var registerWrapper = scope . registerWrapper ;:==:var wraphtmlCollection:==:scope . wraphtmlCollection ;
var sbsample = frame . sbsample [ ch ] ;:==:var filter:==:this . filter [ ch ] ;
var _   = _ dereq _ ( ' underscore ' ) ;:==:var events:==:_ dereq _ ( ' events ' ) ;
var longitude = latLon . longitude ;:==:var latitude:==:latLon . latitude ;
var loc = window . top . location ;:==:var origin:==:loc . origin ;
var width = tilingSprite . width ;:==:var height:==:tilingSprite . height ;
var sass   = require ( ' gulp - sass ' ) ;:==:var umd:==:require ( ' gulp - wrap - umd ' ) ;
var defaultTo = leafletHelpers . defaultTo ;:==:var markerClusterPlugin:==:leafletHelpers . markerClusterPlugin ;
var assert = require ( ' assert ' ) ;:==:var http:==:require ( ' http ' ) ;
var length = Compass . Points . length ;:==:var heading:==:Math . floor ( this . heading ) ;
var bindingIdentifier = traceur . syntax . trees . bindingIdentifier ;:==:var catch:==:traceur . syntax . trees . catch ;
var canEvaluate = util . canEvaluate ;:==:var isIdentifier:==:util . isIdentifier ;
var db = BrowserDB . db . _ db ;:==:var transaction:==:db . transaction ( ' icons ' , ' readwrite ' ) ;
var oTable = this . byId ( ' oTable ' ) ;:==:var oTableItem:==:this . byId ( ' oTableItem ' ) ;
var candidate = ice . candidate ;:==:var sdpmLineIndex:==:ice . sdpmLineIndex ;
var maxX = r1 . _ maxX > r2 . _ maxX ? r1 . _ maxX : r2 . _ maxX ;:==:var maxY:==:r1 . _ maxY > r2 . _ maxY ? r1 . _ maxY : r2 . _ maxY ;
var globalScope = sharedGlobal . globalScope ;:==:var pdfjs:==:sharedGlobal . pdfjs ;
var EXPRESSION_STATEMENT = ' EXPRESSION_STATEMENT ' ;:==:var FINALLY:==:' FINALLY ' ;
var c9 = imports . c9 ;:==:var ui:==:imports . ui ;
var casper = require ( ' casper ' ) . create ( ) ;:==:var bar:==:require ( ' bar ' ) ;
var assert = require ( ' assert - plus ' ) ;:==:var gatewayTimeoutError:==:require ( ' restify - errors ' ) . gatewayTimeoutError ;
var i = 0 , listening ;:==:var context:==:options . context , listeners    options . listeners ;
var properties = page . proxy ( ' properties ' ) ;:==:var category:==:page . category ( ) ;
var value = formatValue ( revenue  |  |  props . value ) ;:==:var nonInteraction:==:! ! ( props . nonInteraction  |  |  opts . nonInteraction ) ;
var tls = require ( ' tls ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var raisedButton = _ context$muiTheme . raisedButton ;:==:var disabled:==:props . disabled ;
var deepPurple100 = exports . deepPurple100 = ' # d1c4e9 ' ;:==:var deepPurple200:==:exports . deepPurple200    ' # b39ddb ' ;
var scheduler = this . scheduler ;:==:var promise:==:this . promise ;
var offset = $ ( nTd ) . offset ( ) ;:==:var filler:==:this . dom . filler ;
var textToHighlight = _ ref . textToHighlight ;:==:var sanitize:==:_ ref . sanitize ;
var translate_content = $ ( ' . translate_content ' ) ;:==:var charts_more:==:$ ( ' . charts_more ' ) ;
var startIndex = _ ref3 . startIndex ;:==:var stopIndex:==:_ ref3 . stopIndex ;
var r = extendsModel . relationships [ i ] ;:==:var name:==:constantize ( r . name ) ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var colorFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' colorFieldTestObject ' ) ) ;
var options = that . options ;:==:var overflowWrapper:==:that . _ overflowWrapper ( ) ;
var d = Promise . defer ( ) ;:==:var p:==:d . promise ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var header:==:require ( ' gulp - header ' ) ;
var post_logout_redirect_uri = _ ref . post_logout_redirect_uri ;:==:var data:==:_ ref . data ;
var points = options . points ;:==:var times:==:options . times ;
var column = itemPosition . column ;:==:var left:==:itemPosition . left ;
var legendPosition = powerbi . visuals . legendPosition ;:==:var baseAnimator:==:powerbi . visuals . baseAnimator ;
var question = imports [ ' dialog . question ' ] ;:==:var preload:==:imports [ ' layout . preload ' ] ;
var onlyActiveOnIndex = _ props2 . onlyActiveOnIndex ;:==:var props:==:_ objectWithoutProperties ( _ props2 , [ ' to ' , ' query ' , ' hash ' , ' state ' , ' activeClassName ' , ' activeStyle ' , ' onlyActiveOnIndex ' ] ) ;
var fround = stdlib . Math . fround ;:==:var value:==:env . value | 0 ;
var colors = require ( ' colors ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var methods = vm . $ options . methods ;:==:var method:==:methods & & methods [ handler ] ;
var search = location . search ;:==:var hash:==:location . hash ;
var parser = require ( ' socket . io - parser ' ) ;:==:var url:==:require ( ' url ' ) ;
var instance = this . h ( ' instance ' ) ;:==:var color:==:this . h ( ' color ' ) ;
var H = require ( ' Header ' ) ;:==:var React:==:require ( ' React ' ) ;
var minWidth = this . _ minWidth ;:==:var entryTotalTimes:==:timelineData . entryTotalTimes ;
var View = require ( ' View ' ) ;:==:var webView:==:require ( ' webView ' ) ;
var nodeList = scope . wrappers . nodeList ;:==:var getTreeScope:==:scope . getTreeScope ;
var headerTypes = parseOutput . headerTypes ;:==:var errors:==:parseOutput . errors ;
var use = this . _ use ;:==:var iframe:==:this . _ iframe ;
var length   = enumerator . length ;:==:var promise:==:enumerator . promise ;
var deviceClass = windows . devices . enumeration . deviceClass ;:==:var display:==:windows . graphics . display ;
var sliced = require ( ' sliced ' ) ;:==:var jsesc:==:require ( ' jsesc ' ) ;
var subscriptions = program . subscriptions ;:==:var view:==:program . view ;
var jshint   = require ( ' gulp - jshint ' ) ;:==:var uglify:==:require ( ' gulp - uglifyjs ' ) ;
var lat = e . latLng . lat ( ) ;:==:var lng:==:e . latLng . lng ( ) ;
var cancel = wrapCallback ( controller , options . cancel ) ;:==:var frustum:==:camera . frustum ;
var skinnedNodesIds = model . _ loadResources . skinnedNodesIds ;:==:var nodes:==:model . gltf . nodes ;
var products = track . products ( ) ;:==:var event:==:track . event ( ) ;
var errors = require ( ' restify - errors ' ) ;:==:var tooManyRequestsError:==:errors . tooManyRequestsError ;
var key = new Buffer ( keyLen ) ;:==:var iv:==:new buffer ( ivLen ) ;
var yAxis = this . chart . getModel ( ) . getComponent ( ' yAxis ' , 0 ) ;:==:var scale:==:yAxis . axis . scale ;
var Person = db . model ( ' gh4234 ' , personSchema ) ;:==:var blogPost:==:db . model ( ' gh4234_0 ' , blogPostSchema ) ;
var reportEvents = t . reportEvents ;:==:var getEventEnd:==:t . getEventEnd ;
var value = eventBox . value ;:==:var timescale:==:eventBox . timescale ;
var options = this . options ;:==:var viewMode:==:options . viewMode ;
var complete = wrapCallback ( controller , options . complete ) ;:==:var cancel:==:wrapCallback ( controller , options . cancel ) ;
var i d = metadata . i d ;:==:var data:==:unstringifyDoc ( item . data , i d , item . rev ) ;
var concat = require ( ' gulp - concat ' ) ;:==:var declare:==:require ( ' gulp - declare ' ) ;
var list = caller . find ( ' . neighbors - interface - list ' ) ;:==:var continued:==:caller . find ( ' . neighbors - list - continued ' ) ;
var textGap = visualMapModel . get ( ' textGap ' ) ;:==:var textStyleModel:==:visualMapModel . textStyleModel ;
var hashish = require ( ' hashish ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var granularity = rectangle . granularity ;:==:var stRotation:==:rectangle . stRotation ;
var createBlock = parseTreeFactory . createBlock ;:==:var createConditionalExpression:==:parseTreeFactory . createConditionalExpression ;
var VERTICAL_ORIGIN_INDEX = Billboard . VERTICAL_ORIGIN_INDEX = 5 ;:==:var SCALE_INDEX:==:Billboard . SCALE_INDEX    6 ;
var rot = m . rotation ;:==:var distance:==:m . distance ;
var beforeFooter = callbacks . beforeFooter . apply ( me , arguments ) ;:==:var footer:==:callbacks . footer . apply ( me , arguments ) ;
var hasChanges = this . _ hasChanges ( itemId ) ;:==:var columns:==:this . columns ( ) ;
var begin = match . begin ;:==:var end:==:match . end ;
var dictionaryValues = lzwState . dictionaryValues ;:==:var dictionaryLengths:==:lzwState . dictionaryLengths ;
var height = this . app . graphicsDevice . height ;:==:var width:==:this . app . graphicsDevice . width ;
var hierarchyNavigator = this . _ owner . owner . owner . hierarchyNavigator ;:==:var binder:==:this . binder ;
var MONGODB_NEW = nconf . get ( ' MONGODB_NEW ' ) ;:==:var taskDefaults:==:common . taskDefaults ;
var geometry = this . line . geometry ;:==:var components:==:geometry . components ;
var target = targets . eq ( i ) ;:==:var name:==:get_name ( target ) ;
var surface = this . _ surface ;:==:var pass:==:frameState . passes ;
var store_id = $ ( this ) . attr ( ' gs_store_id ' ) ;:==:var title:==:$ ( this ) . attr ( ' gs_title ' ) ? $ ( this ) . attr ( ' gs_title ' ) : '' ;
var images = [ ' gulpfile . js ' ] . concat ( paths . images ) ;:==:var js:==:[ ' gulpfile . js ' ] . concat ( paths . js ) ;
var conn = simslot . conn ;:==:var voice:==:conn . voice ;
var newAudioChannel = obj . newAudioChannel ;:==:var activeAudioChannels:==:obj . activeAudioChannels ;
var componentBuffer = lastState . componentBuffer ;:==:var key:==:lastState . key ;
var fs = require ( ' fs - extra ' ) ;:==:var gulp:==:require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;
var busytimeId = this . h ( ' busytimeId ' ) ;:==:var color:==:this . h ( ' color ' ) ;
var mkdirp = denodeify ( require ( ' mkdirp ' ) ) ;:==:var rimraf:==:denodeify ( require ( ' rimraf ' ) ) ;
var unit = options . unit  |  |  ' px ' ;:==:var color:==:options . color ;
var usage = getOption ( options , ' usage ' , ' string ' , [ ' sort ' , ' search ' ] , ' sort ' ) ;:==:var sensitivity:==:getOption ( options , ' sensitivity ' , ' string ' , [ ' base ' , ' accent ' , ' case ' , ' variant ' ] , undefined ) ;
var oldItem = event . detail . oldItem ;:==:var newItem:==:event . detail . newItem ;
var fs = require ( ' fs ' ) ;:==:var del:==:require ( ' del ' ) ;
var m = math . matrix ( [ [ 5 , 0 , 15 ] , [ 223 , 0 , 34 . 5 ] , [ 1 , 0 , 19 ] ] , ' dense ' ) ;:==:var r:==:math . qr ( m ) ;
var tmpl = ref . tmpl ;:==:var css:==:ref . css ;
var username = $ ( this ) . parents ( ' . innerMarbleWrap ' ) . parents ( ' . marblesWrap ' ) . attr ( ' username ' ) ;:==:var owner_id:==:$ ( this ) . parents ( ' . innerMarbleWrap ' ) . parents ( ' . marblesWrap ' ) . attr ( ' owner_id ' ) ;
var min = that . options . min ;:==:var element:==:that . element ;
var book = data . goodreadsResponse . book ;:==:var description:==:book . description . text  |  |  ' description unavailable ' ;
var strict = options . strict ;:==:var container:==:this . container ;
var sbTree = mod . sbTree ;:==:var updateChild:==:mod . updateChild ;
var list = this . _ list ;:==:var groupKey:==:list . getItemFromKey ( key ) . groupKey ;
var updateClasses = _ tetherBase$Utils . updateClasses ;:==:var defer:==:_ tetherBase$Utils . defer ;
var g = convertRGB ( this . g ) ;:==:var b:==:convertRGB ( this . b ) ;
var hash = _ props2 . hash ;:==:var state:==:_ props2 . state ;
var mongoClient = configuration . require . mongoClient ;:==:var domain:==:require ( ' domain ' ) ;
var argsArray = operatorList . argsArray ;:==:var fnArray:==:operatorList . fnArray ;
var draftModifier = require ( ' draftModifier ' ) ;:==:var draftOffsetKey:==:require ( ' draftOffsetKey ' ) ;
var corner = choice . corner ;:==:var pos:==:choice . pos ;
var containedNodes = clusterNode . containedNodes ;:==:var containedEdges:==:clusterNode . containedEdges ;
var positions = new Array ( positionsLength ) ;:==:var holes:==:holesLength > 0 ? new array ( holesLength ) : undefined ;
var util = require ( ' util ' ) ;:==:var yeoman:==:require ( ' yeoman - generator ' ) ;
var rename   = require ( ' gulp - rename ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var timelineData = this . _ timelineData ( ) ;:==:var entryStartTimes:==:timelineData . entryStartTimes ;
var color = getStyleProperty ( item , styleContextStack , ' color ' , ' black ' ) ;:==:var decoration:==:getStyleProperty ( item , styleContextStack , ' decoration ' , null ) ;
var zapfDingbatsEncoding = coreEncodings . zapfDingbatsEncoding ;:==:var getEncoding:==:coreEncodings . getEncoding ;
var ttl = cursor . value . _ ttl ;:==:var lastModified:==:cursor . value . _ lastModified ;
var weibo = validator . trim ( req . body . weibo ) ;:==:var signature:==:validator . trim ( req . body . signature ) ;
var y = this . normal . y ;:==:var z:==:this . normal . z ;
var checked = this . checkedWaypoints [ mwpid ] ;:==:var label:==:container . appendChild ( document . createElement ( ' label ' ) ) ;
var EOL = require ( ' os ' ) . EOL ;:==:var Protocol:==:require ( ' _ debugger ' ) . Protocol ;
var translateX = this . _ reduceTranslateValues ( ' translatex ' , this . _ translatex ) ;:==:var translatey:==:this . _ reduceTranslateValues ( ' translatey ' , this . _ translatey ) ;
var action = _ ref$action = = = undefined ? ' setItem ' : _ ref$action ;:==:var key:==:_ ref . key ;
var webview = this . webview ;:==:var arg:==:event . args [ 0 ] ;
var x = this . textBounds . x ;:==:var y:==:this . textBounds . y ;
var w = map ( i , 0 , corrBuff . length , 0 , width ) ;:==:var h:==:map ( corrBuff [ i ] , -1 , 1 , height , 0 ) ;
var typedef = typedefs [ typedefs . length - 1 ] ;:==:var type:==:typedef . types [ 0 ] ;
var vDiff   = this . vDiff ;:==:var impulse1:==:this . impulse1 ;
var a = vdot ( n , seg . ta ) - seg . r ;:==:var b:==:vdot ( n , seg . tb ) - seg . r ;
var content2 = tree . content2 = b . firstChild ;:==:var sr3:==:tree . sr3    b . createShadowRoot ( ) ;
var winston = require ( ' winston ' ) ;:==:var os:==:require ( ' os ' ) ;
var options = obj . options ;:==:var key:==:event . keyCode  |  |  ( extra & & extra . keyCode ) ;
var $ element = this . $ element ;:==:var element:==:$ element [ 0 ] ;
var visualDataRoleKind = powerbi . visualDataRoleKind ;:==:var dataLabelUtils:==:powerbi . visuals . dataLabelUtils ;
var status = response [ ' @status ' ] ;:==:var reason:==:response [ ' @reason ' ] ;
var UNSUPPORTED_FEATURES = sharedUtil . unsupported_features ;:==:var imageKind:==:sharedUtil . imageKind ;
var scale = event . scale  |  |  1 ;:==:var rotation:==:event . rotation  |  |  0 ;
var x = startPoint . x - endPoint . x ;:==:var y:==:endPoint . y - startPoint . y ;
var nodeNameOffset = snapshot . _ nodeNameOffset ;:==:var nodes:==:snapshot . nodes ;
var e = fulfillThenableSoon ( ' e ' , 40 ) ;:==:var f:==:fulfillBuiltInSoon ( ' f ' , 30 ) ;
var command = commandList [ i ] ;:==:var pass:==:command . pass ;
var encodeEntityRanges = require ( ' encodeEntityRanges ' ) ;:==:var encodeInlineStyleRanges:==:require ( ' encodeInlineStyleRanges ' ) ;
var pointPrimitive = item . pointPrimitive ;:==:var billboard:==:item . billboard ;
var width = bounds . z * _ width * _ pixelRatio ;:==:var height:==:bounds . w * _ height * _ pixelRatio ;
var a = Ext . lib . Event . getTarget ( b ) ;:==:var d:==:this . view . findRowIndex ( a ) ;
var brown500 = exports . brown500 = ' # 795548 ' ;:==:var brown600:==:exports . brown600    ' # 6d4c41 ' ;
var c = typeof mc ;:==:var d:==:typeof md ;
var sprite = this . sprite ;:==:var spriteAtlas:==:this . spriteAtlas ;
var dt   = this . s . dt ;:==:var details:==:this . c . details ;
var date = this . _ validate ( year , month , day , main . local . invalidMonth ) ;:==:var year:==:date . year ( ) ;
var session = renderer . session ;:==:var size:==:renderer . $ size ;
var entity = r . entity ;:==:var styleEntity:==:r . styleEntity ;
var minHelpCol = config . minHelpCol  |  |  20 ;:==:var maxHelpCol:==:config . maxHelpCol  |  |  40 ;
var keep_quoted = options . keep_quoted ;:==:var debug:==:options . debug !    false ;
var mockery = require ( ' mockery ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var bubble = tree . bubbleCheck ;:==:var cascade:==:tree . cascadeCheck ;
var report_plugins = Nightscout . report_plugins ;:==:var scaledTreatmentbg:==:report_plugins . utils . scaledTreatmentbg ;
var span = div . appendChild ( document . createElement ( ' span ' ) ) ;:==:var button:==:span . appendChild ( document . createElement ( ' button ' ) ) ;
var deltaControllerPosition = this . deltaControllerPosition ;:==:var hand:==:( controller ? controller . hand : undefined )  |  |  default_handedness ;
var w = texture . width ;:==:var h:==:texture . height ;
var index = message ? stack . indexOf ( message ) : -1 ;:==:var actual:==:err . actual ;
var dom = this . dom ;:==:var menu:==:dom . menu ;
var dontPush = opt_dontpush  |  |  false ;:==:var curSlide:==:this . curSlide _ ;
var setWrapper = scope . setWrapper ;:==:var unwrap:==:scope . unwrap ;
var el = this . element ;:==:var o:==:this . options ;
var vLayout1 = new verticalLayout ( ' vLayout1 ' ) ;:==:var vLayout2:==:new verticalLayout ( ' vLayout2 ' ) ;
var Text = require ( ' f8Text ' ) ;:==:var touchableOpacity:==:require ( ' touchableOpacity ' ) ;
var A = db . model ( ' A ' , name : String , _ i d : Number ) ;:==:var B:==:db . model ( ' B ' , other : Number ) ;
var entity = geometryUpdater . _ entity ;:==:var polygon:==:entity . polygon ;
var mom = $ . fullCalendar . moment . parseZone ( ' 2014 - 06 - 08 ' ) ;:==:var clone:==:mom . clone ( ) ;
var width = this . props . style . width ;:==:var height:==:this . props . style . height ;
var snippetMap = this . snippetMap ;:==:var snippetNameMap:==:this . snippetNameMap ;
var activityIndicator = require ( ' activityIndicator ' ) ;:==:var edgeInsetsPropType:==:require ( ' edgeInsetsPropType ' ) ;
var range = math . range ;:==:var pow:==:math . pow ;
var fontColor = fontColorHelper . getColorForMeasure ( objects , ' ' ) ;:==:var show:==:powerbi . dataViewObjects . getValue ( objects , properties [ ' show ' ] , defaultSettings . show ) ;
var segment = segments [ segIndex ] ;:==:var start:==:segment . start , end    segment . end ;
var n = document . createElement ( ' script ' ) ;:==:var s:==:document . getElementsByTagName ( ' script ' ) [ 0 ] ;
var pruned = Object . keys ( debugInfo . pruned ) ;:==:var flattened:==:object . keys ( debugInfo . flattened ) ;
var inherits = utils . inherits ;:==:var fs:==:require ( ' fs ' ) ;
var iceCandidate = w . mozrtcIceCandidate  |  |  w . rtcIceCandidate ;:==:var iceServers:==:window . iceServers  |  |  [ ] ;
var value = promise . _ value ;:==:var listeners:==:promise . _ listeners ;
var moment = vis . moment ;:==:var dataSet:==:vis . dataSet ;
var w = ( width * cellWidth ) ;:==:var h:==:( height * cellHeight ) ;
var start = node . start ;:==:var children:==:node . children ;
var fixedDataTableColumnGroup = require ( ' fixedDataTableColumnGroup . react ' ) ;:==:var fixedDataTableColumn:==:require ( ' fixedDataTableColumn . react ' ) ;
var cache = this . cache ;:==:var cacheCount:==:this . cacheCount ;
var d = new assignmentNode ( a , x ) ;:==:var e:==:new constantNode ( 3 ) ;
var yScale3 = chart . scales . yScale3 ;:==:var yScale4:==:chart . scales . yScale4 ;
var Plugin = imports . Plugin ;:==:var commands:==:imports . commands ;
var runPostSets = module [ ' runPostSets ' ] = asm [ ' runPostSets ' ] ;:==:var dyncall_iiii:==:module [ ' dyncall_iiii ' ]    asm [ ' dyncall_iiii ' ] ;
var cacheFunctionsCrc32 = options [ ' cacheFunctionsCrc32 ' ] = = null ? false : options [ ' cacheFunctionsCrc32 ' ] ;:==:var promoteLongs:==:options [ ' promoteLongs ' ]     null ? true : options [ ' promoteLongs ' ] ;
var target = mapBrowserEvent . originalEvent . target ;:==:var tagName:==:target . tagName ;
var lightGreena200 = exports . lightGreena200 = ' # b2ff59 ' ;:==:var lightGreena400:==:exports . lightGreena400    ' # 76ff03 ' ;
var toIndexableString = pouchCollate . toIndexableString ;:==:var normalizeKey:==:pouchCollate . normalizeKey ;
var panini = require ( ' panini ' ) ;:==:var supercollider:==:require ( ' supercollider ' ) ;
var face = intersection . face ;:==:var vertices:==:object . geometry . vertices ;
var panels = imports . panels ;:==:var Menu:==:imports . Menu ;
var mutedErrorReporter = traceur . util . mutedErrorReporter ;:==:var keywords:==:traceur . syntax . keywords ;
var bot = this . createChar ( scale , ( delim . bot |  | delim . ext ) , font ) ;:==:var h:==:top . h + top . d + bot . h + bot . d ;
var title = options . title  |  |  ' ' ;:==:var message:==:options . message  |  |  ' ' ;
var isNumeric = math . isNumeric ;:==:var bignumber:==:math . bignumber ;
var entryTotalTimes = timelineData . entryTotalTimes ;:==:var entryLevels:==:timelineData . entryLevels ;
var rctDeviceEventEmitter = require ( ' rctDeviceEventEmitter ' ) ;:==:var accessibilityManager:==:nativeModules . accessibilityManager ;
var y = this . attribute ( ' y ' ) . toPixels ( ' y ' ) ;:==:var width:==:this . attribute ( ' width ' ) . toPixels ( ' x ' ) ;
var rowStopIndex = _ ref6 . rowStopIndex ;:==:var onRowsRendered:==:this . props . onRowsRendered ;
var lvalue = this . transformAny ( tree . lvalue ) ;:==:var typeAnnotation:==:this . transformAny ( tree . typeAnnotation ) ;
var dict = preEvaluatedFont . dict ;:==:var composite:==:preEvaluatedFont . composite ;
var a = new bigmath . expression . node . symbolNode ( ' a ' ) ;:==:var b:==:new bigmath . expression . node . constantNode ( 2 ) ;
var createBlock = parseTreeFactory . createBlock ;:==:var createCallExpression:==:parseTreeFactory . createCallExpression ;
var range = doc . sel . ranges [ i ] ;:==:var from:==:range . from ( ) , to    range . to ( ) ;
var suite = this . suite ;:==:var options:==:this . options ;
var parseSignedCookie = connect . utils . parseSignedCookie ;:==:var memoryStore:==:connect . middleware . session . memoryStore ;
var head = last . head . line = = to ? Pos ( to - 1 ) : last . head ;:==:var anchor:==:last . anchor . line     to ? Pos ( to - 1 ) : last . anchor ;
var x = box . x + margin ;:==:var y:==:box . y + margin ;
var minHeight = options . minHeight  |  |  0 . 0 ;:==:var maxHeight:==:options . maxHeight  |  |  10 . 0 ;
var barPercentage = xScale . options . barPercentage ;:==:var stacked:==:xScale . options . stacked ;
var O_RDWR = constants . O_RDWR  |  |  0 ;:==:var O_SYMLINK:==:constants . O_SYMLINK  |  |  0 ;
var i d = request . parameters . i d ;:==:var filePath:==:decodeuriComponent ( request . parameters . filePath ) ;
var exec = require ( ' child_process ' ) . exec ;:==:var read:==:require ( ' read ' ) ;
var buffer = this . _ buffer ;:==:var offset:==:this . _ offset + bytes - 1 ;
var instance = setImmediate . instance ;:==:var root:==:instance . root ;
var version = parserConf . version  |  |  2 ;:==:var baseMode:==:codeMirror . getMode ( config , parserConf . baseMode  |  |  ' null ' ) ;
var widthData = options . widthData ;:==:var keyExpression:==:options . keyExpression ;
var onRowMouseOver = _ ref . onRowMouseOver ;:==:var onRowMouseOut:==:_ ref . onRowMouseOut ;
var basename = require ( ' path ' ) . basename ;:==:var join:==:require ( ' path ' ) . join ;
var Rule = openLayers . rule ;:==:var filter:==:openLayers . filter ;
var polyline = polylines [ i ] ;:==:var positions:==:polyline . _ segments . positions ;
var mesh = this . _ registeredMeshes [ i ] . mesh ;:==:var delta:==:this . _ registeredMeshes [ i ] . delta ;
var wd = require ( ' wd ' ) ;:==:var http:==:require ( ' http ' ) ;
var baseTexture = texture . baseTexture ;:==:var frame:==:texture . frame ;
var scrollTop = _ ref . scrollTop ;:==:var verticalOffsetAdjustment:==:_ ref . verticalOffsetAdjustment ;
var next = changes . next ;:==:var length:==:text . length ;
var opt = t . opt ;:==:var trigger:==:t . trigger ;
var minimum = skirtOptions . minimum ;:==:var maximum:==:skirtOptions . maximum ;
var rowBytes = this . rowBytes ;:==:var bufferLength:==:this . bufferLength ;
var elem = _ ref . elem ;:==:var key:==:_ ref . key ;
var changeEventPlugin = require ( ' changeEventPlugin ' ) ;:==:var inputValueTracking:==:require ( ' inputValueTracking ' ) ;
var dx = Math . max ( 0 , Math . min ( bounds . width - 10 , parseFloat ( mxUtils . getValue ( this . state . style , ' dx ' , this . dx ) ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( 1 , parseFloat ( mxUtils . getValue ( this . state . style , ' dy ' , this . dy ) ) ) ) ;
var values = coerce ( ' values ' ) ;:==:var visible:==:coerce ( ' visible ' , values . length > 0 ) ;
var tabManager = imports . tabManager ;:==:var alert:==:imports [ ' dialog . alert ' ] . show ;
var smil = message . smil ;:==:var attachments:==:message . attachments ;
var monthNamesShort = this . _ get ( inst , ' monthNamesShort ' ) ;:==:var beforeShowDay:==:this . _ get ( inst , ' beforeShowDay ' ) ;
var transformation = crs . transformation ;:==:var scale:==:crs . scale ( path . _ map . getZoom ( ) ) ;
var settings = this . settings = this . data . slicerSettings ;:==:var domHelper:==:this . domHelper ;
var Text = registerObject ( document . createTextNode ( '' ) ) ;:==:var comment:==:registerObject ( document . createComment ( '' ) ) ;
var editingNode = instance . editingNode ;:==:var editingConnector:==:instance . editingConnector ;
var assert = require ( ' assert ' ) ;:==:var readFileSync:==:require ( ' fs ' ) . readFileSync ;
var key = self . $ keyAt ( item ) ;:==:var def:==:$ q . defer ( ) ;
var collection = db . collection ( ' simple_document_insert_with_function_safe ' ) ;:==:var o:==:configuration . writeConcernMax ( ) ;
var positions = corridorOutlineGeometry . _ positions ;:==:var height:==:corridorOutlineGeometry . _ height ;
var stylus   = require ( ' gulp - stylus ' ) ;:==:var autoprefixer:==:require ( ' gulp - autoprefixer ' ) ;
var nodeIndices = this . body . nodeIndices ;:==:var nodes:==:this . body . nodes ;
var target = event . target ;:==:var nodeName:==:target . nodeName ;
var rel = tag . rel ? ' rel= ' ' + tag . rel + ' ' ' : '' ;:==:var type:==:tag . type ? ' type ' ' + tag . type + ' ' ' : '' ;
var f8Button = require ( ' f8Button ' ) ;:==:var f8Colors:==:require ( ' f8Colors ' ) ;
var findreplace = imports . findreplace ;:==:var commands:==:imports . commands ;
var destroyTables = window . destroyTables ;:==:var fakeGroupRow:==:window . fakeGroupRow ;
var max = options . max_font  |  |  20 ;:==:var orderby:==:options . orderby  |  |  ' name ' ;
var motionVideo = document . getElementById ( ' motionVideo ' ) ;:==:var detailVideo:==:document . getElementById ( ' detailVideo ' ) ;
var dh = this . dh _ ;:==:var sel:==:dh . createDom ( ' select ' , ' i d ' : i d ) ;
var edgeTypeOffset = this . _ edgeTypeOffset ;:==:var edgeNameOffset:==:this . _ edgeNameOffset ;
var addresses = dom . querySelector ( ' # contacts - form - addresses ' ) ;:==:var dates:==:dom . querySelector ( ' # contacts - form - dates ' ) ;
var assert = require ( ' assert ' ) ;:==:var extend:==:require ( ' util ' ) . _ extend ;
var nonElementParentNodeInterface = scope . nonElementParentNodeInterface ;:==:var parentNodeInterface:==:scope . parentNodeInterface ;
var passkey = options . handle . passkey ;:==:var len:==:passkey . toString ( ) . length ;
var assert = require ( ' chai ' ) . assert ;:==:var proxyquire:==:require ( ' proxyquire ' ) ;
var Helpers = leafletHelpers ;:==:var errorHeader:==:leafletHelpers . errorHeader ;
var c9 = imports . c9 ;:==:var basename:==:require ( ' path ' ) . basename ;
var snapshot = this . _ snapshot ;:==:var nodes:==:snapshot . nodes ;
var ut = app . ns ( ' ut ' ) ;:==:var services:==:app . ns ( ' services ' ) ;
var contextObject = overlay . data ( ' contextObject ' ) ;:==:var border:==:instance . g . getById ( contextObject . i d + ' _ border ' ) ;
var spaces = exports . spaces ;:==:var singleTags:==:exports . singleTags ;
var interpret = require ( ' interpret ' ) ;:==:var path:==:require ( ' path ' ) ;
var fillThickness = ( settings . fillThickness = = null ) ? 1 : settings . fillThickness ;:==:var startCap:==:( settings . startCap     null ) ? 0 : settings . startCap ;
var display = cm . display , sel = cm . view . sel ;:==:var pos:==:posFromMouse ( cm , e ) , scrollPos    display . scroller . scrollTop ;
var summary = document . getElementById ( base + ' -summary ' ) ;:==:var trigger:==:document . getElementById ( base + ' -trigger ' ) ;
var edge = options . edge  |  |  ' 10 10 10 10 ' ;:==:var rowheight:==:options . rowheight  |  |  40 ;
var node = this . _ node ;:==:var rect:==:cc . rect ( 0 , 0 , node . _ contentSize . width , node . _ contentSize . height ) ;
var step = this . step ;:==:var end:==:this . end ;
var sqrt = Math . sqrt ;:==:var cos:==:Math . cos ;
var LRM = goog . i18n . bidi . Format . LRM ;:==:var RLM:==:goog . i18n . bidi . Format . RLM ;
var height = canvas . height ;:==:var naturalWidth:==:canvas . naturalWidth ;
var mongoClient = configuration . require . mongoClient ;:==:var url:==:configuration . url ( ) ;
var models = _ _ alloyId12 . models ;:==:var len:==:models . length ;
var fulfill = follower . _ fulfillmentHandler0 ;:==:var reject:==:follower . _ rejectionHandler0 ;
var opts = _ _ alloyId29 . opts  |  |  ;:==:var models:==:_ _ alloyId28 . models ;
var emptyStatement = traceur . syntax . trees . emptyStatement ;:==:var exportDeclaration:==:traceur . syntax . trees . exportDeclaration ;
var fs = require ( ' fs ' ) ;:==:var webpack:==:require ( ' webpack ' ) ;
var recid = $ ( el ) . attr ( ' recid ' ) ;:==:var field:==:$ ( el ) . attr ( ' field ' ) ;
var ware = require ( ' ware ' ) ;:==:var clone:==:require ( ' clone ' ) ;
var editorUi = this . editorUi ;:==:var graph:==:editorUi . editor . graph ;
var canvas = document . querySelector ( ' . canvas ' ) ;:==:var script:==:document . querySelector ( ' . script ' ) ;
var json = JSON . parse ( fs . readFileSync ( ' package . json ' , ' utf8 ' ) ) ;:==:var version:==:json . version ;
var rowClassNameGetter = props . rowClassNameGetter  |  |  emptyFunction ;:==:var rowPositionGetter:==:props . rowPositionGetter ;
var analytics = imports [ ' c9 . analytics ' ] ;:==:var cookie:==:imports [ ' analytics . cookie ' ] ;
var scale = options . scale  |  |  1 ;:==:var rotation:==:options . rotation  |  |  0 ;
var session = ed . session ;:==:var col:==:ed . selection . isEmpty ( ) ? ed . selection . lead . column : -1 ;
var minValue = e . data . minValue ;:==:var maxValue:==:e . data . maxValue ;
var express = require ( ' express ' ) ;:==:var config:==:require ( ' config ' ) ;
var debugPanel = imports . debugPanel ;:==:var ui:==:imports . ui ;
var resolution = frameState . viewState . resolution ;:==:var rotation:==:frameState . viewState . rotation ;
var ChildA = db . model ( ' ChildA ' , childSchema , ' children _ ' + random ( ) ) ;:==:var parenta:==:db . model ( ' parenta ' , parentSchema , ' parents _ ' + random ( ) ) ;
var snapshot = this . _ snapshot ;:==:var ordinal:==:this . ordinal ( ) ;
var list = opt_list  |  |  this . shortcuts _ ;:==:var index:==:opt_index  |  |  0 ;
var bufferView = bufferViews [ accessor . bufferView ] ;:==:var componentType:==:accessor . componentType ;
var centerRipple = _ props2 . centerRipple ;:==:var children:==:_ props2 . children ;
var username = new Element ( ' input ' , type : ' text ' , name : ' username ' , value : ' username ' ) ;:==:var password:==:new Element ( ' input ' , type : ' password ' , name : ' password ' , value : ' password ' ) ;
var Unit = math . type . Unit ;:==:var prod:==:math . prod ;
var dataView = window . dataView ;:==:var btoa:==:window . btoa ;
var assert = require ( ' assert ' ) ;:==:var Application:==:loopback . Application ;
var isDefined = leafletHelpers . isDefined ;:==:var createLeafletBounds:==:leafletBoundsHelpers . createLeafletBounds ;
var metadata = this . get ( ' metadata ' ) ;:==:var content:==:this . get ( ' content ' )  |  |  '' ;
var b = this . b ;:==:var j:==:this . jAcc*dt_coef ;
var reactdomFiberInput = require ( ' reactdomFiberInput ' ) ;:==:var reactdomFiberOption:==:require ( ' reactdomFiberOption ' ) ;
var identifierToken = traceur . syntax . identifierToken ;:==:var parseTreeType:==:traceur . syntax . parseTreeType ;
var x = sphere . center . x - this . origin . x ;:==:var y:==:sphere . center . y - this . origin . y ;
var defaultVisualHostServices = powerbi . visuals . defaultVisualHostServices ;:==:var hostControls:==:powerbi . visuals . hostControls ;
var x = ( frame ) ? frame . x : 0 ;:==:var y:==:( frame ) ? frame . y : 0 ;
var setVal = foreign . setVal ;:==:var getVal:==:foreign . getVal ;
var graph = new Dygraph ( graphDiv , data , opts ) ;:==:var legend:==:document . getElementsByClassName ( ' dygraph - legend ' ) ;
var tabManager = imports . tabManager ;:==:var question:==:imports [ ' dialog . question ' ] ;
var container = this . container ;:==:var options:==:util . extend ( , this . options ) ;
var selenium = require ( ' selenium - standalone ' ) ;:==:var querystring:==:require ( ' querystring ' ) ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var dynCall_iiii = Module [ ' dynCall_iiii ' ] = asm [ ' dynCall_iiii ' ] ;:==:var dynCall_vi:==:Module [ ' dynCall_vi ' ]    asm [ ' dynCall_vi ' ] ;
var padding = parseInt ( helpers . getStyle ( container , ' padding - top ' ) ) + parseInt ( helpers . getStyle ( container , ' padding - bottom ' ) ) ;:==:var h:==:container . clientHeight - padding ;
var resolve = _ _ dependency9 _ _ . resolve ;:==:var reject:==:_ _ dependency10 _ _ . reject ;
var fixedRowsTop = this . wtSettings . getSetting ( ' fixedRowsTop ' ) ;:==:var fixedRowsBottom:==:this . wtSettings . getSetting ( ' fixedRowsBottom ' ) ;
var watchify = require ( ' watchify ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var title = ' sdcard - detected - title ' ;:==:var body:==:' sdcard - unknown - size - then - tap - to - format - body ' ;
var inner = view . inner ;:==:var template:==:view . template ;
var w = region . width ;:==:var h:==:region . height ;
var parentNode = shape . node . parentNode ;:==:var nextSibling:==:shape . node . nextSibling ;
var x = this . centerCoordinates . x + radius * math . sin ( angleConvert * hsv . h ) ;:==:var y:==:this . centerCoordinates . y + radius * math . cos ( angleConvert * hsv . h ) ;
var x = pos . x + 30 ;:==:var body:==:client . findElement ( ' body ' ) ;
var env = process . env . NODE_ENV ;:==:var write:==:process . stdout . write ;
var random = p5 . prototype . random ;:==:var randomSeed:==:p5 . prototype . randomSeed ;
var cpy1 = shape . cpy1 ;:==:var cpx2:==:shape . cpx2 ;
var thead = goog . bind ( this . dom _ . createDom , this . dom _ , ' thead ' ) ;:==:var tr:==:goog . bind ( this . dom _ . createDom , this . dom _ , ' tr ' ) ;
var error = utils . debug ( ' components : material : error ' ) ;:==:var registerComponent:==:component . registerComponent ;
var keyCommandBackspaceWord = require ( ' keyCommandBackspaceWord ' ) ;:==:var keyCommandDeleteWord:==:require ( ' keyCommandDeleteWord ' ) ;
var _ stdout = _ stdout = allocate ( [ 0,0,0,0,0,0,0,0 ] , ' i8 ' , ALLOC_STATIC ) ;:==:var _ stdin:==:_ stdin allocate ( [ 0,0,0,0,0,0,0,0 ] , ' i8 ' , ALLOC_STATIC ) ;
var ui = imports . ui ;:==:var fs:==:imports . fs ;
var func = this . func ( ) ;:==:var receiver:==:this . receiver ( ) ;
var testSuite = goog . require ( ' goog . testing . testSuite ' ) ;:==:var verification:==:goog . require ( ' goog . labs . mock . verification ' ) ;
var rowIndex = _ ref3 . rowIndex ;:==:var cellRenderer:==:this . props . cellRenderer ;
var getSymbolsFonts = coreStandardFonts . getSymbolsFonts ;:==:var getNormalizedUnicodes:==:coreUnicode . getNormalizedUnicodes ;
var method = msg . data . method ;:==:var args:==:msg . data . args  |  |  [ ] ;
var dateIntervalSymbols = goog . require ( ' goog . i18n . dateIntervalSymbols ' ) ;:==:var object:==:goog . require ( ' goog . object ' ) ;
var i d = $ ( this ) . closest ( ' . cly - select ' ) . attr ( ' i d ' ) ;:==:var value:==:$ ( this ) . data ( ' value ' ) ;
var attributeLocations = defaultValue ( options . attributeLocations , defaultValue . empty_object ) ;:==:var interleave:==:defaultValue ( options . interleave , false ) ;
var getInvalidValueWarnings = powerbi . visuals . getInvalidValueWarnings ;:==:var legendProps:==:powerbi . visuals . legendProps ;
var buf = new uint8Array ( bufsize ) ;:==:var level:==:options ? options . level : z_default_compression ;
var _ im_get_predicts_utf8 = Module [ ' _ im_get_predicts_utf8 ' ] = asm [ ' _ im_get_predicts_utf8 ' ] ;:==:var _ im_delsearch:==:Module [ ' _ im_delsearch ' ]    asm [ ' _ im_delsearch ' ] ;
var lastY = instance . lastY ;:==:var lastX:==:instance . lastX ;
var result = bookKeeping . result ;:==:var keyPrefix:==:bookKeeping . keyPrefix ;
var totalWidth = layoutParam . totalWidth ;:==:var renderList:==:layoutParam . renderList ;
var url = apiCredentials . user_info . url ;:==:var field:==:apiCredentials . user_info . field ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var is:==:require ( ' is ' ) ;
var w = i * width + j ;:==:var p:==:pixels [ w ] ;
var lis = $ . event . listeners ;:==:var len:==:lis . length ;
var yes = binding . yes ;:==:var no:==:binding . no ;
var IF_STATEMENT = ' IF_STATEMENT ' ;:==:var IMPORT_DECLARATION:==:' IMPORT_DECLARATION ' ;
var callback = args . callback ;:==:var onSpeakingEnd:==:args . onSpeakingEnd ;
var body   = $ ( ' # grid_'+ this . name + ' _ body ' ) ;:==:var columns:==:$ ( ' # grid_'+ this . name + ' _ columns ' ) ;
var side_ns = sphereBox_side_ns ;:==:var side_ns1:==:sphereBox_side_ns1 ;
var net = imports . net ;:==:var c9:==:imports . c9 ;
var items = this . _ items . values ;:==:var cluster:==:this . _ cluster ;
var outlineColor = pointPrimitive . outlineColor ;:==:var red:==:color . floatToByte ( color . red ) ;
var http = require ( ' http ' ) ;:==:var findFreePort:==:require ( ' netutil ' ) . findFreePort ;
var archiver = require ( ' archiver ' ) ;:==:var metaScript:==:require ( ' metaScript ' ) ;
var node1 = new goog . ui . tree . treeNode ( ' node1 ' ) ;:==:var node2:==:new goog . ui . tree . treeNode ( ' node2 ' ) ;
var options = me . options ;:==:var canvas:==:me . canvas ;
var w = img . width ;:==:var h:==:img . height ;
var columnMaxWidth = _ props2 . columnMaxWidth ;:==:var columnMinWidth:==:_ props2 . columnMinWidth ;
var argv = require ( ' yargs ' ) . argv ;:==:var fs:==:require ( ' fs ' ) ;
var touchableOpacity = require ( ' touchableOpacity ' ) ;:==:var view:==:require ( ' view ' ) ;
var m = math . matrix ( [ [ 15 , 42 ] , [ 20 , 81 ] ] , ' sparse ' ) ;:==:var r:==:assert . throws ( math . qr . bind ( null , m ) ) ;
var southNormal = this . southNormal ;:==:var eastNormal:==:this . eastNormal ;
var vectorContext = e . vectorContext ;:==:var frameState:==:e . frameState ;
var autoprefixer = require ( ' gulp - autoprefixer ' ) ;:==:var ejs:==:require ( ' gulp - ejs ' ) ;
var glob   = require ( ' glob ' ) ;:==:var path:==:require ( ' path ' ) ;
var async = require ( ' async ' ) ;:==:var url:==:require ( ' url ' ) ;
var core = require ( ' mongodb - core ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var legendData = powerbi . visuals . legendData ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var decay = data . decay ;:==:var distance:==:data . distance ;
var o = Object . preventExtensions ( ) ;:==:var v:==:o . v    50 ;
var ngElement = this . _ getPreBuiltObjectByKeyId ( staticKeys . instance ( ) . ngElementId ) ;:==:var domElement:==:ngElement . domElement ;
var currentTime = julianDate . fromIso8601 ( clockPacket . clock . currentTime ) ;:==:var multiplier:==:clockPacket . clock . multiplier ;
var querystring = require ( ' querystring ' ) ;:==:var typer:==:require ( ' media - typer ' ) ;
var style = powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . style , trendLineHelper . defaults . lineStyle ) ;:==:var combineSeries:==:powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . combineSeries , trendLineHelper . defaults . combineSeries ) ;
var a = genModule ( ' module - async ' , 7 , 1 , 3 , 2 , [ ] ) ;:==:var b:==:genModule ( ' module - big - async ' , 5 , 2 , 9 , 2 , [ ] ) ;
var npm = require ( ' npm ' ) ;:==:var request:==:require ( ' request ' ) ;
var wot = this . wot ;:==:var topOverlay:==:wot . wtOverlays . topOverlay ;
var progress = options & & options . progress ;:==:var strategy:==:options & & options . strategy ;
var fs = require ( ' hexo - fs ' ) ;:==:var util:==:require ( ' hexo - util ' ) ;
var dropTargetItem = dragDropIns . dropTargetItem ;:==:var dropTargetBucket:==:dragDropIns . dropTargetBucket ;
var prefilteredCubeMap64 = this . prefilteredCubeMap64  |  |  globalSky64 ;:==:var prefilteredCubeMap32:==:this . prefilteredCubeMap32  |  |  globalSky32 ;
var tar = require ( ' tar ' ) ;:==:var fstream:==:require ( ' fstream ' ) ;
var width = props . width ;:==:var scrollLeft:==:state . scrollLeft ;
var svgUtil = powerbi . visuals . svgUtil ;:==:var objectEnumerationBuilder:==:powerbi . visuals . objectEnumerationBuilder ;
var inherits = require ( ' util ' ) . inherits ;:==:var extend:==:require ( ' util ' ) . _ extend ;
var columnStopIndex = _ ref . columnStopIndex ;:==:var horizontalOffsetAdjustment:==:_ ref . horizontalOffsetAdjustment ;
var cache = options . cache ;:==:var caches:==:options . caches ;
var unflattenr = util . unflattenr ;:==:var unflattenl:==:util . unflattenl ;
var scrollToAlignment = _ state . scrollToAlignment ;:==:var scrollTop:==:_ state . scrollTop ;
var uglify = require ( ' uglify - js ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var priority = job . priority ;:==:var work:==:job . _ work ;
var flag = mapAndFlag ? mapAndFlag . flag : 0 ;:==:var firstDominatedNodeIndex:==:this . _ firstDominatedNodeIndex ;
var activePanels = panels . activePanels ;:==:var active:==:panels . panels [ activePanels [ 0 ] ] ;
var node = options . node ;:==:var ellipsisIndex:==:options . ellipsisIndex  |  |  3 ;
var s = _ decodeint ( signature . slice ( 32 , 64 ) ) ;:==:var h:==:_ inthash ( utils . bytes2string ( rpe . concat ( publicKey ) ) + message ) ;
var caption = table . children ( ' caption ' ) ;:==:var captionSide:==:caption . length ? caption [ 0 ] . _ captionSide : null ;
var totalWidth = this . options . totalWidth ;:==:var keyArray:==:this . keyArrays . get ( totalWidth ) ;
var key = EvpKDF . create ( keySize : keySize + ivSize ) . compute ( password , salt ) ;:==:var iv:==:wordArray . create ( key . words . slice ( keySize ) , ivSize * 4 ) ;
var stage = new Hilo . Stage ( i d : ' stage ' ) ;:==:var container:==:new Hilo . Container ( i d : ' container ' ) ;
var menu = $ ( ' # menu ' ) . show ( ) ;:==:var scorecard:==:$ ( ' # scorecard ' ) . hide ( ) ;
var scrollTop = $ wrapper . scrollTop ( ) ;:==:var scrollLeft:==:$ wrapper . scrollLeft ( ) ;
var x = _ ref . x ;:==:var y:==:_ ref . y ;
var decorationStyle = getStyleProperty ( item , styleContextStack , ' decorationStyle ' , null ) ;:==:var background:==:getStyleProperty ( item , styleContextStack , ' background ' , null ) ;
var section = document . createElement ( ' section ' ) ;:==:var header:==:group . querySelector ( ' header ' ) ;
var q = a . dqm _ [ a . segment _ ] ;:==:var f:==:a . coeffs _ ;
var done = state . done ;:==:var value:==:state . value ;
var i d = node . i d ;:==:var module:==:get_module_details ( id , token ) ;
var indices = mesh . indices ;:==:var encoding:==:mesh . encoding ;
var uid = process . getuid ? process . getuid ( ) : 0 ;:==:var gid:==:process . getgid ? process . getgid ( ) : 0 ;
var read = require ( ' file - reader ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var node = this . body . nodes [ this . physicsBody . physicsNodeIndices [ i ] ] ;:==:var force:==:this . physicsBody . forces [ this . physicsBody . physicsNodeIndices [ i ] ] ;
var settings = imports . settings ;:==:var fs:==:imports . fs ;
var flags = scope . flags ;:==:var isIE:==:scope . isIE ;
var gulp = $ $ . help ( require ( ' gulp ' ) ) ;:==:var lazypipe:==:require ( ' lazypipe ' ) ;
var key = item . key ;:==:var instanceCount:==:item . instanceCount ;
var skin = ( rskin ? rskin + ' ' + rskin + ' -msg ' : '' )  |  | 'layui - layer - msg ' ;:==:var anim:==:doms . anim . length - 1 ;
var legacy = require ( ' character - entities - legacy ' ) ;:==:var invalid:==:require ( ' character - reference - invalid ' ) ;
var debug = require ( ' debug ' ) ;:==:var defaults:==:require ( ' defaults ' ) ;
var left = offset . left + pos . offsetX ;:==:var cloneClicks:==:togetherjs . config . get ( ' cloneClicks ' ) ;
var npm = think . npm ;:==:var reject:==:think . reject ;
var reactdomFeatureFlags = require ( ' reactdomFeatureFlags ' ) ;:==:var reactFeatureFlags:==:require ( ' reactFeatureFlags ' ) ;
var path = require ( ' path ' ) ;:==:var shell:==:require ( ' shelljs ' ) ;
var tree = imports . tree ;:==:var anims:==:imports . anims ;
var touchableWithoutFeedback = require ( ' touchableWithoutFeedback ' ) ;:==:var scrollListener:==:require ( ' nativeModules ' ) . scrollListener ;
var show = coerce ( contourDim + ' . show ' ) ;:==:var highlight:==:coerce ( contourDim + ' . highlight ' ) ;
var first = rows . first ;:==:var last:==:rows . last ;
var menus = imports . menus ;:==:var anims:==:imports . anims ;
var ejs = require ( ' ejs ' ) ;:==:var path:==:require ( ' path ' ) ;
var placeholder = el . getAttribute ( ' data - placeholder ' ) ;:==:var disabled:==:string ( el . getAttribute ( ' data - disabled ' ) )      ' true ' ;
var manager = options . manager ;:==:var skipStart:==:typeof options . skipStart     ' boolean ' ? options . skipStart : false ;
var y0 = this . y0 ;:==:var x0:==:this . x0 ;
var itemSize = visualMapModel . itemSize ;:==:var barGroup:==:this . _ shapes . barGroup ;
var sx = style . sx  |  |  0 ;:==:var sy:==:style . sy  |  |  0 ;
var bottom = options . bottom ;:==:var top:==:options . top ;
var getSelectAll = window . getSelectAll ;:==:var initRowActions:==:window . initRowActions ;
var leftVideo = document . getElementById ( ' leftVideo ' ) ;:==:var rightVideo:==:document . getElementById ( ' rightVideo ' ) ;
var keyEscapeUtils = require ( ' keyEscapeUtils ' ) ;:==:var traverseAllChildren:==:require ( ' traverseAllChildren ' ) ;
var User = db . model ( ' userWithStringId ' , userSchema , random ( ) ) ;:==:var note:==:db . model ( ' noteWithStringId ' , noteSchema , random ( ) ) ;
var $ links = this . $ links ;:==:var $ targets:==:this . $ targets ;
var e = evt . originalEvent ;:==:var file:==:e . dataTransfer . files [ 0 ] ;
var dynCall_vidi = Module [ ' dynCall_vidi ' ] = asm [ ' dynCall_vidi ' ] ;:==:var dynCall_iiii:==:Module [ ' dynCall_iiii ' ]    asm [ ' dynCall_iiii ' ] ;
var scope = evt . detail . scope ;:==:var inScope:==:! ! ( scope & & this . app . inScope ( scope ) ) ;
var sinon = require ( ' sinon ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var moment = require ( ' moment ' ) ;:==:var utc:==:moment . utc ;
var myObject = call : function ( ) return [ myObject , ' myObject . call ' ] ;:==:var myFunction:==:function ( arg1 ) return [ this , ' myFunction ' , arg1 ] ;
var quantity = Ext . getCmp ( ' time - quantity ' ) . getValue ( ) ;:==:var units:==:ext . getCmp ( ' time - units ' ) . getValue ( ) ;
var height = this . attribute ( ' height ' ) . toPixels ( ' y ' ) ;:==:var rx:==:this . attribute ( ' rx ' ) . toPixels ( ' x ' ) ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var program:==:traceur . syntax . trees . program ;
var minimumRed = defaultValue ( options . minimumRed , 0 ) ;:==:var maximumRed:==:defaultValue ( options . maximumRed , 1 . 0 ) ;
var queryFile = require ( ' pg - promise ' ) . queryFile ;:==:var path:==:require ( ' path ' ) ;
var path = require ( ' path ' ) ;:==:var mkdir:==:require ( ' mkdirp ' ) ;
var touches = originalEvent . touches & & originalEvent . touches . length ? originalEvent . touches : [ originalEvent ] ;:==:var e:==:( originalEvent . changedTouches & & originalEvent . changedTouches [ 0 ] )  |  |  touches [ 0 ] ;
var log = grunt . log ;:==:var fail:==:grunt . fail ;
var doc = options . document  |  |  document ;:==:var wind:==:options . window  |  |  window ;
var orangeA200 = exports . orangeA200 = ' # ffab40 ' ;:==:var orangeA400:==:exports . orangeA400    ' # ff9100 ' ;
var parse = require ( ' regjsparser ' ) . parse ;:==:var regenerate:==:require ( ' regenerate ' ) ;
var stream = require ( ' stream ' ) ;:==:var util:==:require ( ' util ' ) ;
var muiTheme = props . muiTheme ;:==:var className:==:props . className ;
var userId = this . getOption ( ' userId ' , ref . push ( ) . key ) ;:==:var userColor:==:this . getOption ( ' userColor ' , colorFromUserId ( userId ) ) ;
var ONESEC = constants . ONESEC ;:==:var EPOCHJD:==:constants . EPOCHJD ;
var host = parse ( url ) . hostname ;:==:var match:==:host . match ( regexp ) ;
var skip = that . listView . skip ( ) ;:==:var length:==:data . length ;
var index = Indexes [ indexIndex % indexes . length ] ;:==:var inline:==:bools [ inlineIndex % bools . length ] ;
var uiViewSettings = viewManagement . uiViewSettings ;:==:var userInteractionMode:==:viewManagement . userInteractionMode ;
var allOptions = _ _ webpack_require _ _ ( 59 ) . allOptions ;:==:var configureOptions:==:_ _ webpack_require _ _ ( 59 ) . configureOptions ;
var store = trans . objectStore ( this . _ store ) ;:==:var index:==:store . index ( ' busytimeId ' ) ;
var st = m . attributes . st . values ;:==:var length:==:st . length ;
var staticPrefix = options . staticPrefix ;:==:var nodeBin:==:options . nodeBin  |  |  [ ' node ' ] ;
var mysql = require ( ' mysql ' ) ;:==:var createConnection:==:mysql . createConnection ;
var body = this . transformAny ( tree . body ) ;:==:var catchBlock:==:this . transformAny ( tree . catchBlock ) ;
var pointPrimitives = pointPrimitiveCollection . _ pointPrimitives ;:==:var pointPrimitivesToUpdate:==:pointPrimitiveCollection . _ pointPrimitivesToUpdate ;
var ftyp = isoFile . getBox ( ' ftyp ' ) ;:==:var moov:==:isoFile . getBox ( ' moov ' ) ;
var c = Math . cos ( rad ) ;:==:var r:==:Math . floor ( Math . max ( 0 , -c ) * 255 ) ;
var literalExpression = traceur . syntax . trees . literalExpression ;:==:var objectPattern:==:traceur . syntax . trees . objectPattern ;
var setActive = docSet . getByLongname ( ' setActive ' ) [ 0 ] ;:==:var setBirthYear:==:docSet . getByLongname ( ' setBirthYear ' ) [ 0 ] ;
var clearOverlays = t . clearOverlays ;:==:var clearSelection:==:t . clearSelection ;
var createOperatorToken = parseTreeFactory . createOperatorToken ;:==:var createParenExpression:==:parseTreeFactory . createParenExpression ;
var path = require ( ' path ' ) ;:==:var touch:==:require ( ' touch ' ) ;
var everymodule = everyauth . everymodule ;:==:var pause:==:_ _ pause ( req ) ;
var x2 = line . x2 ;:==:var y2:==:line . y2 ;
var account = this . _ account ;:==:var w:==:new $ wbxml . Writer ( ' 1 . 3 ' , 1 , ' UTF-8 ' ) ;
var element = this . element = scrollViewOptions . el ;:==:var $ element:==:this . $ element    jqLite ( element ) ;
var X = opt_X  |  |  GLOBAL . X ;:==:var model:==:X . lookup ( modelName ) ;
var y = quaternion . y * inverseMagnitude ;:==:var z:==:quaternion . z * inverseMagnitude ;
var ranges = this . ranges ;:==:var editor:==:this . editor ;
var Item1 = db . model ( ' dynrefItem1 ' , item1Schema , ' gh3108_1 ' ) ;:==:var item2:==:db . model ( ' dynrefItem2 ' , item2Schema , ' gh3108_2 ' ) ;
var globe = controller . _ globe ;:==:var camera:==:scene . camera ;
var satisfies = semver . satisfies ;:==:var validRange:==:semver . validRange ;
var fontFaceObject = displayFontLoader . fontFaceObject ;:==:var fontLoader:==:displayFontLoader . fontLoader ;
var g = mixins . marginConvention ( my , svg ) ;:==:var line:==:d3 . svg . line ( ) . interpolate ( ' basis ' ) ;
var filter = utils . filter ;:==:var indexOf:==:utils . indexOf ;
var x = polyline . getAnchor ( last ) . x ;:==:var y:==:polyline . getAnchor ( last ) . y ;
var defaults = require ( ' defaults ' ) ;:==:var each:==:require ( ' each ' ) ;
var docId = data . docId ;:==:var userId:==:userIds . userId ;
var editor = ui . editor ;:==:var graph:==:editor . graph ;
var parsejson = require ( ' parsejson ' ) ;:==:var parseqs:==:require ( ' parseqs ' ) ;
var appName = this . context . appName ;:==:var orgName:==:this . context . orgName ;
var token = tokens [ idx ] ;:==:var order:==:token . order > 1 ? ' start ' ' + token . order + ' ' ' : '' ;
var channelName = msg . channelName ;:==:var service:==:msg . service ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var parseTreeTransformer:==:traceur . codegeneration . parseTreeTransformer ;
var height = element . height ;:==:var canvas:==:document . createElement ( ' canvas ' ) ;
var month = app . month ;:==:var weekdayHeaders:==:month . weekdayHeaders ;
var resource_type = option_consume ( options , ' resource_type ' , ' image ' ) ;:==:var version:==:option_consume ( options , ' version ' ) ;
var brushOption = cover . _ _ brushOption ;:==:var transformable:==:brushOption . transformable ;
var dx2 = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx2 ' , this . dx2 ) ) ) ) ;:==:var r:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' size ' , this . size ) ) ) ) ;
var onKeyDown = _ props3 . onKeyDown ;:==:var onKeyboardFocus:==:_ props3 . onKeyboardFocus ;
var value = input . value ;:==:var type:==:e . type ;
var template = config . template ;:==:var tags:==:contactsTag . filterTags ( type , null , config . tags ) ;
var optionToContent = model . get ( ' optionToContent ' ) ;:==:var contentToOption:==:model . get ( ' contentToOption ' ) ;
var port1 = channel . port1 ;:==:var port2:==:channel . port2 ;
var stack = Array . isArray ( e . stack ) ? e . stack : stacktraceParser . parse ( e . stack ) ;:==:var framesToPop:==:typeof e . framesToPop      ' number ' ? e . framesToPop : 0 ;
var direction = ray . direction ;:==:var hitPointWorld:==:intersectcapsule_hitpointworld ;
var hour = parseInt ( this . alarm . hour , 10 ) ;:==:var minute:==:parseInt ( this . alarm . minute , 10 ) ;
var Tokenizer = debugTokenizer ;:==:var mode:==:require ( editor2 . session . $ mode . $ i d ) . mode ;
var amount = send . amount_feedback ;:==:var address:==:$ scope . send . recipient_address ;
var video = instance . _ video ;:==:var sourceMp4:==:instance . _ sourceMp4 ;
var msub = cTop . createElement ( ' msub ' ) ;:==:var mrow:==:args ? args [ 0 ] : cTop . createElement ( ' mrow ' ) ;
var p = b . prob [ cw [ n ] ] [ a ] ;:==:var t:==:b . cost [ cw [ n ] ] [ a ] ;
var savedPose = this . savedPose ;:==:var hasPositionalTracking:==:this . hasPositionalTracking  |  |  checkHasPositionalTracking ( ) ;
var a = new THREE . Ray ( one3 . clone ( ) , new THREE . Vector3 ( 0 , 0 , 1 ) ) ;:==:var b:==:new THREE . Plane ( ) . setFromNormalAndCoplanarPoint ( new three . vector3 ( 0 , 0 , 1 ) , one3 . clone ( ) . sub ( new three . vector3 ( 0 , 0 , -1 ) ) ) ;
var el = this . el ;:==:var object3D:==:el . object3D ;
var a = SIMD . Float32x4 ( 16 . 0 , 9 . 0 , 4 . 0 , 1 . 0 ) ;:==:var c:==:SIMD . Float32x4 . replaceLane ( a , 3 , 20 . 0 ) ;
var fixedDataTableScrollHelper = require ( ' fixedDataTableScrollHelper ' ) ;:==:var fixedDataTableWidthHelper:==:require ( ' fixedDataTableWidthHelper ' ) ;
var data = layer . data ;:==:var width:==:layer . width ;
var Stream = require ( ' stream ' ) . Stream ;:==:var util:==:require ( ' util ' ) ;
var selector = request . selector ;:==:var sort:==:request . sort ;
var is = require ( ' is ' ) ;:==:var keys:==:require ( ' keys ' ) ;
var xml = require ( ' xml ' ) ;:==:var nconf:==:require ( ' nconf ' ) ;
var ellipsoid = defaultValue ( options . ellipsoid , ellipsoid . wgs84 ) ;:==:var height:==:defaultValue ( options . height , 0 ) ;
var Emitter = events . eventEmitter ;:==:var document:==:document . document ;
var maximumIndex = options . maximumIndex ;:==:var cacheSize:==:defaultValue ( options . cacheSize , 24 ) ;
var ifr = goog . dom . createElement ( ' iframe ' ) ;:==:var s:==:ifr . style ;
var gutterxUnit = parseFloat ( params . gutterxUnit ) ;:==:var edgexUnit:==:parseFloat ( params . edgexUnit ) ;
var ui = imports . ui ;:==:var focusManager:==:imports . focusManager ;
var renderDayEvents = t . renderDayEvents ;:==:var getMinTime:==:t . getMinTime ;
var code_point = utf8_code_point ;:==:var lower_boundary:==:utf8_lower_boundary ;
var color = new THREE . Color ( data . color ) . getHex ( ) ;:==:var decay:==:data . decay ;
var log = opts . log = = = false ? false : true ;:==:var estimate:==:typeof opts . estimate      ' number ' ? opts . estimate : null ;
var clipShape = zrUtil . extend ( , symbolMeta . clipShape ) ;:==:var valueDim:==:opt . valueDim ;
var maxZ = Math . min ( coverageArea . zoomMax , maxZoom ) ;:==:var bbox:==:coverageArea . bbox ;
var d = new mathArray . expression . node . constantNode ( 4 ) ;:==:var n:==:new mathArray . expression . node . arrayNode ( [ a , b , c , d ] ) ;
var height = itemLayout . height ;:==:var p:==:points [ 0 ] ;
var O = ES . toObject ( this ) ;:==:var n:==:es . toUint32 ( o . length ) ;
var i d = item . i d ;:==:var download:==:downloadsCache [ i d ] ;
var os = require ( ' os ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var getSafeProperty = _ _ webpack_require _ _ ( 17 ) . getSafeProperty ;:==:var setSafeProperty:==:_ _ webpack_require _ _ ( 17 ) . setSafeProperty ;
var fenceKey = geofenceValues . fenceKey ;:==:var singleUse:==:geofenceValues . singleUse ;
var parent = s . parent ;:==:var pinv:==:s . pinv ;
var arrayExtensions = jsCommon . arrayExtensions ;:==:var lazy:==:jsCommon . lazy ;
var childNodeInterface = scope . childNodeInterface ;:==:var getElementsByInterface:==:scope . getElementsByInterface ;
var commonmark = settings . commonmark ;:==:var gfm:==:settings . gfm ;
var head = ( document . getElementsByTagName ( ' head ' ) ) [ 0 ] ; if ( ! head ) head = document . bodyvar scrip:==:t:==:document . createElement ( ' script ' ) ;
var remoteDiff = diff . remoteDiff ;:==:var conflicts:==:diff . conflicts ;
var addNetworkUsageAlarm = window . parent . addNetworkUsageAlarm ;:==:var resetTelephony:==:window . parent . resetTelephony ;
var parse = require ( ' remark - parse ' ) ;:==:var stringify:==:require ( ' remark - stringify ' ) ;
var sum64 = utils . sum64 ;:==:var sum64_hi:==:utils . sum64_hi ;
var states = graph . view . states . getValues ( ) ;:==:var token:==:tokens [ 1 ] . toLowerCase ( ) ;
var dominatedNodes = this . _ dominatedNodes ;:==:var nodes:==:this . nodes ;
var e = Y . Cookie . getSub ( ' data ' , ' e ' ) ;:==:var g:==:y . cookie . getSub ( ' data ' , ' g ' ) ;
var dup = opts . dup ? protocol . DUP_MASK : 0 ;:==:var qos:==:opts . qos  |  |  0 ;
var plugins = Chart . plugins ;:==:var platform:==:Chart . platform ;
var targetEntity = field . targetEntity ( ) ;:==:var targetField:==:field . targetField ( ) ;
var edgeFieldsCount = this . _ edgeFieldsCount ;:==:var containmentEdges:==:this . containmentEdges ;
var teal300 = exports . teal300 = ' # 4db6ac ' ;:==:var teal400:==:exports . teal400    ' # 26a69a ' ;
var category = spec . category ;:==:var waitFor:==:( spec . waitFor     undefined ) ? true : spec . waitFor ;
var context = this . context ;:==:var loader:==:context . loader ;
var dataset = this . chart . data . datasets [ point . _ datasetIndex ] ;:==:var custom:==:point . custom  |  |  ;
var polyline = this . _ polyline ;:==:var polygon:==:this . _ polygon ;
var style = o . style ;:==:var props:==:this . getConcatenatedDisplayProps ( this . _ props ) , mtx    props . matrix ;
var o = this . options ;:==:var content:==:frame . children ( ' . content ' ) ;
var typescript = this . env . options . typescript ;:==:var bower:==:require ( path . join ( process . cwd ( ) , ' bower . json ' ) ) ;
var dataNode = dataNodes [ i ] ;:==:var name:==:queryStringAttribute ( dataNode , ' name ' ) ;
var weightedSample = global . weightedSample ;:==:var getopt:==:global . getopt ;
var commands = imports . commands ;:==:var proc:==:imports . proc ;
var binding = bindings [ i ] ;:==:var boundValue:==:boundValues [ i ] ;
var Node = test . Node ;:==:var File:==:test . File ;
var dynCall_viidd = Module [ ' dynCall_viidd ' ] = asm [ ' dynCall_viidd ' ] ;:==:var dynCall_viddii:==:Module [ ' dynCall_viddii ' ]    asm [ ' dynCall_viddii ' ] ;
var gulp = require ( ' gulp ' ) ;:==:var clean:==:require ( ' gulp - clean ' ) ;
var width = ( screen . width ) ? screen . width : '' ;:==:var height:==:( screen . height ) ? screen . height : '' ;
var undo = options . undo ;:==:var redo:==:options . redo ;
var n = number , c = isNan ( decimals = math . abs ( decimals ) ) ? 2 : decimals ;:==:var d:==:dec_point      undefined ? ' , ' : dec_point ;
var manifest = manifestModel . getValue ( ) ;:==:var period:==:manifest . period_asarray [ periodIdx ] ;
var assert = require ( ' assert ' ) ;:==:var format:==:require ( ' util ' ) . format ;
var createFunctionExpression = parseTreeFactory . createFunctionExpression ;:==:var createMemberExpression:==:parseTreeFactory . createMemberExpression ;
var fs = require ( ' fs - extra ' ) ;:==:var os:==:require ( ' os ' ) ;
var notification = element . hasClass ( ' togetherjs - notification ' ) ;:==:var modal:==:element . hasClass ( ' togetherjs - modal ' ) ;
var minimumBlue = defaultValue ( options . minimumBlue , 0 ) ;:==:var maximumBlue:==:defaultValue ( options . maximumBlue , 1 . 0 ) ;
var name = sanitize ( ( ( o . name?o . name : o . i d )  |  |  ' ' ) . toString ( ) ) ;:==:var topic:==:sanitize ( ( o . topic |  |  ' ' ) . toString ( ) ) ;
var stateMachine = traceur . syntax . trees . stateMachine ;:==:var switchStatement:==:traceur . syntax . trees . switchStatement ;
var scrollToAlignment = _ ref . scrollToAlignment ;:==:var scrollToIndex:==:_ ref . scrollToIndex ;
var batch_size = opts . batch_size  |  |  1 ;:==:var doc_ids:==:opts . doc_ids ;
var field = row . find ( ' . field ' ) . val ( ) ;:==:var op:==:row . find ( ' . op ' ) . val ( ) ;
var Number = platform . Number ;:==:var String:==:platform . String ;
var g = Math . floor ( this . green*255 ) ;:==:var b:==:Math . floor ( this . blue*255 ) ;
var SHOW_INDEX = Polyline . SHOW_INDEX = 1 ;:==:var WIDTH_INDEX:==:Polyline . WIDTH_INDEX    2 ;
var method = defaultValue ( options . method , ' get ' ) ;:==:var data:==:options . data ;
var parent = tElement . parent ( ) ;:==:var theme:==:getAttribute ( parent , ' theme ' )  |  |  uiSelectConfig . theme ;
var fs = require ( ' fs ' ) ;:==:var shell:==:require ( ' shelljs ' ) ;
var remoteTransport = kendo . data . remoteTransport ;:==:var dataSource:==:kendo . data . dataSource ;
var element = current . element ;:==:var childNodes:==:dom . childNodes ( dom . templateAwareRoot ( element ) ) ;
var isString = angular . isString ;:==:var isObject:==:angular . isObject ;
var exec = require ( ' child - process - promise ' ) . exec ;:==:var karma:==:require ( ' karma ' ) ;
var Node = cc . Node ;:==:var skinNode:==:ccs . skinNode ;
var z = zlevelList [ i ] ;:==:var layer:==:self . _ layers [ z ] ;
var e = URI . encode ;:==:var d:==:URI . decode ;
var addTooltip = powerbi . visuals . tooltipManager . addTooltip ;:==:var fromPoint:==:jsCommon . pixelConverter . fromPoint ;
var defaultThickness = parameters . defaultThickness ! = = undefined ? parameters . defaultThickness : 0 . 003 ;:==:var defaultColor:==:parameters . defaultColor !    undefined ? parameters . defaultColor : new three . color ( 0x000000 ) ;
var jumpList = startScreen . jumpList ;:==:var jumpListSystemGroupKind:==:startScreen . jumpListSystemGroupKind ;
var ccittFaxStream = coreStream . ccittFaxStream ;:==:var flateStream:==:coreStream . flateStream ;
var b = this . _ rgba [ 2 ] ;:==:var max:==:Math . max ( r , g , b ) ;
var start = requestParameters & & requestParameters . startDate ;:==:var end:==:requestParameters & & requestParameters . endDate ;
var orange200 = exports . orange200 = ' # ffcc80 ' ;:==:var orange300:==:exports . orange300    ' # ffb74d ' ;
var isContinuous = legendConfig . isContinuous = = null ? typeof data [ 0 ] = = = ' number ' : legendConfig . isContinuous ;:==:var height:==:isContinuous ? legendConfig . height : lineHeight * data . length ;
var fillStyle = params . fillStyle  |  |  ' black ' ;:==:var strokeStyle:==:params . strokeStyle  |  |  ' yellow ' ;
var arc = options . arc ? ( ( options . arc < = 0  |  |  options . arc > 1 ) ? 1 . 0 : options . arc ) : 1 . 0 ;:==:var closed:==:( options . closed      undefined ) ? true : options . closed ;
var View = require ( ' View ' ) ;:==:var statusBar:==:require ( ' statusBar ' ) ;
var move = onEvt ( doc , ' touchmove ' , this . move , this ) ;:==:var end:==:onEvt ( doc , ' touchend ' , ontouchend , this ) ;
var reactDebugTool = require ( ' reactDebugTool ' ) ;:==:var reactPerf:==:require ( ' reactPerf ' ) ;
var zlevelList = this . _ zlevelList = [ ] ;:==:var layers:==:this . _ layers    ;
var traceType = jsCommon . traceType ;:==:var jsCommon:==:window . jsCommon ;
var b = tree . b = a . firstChild ;:==:var c:==:tree . c    b . firstChild ;
var attributeLocations = program . _ attributeLocations ;:==:var normalAttributeName:==:model . _ normalAttributeName ;
var target = thisOption . target  |  |  ( thisOption . target = ) ;:==:var controller:==:thisOption . controller  |  |  ( thisOption . controller    ) ;
var db = new PouchDB ( dbs . name ) ;:==:var repl:==:db . replicate . to ( dbs . remote , retry : true , live : true ) ;
var offset = file_ids [ file_id ] . offset - 1 ;:==:var byteArray:==:file_ids [ file_id ] . byteArray ;
var ui = imports . ui ;:==:var alert:==:imports [ ' dialog . alert ' ] . show ;
var cyan200 = exports . cyan200 = ' # 80deea ' ;:==:var cyan300:==:exports . cyan300    ' # 4dd0e1 ' ;
var contactManager = contacts . contactManager ;:==:var fullContactCardOptions:==:contacts . fullContactCardOptions ;
var beep = fs . readFileSync ( path . join ( pubdir , ' beep . js ' ) ) ;:==:var boop:==:fs . readFileSync ( path . join ( pubdir , ' boop . js ' ) ) ;
var hotspot = this . hotspots [ i d ] ;:==:var outer:==:hotspot . getObjectByName ( ' outer ' ) ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var paragraph , heading1:==:require ( ' f8Text ' ) ;
var async = require ( ' async ' ) ;:==:var rss:==:require ( ' rss ' ) ;
var scene = this . scene ;:==:var video:==:document . createElement ( ' video ' ) ;
var t = _ test ;:==:var names:==:_ names ;
var filters = parsedQuery . filters ;:==:var n:==:parsedQuery . filters . length ;
var style = _ props . style ;:==:var touchGenerated:==:_ props . touchGenerated ;
var w = $ this . attr ( ' width ' ) ;:==:var h:==:$ this . attr ( ' height ' ) ;
var dataZoomModel = this . dataZoomModel ;:==:var labelFormatter:==:dataZoomModel . get ( ' labelFormatter ' ) ;
var async = require ( ' async ' ) ;:==:var parley:==:require ( ' parley ' ) ;
var line = originalPosition . line ;:==:var column:==:originalPosition . column ;
var parse = _ _ dependency3 _ _ . parse ;:==:var Compiler:==:_ _ dependency4 _ _ . Compiler ;
var noRowsRenderer = _ props . noRowsRenderer ;:==:var rowClassName:==:_ props . rowClassName ;
var hitPointWorld = intersectcapsule_hitpointworld ;:==:var normal:==:intersectcapsule_normal ;
var item = items [ i ] ;:==:var ch:==:children [ i ] ;
var x = ( vector . x * transformation . m [ 0 ] ) + ( vector . y * transformation . m [ 4 ] ) + transformation . m [ 12 ] ;:==:var y:==:( vector . x * transformation . m [ 1 ] ) + ( vector . y * transformation . m [ 5 ] ) + transformation . m [ 13 ] ;
var moment = require ( ' moment ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var events = this . events ( track . event ( ) ) ;:==:var value:==:track . revenue ( )  |  |  track . value ( )  |  |  0 ;
var attribute = attributes [ i ] ;:==:var name:==:attribute . name ;
var display = opts . display ;:==:var ctx:==:this . ctx ;
var itemParent = db . model ( ' gh-1638 - 1 ' , itemParentSchema , ' gh-1638 - 1 ' ) ;:==:var itemChild:==:db . model ( ' gh-1638 - 2 ' , itemChildSchema , ' gh-1638 - 2 ' ) ;
var tab = templateVar . get ( ' tab ' ) ;:==:var accounts:==:( tab & & tab . permissions & & tab . permissions . accounts ) ? tab . permissions . accounts : [ ] ;
var update_active = options . update_active  |  |  typeof options . update_active = = = ' undefined ' ;:==:var close_active:==:options . close_active  |  |  typeof options . close_active      ' undefined ' ;
var clientHeight = _ ref . clientHeight ;:==:var clientWidth:==:_ ref . clientWidth ;
var contact = renderOpts . contact ;:==:var input:==:renderOpts . input ;
var pos = this . body . position ;:==:var angle:==:this . body . angle ;
var not = Parsers . not ;:==:var list:==:Parsers . list ;
var keys = ' keys ' in opts ? opts . keys : false ;:==:var limit:==:' limit ' in opts ? opts . limit : false ;
var selectedNode = event . target . selectedNode ;:==:var target:==:this . _ profile . target ( ) ;
var url = require ( ' url ' ) ;:==:var error:==:require ( ' http - error ' ) ;
var host = document . getElementById ( ' host ' ) . value ;:==:var port:==:parseInt ( document . getElementById ( ' port ' ) . value , 10 ) ;
var description = entity . description . getValue ( ) ;:==:var div:==:document . createElement ( ' div ' ) ;
var highlightsHue = params . highlightsHue ;:==:var highlightsSaturation:==:params . highlightsSaturation ;
var helper = this . helper ;:==:var params:==:this . params ;
var modelHash = this . _ modelHash ;:==:var primitives:==:this . _ primitives ;
var scene = this . scene ;:==:var stats:==:this . _ stats ;
var a = SIMD . Float32x4 ( 8 . 0 , 4 . 0 , 2 . 0 , -2 . 0 ) ;:==:var c:==:SIMD . Float32x4 . reciprocalApproximation ( a ) ;
var viewHistory = $ ionicHistory . viewHistory ( ) ;:==:var hist:==:( data . historyId ? viewHistory . histories [ data . historyId ] : null ) ;
var diffs = this . diffs = [ ] ;:==:var realOut:==:this . realOut    [ ] ;
var reportEventElement = t . reportEventElement ;:==:var eventElementHandlers:==:t . eventElementHandlers ;
var pixelRatio = options . pixelRatio  |  |  ol . has . device_pixel_ratio ;:==:var size:==:options . size ;
var module = this . props . module ;:==:var name:==:this . props . name ;
var location = nextState . location ;:==:var params:==:nextState . params ;
var identifierToken = traceur . syntax . identifierToken ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var width = req . query . maxwidth  |  |  320 ;:==:var height:==:req . query . maxheight  |  |  240 ;
var SPREAD = traceur . syntax . predefinedName . spread ;:==:var spread_new:==:traceur . syntax . predefinedName . spread_new ;
var models = _ _ alloyId37 . models ;:==:var len:==:models . length ;
var Uri = Windows . Foundation . Uri ;:==:var Colors:==:Windows . UI . Colors ;
var rev = opts . rev ? doc . revs [ opts . rev ] . data : doc . data ;:==:var digest:==:rev . _ attachments [ attachId ] . digest ;
var key = this . _ keys [ i ] ;:==:var value:==:this . _ values [ i ] ;
var page = locals . page ;:==:var lang:==:page . lang  |  |  page . language ;
var Group = conn . model ( ' gh4049_0 ' , groupSchema ) ;:==:var now:==:date . now ( ) ;
var a = opt_a  |  |  1 ;:==:var theta:==:opt_theta  |  |  Math . PI * 1 . 5 ;
var gauges = metrics . gauges ;:==:var timers:==:metrics . timers ;
var disableHeader = _ props . disableHeader ;:==:var gridClassName:==:_ props . gridClassName ;
var string   = inserts [ i ] . string ;:==:var attributes:==:inserts [ i ] . attributes ;
var line = this . line ;:==:var col:==:this . col ;
var i d = data . params . i d ;:==:var classList:==:this . element . classList ;
var config = util . config ;:==:var logger:==:util . logger ;
var through = require ( ' through2 ' ) ;:==:var pluginError:==:require ( ' gulp - util ' ) . pluginError ;
var red = options [ ' red ' ] ;:==:var green:==:options [ ' green ' ] ;
var techniques = gltf . techniques ;:==:var shaders:==:gltf . shaders ;
var type = eventListener . payload ( ) . type ;:==:var section:==:sectionMap [ type ] ;
var Group = conn . model ( ' gh4049 ' , groupSchema ) ;:==:var now:==:date . now ( ) ;
var Y = cs . YW * fn_g ( M ) ;:==:var Z:==:cs . ZW * fn_g ( N ) ;
var afterEnter = data . afterEnter ;:==:var enterCancelled:==:data . enterCancelled ;
var m = require ( ' m ' ) ;:==:var g:==:require ( ' g ' ) ;
var isString = sharedUtil . isString ;:==:var shadow:==:sharedUtil . shadow ;
var lineDash = this . _ lineDash ;:==:var ctx:==:this . _ ctx ;
var bn = _ dereq _ ( ' bn . js ' ) ;:==:var brorand:==:_ dereq _ ( ' brorand ' ) ;
var ecModel = this . _ ecModel ;:==:var api:==:this . _ api ;
var cache = App . Providers . _ cache = ;:==:var registry:==:App . Providers . _ registry    ;
var userAgent = require ( ' userAgent ' ) ;:==:var findAncestorOffsetKey:==:require ( ' findAncestorOffsetKey ' ) ;
var trace = gd . _ fullData [ d . traceId ] ;:==:var nodeRect:==:d3 . select ( element ) . select ( ' . nodeRect ' ) ;
var modal = document . getElementById ( ' modal ' ) ;:==:var underlay:==:document . getElementById ( ' underlay ' ) ;
var max = boxGeometry . _ maximum ;:==:var vertexFormat:==:boxGeometry . _ vertexFormat ;
var prop = node . properties [ i ] ;:==:var value:==:( prop . value      null ) ? prop . value : walk ( prop . value ) ;
var files = e . dataTransfer . files ;:==:var f:==:files [ 0 ] ;
var tree = seriesModel . getData ( ) . tree ;:==:var root:==:tree . root ;
var module = angular . module ( name , deps ) ;:==:var doc:==:window . document ;
var NOT_PROPER = module . exports . NOT_PROPER = 0 ;:==:var KIND_EVENT:==:module . exports . KIND_EVENT    ' event ' ;
var curve = context [ ' curve ' ] ;:==:var multiCurve:==:context [ ' multiCurve ' ] ;
var getNodeLength = dom . getNodeLength ;:==:var arrayContains:==:dom . arrayContains ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , data1 , opts ) ;
var entity = geometryUpdater . _ entity ;:==:var ellipse:==:entity . ellipse ;
var save = imports . save ;:==:var tooltip:==:imports . tooltip ;
var ifStatement = traceur . syntax . trees . ifStatement ;:==:var labelledStatement:==:traceur . syntax . trees . labelledStatement ;
var path = require ( ' path ' ) ;:==:var assert:==:require ( ' assert ' ) . ok ;
var o4 = foo : foo4 , that4 : ' that4 ' ;:==:var o5:==:foo : foo5 , that5 : ' that5 ' ;
var tab = tabs . focussedTab ;:==:var ace:==:tab . editor . ace ;
var skinIndices = geometry . skinIndices ;:==:var skinWeights:==:geometry . skinWeights ;
var call = t . callExpression ( ref , args ) ;:==:var ret:==:this . scope . generateUidIdentifier ( ' ret ' ) ;
var cff = this . cff ;:==:var properties:==:this . properties ;
var connection = args . connection ;:==:var streamedObject:==:args . streamedObject ;
var instances = this . instances ;:==:var len:==:instances . length ;
var m = new THREE . Matrix4 ( ) . makeOrthographic ( -1 , 1 , -1 , 1 , 1 , 100 ) ;:==:var a:==:new three . frustum ( ) . setFromMatrix ( m ) ;
var refreshControl = require ( ' refreshControl ' ) ;:==:var text:==:require ( ' text ' ) ;
var bounds = task . _ bounds ;:==:var viewport:==:task . _ viewport ;
var emberGenerateDestroy = blueprintHelpers . emberGenerateDestroy ;:==:var setupPodConfig:==:blueprintHelpers . setupPodConfig ;
var height = _ props6 . height ;:==:var width:==:_ props6 . width ;
var KATAKANA = ci . KATAKANA ;:==:var EXTENDNUMLET:==:ci . EXTENDNUMLET ;
var a = rejectThenableSoon ( ' rejected - a ' , 40 ) ;:==:var b:==:rejectThenableSoon ( ' rejected - b ' , 30 ) ;
var scope = _ ref . scope ;:==:var authority:==:_ ref . authority ;
var https = require ( ' https ' ) ;:==:var util:==:require ( ' util ' ) ;
var assert = require ( ' assert ' ) ;:==:var redisError:==:require ( ' redis - parser ' ) . redisError ;
var pointPrimitives = pointPrimitiveCollection . _ pointPrimitives ;:==:var length:==:pointPrimitives . length ;
var doc = document ;:==:var div:==:doc . createElement ( ' div ' ) ;
var canvas = this . game . canvas ;:==:var margin:==:this . margin ;
var gulp = require ( ' gulp ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var unit = math . unit ;:==:var Unit:==:math . type . Unit ;
var group = $ ( ' # group ' ) ;:==:var select1:==:$ ( ' # select1 ' ) ;
var content = tree . content = a . firstChild ;:==:var sr2:==:tree . sr2    div . createShadowRoot ( ) ;
var videoSendCodec = options . videoSendCodec  |  |  '' ;:==:var videoRecvCodec:==:options . videoRecvCodec  |  |  '' ;
var setDefinitionFunctionWrapper = exports . setDefinitionFunctionWrapper = proxySupportCode ( ' setDefinitionFunctionWrapper ' ) ;:==:var setWorldConstructor:==:exports . setWorldConstructor    proxySupportCode ( ' setWorldConstructor ' ) ;
var parseTreeVisitor = traceur . syntax . parseTreeVisitor ;:==:var identifierToken:==:traceur . syntax . identifierToken ;
var minimum = getRangeValue ( categoricalValues . minimum , settings . values . minimumPercent ) ;:==:var needsImprovement:==:getRangeValue ( categoricalValues . needsImprovement , settings . values . needsImprovementPercent ) ;
var left = cropBox . left - canvas . left - image . left ;:==:var top:==:cropBox . top - canvas . top - image . top ;
var a = foo : 1 , cat1 : ' ginger ' ;:==:var b:==:baz : 2 , cat2 : ' phoebe ' ;
var row = rows . shift ( ) ;:==:var rev:==:JSON . parse ( row . data ) . _ rev ;
var gpsifdLength = ifDlengths . gpsifdLength ;:==:var gpsifdLengthDataSection:==:ifDlengths . gpsifdLengthDataSection ;
var debug = require ( ' debug ' ) ( ' connector ' ) ;:==:var util:==:require ( ' util ' ) ;
var isEmpty = this . _ isEmpty ( this . textbox . value ) ;:==:var isValidSubset:==:! isValid & & isFocused & & this . _ isValidSubset ( ) ;
var div = document . createElement ( ' div ' ) ;:==:var a:==:document . createElement ( ' a ' ) ;
var Header = require ( ' Header ' ) ;:==:var headerWithGithub:==:require ( ' headerWithGithub ' ) ;
var fromPoint = jsCommon . pixelConverter . fromPoint ;:==:var labelTextProperties:==:powerbi . visuals . dataLabelUtils . labelTextProperties ;
var top = rect . top ;:==:var bottom:==:window . innerHeight - rect . bottom ;
var semver = require ( ' semver ' ) ;:==:var ver:==:process . versions . node ;
var row = e . getDocumentPosition ( ) . row ;:==:var selection:==:editor . session . selection ;
var flyOverLongitude = options . flyOverLongitude ;:==:var flyOverLongitudeWeight:==:options . flyOverLongitudeWeight ;
var J   = this . J ;:==:var options:==:this . options ;
var util = require ( ' hexo - util ' ) ;:==:var htmlTag:==:util . htmlTag ;
var oldPath = options . oldPath  |  |  ' ' ;:==:var newPath:==:options . newPath  |  |  ' ' ;
var topo = this . topos [ wrapper ] ;:==:var text:==:document . createElementns ( this . ns,'text ' ) ;
var stringify = _ _ webpack_require _ _ ( 11 ) . stringify ;:==:var hasOwnProperty:==:_ _ webpack_require _ _ ( 5 ) . hasOwnProperty ;
var Package = protocol . Package ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var circle = s . circle ( 10 , 20 , 30 ) ;:==:var rect:==:s . rect ( 10 , 20 , 30 , 40 ) ;
var min = new Date ( this . _ minYear , 0 , 1 , 12 , 0 , 0 ) ;:==:var max:==:new date ( this . _ maxYear , 11 , 31 , 12 , 0 , 0 ) ;
var node = this . _ node , cmd ;:==:var parentCmd:==:this . _ parentCmd  |  |  this ;
var axisTick = this . get ( ' axisTick ' ) ;:==:var axisLabel:==:this . get ( ' axisLabel ' ) ;
var div = createElement ( ' div ' ) ;:==:var span:==:createElement ( ' span ' ) ;
var xhr = this . xhr = request . getXHR ( ) ;:==:var timeout:==:this . _ timeout ;
var ele = this . _ element ;:==:var children:==:ele . children ;
var cell = iPython . notebook . get_cell ( 0 ) ;:==:var img:==:$ ( cell . output_area . element . find ( ' img ' ) [ 0 ] ) ;
var inputs = params . inputs ;:==:var outputs:==:params . outputs ;
var i d = options . i d ;:==:var mode:==:options . mode ;
var style = options . style ;:==:var styleSpec:==:options . styleSpec ;
var length = methods . length ;:==:var console:==:( window . console    window . console  |  |  ) ;
var grantSolver = mesh . grantSolver ;:==:var physics:==:mesh . physics ;
var map = this . map _ ;:==:var version:==:this . version _ ;
var d = document ;:==:var col:==:d . createElement ( ' col ' ) ;
var module = qUnit . module ;:==:var test:==:qUnit . test ;
var stateMachine = traceur . syntax . trees . stateMachine ;:==:var createArgumentList:==:parseTreeFactory . createArgumentList ;
var current = this . _ currentAttributes ;:==:var changes:==:this . _ changes ;
var def = $ ( ' def ' ) ;:==:var jkl:==:$ ( ' jkl ' ) ;
var a = db . model ( ' gh5128 ' , aSchema ) ;:==:var b:==:db . model ( ' gh5128_0 ' , bSchema ) ;
var stream = require ( ' stream ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var fs = require ( ' fs ' ) ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var concat   = require ( ' broccoli - concat ' ) ;:==:var uglify:==:require ( ' broccoli - uglify - sourcemap ' ) ;
var A = CMD . A ;:==:var Q:==:CMD . Q ;
var op = opt_op  |  |  ' GET ' ;:==:var params:==:opt_params  |  |  [ ] ;
var index = stack . indexOf ( message ) ;:==:var actual:==:err . actual ;
var scrollX = window . parent . window . scrollX ;:==:var scrollY:==:window . parent . window . scrollY ;
var properties = item . properties  |  |  ;:==:var keys:==:Object . keys ( properties ) ;
var floor = stdlib . Math . floor ;:==:var exp:==:stdlib . Math . exp ;
var push   = emptyArray . push ;:==:var indexOf:==:emptyArray . indexOf ;
var jsonalyzer = imports . jsonalyzer ;:==:var jumptodef:==:imports [ ' language . jumptodef ' ] ;
var sky = skyLayer . create ( 0 , 0 , ' sky ' ) ;:==:var cloud0:==:cloudLayer . create ( 200 , 120 , ' cloud0 ' ) ;
var node = action . node ;:==:var parent:==:action . parent !    null ? action . parent : null ;
var l = $ ( target ) . offset ( ) . left + 10 ;:==:var t:==:$ ( target ) . offset ( ) . top + $ ( target ) . offset ( ) . height -10 ;
var u6Over64 = constants . u6Over64 ;:==:var u4Over16:==:constants . u4Over16 ;
var boundingVolume = this . _ boundingVolume ;:==:var boundingVolume2d:==:this . _ boundingVolume2d ;
var abs = Math . abs ;:==:var atan2:==:Math . atan2 ;
var path = re . path ;:==:var query:==:location . query ;
var Agent = require ( ' . . ' ) . Agent ;:==:var Transport:==:require ( ' . . ' ) . Transport ;
var deltaX = input . deltaX - last . deltaX ;:==:var deltaY:==:input . deltaY - last . deltaY ;
var width = this . width = computeDimension ( context . canvas,'Width ' ) ;:==:var height:==:this . height    computeDimension ( context . canvas,'Height ' ) ;
var scrollHeight = _ ref7 . scrollHeight ;:==:var scrollTop:==:_ ref7 . scrollTop ;
var modal = bodyEl . find ( ' . modal ' ) [ 0 ] ;:==:var backdrop:==:bodyEl . find ( ' . modal - backdrop ' ) [ 0 ] ;
var commands = imports . commands ;:==:var jumptodef:==:imports [ ' language . jumptodef ' ] ;
var SCALE_BY_DISTANCE_INDEX = pointPrimitive . scale_by_distance_index ;:==:var translucency_by_distance_index:==:pointPrimitive . translucency_by_distance_index ;
var intersection = intersections [ 0 ] ;:==:var point:==:intersection . point ;
var start = Arr . find ( getFirstChildren ( elm ) , fun . curry ( compare . eq , startNode ) ) ;:==:var end:==:arr . find ( getLastChildren ( elm ) , fun . curry ( compare . eq , endNode ) ) ;
var Coverage = test . Coverage ;:==:var dirname:==:require ( ' path ' ) . dirname ;
var crypto = require ( ' crypto ' ) ;:==:var util:==:require ( ' util ' ) ;
var y = tag . getAttribute ( ' y ' ) ;:==:var p:==:node . pos . getp ( true ) ;
var timeline = vis . timeline ;:==:var timeStep:==:timeline . timeStep ;
var complex = math . complex ;:==:var unit:==:math . unit ;
var onMouseEnter = _ props . onMouseEnter ;:==:var style:==:_ props . style ;
var x = boundary ? boundary . x : null ;:==:var y:==:boundary ? boundary . y : null ;
var path = require ( ' path ' ) ;:==:var sleep:==:require ( ' sleep ' ) ;
var start = node . start ;:==:var end:==:node . end ;
var isValidEntityCode = _ _ webpack_require _ _ ( 1023 ) . isValidEntityCode ;:==:var fromCodePoint:==:_ _ webpack_require _ _ ( 1023 ) . fromCodePoint ;
var granularity = simplePolylineGeometry . _ granularity ;:==:var ellipsoid:==:simplePolylineGeometry . _ ellipsoid ;
var clearTimeout = window . clearTimeout ;:==:var clearInterval:==:window . clearInterval ;
var parser = _ dereq _ ( ' engine . io - parser ' ) ;:==:var parseqs:==:_ dereq _ ( ' parseqs ' ) ;
var pageState = $ ( opts . pageStateCell , slider ) ;:==:var playState:==:$ ( opts . playStateCell , slider ) ;
var mcc = currentDataIcc . iccInfo . mcc ;:==:var mnc:==:currentDataIcc . iccInfo . mnc ;
var numComps = this . numComps ;:==:var decodeAddends:==:this . decodeAddends ;
var ui = $ . summernote . ui ;:==:var dom:==:$ . summernote . dom ;
var radii = defaultValue ( options . radii , defaultRadii ) ;:==:var stackPartitions:==:math . round ( defaultValue ( options . stackPartitions , 64 ) ) ;
var scale = this . _ transformController . scale ( ) ;:==:var rotatex:==:this . _ transformController . rotatex ( ) ;
var appsHelper = _ jsLibHelpers . appsHelper ;:==:var manifestHelper:==:_ jsLibHelpers . manifestHelper ;
var mom = $ . fullCalendar . moment . utc ( ' 2014 - 06 - 08t00 : 00 : 00 ' ) ;:==:var time:==:mom . time ( ) ;
var samples = eop . _ samples = eopData . samples ;:==:var dates:==:eop . _ dates    [ ] ;
var createConditionalExpression = parseTreeFactory . createConditionalExpression ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var moment = require ( ' moment ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' jsbin : upgrade ' ) ;
var derivedKeywords = cachedShader . derivedKeywords ;:==:var length:==:derivedKeywords . length ;
var skirtHeight = this . _ skirtHeight ;:==:var stride:==:structure . stride ;
var tagName = details . tagName  |  |  '' ;:==:var src:==:details . frameUrl  |  |  details . srcUrl  |  |  details . linkUrl  |  |  '' ;
var sceneCamera = shadowMap . _ sceneCamera ;:==:var shadowMapCamera:==:shadowMap . _ shadowMapCamera ;
var blue900 = exports . blue900 = ' # 0d47a1 ' ;:==:var blueA100:==:exports . blueA100    ' # 82b1ff ' ;
var min_neighbors = this . shared . min_neighbors ;:==:var cascade:==:this . shared . cascade ;
var value = dates [ key ] . value ;:==:var start:==:new Date ( value . start ) ;
var y = date . year ( ) + ( period = = = ' y ' ? offset : 0 ) ;:==:var m:==:date . monthOfYear ( ) + ( period      ' m ' ? offset : 0 ) ;
var lineNumber = currentFrame . _ location . lineNumber ;:==:var columnNumber:==:currentFrame . _ location . columnNumber ;
var syntheticTransitionEvent = require ( ' syntheticTransitionEvent ' ) ;:==:var syntheticuiEvent:==:require ( ' syntheticuiEvent ' ) ;
var vec = computeImpulseDenominator_vec ;:==:var m:==:computeImpulseDenominator_m ;
var value = this . value ;:==:var scheduler:==:this . scheduler ;
var priorities = this . priorities _ ;:==:var element:==:elements [ 0 ] ;
var optimist = require ( ' optimist ' ) ;:==:var osenv:==:require ( ' osenv ' ) ;
var replace = required ( config , ' replace ' ) ;:==:var targets:==:required ( config , ' targets ' ) ;
var str = '' + string ;:==:var match:==:matchHtmlRegExp . exec ( str ) ;
var stream = opts . stream ;:==:var expose:==:opts . expose ;
var aLifeCycleCalls = this . aLifeCycleCalls = [ ] ;:==:var oLifecycleSpy:==:this . oLifecycleSpy    sinon . spy ( ) ;
var el = this . el = this . field . getEl ( ) ;:==:var f:==:this . field ;
var DOCUMENT_NODE     = nodeType . document_node     = 9 ;:==:var document_type_node:==:nodeType . document_type_node      10 ;
var port = process . env . PORT  |  |  port ;:==:var host:==:process . env . HOST  |  |  serverUrl . hostname ;
var array = goog . require ( ' goog . array ' ) ;:==:var tagName:==:goog . require ( ' goog . dom . tagName ' ) ;
var createReactNativeComponentClass = require ( ' createReactNativeComponentClass ' ) ;:==:var merge:==:require ( ' merge ' ) ;
var svg = angular . element ( node . querySelector ( ' svg ' ) ) ;:==:var path:==:angular . element ( node . querySelector ( ' path ' ) ) ;
var sum32 = utils . sum32 ;:==:var sum32_3:==:utils . sum32_3 ;
var path = this . getResponseHeader ( ' path ' ) ;:==:var method:==:this . getResponseHeader ( ' method ' ) ;
var Principal = ctx . Principal ;:==:var roleMapping:==:loopback . roleMapping ;
var variableDeclaration = traceur . syntax . trees . variableDeclaration ;:==:var variableStatement:==:traceur . syntax . trees . variableStatement ;
var eventHandler = goog . events . eventHandler ;:==:var timer:==:goog . timer ;
var type = data . type ;:==:var enterClass:==:data . enterClass ;
var Timer = goog . require ( ' goog . Timer ' ) ;:==:var jsunit:==:goog . require ( ' goog . testing . jsunit ' ) ;
var models = _ _ alloyId26 . models ;:==:var len:==:models . length ;
var text = ' cesium - credit - text ' ;:==:var image:==:' cesium - credit - image ' ;
var record_pause_on = Test . anotherWay . _ record_control_get_element ( ' record_pause_on ' ) ;:==:var record_pause_off:==:test . anotherWay . _ record_control_get_element ( ' record_pause_off ' ) ;
var log = guardedConsole . bind ( null , ' log ' ) ;:==:var isArray:==:array . isArray ;
var ROTATION_INDEX = Billboard . ROTATION_INDEX ;:==:var ALIGNED_AXIS_INDEX:==:Billboard . ALIGNED_AXIS_INDEX ;
var electron = require ( ' electron ' ) ;:==:var browserWindow:==:electron . browserWindow ;
var showMinorLabels = this . options . showMinorLabels & & this . options . orientation . axis ! = = ' none ' ;:==:var showMajorLabels:==:this . options . showMajorLabels & & this . options . orientation . axis !    ' none ' ;
var values = attribute . values ;:==:var length:==:values . length ;
var priv = privatePool . get ( this ) ;:==:var onlyFullyVisible:==:priv . onlyFullyVisible ;
var job = e . job ;:==:var i:==:mdlUploadActivity . visibleItems . indexOf ( job . node ) ;
var async = require ( ' async ' ) ;:==:var extend:==:require ( ' util ' ) . _ extend ;
var svg = this . svg ;:==:var desc:==:this . desc ;
var _ i64Subtract = module [ ' _ i64Subtract ' ] = asm [ ' _ i64Subtract ' ] ;:==:var _ free:==:module [ ' _ free ' ]    asm [ ' _ free ' ] ;
var linearMap = _ _ webpack_require _ _ ( 7 ) . linearMap ;:==:var each:==:zrUtil . each ;
var _ main = Module [ ' _ main ' ] = asm [ ' _ main ' ] ;:==:var _ realloc:==:Module [ ' _ realloc ' ]    asm [ ' _ realloc ' ] ;
var scope = widget . element . scope ( ) ;:==:var footer:==:qUnit . fixture . find ( ' select ' ) . getKendoDropDownList ( ) . footer ;
var _ htOption = this . _ htOption ;:==:var _ el:==:this . _ el ;
var o = self . opts ;:==:var el:==:self . el    createEl ( null , className : o . className ) ;
var sentences = queueData . sentences ;:==:var sentence:==:sentences [ sentences . length - 1 ] ;
var globalScope = sharedGlobal . globalScope ;:==:var isWorker:==:sharedGlobal . isWorker ;
var request = require ( ' request ' ) ;:==:var gm:==:require ( ' gm ' ) ;
var evaluateStringLiteral = traceur . util . evaluateStringLiteral ;:==:var createArgumentList:==:parseTreeFactory . createArgumentList ;
var settings = dataSource & & dataSource . settings ;:==:var connector:==:dataSource . connector ;
var tree1 = item . tree1 ;:==:var tree2:==:item . tree2 ;
var type = res . headers [ ' content - type ' ] ;:==:var extension:==:mime . extension ( type ) ;
var sha1 = require ( ' sha1 ' ) ;:==:var express:==:require ( ' express ' ) ;
var i d = _ props2 . i d ;:==:var inputStyle:==:_ props2 . inputStyle ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var _ strncpy:==:Module [ ' _ strncpy ' ]    asm [ ' _ strncpy ' ] ;
var fs = require ( ' fs ' ) ;:==:var extname:==:path . extname ;
var textureIndexBuffer = this . _ textureIndexBuffer ;:==:var uvPositionBuffer:==:this . _ uvPositionBuffer ;
var bind = require ( ' bind ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' analytics : group ' ) ;
var toJSON = schema . options . toJSON ;:==:var toObject:==:schema . options . toObject ;
var emptyStatement = traceur . syntax . trees . emptyStatement ;:==:var expressionStatement:==:traceur . syntax . trees . expressionStatement ;
var getContentStateFragment = require ( ' getContentStateFragment ' ) ;:==:var nullthrows:==:require ( ' nullthrows ' ) ;
var b = ( graph . pageVisible ) ? graph . view . getBackgroundPageBounds ( ) : graph . getGraphBounds ( ) ;:==:var tr:==:graph . view . translate ;
var f = ' ' f ' ' ;:==:var g:==:' ' g ' ' ;
var Progress = reporters . Progress ;:==:var Base:==:reporters . Base ;
var zmq = require ( ' zmq ' ) ;:==:var socket:==:zmq . socket ( ' push ' ) ;
var _ strcasecmp = Module [ ' _ strcasecmp ' ] = asm [ ' _ strcasecmp ' ] ;:==:var _ strlen:==:Module [ ' _ strlen ' ]    asm [ ' _ strlen ' ] ;
var Compiler = _ _ dependency4 _ _ . Compiler ;:==:var compile:==:_ _ dependency4 _ _ . compile ;
var rotation = touch . rotation ;:==:var lastScale:==:typeof touch . lastScale      ' undefined ' ? 1 : touch . lastScale ;
var width = bounds . width - ( borders [ 1 ] . width + borders [ 3 ] . width + paddingLeft + paddingRight ) ;:==:var height:==:bounds . height - ( borders [ 0 ] . width + borders [ 2 ] . width + paddingTop + paddingBottom ) ;
var VERSION = constants . VERSION ;:==:var BUILD_MODE:==:constants . BUILD_MODE ;
var IMPORT_SPECIFIER = ' IMPORT_SPECIFIER ' ;:==:var IMPORT_SPECIFIER_SET:==:' IMPORT_SPECIFIER_SET ' ;
var gridModel = finder . gridModel ;:==:var coordsList:==:this . _ coordsList ;
var arrayExtensions = jsCommon . arrayExtensions ;:==:var dataShapeBindingDataReduction:==:powerbi . data . dataShapeBindingDataReduction ;
var expression = this . transformAny ( tree . expression ) ;:==:var comprehensionForList:==:this . transformList ( tree . comprehensionForList ) ;
var source   = require ( ' vinyl - source - stream ' ) ;:==:var buffer:==:require ( ' vinyl - buffer ' ) ;
var structure = this . _ structure ;:==:var stride:==:structure . stride ;
var win = $ ( window ) ;:==:var scrollTop:==:win . scrollTop ( ) ;
var name = this . getAttribute ( ' data - setting - name ' ) ;:==:var value:==:input . value ;
var getGlyphQuads = quads . getGlyphQuads ;:==:var getIconQuads:==:quads . getIconQuads ;
var dataViewObjects = powerbi . dataViewObjects ;:==:var selectionIdBuilder:==:powerbi . visuals . selectionIdBuilder ;
var sass = require ( ' gulp - sass ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var onSave = this . ne . options . onSave ;:==:var selectedInstance:==:this . ne . selectedInstance ;
var speed = options . speed  |  |  100 ;:==:var whileTrue:==:options . whileTrue  |  |  null ;
var Animated = require ( ' Animated ' ) ;:==:var nativeModules:==:require ( ' nativeModules ' ) ;
var test = require ( ' tap ' ) . test ;:==:var prelude:==:fs . readFileSync ( path . join ( _ _ dirname , ' multi_bundle ' , ' _ prelude . js ' ) , ' utf8 ' ) ;
var re = exports . re = [ ] ;:==:var src:==:exports . src    [ ] ;
var path = require ( ' path ' ) ;:==:var cheerio:==:require ( ' cheerio ' ) ;
var bgnow = sbx . properties . bgnow ;:==:var delta:==:sbx . properties . delta ;
var links = option . edges  |  |  option . links ;:==:var nodes:==:option . data  |  |  option . nodes ;
var strict = options . strict ;:==:var end:==:options . end !    false ;
var filename = getFileName ( item . filename ) ;:==:var div:==:document . createElement ( ' div ' ) ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var karma = require ( ' karma ' ) . server ;:==:var jshint:==:require ( ' gulp - jshint ' ) ;
var objnames = this . _ index . objnames ;:==:var titles:==:this . _ index . titles ;
var cloudinary = require ( ' cloudinary ' ) ;:==:var keystone:==:req . keystone ;
var callbacks = me . _ options . callbacks ;:==:var beforeFooter:==:callbacks . beforeFooter . apply ( me , arguments ) ;
var faces = geometry . faces ;:==:var faceVertexUvs:==:geometry . faceVertexUvs [ 0 ] ;
var disableKeyboardFocus = _ props2 . disableKeyboardFocus ;:==:var disableTouchRipple:==:_ props2 . disableTouchRipple ;
var events = require ( ' events ' ) ;:==:var ansi:==:require ( ' ansi ' ) ;
var FORMAL_PARAMETER = ' FORMAL_PARAMETER ' ;:==:var FORMAL_PARAMETER_LIST:==:' FORMAL_PARAMETER_LIST ' ;
var isArray = mathJax . object . isArray ;:==:var ispc:==:hub . browser . ispc , ismsie    hub . browser . ismsie , isie9    ( ( document . documentMode |  | 0 ) > 8 ) ;
var mode = this . mode ;:==:var ngModel:==:this . ngModel ;
var logger = require ( ' gulp - logger ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var getGlyphsUnicode = coreGlyphList . getGlyphsUnicode ;:==:var standardEncoding:==:coreEncodings . standardEncoding ;
var shadow = this . shadow ? this . shadow . buildCode ( builder , ' c ' ) : undefined ;:==:var emissive:==:this . emissive ? this . emissive . buildCode ( builder , ' c ' , slot : ' emissive ' ) : undefined ;
var minify = require ( ' gulp - minify - css ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var Promise = require ( ' es6-promise ' ) . Promise ;:==:var jsdom:==:require ( ' jsdom ' ) ;
var yellow400 = exports . yellow400 = ' # ffee58 ' ;:==:var yellow500:==:exports . yellow500    ' # ffeb3b ' ;
var iconElementLeft = _ props . iconElementLeft ;:==:var iconElementRight:==:_ props . iconElementRight ;
var fs = require ( ' fs ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var CR = ci . CR ;:==:var LF:==:ci . LF ;
var pixelRatio = frameState . pixelRatio ;:==:var rotation:==:frameState . viewState . rotation ;
var graph = this . editorUi . editor . graph ;:==:var view:==:graph . view ;
var master = store . master [ type ] ;:==:var delegates:==:store . delegates [ type ] ;
var Node = scope . wrappers . Node ;:==:var shadowRoot:==:scope . wrappers . shadowRoot ;
var edgeTypeOffset = this . _ edgeTypeOffset ;:==:var edgeToNodeOffset:==:this . _ edgeToNodeOffset ;
var fs = require ( ' fs ' ) ;:==:var denodeify:==:RSVP . denodeify ;
var TRY_STATEMENT = ' TRY_STATEMENT ' ;:==:var TYPE_ARGUMENTS:==:' TYPE_ARGUMENTS ' ;
var uiSourceCode = searchResult . uiSourceCode ;:==:var searchMatches:==:searchResult . searchMatches ;
var root = new goog . structs . treeNode ( ' root ' , null ) ;:==:var child1:==:new goog . structs . treeNode ( ' child1 ' , null ) ;
var file = fs . createWriteStream ( path . join ( downLoadDir , fileName ) ) ;:==:var curl:==:spawn ( ' curl ' , [ fileUrl ] ) ;
var PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX = Billboard . PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX = 13 ;:==:var DISTANCE_DISPLAY_CONDITION:==:Billboard . DISTANCE_DISPLAY_CONDITION    14 ;
var child = require ( ' child_process ' ) ;:==:var printError:==:common . printError ;
var className = options . className ! = = undefined ? options . className : ' ol - attribution ' ;:==:var tipLabel:==:options . tipLabel !    undefined ? options . tipLabel : ' attributions ' ;
var attributes = vertexArray . _ attributes ;:==:var length:==:attributes . length ;
var x = x _  |  0 ;:==:var y:==:y _  |  0 ;
var div = utils . elt ( ' div ' , [ input , buttonsdiv ] , ' class ' : ' firepad - dialog - div ' ) ;:==:var dialog:==:utils . elt ( ' div ' , [ div ] , ' class ' : ' firepad - dialog ' , i d : ' overlay ' ) ;
var x = this . toDegreesPerSecond ( state . x . value , state . x . center ) ;:==:var y:==:this . toDegreesPerSecond ( state . y . value , state . y . center ) ;
var http = require ( ' http ' ) . Server ( app ) ;:==:var io:==:require ( ' socket . io ' ) ( http ) ;
var res = this . res ;:==:var req:==:this . req ;
var Variable = debug . Variable ;:==:var Scope:==:debug . Scope ;
var dialer = $ ( ' frequency - dialer ' ) ;:==:var translateX:==:self . _ translateX + getMovingSpace ( ) ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var join:==:require ( ' path ' ) . join ;
var scrollToColumn = _ props3 . scrollToColumn ;:==:var scrollToRow:==:_ props3 . scrollToRow ;
var uid = data . uid ;:==:var tid:==:data . tid ;
var _ strncpy = Module [ ' _ strncpy ' ] = asm [ ' _ strncpy ' ] ;:==:var _ im_get_spl_start_at:==:Module [ ' _ im_get_spl_start_at ' ]    asm [ ' _ im_get_spl_start_at ' ] ;
var buffer = require ( ' buffer ' ) ;:==:var Buffer:==:buffer . Buffer ;
var email = identify . email ( ) ;:==:var plan:==:identify . proxy ( ' traits . plan ' ) ;
var body = this . transformAny ( tree . body ) ;:==:var parameter:==:this . transformAny ( tree . parameter ) ;
var d = new Deferred ( ) ;:==:var t:==:new Date ( ) . getTime ( ) ;
var domProperty = require ( ' domProperty ' ) ;:==:var reactDebugCurrentFiber:==:require ( ' reactDebugCurrentFiber ' ) ;
var labelGroup = this . _ createGroup ( ' labelGroup ' ) ;:==:var axis:==:this . _ axis    this . _ createAxis ( layoutInfo , timelineModel ) ;
var i = this . currentBatchSize * 4 * this . vertSize ;:==:var resolution:==:texture . baseTexture . resolution ;
var is = require ( ' is ' ) ;:==:var del:==:require ( ' obj - case ' ) . del ;
var lex = require ( ' pug - lexer ' ) ;:==:var load:==:require ( ' pug - load ' ) ;
var openPath = imports . openPath ;:==:var upload:==:imports . upload ;
var roamTransform = this . _ roamTransform ;:==:var viewTransform:==:this . _ viewTransform ;
var first = Math . max ( firstRow , config . firstRow ) ;:==:var last:==:math . min ( lastRow , config . lastRow ) ;
var coordSysMgr = this . _ coordSysMgr ;:==:var zr:==:this . _ zr ;
var ltgt = _ interopDefault ( require ( ' ltgt ' ) ) ;:==:var events:==:_ interopDefault ( require ( ' events ' ) ) ;
var includeLineComment = options . includeLineComment  |  |  false ;:==:var start:==:options . start  |  |  0 ;
var isObject = _ angular . isObject ;:==:var isNumber:==:_ angular . isNumber ;
var imageEl = this . _ imageEl ;:==:var cropEl:==:this . _ cropEl ;
var replace = require ( ' gulp - replace ' ) ;:==:var webpack:==:require ( ' webpack - stream ' ) ;
var arguments = scenarioTest . operation . arguments ;:==:var filter:==:arguments . filter ;
var dwellTimeSpan = geofenceValues . dwellTimeSpan ;:==:var startDateTime:==:geofenceValues . startDateTime ;
var width = Math . max ( pulseChart . popupMinWidth , math . min ( pulseChart . popupMaxWidth , powerbi . dataViewObjects . getValue ( objects , pulseChart . properties [ ' popup ' ] [ ' width ' ] , pulseChart . defaultSettings . popup . width ) ) ) ;:==:var height:==:math . max ( pulseChart . popupMinHeight , math . min ( pulseChart . popupMaxHeight , powerbi . dataViewObjects . getValue ( objects , pulseChart . properties [ ' popup ' ] [ ' height ' ] , pulseChart . defaultSettings . popup . height ) ) ) ;
var Suite = mocha . Suite ;:==:var Runner:==:mocha . Runner ;
var ch = stream . string . charAt ( pos ) ;:==:var bracket:==:brackets . indexOf ( ch ) ;
var chunk = entry . chunk ;:==:var encoding:==:entry . encoding ;
var entry = this . entry ;:==:var order:==:$ scope . order ;
var pdfFunction = coreFunction . pdfFunction ;:==:var pattern:==:corePattern . pattern ;
var reactNativeStyleAttributes = require ( ' reactNativeStyleAttributes ' ) ;:==:var styleSheetValidation:==:require ( ' styleSheetValidation ' ) ;
var k = this . keys ;:==:var n:==:k . indexOf ( value . i d ) ;
var index = this . index++ ;:==:var destination:==:this . destination ;
var board = e . target . closest ( ' . board ' ) . addClass ( ' drop - in ' ) ;:==:var shadow:==:board . find ( ' . board - item - shadow ' ) ;
var fs = r ( ' fs ' ) ;:==:var path:==:r ( ' path ' ) ;
var nock = require ( ' nock ' ) ;:==:var path:==:require ( ' path ' ) ;
var currency = config . watch . currency ;:==:var asset:==:config . watch . asset ;
var prefilteredCubeMap16 = this . prefilteredCubeMap16  |  |  globalSky16 ;:==:var prefilteredCubeMap8:==:this . prefilteredCubeMap8  |  |  globalSky8 ;
var unexpectedResponseException = sharedUtil . unexpectedResponseException ;:==:var unknownErrorException:==:sharedUtil . unknownErrorException ;
var pub = ' pub - c-3c0fc243 - 9892 - 4858-aa38 - 1445e58b4ecb ' ;:==:var sub:==:' sub - c - d0c386c6 - 7263 - 11e2 - 8b02 - 12313f022c90 ' ;
var NO_DATA_ALLOWED_ERR    = exceptionCode . no_data_allowed_err    = ( ( exceptionMessage [ 6 ] = ' no data allowed ' ) , 6 ) ;:==:var no_modification_allowed_err:==:exceptionCode . no_modification_allowed_err    ( ( exceptionMessage [ 7 ]   ' no modification allowed ' ) , 7 ) ;
var dashSize = options . dashSize  |  |  3 ;:==:var gapSize:==:options . gapSize  |  |  1 ;
var axisCollapseWidth = layoutInfo . axisCollapseWidth ;:==:var winInnerIndices:==:layoutInfo . winInnerIndices ;
var table = document . createElement ( ' table ' ) ;:==:var tbody:==:document . createElement ( ' tbody ' ) ;
var memoryStore = connect . middleware . session . memoryStore ;:==:var session:==:connect . middleware . session . session ;
var app = req . app ;:==:var user:==:undefsafe ( req , ' session . user ' )  |  |  ;
var earlyChange = lzwState . earlyChange ;:==:var nextCode:==:lzwState . nextCode ;
var IMPORT_CLAUSE_PAIR = ' IMPORT_CLAUSE_PAIR ' ;:==:var IMPORT_DECLARATION:==:' IMPORT_DECLARATION ' ;
var First = db . model ( ' first ' , firstSchema ) ;:==:var second:==:db . model ( ' second ' , secondSchema ) ;
var utility = require ( ' utility ' ) ;:==:var uuid:==:require ( ' node - uuid ' ) ;
var less = require ( ' less ' ) ;:==:var postcss:==:require ( ' postcss ' ) ;
var col = this . cols - 1 ;:==:var row:==:Math . min ( this . rows , this . lines . length ) - 1 ;
var children = this . _ element . children ;:==:var len:==:children . length ;
var ui = imports . ui ;:==:var menus:==:imports . menus ;
var file = source . file ;:==:var type:==:source . type ;
var fs = require ( ' fs ' ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var primary = _ props . primary ;:==:var rippleStyle:==:_ props . rippleStyle ;
var http = imports . http ;:==:var c9:==:imports . c9 ;
var height = rrectData . height ;:==:var radius:==:rrectData . radius ;
var diff = require ( ' diff ' ) ;:==:var run:==:require ( path . join ( _ _ dirname , ' run - solution ' ) ) ;
var fs = require ( ' fs ' ) ;:==:var testSuiteResult:==:require ( ' tester ' ) . testSuiteResult ;
var v = verts [ i ] ;:==:var edge:==:pointInPolygon_edge ;
var createArgumentList = traceur . codegeneration . parseTreeFactory . createArgumentList ;:==:var createArrayLiteralExpression:==:traceur . codegeneration . parseTreeFactory . createArrayLiteralExpression ;
var syntheticCompositionEvent = require ( ' syntheticCompositionEvent ' ) ;:==:var syntheticInputEvent:==:require ( ' syntheticInputEvent ' ) ;
var email = ( user . email  |  |  '' ) . trim ( ) . toLowerCase ( ) ;:==:var name:==:user . name  |  |  ' default ' ;
var oneOf = scope . oneOf ;:==:var registerWrapper:==:scope . registerWrapper ;
var generatorTransformer = traceur . codegeneration . generator . generatorTransformer ;:==:var asyncTransformer:==:traceur . codegeneration . generator . asyncTransformer ;
var onBlur = _ props2 . onBlur ;:==:var onChange:==:_ props2 . onChange ;
var extend = require ( ' util ' ) . _ extend ;:==:var juggler:==:require ( ' loopback - datasource - juggler ' ) ;
var AT = ci . AT ;:==:var classify:==:stringMapper . classify ;
var cm    = this . cm ;:==:var lang:==:this . lang ;
var noop   = angular . noop ;:==:var copy:==:angular . copy ;
var menu = Menus . addMenu ( ' custom ' , menuItemId ) ;:==:var command:==:commandManager . get ( commandId ) ;
var ace = imports . ace ;:==:var commands:==:imports . commands ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var reactUpdates:==:require ( ' reactUpdates ' ) ;
var wrapper = this . wrapper ;:==:var options:==:this . options ;
var transform = exports . transform = pipeline . transform . bind ( pipeline ) ;:==:var transformFromAst:==:exports . transformFromAst    pipeline . transformFromAst . bind ( pipeline ) ;
var left = options . left ;:==:var right:==:options . right ;
var headers = _ ref . headers ;:==:var status:==:_ ref . status ;
var version = versionRecord . version ;:==:var name:==:self . name ;
var component = components . get ( utils . getParentComponent ( ) ) ;:==:var setStateUsages:==:component & & component . setStateUsages  |  |  [ ] ;
var path = spt . pathTo ( 6 ) ;:==:var hasPath:==:spt . hasPathTo ( 6 ) ;
var unitPos = cartesian3 . normalize ( center , unitPosScratch ) ;:==:var eastVec:==:cartesian3 . cross ( cartesian3 . unit_z , center , eastVecScratch ) ;
var type = tag . type ? ' type= ' ' + tag . type + ' ' ' : '' ;:==:var href:==:tag . href ? ' href ' ' + tag . href + ' ' ' : '' ;
var crypto = require ( ' crypto ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var View = Hilo . View ;:==:var Container:==:Hilo . Container ;
var options = opt_options  |  |  ;:==:var doc:==:options . document  |  |  document ;
var b = [ ' b ' ] ;:==:var a:==:[ 1 , ' a ' , b ] ;
var utils = require ( ' utils ' ) ;:==:var env:==:require ( ' system ' ) . env ;
var selectionState = require ( ' selectionState ' ) ;:==:var richTextEditorUtil:==:require ( ' richTextEditorUtil ' ) ;
var language = imports . language ;:==:var commands:==:imports . commands ;
var path = require ( ' path ' ) ;:==:var util:==:require ( ' util ' ) ;
var s = color : ' # 666 ' , weight : 2 , opacity : 0 . 4 , fillColor : ' # 666 ' , fillOpacity : 0 . 1 , clickable : false ;:==:var bounds:==:new l . latLngBounds ( bounds ) ;
var value = response [ ' value ' ]  |  |  ;:==:var os:==:value [ ' os ' ] ;
var chalk = require ( ' chalk ' ) ;:==:var vow:==:require ( ' vow ' ) ;
var folder = opts . folder ;:==:var exceptions:==:opts . exceptions  |  |  [ ] ;
var npc = ( user & & user . backer & & user . backer . npc ) ? user . backer . npc : '' ;:==:var level:==:( user & & user . contributor & & user . contributor . level ) ? user . contributor . level : '' ;
var min = options . minimum ;:==:var max:==:options . maximum ;
var objectLiteralTransformer = traceur . codegeneration . objectLiteralTransformer ;:==:var objectMap:==:traceur . util . objectMap ;
var columnCount = _ props . columnCount ;:==:var rowCount:==:_ props . rowCount ;
var showDontAsk = options . showDontAsk ;:==:var metadata:==:options . metadata ;
var MAX_REVISION_NUM = options . MAX_REVISION_NUM ;:==:var COMPRESSED_REV_NUM:==:options . COMPRESSED_REV_NUM ;
var camera = scene . camera ;:==:var maxCoord:==:controller . _ maxCoord ;
var brown300 = exports . brown300 = ' # a1887f ' ;:==:var brown400:==:exports . brown400    ' # 8d6e63 ' ;
var type = aEvent . type ;:==:var timeStamp:==:aEvent . timeStamp ;
var through = require ( ' through2 ' ) ;:==:var xtend:==:require ( ' xtend ' ) ;
var rangeColor = this . rangeColors _ [ i ] ;:==:var fromValue:==:rangeColor . fromValue ;
var granularity = geometry . _ granularity ;:==:var cornerType:==:geometry . _ cornerType ;
var isScalar = this . data . isScalar ;:==:var trimOrdinalDataOnOverflow:==:options . trimOrdinalDataOnOverflow ;
var webview = document . querySelector ( ' webview ' ) ;:==:var controls:==:document . querySelector ( ' # controls ' ) ;
var arraySet = _ _ webpack_require _ _ ( 5 ) . arraySet ;:==:var mappingList:==:_ _ webpack_require _ _ ( 6 ) . mappingList ;
var params = ob . params ;:==:var validate:==:validateAnyAdmin ;
var codeMirror = options . codeMirror ;:==:var navItem:==:options . navItem ;
var httpClientService = _ appJsServicesHttpClientService [ ' default ' ] ;:==:var httpServerService:==:_ appJsServicesHttpServerService [ ' default ' ] ;
var resize = configNode . getAttribute ( ' resize ' ) ;:==:var border:==:number ( configNode . getAttribute ( ' border ' )  |  |  0 ) ;
var $ container = this . $ container ;:==:var $ cropper:==:this . $ cropper ;
var i d = this . h ( ' i d ' ) ;:==:var preset:==:this . h ( ' preset ' ) ;
var index = timerEvents [ name ] . index ;:==:var label:==:timerEvents [ name ] . label ;
var PickerIOS = require ( ' PickerIOS ' ) ;:==:var pickerAndroid:==:require ( ' pickerAndroid ' ) ;
var r = convnetjs . randf ( 0 . 0 , 2 . 0 ) ;:==:var t:==:convnetjs . randf ( 0 . 0 , 2*Math . pi ) ;
var watcher = imports . watcher ;:==:var tree:==:imports . tree ;
var blob = obj . blob ;:==:var callback:==:obj . callback ;
var uiEvent = scope . wrappers . uiEvent ;:==:var mixin:==:scope . mixin ;
var createCaseClause = parseTreeFactory . createCaseClause ;:==:var createStatementList:==:parseTreeFactory . createStatementList ;
var changedObjects = this . _ changedObjects ;:==:var changed:==:changedObjects . values ;
var rimraf = denodeify ( require ( ' rimraf ' ) ) ;:==:var mkdirp:==:denodeify ( require ( ' mkdirp ' ) ) ;
var ext = path . extname ( f ) ;:==:var basename:==:path . basename ( f , ext ) ;
var x = posInfo . cx + parsePercent ( offsetCenter [ 0 ] , posInfo . r ) ;:==:var y:==:posInfo . cy + parsePercent ( offsetCenter [ 1 ] , posInfo . r ) ;
var http = require ( ' http ' ) ;:==:var net:==:require ( ' net ' ) ;
var up = elem . upPtrs [ i ] ;:==:var down:==:elem . downPtrs [ i ] ;
var height = this . _ image . height ;:==:var tileWidth:==:this . _ tileWidth  |  |  width ;
var dataLabelManager = powerbi . dataLabelManager ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var options = this . options ;:==:var session:==:$ . gestures . session ;
var Range = math . type . Range ;:==:var Unit:==:math . type . Unit ;
var id_token_hint = _ ref . id_token_hint ;:==:var login_hint:==:_ ref . login_hint ;
var pkg = this . pkg ;:==:var fileUrl:==:pkg . fileUrl    pkg . nextFileUrl  |  |  pkg . origFileUrl ;
var type = e . type ;:==:var listeners:==:target . _ c1_listeners    target . _ c1_listeners  |  |  ;
var assert = chai . assert ;:==:var sinon:==:require ( ' sinon ' ) ;
var normal = intersectTrimesh_normal ;:==:var triangles:==:intersectTrimesh_triangles ;
var page2 = element ( by . i d ( ' page2 ' ) ) ;:==:var page3:==:element ( by . i d ( ' page3 ' ) ) ;
var data = JSON . parse ( $ ( this ) . attr ( ' data ' ) ) ;:==:var day:==:$ ( this ) . attr ( ' day ' ) ;
var element = this . element [ 0 ] ;:==:var content:==:this . content [ 0 ] ;
var timestamp = _ options$timestamp = = = undefined ? true : _ options$timestamp ;:==:var transformer:==:options . transformer ;
var h = heights [ index ] ;:==:var uv:==:uvs [ index ] ;
var createBlock = traceur . codegeneration . parseTreeFactory . createBlock ;:==:var createCallExpression:==:traceur . codegeneration . parseTreeFactory . createCallExpression ;
var tagName = tagNameFromBlobType ( blobType ) ;:==:var region:==:' region ' image ' ' ;
var y0 = layout . y0 ;:==:var y:==:layout . y ;
var category = page . category ( ) ;:==:var name:==:page . name ( ) ;
var Polygon = visuals . shapes . Polygon ;:==:var dataRoleHelper:==:powerbi . data . dataRoleHelper ;
var o = opts |  |  ;:==:var z:==:write_zip ( wb , o ) ;
var w = width * . 65 ;:==:var h:==:height * . 65 ;
var badRequestError = errors . badRequestError ;:==:var internalError:==:errors . internalError ;
var pixelRatio = require ( ' pixelRatio ' ) ;:==:var react:==:require ( ' react ' ) ;
var lab = exports . lab = Lab . script ( ) ;:==:var describe:==:lab . describe ;
var ed1 = join ( ' ed1 ' ) ;:==:var ed2:==:join ( ' ed2 ' ) ;
var functionNode = math . expression . node . functionNode ;:==:var functionAssignmentNode:==:math . expression . node . functionAssignmentNode ;
var dx2 = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx2 ' , this . dx2 ) ) ) ) ;:==:var notch:==:math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' notch ' , this . notch ) ) ) ) ;
var clusterNode = this . body . nodes [ clusterNodeId ] ;:==:var containedNodes:==:clusterNode . containedNodes ;
var sinon = require ( ' sinon ' ) ;:==:var sep:==:pathFn . sep ;
var token = tokens [ i ] . toLowerCase ( ) ;:==:var cc:==:token . charCodeAt ( 0 ) , cc1 , cc2 , isnum1 , isnum2 , end ;
var tar = require ( ' tar - fs ' ) ;:==:var destroy:==:require ( ' destroy ' ) ;
var seq = sea . sequence [ i ] ;:==:var start:==:seq . start ;
var right = camera . right ;:==:var frustum:==:camera . frustum ;
var async = require ( ' async ' ) ;:==:var json2csv:==:require ( ' json-2-csv ' ) . json2csv ;
var len = string . length ;:==:var sub:==:getText ( word ) . substr ( 0 , len ) ;
var Matrix2D = Crafty . math . Matrix2D ;:==:var Vector2D:==:Crafty . math . Vector2D ;
var acceptLink = this . boxElement . querySelector ( ' . ' + cfg . acceptLinkClass ) ;:==:var denyLink:==:this . boxElement . querySelector ( ' . ' + cfg . denyLinkClass ) ;
var borderBox = require ( ' borderBox ' ) ;:==:var resolveBoxStyle:==:require ( ' resolveBoxStyle ' ) ;
var update = jasmine . createSpy ( ' update ' ) ;:==:var complete:==:jasmine . createSpy ( ' complete ' ) ;
var pos1 = obj . pos1  |  |  [ 0 , 0 , 0 ] ;:==:var pos2:==:obj . pos2  |  |  [ 0 , 0 , 0 ] ;
var stamp = header . stamp ;:==:var headerLength:==:header . headerLength ;
var recentStorageItemVisibility = windows . storage . accessCache . recentStorageItemVisibility ;:==:var startScreen:==:windows . ui . startScreen ;
var mRender = oCol . mRender ? _ fnGetObjectDataFn ( oCol . mRender ) : null ;:==:var mData:==:_ fnGetObjectDataFn ( oCol . mData ) ;
var mime = require ( ' mime ' ) ;:==:var notAcceptableError:==:require ( ' restify - errors ' ) . notAcceptableError ;
var theme = this . context . theme ;:==:var searchText:==:this . props . searchText ;
var assert   = require ( ' chai ' ) . assert ;:==:var path:==:require ( ' path ' ) ;
var fullScreenSystemOverlayMode = viewManagement . fullScreenSystemOverlayMode ;:==:var applicationView:==:viewManagement . applicationView ;
var createPropertyNameAssignment = parseTreeFactory . createPropertyNameAssignment ;:==:var createRestParameter:==:parseTreeFactory . createRestParameter ;
var plug = require ( ' gulp - load - plugins ' ) ( ) ;:==:var env:==:plug . util . env ;
var n = string2 . length ;:==:var A:==:new Array ( m+1 ) ;
var message = self . _ escapeHTML ( e . detail . message ) ;:==:var initialValue:==:e . detail . initialValue ;
var cm    = this . cm ;:==:var editor:==:this . editor ;
var width = canvas . style . width ;:==:var height:==:canvas . style . height ;
var commands = imports . commands ;:==:var Plugin:==:imports . Plugin ;
var tabManager = imports . tabManager ;:==:var ace:==:imports . ace ;
var retain = opts . retain ? protocol . RETAIN_MASK : 0 ;:==:var topic:==:opts . topic ;
var days    = iso_string__abs ( this . _ days ) ;:==:var months:==:iso_string__abs ( this . _ months ) ;
var browserify = require ( ' browserify ' ) ;:==:var streamify:==:require ( ' gulp - streamify ' ) ;
var scrollView = require ( ' scrollView ' ) ;:==:var scrollResponder:==:require ( ' scrollResponder ' ) ;
var dataLabelManager = powerbi . dataLabelManager ;:==:var shapes:==:powerbi . visuals . shapes ;
var def = this . props . def ;:==:var doc:==:def . doc ;
var a = m . observable ( 2 ) ;:==:var b:==:m . observable ( 3 ) ;
var data = _ ref . data ;:==:var created:==:_ ref . created ;
var errors = require ( ' restify - errors ' ) ;:==:var invalidHeaderError:==:errors . invalidHeaderError ;
var children = $ element [ 0 ] . children ;:==:var length:==:children . length ;
var url_for = ctx . extend . helper . get ( ' url_for ' ) ;:==:var config:==:ctx . config ;
var source = _ ref . source ;:==:var subscriber:==:_ ref . subscriber ;
var port = document . getElementById ( ' port ' ) ;:==:var directory:==:document . getElementById ( ' directory ' ) ;
var api = req . service . api ;:==:var target:==:api . targetPrefix + ' . ' + api . operations [ req . operation ] . name ;
var Lazy = jsCommon . lazy ;:==:var measureSvgTextWidth:==:powerbi . textMeasurementService . measureSvgTextWidth ;
var renderAgenda = t . renderAgenda ;:==:var skipHiddenDays:==:t . skipHiddenDays ;
var grey600 = exports . grey600 = ' # 757575 ' ;:==:var grey700:==:exports . grey700    ' # 616161 ' ;
var timeout = isUndefined ( v [ ' timeout ' ] ) ? 250 : v [ ' timeout ' ] ;:==:var maxh:==:isUndefined ( v [ ' maxh ' ] ) ? 600 : v [ ' maxh ' ] ;
var outlineColor = property . getValueOrClonedDefault ( wall . outlineColor , time , color . black , scratchColor ) ;:==:var outlineWidth:==:property . getValueOrDefault ( wall . outlineWidth , time , 1 . 0 ) ;
var scrollLeft = container . scrollLeft ;:==:var scrollTop:==:container . scrollTop ;
var isDefined = leafletHelpers . isDefined ;:==:var isObject:==:leafletHelpers . isObject ;
var assertionError = require ( ' assert ' ) . assertionError ;:==:var nodeunit:==:require ( ' nodeunit ' ) ;
var first = document . getElementById ( ' first ' ) . firstChild ;:==:var two:==:document . getElementById ( ' two ' ) . firstChild ;
var b = worldTransform . b ;:==:var c:==:worldTransform . c ;
var scrollTop = window . pageyOffset  |  |  el . scrollTop ;:==:var scrollLeft:==:window . pagexOffset  |  |  el . scrollLeft ;
var margin = resolveBoxStyle ( ' margin ' , style ) ;:==:var padding:==:resolveBoxStyle ( ' padding ' , style ) ;
var xRefParseException = sharedUtil . xRefParseException ;:==:var assert:==:sharedUtil . assert ;
var reactNative = require ( ' reactNative ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var data_bitlen = sideInfo . data_bitlen ;:==:var priv_bitlen:==:sideInfo . priv_bitlen ;
var concurrency = this . concurrency ( ) ;:==:var ignores:==:this . ignores  |  |  null ;
var disableTouchRipple = _ props2 . disableTouchRipple ;:==:var focusRippleColor:==:_ props2 . focusRippleColor ;
var noop = angular . noop ;:==:var mockLocationPaths:==:options . mockLocationPaths     null ? true : ! ! options . mockLocationPaths ;
var _ free = Module [ ' _ free ' ] = asm [ ' _ free ' ] ;:==:var _ im_open_decoder:==:Module [ ' _ im_open_decoder ' ]    asm [ ' _ im_open_decoder ' ] ;
var nodes = gltf . nodes ;:==:var scene:==:gltf . scenes [ gltf . scene ] ;
var EXPORT_SPECIFIER = parseTreeType . export_specifier ;:==:var function_declaration:==:parseTreeType . function_declaration ;
var dispatcher = scope . dispatcher ;:==:var findTarget:==:scope . findTarget ;
var Lexer = coreParser . lexer ;:==:var cMapFactory:==:corecMap . cMapFactory ;
var f = function ( obj ) return obj . x * obj . y ;:==:var m:==:functionUtils . memoize ( f ) ;
var streamInfo = track . streamInfo ;:==:var i d:==:streamInfo . i d ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var getTreeNameForType:==:traceur . syntax . trees . getTreeNameForType ;
var c9 = imports . c9 ;:==:var preferences:==:imports . preferences ;
var start = fold . start . row ;:==:var end:==:fold . end . row ;
var w = $ ( c ) . width ( ) ;:==:var h:==:$ ( c ) . height ( ) ;
var errorObj = util . errorObj ;:==:var tryCatch:==:util . tryCatch ;
var getHoverListener = t . getHoverListener ;:==:var computeDateTop:==:t . computeDateTop ;
var ed = editors [ i d ] ;:==:var doc:==:ed . session . doc ;
var t1 = sfv_t1 ;:==:var t2:==:sfv_t2 ;
var isCaseSensitive = this . lastProperty . parentType . metadataStore . localQueryComparisonOptions . isCaseSensitive ;:==:var propertyPath:==:this . propertyPath ;
var start = location . pos_start ;:==:var end:==:location . pos_end ;
var stringify = _ _ webpack_require _ _ ( 11 ) . stringify ;:==:var map:==:_ _ webpack_require _ _ ( 3 ) . map ;
var promise = ctx . promise ;:==:var receiver:==:ctx . receiver ;
var isMongooseObject = utils . isMongooseObject ;:==:var inspect:==:require ( ' util ' ) . inspect ;
var namespace = e . relatedNode . namespaceuri ;:==:var target:==:e . target ;
var Plugin = imports . Plugin ;:==:var fs:==:imports . fs ;
var minute = parseInt ( $ ( ' # timer - minute ' ) . val ( ) ) % 60 ;:==:var second:==:parseInt ( $ ( ' # timer - second ' ) . val ( ) ) % 60 ;
var reservedWords = _ identifier . reservedWords ;:==:var keywords:==:_ identifier . keywords ;
var test = require ( ' test ' ) ;:==:var a:==:require ( ' a ' ) ;
var objectElementValidators = options . objectElementValidators  |  |  ;:==:var style:==:options . style ;
var spy = sinon . spy ( ) ;:==:var a:==:new Element ( ' a [ text ' Hello World ' ] ' ) ;
var viewport = options . viewport ;:==:var value:==:refLine . value ;
var anchor = iframeDoc . getElementById ( ' anchor1 ' ) ;:==:var popup:==:document . getElementById ( ' popup6 ' ) ;
var comparator = options . comparator  |  |  defaults . comparator ;:==:var bsOptions:==:attr . bsOptions ;
var dynCall_viiiiii = Module [ ' dynCall_viiiiii ' ] = asm [ ' dynCall_viiiiii ' ] ;:==:var dynCall_viiiiiiiiiiiii:==:Module [ ' dynCall_viiiiiiiiiiiii ' ]    asm [ ' dynCall_viiiiiiiiiiiii ' ] ;
var n = numeric ;:==:var x:==:this . x , y    this . y ;
var identifier = element . dataset . identifier ;:==:var icon:==:this . icons [ identifier ] ;
var extrudedHeight = polygon . extrudedHeight ;:==:var granularity:==:polygon . granularity ;
var NULL3 = C . NULL3 = 0x43 ;:==:var NUMBER1:==:C . NUMBER1    0x51 ;
var passwordException = sharedUtil . passwordException ;:==:var passwordResponses:==:sharedUtil . passwordResponses ;
var isDefault = flow . isDefault ;:==:var isConditional:==:flow . isConditional ;
var path = require ( ' path ' ) ;:==:var async:==:require ( ' async ' ) ;
var leftBuffers = config . leftBuffers ;:==:var rightBuffers:==:config . rightBuffers ;
var _ bar = docSet . getByLongname ( ' thingy#_bar ' ) [ 0 ] ;:==:var _ gnu:==:docSet . getByLongname ( ' thingy#_gnu ' ) [ 0 ] ;
var barGroup = this . _ displayables . barGroup ;:==:var size:==:this . _ size ;
var orientation = defaultValue ( options . orientation , defaultValue . empty_object ) ;:==:var mode:==:this . _ mode ;
var Recording = require ( ' nativeModules ' ) . recording ;:==:var view:==:require ( ' view ' ) ;
var parse = require ( ' url ' ) . parse ;:==:var cookie:==:require ( ' cookie ' ) ;
var dialogClass = options . dialogClass  |  |  ' ' ;:==:var barClassSuccess:==:options . barClassSuccess  |  |  ' ' ;
var fraction = output . fraction ;:==:var point:==:new b2Vec2 ( ( 1 . 0 - fraction ) * point1 . x + fraction * point2 . x , ( 1 . 0 - fraction ) * point1 . y + fraction * point2 . y ) ;
var ARGUMENT_LIST = ' ARGUMENT_LIST ' ;:==:var ARRAY_COMPREHENSION:==:' ARRAY_COMPREHENSION ' ;
var vertices = node . _ vertices ;:==:var uvs:==:node . _ uvs ;
var cos = spine . mathUtils . cosDeg ( angle ) ;:==:var sin:==:spine . mathUtils . sinDeg ( angle ) ;
var icc = iccManager . getIccById ( iccId ) ;:==:var iccInfo:==:icc . iccInfo ;
var profile = profiles [ key ] ;:==:var video:==:profile . video ;
var UNARY_EXPRESSION = ' UNARY_EXPRESSION ' ;:==:var UNION_TYPE:==:' UNION_TYPE ' ;
var clearGlobeDepth = environmentState . clearGlobeDepth = defined ( globe ) & & ( ! globe . depthTestAgainstTerrain  |  |  scene . mode = = = sceneMode . scene2d ) ;:==:var useDepthPlane:==:environmentState . useDepthPlane    clearGlobeDepth & & scene . mode      sceneMode . scene3d ;
var dx = options . dx ;:==:var dy:==:options . dy ;
var canvas = options . canvas ;:==:var contextOptions:==:options . contextOptions ;
var line = end . line - start . line ;:==:var ch:==:end . ch - start . ch ;
var clientWidth = this . element . clientWidth ;:==:var clientHeight:==:this . element . clientHeight ;
var dateTime = goog . require ( ' goog . date . dateTime ' ) ;:==:var dateTimeFormat:==:goog . require ( ' goog . i18n . dateTimeFormat ' ) ;
var contentState = require ( ' contentState ' ) ;:==:var draftEntity:==:require ( ' draftEntity ' ) ;
var displayName = _ treeSnapshot$instanc . displayName ;:==:var ownerid:==:_ treeSnapshot$instanc . ownerid ;
var checkIfAttachable = options . checkIfAttachable ;:==:var noEdges:==:options . noEdges ;
var jpegStream = coreStream . jpegStream ;:==:var jpxStream:==:coreStream . jpxStream ;
var proxyquire = require ( ' proxyquire ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var declaredPropTypes = component & & component . declaredPropTypes  |  |  [ ] ;:==:var ignorePropsValidation:==:component & & component . ignorePropsValidation  |  |  false ;
var extend = require ( ' extend - object ' ) ;:==:var slice:==:[ ] . slice ;
var $ this = this . $ this ;:==:var cur:==:this . curIndex ;
var proc = imports . proc ;:==:var c9:==:imports . c9 ;
var component = components [ i d ] ;:==:var entity:==:component . entity ;
var elementInjectorIndex = memento . _ elementInjectorIndex ;:==:var directiveIndex:==:memento . _ directiveIndex ;
var path = require ( ' path ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var join = _ _ webpack_require _ _ ( 3 ) . join ;:==:var stringify:==:_ _ webpack_require _ _ ( 11 ) . stringify ;
var urlMapper = options . urlMapper  |  |  _ . identity ;:==:var pathMapper:==:options . pathMapper  |  |  _ . identity ;
var name = path . substring ( 0 , path . length - extname . length ) ;:==:var views:==:this . views [ name ]    this . views [ name ]  |  |  ;
var data = options . data ;:==:var baseUrl:==:options . baseUrl ;
var scene3dOnly = frameState . scene3dOnly ;:==:var nodeCommands:==:model . _ nodeCommands ;
var _ strcat = Module [ ' _ strcat ' ] = asm [ ' _ strcat ' ] ;:==:var _ strlen:==:Module [ ' _ strlen ' ]    asm [ ' _ strlen ' ] ;
var took = logEntry . took ;:==:var nextState:==:logEntry . nextState ;
var Background = Windows . applicationModel . background ;:==:var backgroundExecutionManager:==:background . backgroundExecutionManager ;
var firebaseAdapter = firepad . firebaseAdapter ;:==:var entityManager:==:firepad . entityManager ;
var options = this . options ;:==:var selected:==:$ ( obj . el ) . data ( ' selected ' ) ;
var center = viewState . center ;:==:var extent:==:frameState . extent ;
var $ rootElement = this . $ injector . get ( ' $ rootElement ' ) ;:==:var $ log:==:this . $ injector . get ( ' $ log ' ) ;
var b = b16 ( 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ) ;:==:var i1:==:i16 ( 1 , 0 , 1 , 8 , 1 , 0 , 1 , 8 , 1 , 0 , 1 , 8 , 1 , 0 , 1 , 8 ) ;
var order = layer . _ order ;:==:var next:==:order . next ;
var path = require ( ' path ' ) ;:==:var walk:==:require ( ' pug - walk ' ) ;
var inDict = inDict  |  |  ;:==:var buttons:==:inDict . buttons ;
var constructor = obj . constructor ;:==:var proto:==:_ . isFunction ( constructor ) & & constructor . prototype  |  |  objProto ;
var r = this . r , g = this . g , b = this . b ;:==:var max:==:Math . max ( r , g , b ) ;
var signature = query . signature ;:==:var timestamp:==:query . timestamp ;
var div = root . find ( ' div ' ) ;:==:var span:==:root . find ( ' span ' ) ;
var mock = this . mock ;:==:var object:==:this . object ;
var req = ctx & & ctx . req ;:==:var accessToken:==:req & & req . accessToken ;
var read = require ( ' fs ' ) . readFileSync ;:==:var parse:==:require ( ' url ' ) . parse ;
var assign = Object . assign  |  |  require ( ' object . assign ' ) ;:==:var through2:==:require ( ' through2 ' ) ;
var cropper = $ image2 . data ( ' cropper ' ) ;:==:var canvas:==:cropper . canvas ;
var clone = require ( ' clone ' ) ;:==:var has:==:Object . prototype . hasOwnProperty ;
var cropHeight = instance . get ( ' cropHeight ' ) ;:==:var cropWidth:==:instance . get ( ' cropWidth ' ) ;
var replace = require ( ' gulp - replace ' ) ;:==:var transform:==:require ( ' gulp - transform ' ) ;
var unexpectedResponseException = sharedUtil . unexpectedResponseException ;:==:var passwordException:==:sharedUtil . passwordException ;
var expression = this . transformAny ( tree . expression ) ;:==:var body:==:this . transformToBlockOrStatement ( tree . body ) ;
var point = options & & options . point ;:==:var tolerance:==:options & & options . tolerance ;
var sorter = $ ( this ) . data ( ' sorter ' ) ;:==:var t:==:' th - sort - up ' ;
var l = arguments . length ;:==:var a:==:new Array ( l - 3 ) ;
var targetbgLow = record . targetbgLow ;:==:var targetbgHigh:==:record . targetbgHigh ;
var th = goog . bind ( this . dom _ . createDom , this . dom _ , ' th ' ) ;:==:var td:==:goog . bind ( this . dom _ . createDom , this . dom _ , ' td ' ) ;
var length = ! ! obj & & ' length ' in obj & & obj . length ;:==:var type:==:$ . type ( obj ) ;
var sum32 = utils . sum32 ;:==:var sum32_4:==:utils . sum32_4 ;
var isCordova = platformInfo . isCordova ;:==:var isnw:==:platformInfo . isnw ;
var https = require ( ' https ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var extrudedHeight = rectangle . extrudedHeight ;:==:var granularity:==:rectangle . granularity ;
var originalEvent = e . originalEvent ;:==:var clientx:==:originalEvent . clientx ;
var createPropertyMap = astUtils . createPropertyMap ;:==:var unlend:==:astUtils . unlend ;
var y = shape . cy ;:==:var a:==:shape . width ;
var mkdirp = denodeify ( require ( ' mkdirp ' ) ) ;:==:var all:==:Promise . all . bind ( Promise ) ;
var first = parseInt ( kernings [ i ] . getAttribute ( ' first ' ) , 10 ) ;:==:var second:==:parseInt ( kernings [ i ] . getAttribute ( ' second ' ) , 10 ) ;
var routingController = _ componentsFxosMvcDistMvc . routingController ;:==:var mainView:==:_ jsViewMainView [ ' default ' ] ;
var ENTER_KEYCODE = CONST . ENTER_KEYCODE ;:==:var isBackspaceKey:==:utilities . isBackspaceKey ;
var supportFunction = exports . supportFunction = ' rgb | rgba | url | attr | counter | counters ' ;:==:var supportConstant:==:exports . supportConstant    ' absolute | after - edge | after | all - scroll | all | alphabetic | always | antialiased | armenian | auto | avoid - column | avoid - page | avoid | balance | baseline | before - edge | before | below | bidi - override | block - line - height | block | bold | bolder | border - box | both | bottom | box | break - all | break - word | capitalize | caps - height | caption | center | central | char | circle | cjk - ideographic | clone | close - quote | col - resize | collapse | column | consider - shifts | contain | content - box | cover | crosshair | cubic - bezier | dashed | decimal - leading - zero | decimal | default | disabled | disc | disregard - shifts | distribute - all - lines | distribute - letter | distribute - space | distribute | dotted | double | e - resize | ease - in | ease - in - out | ease - out | ease | ellipsis | end | exclude - ruby | fill | fixed | georgian | glyphs | grid - height | groove | hand | hanging | hebrew | help | hidden | hiragana - iroha | hiragana | horizontal | icon | ideograph - alpha | ideograph - numeric | ideograph - parenthesis | ideograph - space | ideographic | inactive | include - ruby | inherit | initial | inline - block | inline - box | inline - line - height | inline - table | inline | inset | inside | inter - ideograph | inter - word | invert | italic | justify | katakana - iroha | katakana | keep - all | last | left | lighter | line - edge | line - through | line | linear | list - item | local | loose | lower - alpha | lower - greek | lower - latin | lower - roman | lowercase | lr - tb | ltr | mathematical | max - height | max - size | medium | menu | message - box | middle | move | n - resize | ne - resize | newspaper | no - change | no - close - quote | no - drop | no - open - quote | no - repeat | none | normal | not - allowed | nowrap | nw - resize | oblique | open - quote | outset | outside | overline | padding - box | page | pointer | pre - line | pre - wrap | pre | preserve-3d | progress | relative | repeat - x | repeat - y | repeat | replaced | reset - size | ridge | right | round | row - resize | rtl | s - resize | scroll | se - resize | separate | slice | small - caps | small - caption | solid | space | square | start | static | status - bar | step - end | step - start | steps | stretch | strict | sub | super | sw - resize | table - caption | table - cell | table - column - group | table - column | table - footer - group | table - header - group | table - row - group | table - row | table | tb - rl | text - after - edge | text - before - edge | text - bottom | text - size | text - top | text | thick | thin | transparent | underline | upper - alpha | upper - latin | upper - roman | uppercase | use - script | vertical - ideographic | vertical - text | visible | w - resize | wait | whitespace | z - index | zero ' ;
var hideIfNoPrevNext = this . _ get ( inst , ' hideIfNoPrevNext ' ) ;:==:var navigationAsDateFormat:==:this . _ get ( inst , ' navigationAsDateFormat ' ) ;
var ik = iks [ i ] ;:==:var effector:==:bones [ ik . effector ] ;
var slicePartitions = ellipsoid . slicePartitions ;:==:var outlineWidth:==:ellipsoid . outlineWidth ;
var bottomRadius = options . bottomRadius ;:==:var vertexFormat:==:defaultValue ( options . vertexFormat , vertexFormat . default ) ;
var tabManager = imports . tabManager ;:==:var fs:==:imports . fs ;
var s = ( table . config . parsers [ c ] . type = = ' text ' ) ? ( ( order = = 0 ) ? makeSortFunction ( ' text ' , ' asc ' , c ) : makeSortFunction ( ' text ' , ' desc ' , c ) ) : ( ( order = = 0 ) ? makeSortFunction ( ' numeric ' , ' asc ' , c ) : makeSortFunction ( ' numeric ' , ' desc ' , c ) ) ;:==:var e:==:' e ' + i ;
var messageHandler = this . messageHandler ;:==:var loadingTask:==:this . loadingTask ;
var registeredMesh = this . _ registeredMeshes [ index ] ;:==:var body:==:registeredMesh . body . body ;
var prop = this . properties [ i ] ;:==:var key:==:prop . key ;
var style = _ props3 . style ;:==:var verticalOverscanSize:==:_ props3 . verticalOverscanSize ;
var A = Backbone . Model . extend ( idAttribute : ' _ i d ' ) ;:==:var b:==:backbone . model . extend ( idAttribute : ' _ i d ' ) ;
var selector = selectors [ i ] ;:==:var keys:==:Object . keys ( selector ) ;
var type = fixture . type ;:==:var value:==:fixture . value ;
var namespaceURI = parentNode . namespaceuri ;:==:var properties:==:context [ ' properties ' ] ;
var width = cropBox . width ;:==:var height:==:cropBox . height ;
var sid1 = ' sid1 ' , sid2 = ' sid2 ' ;:==:var uid1:==:' uid1 ' , uid2    ' uid2 ' , uid3    ' uid3 ' ;
var margin = this . margin ;:==:var series:==:data ? data . series : null ;
var Prism = require ( ' Prism ' ) ;:==:var Marked:==:require ( ' Marked ' ) ;
var path = require ( ' path ' ) ;:==:var session:==:require ( ' express - session ' ) ;
var debug = require ( ' debug ' ) ( ' superagent ' ) ;:==:var formidable:==:require ( ' formidable ' ) ;
var fill = elem . getAttributens ( null , ' fill ' ) ;:==:var stroke:==:elem . getAttributens ( null , ' stroke ' ) ;
var on = bind$1 ( vm . $ on , vm ) ;:==:var off:==:bind$1 ( vm . $ off , vm ) ;
var prompt = require ( ' prompt - lite ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var ellipsoid = globe . ellipsoid ;:==:var surface:==:globe . _ surface ;
var height = options . viewport . height ;:==:var width:==:options . viewport . width ;
var axis = d3 . svg . axis ( ) ;:==:var scale:==:d3 . scale . linear ( ) ;
var addon = spec . addon ;:==:var radiogroup:==:spec . radiogroup ;
var foo = function foo ( ) ;:==:var foo:==:async function foo ( ) ;
var sinon = require ( ' sinon ' ) ;:==:var connect:==:require ( ' connect ' ) ;
var c = Y . Cookie . getSub ( ' data ' , ' c ' ) ;:==:var e:==:y . cookie . getSub ( ' data ' , ' e ' ) ;
var entity = geometryUpdater . _ entity ;:==:var cylinder:==:entity . cylinder ;
var POST = ' POST ' ;:==:var markdown:==:' markdown ' ;
var index = a . indexOf ( ' . ' ) ;:==:var d:==:a . slice ( 0 , index ) ;
var size = opt_size  |  |  5 * 1024 * 1024 ;:==:var win:==:opt_window  |  |  bot . getWindow ( ) ;
var identifierToken = traceur . syntax . identifierToken ;:==:var keywords:==:traceur . syntax . keywords ;
var photos = type ? options . photos : , data = photos . data  |  |  [ ] ;:==:var start:==:photos . start  |  |  0 ;
var i = this . index++ ;:==:var array:==:this . array ;
var torrent = this . model . get ( ' torrents ' ) [ this . model . get ( ' quality ' ) ] ;:==:var health:==:torrent . health . capitalize ( ) ;
var constructor = applyParams ( clsDef . hasOwnProperty ( ' constructor ' ) ? clsDef . constructor : undefined , ' constructor ' ) ;:==:var proto:==:constructor . prototype ;
var jsonResultsAdapter = mappingContext . jsonResultsAdapter ;:==:var typeMap:==:jsonResultsAdapter . typeMap ;
var ui = app . ns ( ' ui ' ) ;:==:var services:==:app . ns ( ' services ' ) ;
var s = wb . sheetNames [ idx ] , ws = wb . sheets [ s ]  |  |  ;:==:var r:==:safe_decode_range ( ws [ ' ! ref ' ]  |  |  ' a1 ' ) ;
var mousemove = fakeDispatch ( ' mousemove ' , 100 , 2 ) ;:==:var mouseup:==:fakeDispatch ( ' mouseup ' , 100 , 2 ) ;
var item = result . rows . item ( i ) ;:==:var seq:==:item . seq ;
var state    = this . state ;:==:var editor:==:this . editor ;
var asn1 = require ( ' asn1 ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var util = imports . util ;:==:var Previewer:==:imports . Previewer ;
var p = particle . position ;:==:var m:==:particle . mass ;
var _ realloc = Module [ ' _ realloc ' ] = asm [ ' _ realloc ' ] ;:==:var _ i64Add:==:module [ ' _ i64Add ' ]    asm [ ' _ i64Add ' ] ;
var dynCall_iiiiii = Module [ ' dynCall_iiiiii ' ] = asm [ ' dynCall_iiiiii ' ] ;:==:var dynCall_viiii:==:Module [ ' dynCall_viiii ' ]    asm [ ' dynCall_viiii ' ] ;
var word = select ( ' # word ' ) . value ( ) ;:==:var score:==:select ( ' # score ' ) . value ( ) ;
var payloads = desc . payloads  |  |  [ ] ;:==:var fingerprints:==:( transport & & transport . fingerprints )  |  |  [ ] ;
var createUnit = math . createUnit ;:==:var unit:==:math . type . unit ;
var a = new constantNode ( 2 ) ;:==:var n:==:new operatorNode ( ' ! ' , ' factorial ' , [ a ] ) ;
var pixelConverter = jsCommon . pixelConverter ;:==:var sqExprBuilder:==:powerbi . data . sqExprBuilder ;
var anchor = anchors [ i ] ;:==:var href:==:anchor . getAttribute ( ' href ' ) ;
var sourceActivity = this . g . getById ( sourceActivityId ) ;:==:var destinationActivity:==:this . g . getById ( destinationActivityId ) ;
var isStaticOrKinematic = this . isStaticOrKinematic ( ) ;:==:var mass:==:isStaticOrKinematic ? 0 : this . mass ;
var json = require ( ' rollup - plugin - json ' ) ;:==:var http:==:require ( ' http ' ) ;
var del = require ( ' del ' ) ;:==:var eslint:==:require ( ' gulp - eslint ' ) ;
var marked = require ( ' marked ' ) ;:==:var path:==:require ( ' path ' ) ;
var when = require ( ' when ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var width = Math . ceil ( dimensions . width ) + x + doublePadding ;:==:var height:==:dimensions . height + doublePadding ;
var normal = intersectConvex_normal ;:==:var vector:==:intersectConvex_vector ;
var disputed = feature . get ( ' disputed ' ) ;:==:var maki:==:feature . get ( ' maki ' ) ;
var personCount = element ( by . model ( ' personCount ' ) ) ;:==:var person1:==:element ( by . model ( ' person1 ' ) ) ;
var MODULE_DEFINITION = parseTreeType . module_definition ;:==:var module_require:==:parseTreeType . module_require ;
var spriteMaterial = game . physics . p2 . createMaterial ( ' spriteMaterial ' , player . body ) ;:==:var worldMaterial:==:game . physics . p2 . createMaterial ( ' worldMaterial ' ) ;
var User = mongoose . model ( ' User ' ) ;:==:var find:==:User . find ( ) ;
var keys = this . keys ;:==:var length:==:keys . length ;
var tls = require ( ' tls ' ) ;:==:var util:==:require ( ' util ' ) ;
var a = document . createElement ( ' a ' ) ;:==:var span:==:document . createElement ( ' span ' ) ;
var clone = require ( ' clone ' ) ;:==:var jsonata:==:require ( ' jsonata ' ) ;
var createAssignmentExpression = parseTreeFactory . createAssignmentExpression ;:==:var createBindingIdentifier:==:parseTreeFactory . createBindingIdentifier ;
var asyncState = traceur . codegeneration . generator . asyncState ;:==:var endState:==:traceur . codegeneration . generator . endState ;
var uglify = require ( ' uglify - js ' ) ;:==:var buble:==:require ( ' rollup - plugin - buble ' ) ;
var util = imports . util ;:==:var vfs:==:imports . vfs ;
var worker = workers [ i % threads ] ;:==:var ip:==:ips [ i ] ;
var rippleStyle = _ props . rippleStyle ;:==:var secondary:==:_ props . secondary ;
var width = node . getAttribute ( ' width ' )  |  |  formObject . width ;:==:var height:==:node . getAttribute ( ' height ' )  |  |  formObject . height ;
var strength   = this . options . strength ;:==:var forceFunction:==:this . options . forceFunction ;
var scene3dOnly = parameters . scene3dOnly ;:==:var vertexCacheOptimize:==:parameters . vertexCacheOptimize ;
var hostname = options . hostname ;:==:var port:==:options . port ;
var zapfDingbatsEncoding = coreEncodings . zapfDingbatsEncoding ;:==:var expertEncoding:==:coreEncodings . expertEncoding ;
var props = this . props ;:==:var foreground:==:this . dom . foreground ;
var legacy = require ( ' character - entities - legacy ' ) ;:==:var has:==:require ( ' has ' ) ;
var doc = window . document ;:==:var script:==:doc . createElement ( ' script ' ) ;
var size = t2 . size ;:==:var color:==:t2 . color ;
var assert = require ( ' chai ' ) . assert ;:==:var path:==:require ( ' path ' ) ;
var express = require ( ' express ' ) ;:==:var multer:==:require ( ' multer ' ) ;
var operatorList = this . operatorList ;:==:var bbox:==:this . bbox ;
var fontFace = reactCanvas . fontFace ;:==:var measureText:==:reactCanvas . measureText ;
var font = label . _ font ;:==:var fillColor:==:label . _ fillColor ;
var processedLength = evt . processedLength ;:==:var fileLength:==:evt . fileLength ;
var STRING2 = C . STRING2 = 0x62 ;:==:var STRING3:==:C . STRING3    0x63 ;
var ms2DateTime = lib . ms2DateTime ;:==:var dateTime2ms:==:lib . dateTime2ms ;
var util = require ( ' util ' ) ;:==:var dgram:==:require ( ' dgram ' ) ;
var value1 = element ( by . binding ( ' checkboxModel . value1 ' ) ) ;:==:var value2:==:element ( by . binding ( ' checkboxModel . value2 ' ) ) ;
var margin = this . layout . margin ;:==:var width:==:viewport . width - ( margin . left + margin . right ) ;
var position = camera . position ;:==:var up:==:camera . up ;
var c = df . appendChild ( document . createTextNode ( ' c ' ) ) ;:==:var d:==:df . appendChild ( document . createTextNode ( 'd ' ) ) ;
var stateMachine = traceur . syntax . trees . stateMachine ;:==:var variableBinder:==:traceur . semantics . variableBinder ;
var bio = req . fields . bio ;:==:var avatar:==:req . files . avatar . path . split ( path . sep ) . pop ( ) ;
var fs = require ( ' fs ' ) ;:==:var helper:==:require ( ' helper ' ) ;
var ignore = require ( ' gulp - ignore ' ) ;:==:var merge:==:require ( ' merge2 ' ) ;
var current = this . current ;:==:var font:==:current . font ;
var symbolNode = math . expression . node . symbolNode ;:==:var functionNode:==:math . expression . node . functionNode ;
var fs = require ( ' fs ' ) ;:==:var path:==:require ( ' path ' ) ;
var awesomeMarkersPlugin = leafletHelpers . awesomeMarkersPlugin ;:==:var vectorMarkersPlugin:==:leafletHelpers . vectorMarkersPlugin ;
var I8 = new primitiveType ( ' i8 ' , 1 , ' i ' , -128 , 127 ) ;:==:var i16:==:new primitiveType ( ' i16 ' , 2 , ' i ' , -32768 , 32767 ) ;
var c = components [ i d ] ;:==:var entity:==:c . entity ;
var oElement = node . one ( p_oelement ) ;:==:var p_oattributes:==:p_oattributes  |  |  ;
var pkg = require . modules [ pkgfile ] ( ) ;:==:var b:==:pkg . browserify ;
var dataViewObject = powerbi . dataViewObject ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var properties = element . data ( ' attributes ' )  |  |  element . data ( ' properties ' ) ;:==:var key:==:element . data ( ' key ' )  |  |  element . data ( ' parent ' ) ;
var width = svgInfo . width ;:==:var height:==:svgInfo . height ;
var first_currency = order . first_currency = ripple . Currency . from_json ( pair [ 0 ] . substring ( 0,3 ) ) ;:==:var second_currency:==:order . second_currency    ripple . Currency . from_json ( pair [ 1 ] . substring ( 0,3 ) ) ;
var addSpy = jasmine . createSpy ( ' addSpy ' ) ;:==:var removeSpy:==:jasmine . createSpy ( ' removeSpy ' ) ;
var mustNotExist = self . _ mustNotExist ( absPath ) ;:==:var mustBeaFile:==:self . _ mustBeaFile ( absPath ) ;
var rnTesterBlock = require ( ' rnTesterBlock ' ) ;:==:var rnTesterPage:==:require ( ' rnTesterPage ' ) ;
var createCallStatement = parseTreeFactory . createCallStatement ;:==:var createContinueStatement:==:parseTreeFactory . createContinueStatement ;
var i d = ids [ i ] ;:==:var layer:==:this . _ layers [ i d ] ;
var is = require ( ' is ' ) ;:==:var extend:==:require ( ' extend ' ) ;
var column = pos . column  |  |  1 ;:==:var line:==:pos . line  |  |  1 ;
var tr = graph . view . translate ;:==:var s:==:graph . view . scale ;
var center = options . center ;:==:var granularity:==:options . granularity * 8 . 0 ;
var task = gRequire ( ' task ' ) ;:==:var help:==:gRequire ( ' help ' ) ;
var doc = opt_doc  |  |  document ;:==:var cache:==:bot . inject . cache . getCache _ ( doc ) ;
var get = Ember . get ;:==:var set:==:Ember . set ;
var y = v . y ;:==:var z:==:v . z ;
var caseClause = traceur . syntax . trees . caseClause ;:==:var defaultClause:==:traceur . syntax . trees . defaultClause ;
var r = rValues [ ri ] ;:==:var m:==:new three . matrix4 ( ) . compose ( t , r , s ) ;
var skin = this . skins [ name ] . templates [ type ] ;:==:var originals:==:this . skins [ name ] . originals [ type ] ;
var predefinedName = traceur . syntax . predefinedName ;:==:var sourceRange:==:traceur . util . sourceRange ;
var height = this . props . height ;:==:var maxHeight:==:this . props . maxHeight ;
var reactTypeOfWork = require ( ' reactTypeOfWork ' ) ;:==:var reactTypeOfSideEffect:==:require ( ' reactTypeOfSideEffect ' ) ;
var spec = jEl . data ( ' spec ' ) ;:==:var uqid:==:jEl . data ( ' uqid ' )  |  |  null ;
var Person = db . model ( ' Person4104 ' , personSchema ) ;:==:var animal:==:db . model ( ' animal4104 ' , animalSchema ) ;
var concat = arrayProto . concat ;:==:var toString:==:objProto . toString ;
var DIRECTION_RIGHT = gestureDetector . direction_right = ' right ' ;:==:var pointer_mouse:==:gestureDetector . pointer_mouse    ' mouse ' ;
var body = this . body  |  |  ;:==:var query:==:this . query  |  |  ;
var summary = $ ( ' # grid_'+ this . name + ' _ summary ' ) ;:==:var footer:==:$ ( ' # grid_'+ this . name + ' _ footer ' ) ;
var source = util . getArg ( aArgs , ' source ' , null ) ;:==:var name:==:util . getArg ( aArgs , ' name ' , null ) ;
var process = asset . process . bind ( hexo ) ;:==:var pattern:==:asset . pattern ;
var r = Q . reject ( new Error ( ' aaargh ' ) ) ;:==:var p:==:Q . promise ( function ( ) ) ;
var browserify = require ( ' browserify ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var fs = require ( ' hexo - fs ' ) ;:==:var Permalink:==:util . Permalink ;
var async = _ props . async ;:==:var selectComponent:==:_ props . selectComponent ;
var object = that . _ object ( dom ) ;:==:var options:==:object & & object . options ;
var mode = options . mode ? MODES [ options . mode . toLowerCase ( ) ] : -1 ;:==:var mask:==:' mask ' in options ? options . mask : -1 ;
var el = setupSelect ( ' ng - required='isRequired ' ng - model='someModel ' ' ) ;:==:var label:==:el . find ( ' label ' ) ;
var literalExpression = traceur . syntax . trees . literalExpression ;:==:var literalToken:==:traceur . syntax . literalToken ;
var header = require ( ' gulp - header ' ) ;:==:var del:==:require ( ' del ' ) ;
var vertexPositionBuffer = this . _ vertexPositionBuffer ;:==:var textureIndexBuffer:==:this . _ textureIndexBuffer ;
var logger = self . logger = ;:==:var messaging:==:vAPI . messaging ;
var adapter = saveContext . adapter ;:==:var entityManager:==:saveContext . entityManager ;
var privateNameSyntaxTransformer = traceur . codegeneration . privateNameSyntaxTransformer ;:==:var programTree:==:traceur . syntax . trees . programTree ;
var child = require ( ' child_process ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var block1 = Hierarchy . follow ( Element . fromDom ( viewBlock . get ( ) ) , block1Path ) . getOrDie ( ) ;:==:var block2:==:hierarchy . follow ( element . fromDom ( viewBlock . get ( ) ) , block2Path ) . getOrDie ( ) ;
var Capture = Windows . Media . Capture ;:==:var storageLibrary:==:windows . storage . storageLibrary ;
var request = options . request ;:==:var config:==:options . config ;
var strokeWidth = defaultValue ( options . strokeWidth , 1 ) ;:==:var backgroundColor:==:defaultValue ( options . backgroundColor , color . transparent ) ;
var referenceContext = settings . referenceContext ;:==:var warningContext:==:settings . warningContext ;
var referenceNode = referenceNodes . nodes [ 0 ] ;:==:var parentNode:==:referenceNode . parentNode ;
var results = e . data . results ;:==:var editor:==:tab . editor ;
var destination = this . destination ;:==:var resultSelector:==:this . resultSelector ;
var numElements = this . numElements ;:==:var numComponents:==:this . numComponents ;
var ast = Sk . astFromParse ( cst ) ;:==:var st:==:sk . symboltable ( ast , name + ' . py ' ) ;
var from = nodes [ e . from ] ;:==:var to:==:nodes [ e . to ] ;
var each = zrUtil . each ;:==:var pi:==:math . pi ;
var cellStyle = _ ref . cellStyle ;:==:var columnSizeAndPositionManager:==:_ ref . columnSizeAndPositionManager ;
var guess = options ? ! ! options . guess : true ;:==:var p:==:new printStackTrace . implementation ( ) ;
var path = require ( ' path ' ) ;:==:var concat:==:require ( ' concat - stream ' ) ;
var elOption = elOptions [ i ] ;:==:var el:==:elMap . get ( elOption . i d ) ;
var eventPluginUtils = require ( ' eventPluginUtils ' ) ;:==:var eventPropagators:==:require ( ' eventPropagators ' ) ;
var element = that . element ;:==:var accessKey:==:element [ 0 ] . accessKey ;
var exec = require ( ' child_process ' ) . exec ;:==:var optimist:==:require ( ' optimist ' ) ;
var children = results . children ( ) ;:==:var length:==:children . length ;
var n = locString . length ;:==:var texture:==:this . _ textureToRender ;
var status = xhr . status ? ' error ' : ' abort ' ;:==:var statusText:==:xhr . statusText  |  |  null ;
var label = _ column$props2 . label ;:==:var columnData:==:_ column$props2 . columnData ;
var x = fromAxisAngleScratch . x * s ;:==:var y:==:fromAxisAngleScratch . y * s ;
var south = rectangle . south ;:==:var east:==:rectangle . east ;
var progressBar = require ( ' progressBarAndroid ' ) ;:==:var view:==:require ( ' view ' ) ;
var icon = self . settings . icon ? prefix + ' ico ' + prefix + ' i- ' + self . settings . icon : '' ;:==:var image:==:self . settings . image ? ' style ' background - image : url ( \ '' + self . settings . image + ' \ ' ) ' ' : '' ;
var getElementsByTagName = document . getElementsByTagName ;:==:var createDocumentFragment:==:document . createDocumentFragment ;
var heightSegments = opts & & opts . heightSegments ! = = undefined ? opts . heightSegments : 5 ;:==:var capSegments:==:opts & & opts . capSegments !    undefined ? opts . capSegments : 18 ;
var files = e . target . files ;:==:var f:==:files [ 0 ] ;
var a = new symbolNode ( ' a ' ) ;:==:var b:==:new symbolNode ( ' b ' ) ;
var encoding = this . _ mesh . encoding ;:==:var skirtHeight:==:this . _ skirtHeight ;
var line = getLine ( cm . view . doc , linen ) ;:==:var visual:==:visualLine ( cm . view . doc , line ) ;
var duration = parseTimingValue ( durationStr ) ;:==:var delay:==:parseTimingValue ( delayStr ) ;
var width   = ctx . canvas . width ;:==:var height:==:ctx . canvas . height ;
var data = options . data ;:==:var eventGroup:==:options . eventGroup ;
var async = require ( ' async ' ) ;:==:var flash:==:require ( ' connect - flash ' ) ;
var os = require ( ' os ' ) ;:==:var which:==:require ( ' which ' ) ;
var Role = app . models . Role ;:==:var User:==:app . models . User ;
var createBinaryOperator = parseTreeFactory . createBinaryOperator ;:==:var createCallExpression:==:parseTreeFactory . createCallExpression ;
var allow_maximize = frag . getAttribute ( ' data - allow_maximize ' ) ;:==:var allow_minimize:==:frag . getAttribute ( ' data - allow_minimize ' ) ;
var createInteractivityService = powerbi . visuals . createInteractivityService ;:==:var createLegend:==:powerbi . visuals . createLegend ;
var createSetAccessor = parseTreeFactory . createSetAccessor ;:==:var createThrowStatement:==:parseTreeFactory . createThrowStatement ;
var join = path . join ;:==:var basename:==:path . basename ;
var collection = db . collection ( ' fs . chunks ' ) ;:==:var count:==:yield collection . count ( ) ;
var styleLayer = styleLayers [ i d ] ;:==:var paint:==:styleLayer . paint ;
var settings = this . settings ;:==:var cm:==:this . cm ;
var Media = Windows . Media ;:==:var simpleOrientation:==:windows . devices . sensors . simpleOrientation ;
var network = _ mobileConnection . voice . network ;:==:var iccInfo:==:iccCard & & iccCard . iccInfo ;
var icon = this . iconEl ;:==:var button:==:angular . element ( this . buttonEl ) ;
var remote = new PouchDB ( dbs . remote ) ;:==:var ajax:==:remote . _ ajax ;
var session = args . session ;:==:var stream:==:args . stream ;
var end = ' endkey ' in opts ? opts . endkey : false ;:==:var descending:==:' descending ' in opts ? opts . descending : false ;
var radius = polygon . m_radius + circle . m_radius ;:==:var vertexCount:==:parseInt ( polygon . m_vertexcount ) ;
var parser = _ dereq _ ( ' engine . io - parser ' ) ;:==:var inherit:==:_ dereq _ ( ' component - inherit ' ) ;
var textMeasurementService = powerbi . textMeasurementService ;:==:var dataLabelManager:==:powerbi . dataLabelManager ;
var billboard = item . billboard ;:==:var show:==:entity . isShowing & & entity . isAvailable ( time ) & & property . getValueOrDefault ( billboardGraphics . _ show , time , true ) ;
var tileLoadQueueHigh = primitive . _ tileLoadQueueHigh ;:==:var tileLoadQueueMedium:==:primitive . _ tileLoadQueueMedium ;
var red = ' red ' ;:==:var blue:==:' blue ' ;
var width = Math . max ( bounds . width , graph . scrollTileSize . width * graph . view . scale ) ;:==:var height:==:math . max ( bounds . height , graph . scrollTileSize . height * graph . view . scale ) ;
var analytics = imports [ ' analytics ' ] ;:==:var outplan:==:require ( ' outplan ' ) ;
var arrayMap = traceur . util . arrayMap ;:==:var resolveUrl:==:traceur . util . resolveUrl ;
var component = components & & components . components [ this . name ] ;:==:var schema:==:this . schema ;
var h = highlight [ 0 ] . getBoundingClientRect ( ) . height ;:==:var pos:==:highlight . position ( ) ;
var primaryKey = webInspector . remoteObject . fromLocalObject ( json . parse ( dataEntries [ i ] . primaryKey ) ) ;:==:var value:==:webInspector . remoteObject . fromLocalObject ( json . parse ( dataEntries [ i ] . value ) ) ;
var e = edges [ i ] ;:==:var n1:==:e . n1 ;
var target = event . target ;:==:var scheduler:==:instance . get ( ' scheduler ' ) ;
var searchWords = _ ref . searchWords ;:==:var textToHighlight:==:_ ref . textToHighlight ;
var checked = $ chk . prop ( ' checked ' ) ;:==:var disabled:==:$ chk . prop ( ' disabled ' ) ;
var util = require ( ' util ' ) ;:==:var inherits:==:util . inherits ;
var workspace = imports [ ' collab . workspace ' ] ;:==:var timeslider:==:imports . timeslider ;
var direction = camera3D . direction ;:==:var up:==:camera3D . up ;
var texture = gltfRuntime . textures [ i d ] ;:==:var source:==:gltfRuntime . images [ texture . source ] ;
var textInput = require ( ' textInput ' ) ;:==:var touchableBounce:==:require ( ' touchableBounce ' ) ;
var create = this . nodes . create ;:==:var picker:==:this . picker ;
var inputScanner = _ _ webpack_require _ _ ( 2 ) . inputScanner ;:==:var token:==:_ _ webpack_require _ _ ( 5 ) . token ;
var observable = ko . observable ( ' original ' ) . extend ( rateLimit : 500 ) ;:==:var notifySpy:==:jasmine . createSpy ( ' notifySpy ' ) ;
var dataColorPalette = powerbi . visuals . dataColorPalette ;:==:var colorHelper:==:powerbi . visuals . colorHelper ;
var fAsync = objf . fAsync ;:==:var getOwnPropertyNames:==:object . getOwnPropertyNames ( objf ) ;
var e = new Vector ( ) . copy ( p2 ) . sub ( p1 ) ;:==:var n:==:new Vector ( ) . copy ( e ) . perp ( ) . normalize ( ) ;
var propertyName = propertyNames [ 0 ] ;:==:var prop:==:_ _ arrayFirst ( this . getProperties ( ) , _ _ propEq ( ' name ' , propertyName ) ) ;
var scrollEle = this . _ scrollEle ;:==:var parentElement:==:scrollEle . parentElement ;
var content = segment . content ;:==:var usePos:==:bounds . usePos & & bounds . startPos < content . length ;
var event = track . event ( ) ;:==:var properties:==:track . properties ( ) ;
var lineInfo = this . _ codeMirror . lineInfo ( lineNumber ) ;:==:var wrapClass:==:lineInfo . wrapClass  |  |  ' ' ;
var params = utils . params ( ) ;:==:var cid:==:params . cid ;
var shard = replica . shard ;:==:var routings:==:nodes [ getIndexForNode ( node ) ] . routings ;
var linkedMesh = this . linkedMeshes [ i ] ;:==:var skin:==:linkedMesh . skin     null ? skeletonData . defaultSkin : skeletonData . findSkin ( linkedMesh . skin ) ;
var frontuVs = frontuVs ? frontuVs : new babylon . vector4 ( 0 . 0 , 0 . 0 , 1 . 0 , 1 . 0 ) ;:==:var backuVs:==:backuVs ? backuVs : new babylon . vector4 ( 0 . 0 , 0 . 0 , 1 . 0 , 1 . 0 ) ;
var startTime = programElement . startTime ;:==:var timelineOffset:==:this . epgController . timelineOffset ;
var isInteger = _ _ webpack_require _ _ ( 2 ) . isInteger ;:==:var format:==:_ _ webpack_require _ _ ( 11 ) . format ;
var sprite = game . add . sprite ( -400 , 0 , ' einstein ' ) ;:==:var tween:==:game . add . tween ( sprite ) ;
var template = view . template ;:==:var list:==:view . owner . list ;
var granularity = defaultValue ( options . granularity , cesiumMath . radians_per_degree ) ;:==:var height:==:defaultValue ( options . height , 0 . 0 ) ;
var outside = element ( by . i d ( ' outside - ng ' ) ) ;:==:var inside:==:element ( by . i d ( ' inside - ng ' ) ) ;
var createMakeNodeFunction = util . createMakeNodeFunction ;:==:var constantNode:==:math . expression . node . constantNode ;
var w = parseInt ( $ ( ' # resizeWindowWidth ' ) . value ) ;:==:var h:==:parseInt ( $ ( ' # resizeWindowHeight ' ) . value ) ;
var addMarkerWatcher = leafletMarkersHelpers . addMarkerWatcher ;:==:var updateMarker:==:leafletMarkersHelpers . updateMarker ;
var eye = SIMD . Float32x4 ( eyeRef . x , eyeRef . y , eyeRef . z , 0 . 0 ) ;:==:var up:==:simd . float32x4 ( upRef . x , upRef . y , upRef . z , 0 . 0 ) ;
var body = registeredMesh . body ;:==:var center:==:mesh . getBoundingInfo ( ) . boundingBox . center . clone ( ) ;
var str = ' string ' ;:==:var val:==:$ scheduler . scheduler ( ' value ' ) ;
var drawingBufferWidth = context . drawingBufferWidth ;:==:var drawingBufferHeight:==:context . drawingBufferHeight ;
var options   = this . options ;:==:var pDiff:==:this . pDiff ;
var Plots = plotlyInternal . plots ;:==:var axes:==:plotlyInternal . axes ;
var startSymbol = $ interpolate . startSymbol ( ) ;:==:var endSymbol:==:$ interpolate . endSymbol ( ) ;
var n = a ( j . join ( '' ) ) . appendTo ( m ) ;:==:var o:==:n . children ( ' # jbox ' ) ;
var nav = context . navigator  |  |  ;:==:var userAgent:==:nav . userAgent  |  |  '' ;
var onScroll = _ props5 . onScroll ;:==:var width:==:_ props5 . width ;
var g = this . hexify ( this . rgba [ 1 ] ) ;:==:var b:==:this . hexify ( this . rgba [ 2 ] ) ;
var Properties = domPropertyConfig . properties  |  |  ;:==:var domAttributeNamespaces:==:domPropertyConfig . domAttributeNamespaces  |  |  ;
var path = require ( ' path ' ) ;:==:var run:==:require ( ' run - sequence ' ) ;
var Plugin = imports . Plugin ;:==:var api:==:imports . api ;
var tick = require ( ' next - tick ' ) ;:==:var type:==:require ( ' type ' ) ;
var l = hierarchyNavigator . getLevel ( item ) ;:==:var level:==:levels . items [ l ] ;
var strictNullHandling = typeof options . strictNullHandling = = = ' boolean ' ? options . strictNullHandling : defaults . strictNullHandling ;:==:var skipNulls:==:typeof options . skipNulls      ' boolean ' ? options . skipNulls : defaults . skipNulls ;
var width = svg . attr ( ' width ' ) ;:==:var height:==:svg . attr ( ' height ' ) ;
var d = a . thread_ctx _ ;:==:var e:==:a . cache_y_stride _ ;
var STATUS_INACTIVE   = exports . STATUS_INACTIVE = 0 ;:==:var STATUS_CONNECTING:==:exports . STATUS_CONNECTING    1 ;
var x = Math . cos ( currentAngle ) * arc . radius + arc . centerPoint . x ;:==:var y:==:math . sin ( currentAngle ) * arc . radius + arc . centerPoint . y ;
var pinkA400 = exports . pinkA400 = ' # f50057 ' ;:==:var pinkA700:==:exports . pinkA700    ' # c51162 ' ;
var transformToRoot = n . _ transformToRoot ;:==:var meshes:==:n . meshes ;
var asin = math . asin ;:==:var sin:==:math . sin ;
var routes = _ props2 . routes ;:==:var params:==:_ props2 . params ;
var abs = m . abs ;:==:var sqrt:==:m . sqrt ;
var $ toggle = this . $ toggle ;:==:var $ element:==:this . $ element ;
var show = new showGeometryInstanceAttribute ( isAvailable & & entity . isShowing & & this . _ showProperty . getValue ( time ) ) ;:==:var distanceDisplayCondition:==:this . _ distanceDisplayConditionProperty . getValue ( time ) ;
var container = options . container ;:==:var i d:==:options . i d ;
var require = patchRequire ( require ) ;:==:var colorizer:==:require ( ' colorizer ' ) . create ( ' colorizer ' ) ;
var noRowsRenderer = _ props . noRowsRenderer ;:==:var scrollToIndex:==:_ props . scrollToIndex ;
var radius = vm . radius ;:==:var x:==:vm . x ;
var structure = defaultValue ( options . structure , heightmapTessellator . default_structure ) ;:==:var heightScale:==:defaultValue ( structure . heightScale , heightmapTessellator . default_structure . heightScale ) ;
var sinon   = require ( ' sinon ' ) ;:==:var dns:==:require ( ' dns ' ) ;
var identifierExpression = traceur . syntax . trees . identifierExpression ;:==:var propertyNameAssignment:==:traceur . syntax . trees . propertyNameAssignment ;
var fixtureA = contact . m_fixtureA ;:==:var fixtureB:==:contact . m_fixtureB ;
var a = i * tubularSegments + j ;:==:var b:==:( i + 1 ) * tubularSegments + j ;
var dataLabelUtils = powerbi . visuals . dataLabelUtils ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var type = options . type  |  |  ( this . is_post ( ) ? ' article ' : ' website ' ) ;:==:var url:==:options . url  |  |  this . url ;
var unsharpAmount = options . unsharpAmount = = = undefined ? 0 : ( options . unsharpAmount | 0 ) ;:==:var unsharpThreshold:==:options . unsharpThreshold      undefined ? 0 : ( options . unsharpThreshold | 0 ) ;
var projectNode = this . _ projectNode ( uiSourceCode . project ( ) ) ;:==:var subfolderNodes:==:this . _ subfolderNodes . get ( projectNode ) ;
var item = xml . children . item ( i ) ;:==:var attributes:==:item . attributes ;
var EVENT_RELEASE = gestureDetector . event_release = ' release ' ;:==:var event_touch:==:gestureDetector . event_touch    ' touch ' ;
var body = editor . body ;:==:var br:==:UE . browser . ie ? ' ' : ' < br > ' ;
var propertyNameAssignment = traceur . syntax . trees . propertyNameAssignment ;:==:var setAccessor:==:traceur . syntax . trees . setAccessor ;
var allowEdit = ! ! options . allowEdit ;:==:var correctOrientation:==:! ! options . correctOrientation ;
var perf = window . performance ;:==:var string:==:counter . string ;
var canvas = document . createElement ( ' canvas ' ) ;:==:var render:==:ol . render . toContext ( canvas . getContext ( ' 2d ' ) ) ;
var group = this . _ $ mdPanel . _ groups [ groupName ] ;:==:var index:==:group . panels . indexOf ( this ) ;
var jsunit = goog . require ( ' goog . testing . jsunit ' ) ;:==:var mockmatchers:==:goog . require ( ' goog . testing . mockmatchers ' ) ;
var success = options . success ;:==:var wait:==:options . wait ;
var isOpen = this . state . isOpen ;:==:var arrow:==:this . props . arrowRenderer ( onMouseDown : onMouseDown , isOpen : isOpen ) ;
var v = e . val ;:==:var o:==:new customType ( v ) ;
var location = response . location ;:==:var script:==:this . scriptForId ( location . scriptId ) ;
var reactdomInvalidariaHook = require ( ' reactdomInvalidariaHook ' ) ;:==:var reactdomNullInputValuePropHook:==:require ( ' reactdomNullInputValuePropHook ' ) ;
var locale = self . locale  |  |  opts . locale  |  |  ' en ' ;:==:var localeFallback:==:self . localeFallback  |  |  opts . localeFallback  |  |  ' en ' ;
var type = message . type . toLowerCase ( ) ;:==:var data:==:message . data ;
var quadraticDerivativeAt = curveTool . quadraticDerivativeAt ;:==:var cubicDerivativeAt:==:curveTool . cubicDerivativeAt ;
var el = subject . element . querySelector ( ' . month - day ' ) ;:==:var date:==:calc . dateFromId ( el . dataset . date ) ;
var c = charCodes [ i ] ;:==:var glyphIndex:==:glyphIndexMap [ c ] ;
var session = require ( ' express - session ' ) ;:==:var passport:==:require ( ' passport ' ) ;
var reactdomFeatureFlags = require ( ' reactdomFeatureFlags ' ) ;:==:var reactInstanceMap:==:require ( ' reactInstanceMap ' ) ;
var pane1Style = this . props . prefixer . prefix ( _ extends ( , this . props . paneStyle  |  |  , this . props . pane1Style  |  |  ) ) ;:==:var pane2Style:==:this . props . prefixer . prefix ( _ extends ( , this . props . paneStyle  |  |  , this . props . pane2Style  |  |  ) ) ;
var A = db . model ( ' A ' , name : String , _ i d : Buffer ) ;:==:var B:==:db . model ( ' B ' , other : Buffer ) ;
var forOfTransformer = traceur . codegeneration . forOfTransformer ;:==:var forInTransformPass:==:traceur . codegeneration . generator . forInTransformPass ;
var isNegative = math . isNegative ;:==:var bignumber:==:math . bignumber ;
var rowContainer = containerCtrl . rowContainer ;:==:var colContainer:==:containerCtrl . colContainer ;
var dim1 = panel . dim1 ;:==:var i:==:dim1 . crossfilterDimensionIndex ;
var cell = cellInfo . cell ;:==:var contents:==:$ ( tableCell . getContainer ( cell ) ) . contents ( ) ;
var property = ' the property ' ;:==:var value:==:' the value ' ;
var test = imports . test ;:==:var fs:==:imports . fs ;
var cache = imports [ ' vfs . cache ' ] ;:==:var error:==:require ( ' http - error ' ) ;
var React = require ( ' React ' ) ;:==:var drawerLayoutAndroid:==:require ( ' drawerLayoutAndroid ' ) ;
var t = elem_type ( s ) ;:==:var lim:==:limits ( vu32 , s ) ;
var skipNulls = typeof options . skipNulls = = = ' boolean ' ? options . skipNulls : defaults . skipNulls ;:==:var encode:==:typeof options . encode      ' boolean ' ? options . encode : defaults . encode ;
var concat = require ( ' gulp - concat ' ) ;:==:var wrapper:==:require ( ' gulp - wrapper ' ) ;
var shorthandFirst = configuration . shorthandFirst  |  |  false ;:==:var shorthandLast:==:configuration . shorthandLast  |  |  false ;
var remove = authorAttributes . remove ;:==:var apply:==:authorAttributes . apply ;
var i = _ i ;:==:var acc:==:_ acc ;
var listView = that . listView ;:==:var dataItem:==:listView . dataItemByIndex ( listView . getElementIndex ( candidate ) ) ;
var element = _ options . element ;:==:var target:==:_ options . target ;
var path = require ( ' path ' ) ;:==:var http:==:require ( ' http ' ) ;
var getCategoryIndexOfRole = powerbi . data . dataRoleHelper . getCategoryIndexOfRole ;:==:var getMeasureIndexOfRole:==:powerbi . data . dataRoleHelper . getMeasureIndexOfRole ;
var util = require ( ' hexo - util ' ) ;:==:var slugize:==:util . slugize ;
var display = opts . display ;:==:var isHorizontal:==:this . isHorizontal ( ) ;
var action = location . action ;:==:var key:==:location . key ;
var registerWrapper = scope . registerWrapper ;:==:var unsafeUnwrap:==:scope . unsafeUnwrap ;
var apply = spyOn ( $ rootScope , ' $ apply ' ) . and . callThrough ( ) ;:==:var cancel:==:spyOn ( $ browser . defer , ' cancel ' ) . and . callThrough ( ) ;
var fs = imports . fs ;:==:var tabManager:==:imports . tabManager ;
var customBubblingEventTypes = uiManager . customBubblingEventTypes ;:==:var customDirectEventTypes:==:uiManager . customDirectEventTypes ;
var pid = req . params . pid ;:==:var path:==:req . params . path ;
var option = axisPointerModel . option ;:==:var status:==:axisPointerModel . get ( ' status ' ) ;
var http = req . secure ? ' https ' : ' http ' ;:==:var settings:==:! bin . url ? customConfig & & customConfig . settings : ;
var e = locations [ ei ] ;:==:var x:==:xmldoc . createElement ( ' wpt ' ) ;
var first_issuer = ripple . uInt160 . from_json ( order . first_issuer ) ;:==:var second_issuer:==:ripple . uInt160 . from_json ( order . second_issuer ) ;
var cache = Event . cache [ uid ] ;:==:var element:==:cache & & cache . element ;
var symbolRotate = seriesScope & & seriesScope . symbolRotate ;:==:var symbolOffset:==:seriesScope & & seriesScope . symbolOffset ;
var g = Object . getOwnPropertyDescriptor ( o , ' m ' ) . get ;:==:var s:==:object . getOwnPropertyDescriptor ( o , ' m ' ) . set ;
var arrayGroup = this . arrayGroups . line [ this . arrayGroups . line . length - 1 ] ;:==:var layoutVertexArray:==:arrayGroup . layoutVertexArray ;
var calendarCtrl = this . calendarCtrl ;:==:var displayDate:==:calendarCtrl . displayDate ;
var value = dataPoint . value ;:==:var categoryValue:==:dataPoint . categoryValue ;
var width = opts . width ;:==:var height:==:opts . height ;
var bufferSize = this . bufferSize ;:==:var startBufferEvery:==:( this . startBufferEvery     null ) ? bufferSize : this . startBufferEvery ;
var nodeName = node . nodeName ;:==:var nodeValue:==:node . nodeValue ;
var cob = prop . lastLoop . cob ;:==:var cob:==:prop . lastLoop . cob . cob ;
var canvas_qr = qrcode . canvas_qr2 ;:==:var context:==:qrcode . qrcontext2 ;
var r = this . right ;:==:var l:==:this . left ;
var apf = imports . apf ;:==:var workspace:==:imports [ ' collab . workspace ' ] ;
var gcp = this . gcp ;:==:var rack:==:this . rack ;
var blue400 = exports . blue400 = ' # 42a5f5 ' ;:==:var blue500:==:exports . blue500    ' # 2196f3 ' ;
var tileWidth = this . _ tileWidth  |  |  image . width ;:==:var tileHeight:==:this . _ tileHeight  |  |  image . height ;
var assert = require ( ' assert ' ) ;:==:var Token:==:require ( ' cst ' ) . Token ;
var altitude = e . coords . altitude ;:==:var heading:==:e . coords . heading ;
var items = this . els . items ;:==:var source:==:this . source ;
var z = zlevelList [ i ] ;:==:var layer:==:this . _ layers [ z ] ;
var config = descriptor . config ;:==:var definition:==:descriptor . definition ;
var range = math . range ;:==:var square:==:math . square ;
var projection = renderSession . projection ;:==:var offset:==:renderSession . offset ;
var tilePosition = sprite . tilePosition ;:==:var tileScale:==:sprite . tileScale ;
var save = imports . save ;:==:var format:==:imports . format ;
var options = this . options ;:==:var app:==:this . app ;
var className = _ props . className ;:==:var children:==:_ props . children ;
var head = list . head ( paras ) ;:==:var last:==:list . last ( paras ) ;
var indicesBuffer = this . indicesBuffer ;:==:var textures:==:this . textures _ ;
var y = 0 . 5 * ( ( ( ( 2 . 0 * value2 . y ) + ( ( -value1 . y + value3 . y ) * amount ) ) + ( ( ( ( ( 2 . 0 * value1 . y ) - ( 5 . 0 * value2 . y ) ) + ( 4 . 0 * value3 . y ) ) - value4 . y ) * squared ) ) + ( ( ( ( -value1 . y + ( 3 . 0 * value2 . y ) ) - ( 3 . 0 * value3 . y ) ) + value4 . y ) * cubed ) ) ;:==:var z:==:0 . 5 * ( ( ( ( 2 . 0 * value2 . z ) + ( ( -value1 . z + value3 . z ) * amount ) ) + ( ( ( ( ( 2 . 0 * value1 . z ) - ( 5 . 0 * value2 . z ) ) + ( 4 . 0 * value3 . z ) ) - value4 . z ) * squared ) ) + ( ( ( ( -value1 . z + ( 3 . 0 * value2 . z ) ) - ( 3 . 0 * value3 . z ) ) + value4 . z ) * cubed ) ) ;
var body = this . transformToBlockOrStatement ( tree . body ) ;:==:var condition:==:this . transformAny ( tree . condition ) ;
var error_uri = _ ref . error_uri ;:==:var state:==:_ ref . state ;
var items = list . els . items ;:==:var source:==:list . source ;
var displayOrientations = windows . graphics . display . displayOrientations ;:==:var imaging:==:windows . graphics . imaging ;
var rewrap = scope . rewrap ;:==:var setWrapper:==:scope . setWrapper ;
var sid = opts . sid  |  |  session . sid  |  |  Date . now ( ) ;:==:var time:==:opts . time  |  |  Date . now ( ) ;
var Dispatcher = require ( ' Dispatcher ' ) ;:==:var fluxStore:==:require ( ' fluxStore ' ) ;
var lineDraw = this . _ lineDraw ;:==:var group:==:this . group ;
var div = document . createElement ( ' div ' ) ;:==:var form:==:document . createElement ( ' form ' ) ;
var r = k . rot ;:==:var s:==:k . scale ;
var headerSize = ( this . options . headerSize ! = = undefined ) ? this . options . headerSize : _ resolveNodeSize . call ( this , this . header , this . options . defaultHeaderSize ) ;:==:var footerSize:==:( this . options . footerSize !    undefined ) ? this . options . footerSize : _ resolveNodeSize . call ( this , this . footer , this . options . defaultFooterSize ) ;
var object = renderItem . object ;:==:var geometry:==:renderItem . geometry ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactInputSelection:==:require ( ' reactInputSelection ' ) ;
var installPath = options . installPath ;:==:var settingDir:==:options . settingDir  |  |  installPath ;
var query = Url . parse ( req . url , true ) . query ;:==:var path:==:query . url & & Url . parse ( query . url ) . pathname ;
var body = message . body ;:==:var uid:==:body . uid ;
var keyExpression = options . keyExpression ;:==:var renderBuffer:==:options . renderBuffer ;
var i d = b . getAttribute ( ' data - id ' ) ;:==:var button:==:buttons [ i d ] ;
var image = set . tiles [ ti ] . image ;:==:var gid:==:set . firstgid + parseInt ( ti , 10 ) ;
var moduleDefinitionVisitor = traceur . codegeneration . module . moduleDefinitionVisitor ;:==:var validationVisitor:==:traceur . codegeneration . module . validationVisitor ;
var commonmark = options . commonmark ;:==:var pedantic:==:options . pedantic ;
var admin = path . join ( _ _ dirname , ' assets ' , name , ' admin ' ) ;:==:var dir:==:path . join ( _ _ dirname , ' assets ' , name , ' repo ' ) ;
var strength = opt_strength  |  |  6 ;:==:var d:==:Movement . distance ( dx , dy ) ;
var floatingLabelFocusStyle = _ props2 . floatingLabelFocusStyle ;:==:var floatingLabelStyle:==:_ props2 . floatingLabelStyle ;
var topLeftCornerOverlay = this . topLeftCornerOverlay & & this . topLeftCornerOverlay . clone ? this . topLeftCornerOverlay . clone . wtTable . holder : null ;:==:var bottomLeftCornerOverlay:==:this . bottomLeftCornerOverlay & & this . bottomLeftCornerOverlay . clone ? this . bottomLeftCornerOverlay . clone . wtTable . holder : null ;
var selection = this . $ scope . selection . slice ( ) ;:==:var index:==:selection . indexOf ( entry ) ;
var uiSourceCode = uiSourceCodes [ i ] ;:==:var tabId:==:this . _ tabIds . get ( uiSourceCode ) ;
var extend = require ( ' util ' ) . _ extend ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var M = new _ cg ( 1 , 0 , ' M ' ) ;:==:var Q:==:new _ cg ( 2 , 3 , ' Q ' ) ;
var firebaseAdapter = firepad . firebaseAdapter ;:==:var editorClient:==:firepad . editorClient ;
var path = require ( ' path ' ) ;:==:var webdriver:==:require ( ' selenium - webdriver ' ) ;
var d = tree . d = div . lastChild ;:==:var sr:==:tree . sr    div . createShadowRoot ( ) ;
var a = this . a , b = this . b , c = this . c , d = this . d ;:==:var cos:==:spine . mathUtils . cosDeg ( degrees ) , sin    spine . mathUtils . sinDeg ( degrees ) ;
var indexOf = utils . indexOf ;:==:var some:==:utils . some ;
var filterMode = dataZoomModel . get ( ' filterMode ' ) ;:==:var valueWindow:==:this . _ valueWindow ;
var textNodes = bindings . textNodes ;:==:var attrs:==:bindings . attrs ;
var repeat = actionArgs . repeat ;:==:var macroModeState:==:vimGlobalState . macroModeState ;
var createHash = require ( ' crypto ' ) . createHash ;:==:var fork:==:require ( ' child_process ' ) . fork ;
var width = Math . floor ( bb . width ( ) ) ;:==:var height:==:Math . floor ( bb . height ( ) ) ;
var timestamp = this . timestamp . toString ( 16 ) ;:==:var machine:==:this . machine . toString ( 16 ) ;
var ends = endss [ i ] . slice ( ) ;:==:var end:==:ends [ ends . length - 1 ] ;
var planes = this . _ cullingVolume . planes ;:==:var t:==:this . top ;
var createVariableDeclaration = parseTreeFactory . createVariableDeclaration ;:==:var createVariableDeclarationList:==:parseTreeFactory . createVariableDeclarationList ;
var src = _ props . src ;:==:var style:==:_ props . style ;
var w = window . frames [ name ] ;:==:var doc:==:w . document ;
var Matrix = math . type . Matrix ;:==:var sparseMatrix:==:math . type . sparseMatrix ;
var i d = w2utils . escapeId ( recid ) ;:==:var children:==:rec . w2ui . children ;
var c = containers [ i ] ;:==:var offset:==:$ ( c ) . offset ( ) ;
var dsFoo = appFoo . dataSource ( ' dsFoo ' , connector : ' memory ' ) ;:==:var dsBar:==:appFoo . dataSource ( ' dsBar ' , connector : ' memory ' ) ;
var autoPage = ( opts . autoPage=='false' |  | opts . autoPage==false ) ? false : true ;:==:var pnLoop:==:( opts . pnLoop   ' false' |  | opts . pnLoop   false ) ? false : true ;
var mounts = _ getFormattedItemReference ( ' items . mounts ' , _ . keys ( content . mountInfo ) , ' boolean ' ) ;:==:var food:==:_ getFormattedItemReference ( ' items . food ' , _ . keys ( content . food ) , ' numeric quantity ' ) ;
var doc_id = doc_id_rev . substring ( 0 , idx ) ;:==:var rev:==:doc_id_rev . substring ( idx + 2 ) ;
var NOT_SUPPORTED_ERR    = exceptionCode . not_supported_err    = ( ( exceptionMessage [ 9 ] = ' not supported ' ) , 9 ) ;:==:var inuse_attribute_err:==:exceptionCode . inuse_attribute_err      ( ( exceptionMessage [ 10 ]   ' attribute in use ' ) , 10 ) ;
var v1 = b2Math . mulx ( xf , this . m_v1 ) ;:==:var v2:==:b2Math . mulx ( xf , this . m_v2 ) ;
var Project = traceur . semantics . symbols . Project ;:==:var moduleTransformer:==:traceur . codegeneration . moduleTransformer ;
var phone = identify . phone ( ) ;:==:var name:==:identify . name ( )  |  |  identify . firstName ( ) ;
var min = d3 . min ( yields ) ;:==:var max:==:d3 . max ( yields ) ;
var style = styleRule . style ( ) ;:==:var allProperties:==:style . allProperties ;
var pollInterval = defaultValue ( options . pollInterval , 1 ) ;:==:var timeout:==:defaultValue ( options . timeout , 5000 ) ;
var textLayout = this . state . textLayout  |  |  width : ' ? ' , height : ' ? ' ;:==:var imageLayout:==:this . state . imageLayout  |  |  x : ' ? ' , y : ' ? ' ;
var dataset = this . chart . data . datasets [ arc . _ datasetIndex ] ;:==:var index:==:arc . _ index ;
var querystring = require ( ' querystring ' ) ;:==:var uglify:==:require ( ' uglify - js ' ) ;
var cyan700 = exports . cyan700 = ' # 0097a7 ' ;:==:var cyan800:==:exports . cyan800    ' # 00838f ' ;
var expect = require ( ' chai ' ) . expect ;:==:var cst:==:require ( ' cst ' ) ;
var clearGlobeDepth = environmentState . clearGlobeDepth ;:==:var useDepthPlane:==:environmentState . useDepthPlane ;
var b = builder . getFormatLength ( this . b . getType ( builder ) ) ;:==:var c:==:builder . getFormatLength ( this . c . getType ( builder ) ) ;
var supertest = require ( ' supertest ' ) ( app ) ;:==:var mm:==:require ( ' mm ' ) ;
var a = Sk . builtin . repr ( this . start ) . v ;:==:var b:==:Sk . builtin . repr ( this . stop ) . v ;
var onRemove = attrs . onRemove ? makeFn ( ' onRemove ' ) : ( scope . onRemove  |  |  onSave ) ;:==:var onError:==:attrs . onError ? makeFn ( ' onError ' ) : ( scope . onError  |  |  angular . noop ) ;
var row = rows [ 0 ] ;:==:var keys:==:Object . keys ( row ) . sort ( ) ;
var options = this . options ;:==:var container:==:this . container ;
var containerStyle = _ props . containerStyle ;:==:var children:==:_ props . children ;
var fun1 = foreign . fun1 ;:==:var fun2:==:foreign . fun2 ;
var isDefined = leafletHelpers . isDefined ;:==:var errorHeader:==:leafletHelpers . errorHeader ;
var string = selectn ( ' faultstring . $ value ' , body . Fault )  |  |  selectn ( ' faultstring ' , body . Fault ) ;:==:var detail:==:selectn ( ' detail . $ value ' , body . Fault )  |  |  selectn ( ' detail . message ' , body . Fault ) ;
var data = this . data ;:==:var hmdEnabled:==:data . hmdEnabled ;
var glob = require ( ' glob ' ) ;:==:var fs:==:require ( ' fs . extra ' ) ;
var async = Promise . _ async ;:==:var tryCatch:==:util . tryCatch ;
var decimal = require ( ' is - decimal ' ) ;:==:var hexadecimal:==:require ( ' is - hexadecimal ' ) ;
var options = $ . merge ( this . options , viz . controller , opt ) ;:==:var n:==:$ . splat ( node ) ;
var asc = numberUtil . asc ;:==:var linearMap:==:numberUtil . linearMap ;
var util = require ( ' util ' ) ;:==:var when:==:require ( ' when ' ) ;
var debug = imports . debugger ;:==:var util:==:imports . util ;
var submenu = options . submenu ;:==:var divider:==:options . divider ;
var grunt = require ( ' grunt ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var vertexFormat = options . vertexFormat ;:==:var geometry:==:options . geometry ;
var getIconQuads = quads . getIconQuads ;:==:var extent:==:bucket . extent ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var jasmine:==:require ( ' gulp - jasmine ' ) ;
var size = context . size ;:==:var opacity:==:context . opacity ;
var timeWindowLeft = this . _ timeWindowLeft ;:==:var timeToPixel:==:this . _ timeToPixel ;
var last_multi = this . last_multi ;:==:var last_logic:==:this . last_logic ;
var string32 = sharedUtil . string32 ;:==:var warn:==:sharedUtil . warn ;
var measureSvgTextHeight = powerbi . textMeasurementService . measureSvgTextHeight ;:==:var estimateSvgTextHeight:==:powerbi . textMeasurementService . estimateSvgTextHeight ;
var matrix = this . matrix ;:==:var curMatrix:==:this . curMatrix ;
var oldRegion = cmd . _ oldRegion ;:==:var currentRegion:==:cmd . _ currentRegion ;
var moduleTransformer = traceur . codegeneration . moduleTransformer ;:==:var objectLiteralTransformer:==:traceur . codegeneration . objectLiteralTransformer ;
var _ exitRecog = module [ ' _ exitRecog ' ] = asm [ ' _ exitRecog ' ] ;:==:var _ initPrediction:==:module [ ' _ initPrediction ' ]    asm [ ' _ initPrediction ' ] ;
var message = parsed . message ;:==:var amount:==:parsed . amount ? parsed . amount : '' ;
var size = ( opts & & opts . size )  |  |  12345 ;:==:var type:==:( opts & & opts . type )  |  |  ' audio ' ;
var range = options . range ;:==:var start:==:options . start ;
var uvs = this . uvs ;:==:var indices:==:this . indices ;
var dom = ' dom ' ;:==:var any:==:' any ' ;
var splitURL = webInspector . parsedurl . spliturlIntoPathComponents ( url ) ;:==:var projectId:==:webInspector . networkProject . projectId ( target , spliturl [ 0 ] , false ) ;
var Package = require ( ' pomelo - protocol ' ) . Package ;:==:var logger:==:require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;
var newHeight = pair . value . newHeight ;:==:var oldHeight:==:pair . value . oldHeight ;
var d = new functionNode ( new symbolNode ( ' add ' ) , [ new constantNode ( 4 ) , new constantNode ( 3 ) ] ) ;:==:var e:==:new symbolNode ( ' add ' ) ;
var isPointLight = shadowMap . isPointLight ;:==:var passes:==:shadowMap . passes ;
var reactReconciler = require ( ' reactReconciler ' ) ;:==:var transaction:==:require ( ' transaction ' ) ;
var form = document . getElementById ( ' codepen - form ' ) ;:==:var resources:==:form . resources . value . split ( ' , ' ) ;
var printStyle = _ _ webpack_require _ _ ( 144 ) . printStyle ;:==:var allOptions:==:_ _ webpack_require _ _ ( 145 ) . allOptions ;
var domRenderer = hilo . domRenderer ;:==:var webglRenderer:==:hilo . webglRenderer ;
var Input = makePropDecorator ( ' input ' , [ [ ' bindingPropertyName ' , undefined ] ] ) ;:==:var output:==:makePropDecorator ( ' output ' , [ [ ' bindingPropertyName ' , undefined ] ] ) ;
var createArgumentList = parseTreeFactory . createArgumentList ;:==:var createAssignmentStatement:==:parseTreeFactory . createAssignmentStatement ;
var o = e . contentWindow . document ;:==:var m:==:o . getElementById ( ' state ' ) ;
var progress = parseFloat ( $ el . data ( ' progress ' ) ) + ' % ' ;:==:var title:==:$ el . data ( ' title ' )  |  |  '' ;
var type = info . type ;:==:var width:==:info . width ;
var el = helpers . entityFactory ( ) ;:==:var objModelEl:==:this . objModelEl    document . createElement ( ' a - obj - model ' ) ;
var exports = node . body . exports ;:==:var modDefns:==:node . body . modDefns ;
var numberLines = job . numberLines ;:==:var sourceNode:==:job . sourceNode ;
var Channel = goog . labs . net . webChannel . channel ;:==:var webChannelRequest:==:goog . labs . net . webChannel . webChannelRequest ;
var domain = require ( ' domain ' ) ;:==:var cluster:==:require ( ' cluster ' ) ;
var $ element = this . $ element ;:==:var options:==:this . options ;
var width = bounds . width + 2 * this . tooltipBorder + 4 ;:==:var height:==:bounds . height + 2 * this . tooltipBorder ;
var remote = require ( ' remote ' ) ;:==:var dialog:==:remote . require ( ' dialog ' ) ;
var s = new goog . structs . stringSet ( [ 1 , 2 ] ) ;:==:var c:==:s . clone ( ) ;
var container = me . container ;:==:var doc:==:me . container . ownerDocument  |  |  me . container . document ;
var pageY = touch & & touch . pageY ;:==:var locationX:==:touch & & touch . locationX ;
var Plugin = imports . Plugin ;:==:var connect:==:imports [ ' collab . connect ' ] ;
var reactdomContainerInfo = require ( ' reactdomContainerInfo ' ) ;:==:var reactdomFeatureFlags:==:require ( ' reactdomFeatureFlags ' ) ;
var c = _ jitProtoChangeDetectorClassCounter++ ;:==:var records:==:coalesce ( recordBuilder . records ) ;
var stringDecoder = require ( ' string_decoder ' ) . stringDecoder ;:==:var url:==:require ( ' url ' ) ;
var providers = this . model . get ( ' providers ' ) ;:==:var quality:==:this . model . get ( ' quality ' ) ;
var legendSettings = streamGraphData . streamGraphSettings . legendSettings ;:==:var legendData:==:streamGraphData . legendData ;
var legendIcon = powerbi . visuals . legendIcon ;:==:var legendPosition:==:powerbi . visuals . legendPosition ;
var ymid = sol . ymid ;:==:var n:==:xs . length ;
var table   = entry . table ;:==:var linbits:==:entry . linbits ;
var offset = drawCommand . _ offset ;:==:var count:==:drawCommand . _ count ;
var parseTreeTransformer = traceur . codegeneration . parseTreeTransformer ;:==:var forOfTransformer:==:traceur . codegeneration . forOfTransformer ;
var r = new baidu . editor . dom . Range ( document ) ;:==:var em:==:document . getElementById ( 'em ' ) . firstChild ;
var yMin = this . yMin  |  |  0 ;:==:var xMax:==:this . xMax  |  |  0 ;
var createForOfStatement = parseTreeFactory . createForOfStatement ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var decodeAddends = this . decodeAddends ;:==:var decodeCoefficients:==:this . decodeCoefficients ;
var x = this . coordinate . x + viewportOffset . x ;:==:var y:==:this . coordinate . y + viewportOffset . y ;
var path = require ( ' path ' ) ;:==:var File:==:gutil . File ;
var connect = Npm . require ( ' connect ' ) ;:==:var parseurl:==:Npm . require ( ' parseurl ' ) ;
var sourceObj = this . sourceObj ;:==:var eventName:==:this . eventName ;
var offset = opt_offset  |  |  0 ;:==:var length:==:opt_length  |  |  bytes . length ;
var wrap   = require ( ' gulp - wrap ' ) ;:==:var qunit:==:require ( ' gulp - qunit ' ) ;
var title = titleContainer . firstElementChild ;:==:var picture:==:node . querySelector ( ' . threadlist - item - picture ' ) ;
var sass = require ( ' gulp - sass ' ) ;:==:var webpack:==:require ( ' webpack - stream ' ) ;
var widget = this . widget ;:==:var abspos:==:widget . _ abspos ;
var w = device . screen . width ;:==:var h:==:device . screen . height ;
var io = board . io ;:==:var pins:==:io . pins . slice ( ) ;
var del = require ( ' del ' ) ;:==:var shell:==:require ( ' gulp - shell ' ) ;
var timeslider = imports . timeslider ;:==:var otDocument:==:imports . otDocument ;
var scene = viewer . scene ;:==:var camera:==:scene . camera ;
var npm = require ( ' npm ' ) ;:==:var path:==:require ( ' path ' ) ;
var max = this . _ max = data . max ;:==:var data:==:data . data  |  |  [ ] ;
var s = group . create ( 150 , 300 , ' disk ' ) ;:==:var r:==:game . make . sprite ( 32 , 16 , ' squad ' ) ;
var children = _ props . children ;:==:var childStyle:==:_ props . childStyle ;
var visualDataRoleKind = powerbi . visualDataRoleKind ;:==:var valueType:==:powerbi . valueType ;
var list = this . _ list ;:==:var map:==:this . _ map ;
var tmxFile = options [ ' tmxFile ' ] ;:==:var tmxString:==:options [ ' tmxString ' ] ;
var dirname = path . dirname ;:==:var basename:==:path . basename ;
var force = this . force ;:==:var strength:==:this . options . strength ;
var networkURL = this . _ networkMapping . networkurl ( uiSourceCode ) ;:==:var styleSheetIds:==:this . _ cssModel . styleSheetIdsForurl ( networkurl ) ;
var getFontType = coreFonts . getFontType ;:==:var ispdfFunction:==:coreFunction . ispdfFunction ;
var runInThisContext = require ( ' vm ' ) . runInThisContext ;:==:var semver:==:require ( ' semver ' ) ;
var module = $ btn . attr ( ' data - module ' ) ;:==:var uuid:==:$ btn . attr ( ' data - uuid ' ) ;
var passport = require ( ' passport ' ) ;:==:var oauth2orize:==:require ( ' oauth2orize ' ) ;
var monthCtrl = this . monthCtrl ;:==:var calendarCtrl:==:this . calendarCtrl ;
var ui = imports . ui ;:==:var dashboard:==:imports . dashboard ;
var uint32ArrayView = sharedUtil . uint32ArrayView ;:==:var util:==:sharedUtil . util ;
var buffer = buffers [ bufferView . buffer ] ;:==:var byteOffset:==:bufferView . byteOffset + accessor . byteOffset ;
var timeZone = goog . require ( ' goog . i18n . timeZone ' ) ;:==:var dateIntervalPatterns:==:goog . require ( ' goog . i18n . dateIntervalPatterns ' ) ;
var gradW =   SPHSystem_update_gradW ;:==:var r_vec:==:SPHSystem_update_r_vec ;
var HAS_NATIVE_FULLSCREEN = exports . HAS_NATIVE_FULLSCREEN = hasNativeFullscreen ;:==:var has_webkit_native_fullscreen:==:exports . has_webkit_native_fullscreen    hasWebkitNativeFullScreen ;
var getDocument = dom . getDocument ;:==:var getBody:==:dom . getBody ;
var error = sharedUtil . error ;:==:var log2:==:sharedUtil . log2 ;
var spriteMaterial = game . physics . p2 . createMaterial ( ' spriteMaterial ' ) ;:==:var worldMaterial:==:game . physics . p2 . createMaterial ( ' worldMaterial ' ) ;
var simpleTransclusion = sfBuilderProvider . builders . simpleTransclusion ;:==:var ngModelOptions:==:sfBuilderProvider . builders . ngModelOptions ;
var frameObject = frameObjectList [ i ] ;:==:var frame:==:dataParser . parseTransformFrame ( frameObject , frameRate ) ;
var columnSizeAndPositionManager = _ ref . columnSizeAndPositionManager ;:==:var columnStartIndex:==:_ ref . columnStartIndex ;
var size = parameters . size ! = = undefined ? parameters . size : 100 ;:==:var curveSegments:==:parameters . curveSegments !    undefined ? parameters . curveSegments : 4 ;
var up = SIMD . float32x4 ( upVec . x , upVec . y , upVec . z , 0 . 0 ) ;:==:var f:==:simd . float32x4 . sub ( center , eye ) ;
var retainingEdges = this . _ retainingEdges ;:==:var edgeFieldsCount:==:this . _ edgeFieldsCount ;
var start = tokens [ index ] . start ;:==:var end:==:tokens [ index ] . end ;
var channelEvaluators = runtimeAnimation . channelEvaluators ;:==:var length:==:channelEvaluators . length ;
var path = scope . path ;:==:var rootDocument:==:scope . rootDocument ;
var parentRuntimeNode = n . parentRuntimeNode ;:==:var gltfNode:==:n . gltfNode ;
var _ im_enable_shm_as_szm = Module [ ' _ im_enable_shm_as_szm ' ] = asm [ ' _ im_enable_shm_as_szm ' ] ;:==:var _ im_get_sps_str:==:Module [ ' _ im_get_sps_str ' ]    asm [ ' _ im_get_sps_str ' ] ;
var isNumber = leafletHelpers . isNumber ;:==:var isFunction:==:leafletHelpers . isFunction ;
var field = instance . getField ( fieldName ) ;:==:var required:==:instance . normalizeRuleValue ( rule . required , field ) ;
var should = require ( ' should ' ) ;:==:var url:==:require ( ' url ' ) ;
var args = JSON . parse ( target . getAttribute ( ' data - args ' ) ) ;:==:var file:==:target . getAttribute ( ' data - file ' ) ;
var readyState = goog . net . xmlHttp . readyState ;:==:var content_type_header:==:goog . net . xhrIo . content_type_header ;
var datePickerAndroid = require ( ' datePickerAndroid ' ) ;:==:var react:==:require ( ' react ' ) ;
var marked = require ( ' marked ' ) ;:==:var docco:==:require ( ' docco ' ) ;
var x = locWorldInfo . x ;:==:var y:==:locWorldInfo . y ;
var filename = suspension . filename ;:==:var lineno:==:suspension . lineno ;
var highlight = $ ( ' . linth ' ) . data ( ' highlight ' ) ;:==:var origin:==:$ ( ' . linth ' ) . data ( ' origin ' ) ;
var extent = this . options . extent ;:==:var r:==:this . options . radius ;
var width = parseInt ( localStorage . width ? localStorage . width : settings . defaultWidth ) ;:==:var height:==:parseInt ( localStorage . height ? localStorage . height : settings . defaultHeight ) ;
var TYPE_PARAMETERS = ' TYPE_PARAMETERS ' ;:==:var TYPE_REFERENCE:==:' TYPE_REFERENCE ' ;
var level = Math . round ( battery . level * 100 ) ;:==:var levels:==:this . levels ;
var getEntityKeyForSelection = require ( ' getEntityKeyForSelection ' ) ;:==:var getSampleStateForTesting:==:require ( ' getSampleStateForTesting ' ) ;
var Track = require ( ' facade ' ) . Track ;:==:var bind:==:require ( ' bind ' ) ;
var observable = mobx . observable ;:==:var computed:==:mobx . computed ;
var min = min_max [ 0 ] ;:==:var max:==:min_max [ 1 ] ;
var radiiSquared = options . ellipsoid . radiiSquared ;:==:var nwCorner:==:options . nwCorner ;
var createNullLiteral = traceur . codegeneration . parseTreeFactory . createNullLiteral ;:==:var createParameterList:==:traceur . codegeneration . parseTreeFactory . createParameterList ;
var provider = this . provider ;:==:var parent:==:node . parent ;
var getEventKey = require ( ' getEventKey ' ) ;:==:var getEventModifierState:==:require ( ' getEventModifierState ' ) ;
var arrowFunctionExpression = traceur . syntax . trees . arrowFunctionExpression ;:==:var atNameExpression:==:traceur . syntax . trees . atNameExpression ;
var decorations = job . decorations ;:==:var numberLines:==:job . numberLines ;
var serviceName = document . getElementById ( ' serviceNameConnect ' ) . value ;:==:var dontFragment:==:document . getElementById ( ' dontFragment ' ) . winControl ;
var createBreakStatement = parseTreeFactory . createBreakStatement ;:==:var createCaseClause:==:parseTreeFactory . createCaseClause ;
var enqueue = document . getElementById ( ' enqueue ' ) ;:==:var lang:==:document . getElementById ( ' lang ' ) ;
var TRUE3 = C . TRUE3 = 0x23 ;:==:var FALSE1:==:C . FALSE1    0x31 ;
var canvas = properties . canvas ;:==:var container:==:properties . container ;
var lastMovement = aggregator . _ lastMovement ;:==:var isDown:==:aggregator . _ isDown ;
var dateTime2ms = lib . dateTime2ms ;:==:var ensureNumber:==:lib . ensureNumber ;
var width = data . info . width ;:==:var height:==:data . info . height ;
var isZero = math . isZero ;:==:var bignumber:==:math . bignumber ;
var should = require ( ' should ' ) ;:==:var fixtures:==:path . join ( _ _ dirname , ' fixtures ' ) ;
var first = visibleThumbs . first . i d ;:==:var last:==:( numVisibleThumbs > 1 ? visibleThumbs . last . i d : first ) ;
var $ status = that . $ status ;:==:var state:==:plupload . state , total    plupload . total , statusText    '' , totalCount    plupload . files . length ;
var PROPERTY_METHOD_ASSIGNMENT = ' PROPERTY_METHOD_ASSIGNMENT ' ;:==:var PROPERTY_NAME_ASSIGNMENT:==:' PROPERTY_NAME_ASSIGNMENT ' ;
var stats = this . stats ;:==:var stat:==:fragment ( statsTemplate ) ;
var entities = dataSource . entities . values ;:==:var polyline:==:entities [ 0 ] . polyline ;
var canEvaluate = util . canEvaluate ;:==:var tryCatch:==:util . tryCatch ;
var stringify = _ _ webpack_require _ _ ( 11 ) . stringify ;:==:var getSafeProperty:==:_ _ webpack_require _ _ ( 17 ) . getSafeProperty ;
var width = svg . width ( )  |  |  Chartist . quantity ( options . width ) . value  |  |  0 ;:==:var height:==:svg . height ( )  |  |  Chartist . quantity ( options . height ) . value  |  |  0 ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var getCategoryIndexOfRole:==:powerbi . data . dataRoleHelper . getCategoryIndexOfRole ;
var canvas = widget . _ canvas ;:==:var width:==:canvas . width ;
var suites = benchmarkSuite . suites ;:==:var length:==:suites . length ;
var fromSymbol = edge . getVisual ( ' fromSymbol ' ) ;:==:var toSymbol:==:edge . getVisual ( ' toSymbol ' ) ;
var purpleA400 = exports . purpleA400 = ' # d500f9 ' ;:==:var purpleA700:==:exports . purpleA700    ' # aa00ff ' ;
var publish = docSet . getByLongname ( ' observable#publish ' ) [ 0 ] ;:==:var cache:==:docSet . getByLongname ( ' observable . cache ' ) [ 0 ] ;
var ecstatic = require ( ' ecstatic ' ) ;:==:var open:==:require ( ' open ' ) ;
var isValidDefaultCoordinate = propertyTypes . isValidDefaultCoordinate ;:==:var isValidDefaultValue:==:propertyTypes . isValidDefaultValue ;
var initializer = this . transformAny ( tree . initializer ) ;:==:var observable:==:this . transformAny ( tree . observable ) ;
var xi = ContactEquation_getImpactVelocityAlongNormal_xi ;:==:var xj:==:ContactEquation_getImpactVelocityAlongNormal_xj ;
var userProps = ob . userProps ;:==:var params:==:ob . params ;
var EVENT_START = gestureDetector . event_start = ' start ' ;:==:var event_move:==:gestureDetector . event_move    ' move ' ;
var fileUrl = this . pkg . fileUrl ;:==:var context:==:this . context ;
var verb = args . verb ;:==:var options:==:args . options ;
var fileWithoutQuery = ref . fileWithoutQuery ;:==:var asType:==:ref . asType ;
var line = location . line ;:==:var column:==:location . column ;
var entryIndex = levelIndexes [ entryIndexOnLevel ] ;:==:var entryStartTime:==:entryStartTimes [ entryIndex ] ;
var style = _ props . style ;:==:var transitionEnabled:==:_ props . transitionEnabled ;
var requireSupportedForProcessing = _ baseUtils . requireSupportedForProcessing ;:==:var insertAdjacenthtmlUnsafe:==:_ safeHtml . insertAdjacenthtmlUnsafe ;
var z = Math . pow ( 1 + this . zoomScale _ , delta ) ;:==:var g:==:this . getRoot _ ( svgDoc ) ;
var hasOwnProperty = object . prototype . hasOwnProperty ;:==:var length:==:reflectionData . length ;
var Image = require ( ' Image ' ) ;:==:var Text:==:require ( ' Text ' ) ;
var feature = gherkin_document . feature ;:==:var language:==:feature . language ;
var head = ranges [ i ] . head ;:==:var anchor:==:ranges [ i ] . anchor ;
var customCSS = ace . edit ( ' customCSS ' ) ;:==:var customHTML:==:ace . edit ( ' customHTML ' ) ;
var d = computed ( function ( ) return c . get ( ) * b . get ( ) ) ;:==:var buf:==:buffer ( ) ;
var max = Math . log ( this . options . max ) ;:==:var min:==:this . options . min      0 ? 0 : Math . log ( this . options . min ) ;
var html = doc . querySelector ( ' html ' ) ;:==:var body:==:doc . body ;
var cm      = this . cm ;:==:var classPrefix:==:this . classPrefix ;
var sprite = game . make . sprite ( 300 , 100 , ' atari1 ' ) ;:==:var graphics:==:game . make . graphics ( 0 , 0 ) ;
var name = this . namespace ;:==:var useColors:==:this . useColors ;
var animationDataList = armatureData . animationDataList ;:==:var i:==:animationDataList . length ;
var predicate = this . predicates _ [ i ] ;:==:var iter:==:nodeset . iterator ( ) ;
var assignment = self . _ assignment ;:==:var formula:==:formulaOrBits ;
var pidusage   = require ( ' pidusage ' ) ;:==:var util:==:require ( ' util ' ) ;
var cx = circle . node . getAttribute ( ' cx ' ) ;:==:var cy:==:circle . node . getAttribute ( ' cy ' ) ;
var exec = require ( ' child_process ' ) . exec ;:==:var gulp:==:require ( ' gulp ' ) ;
var config = editor . config ;:==:var signals:==:editor . signals ;
var b = arr . $ indexFor ( ' b ' ) ;:==:var c:==:arr . $ indexFor ( ' c ' ) ;
var d = new gd ( 2008 , 9 , 13 ) ;:==:var f:==:gdr . offsetInMonths _ ;
var canEvaluate = util . canEvaluate ;:==:var tryCatch1:==:util . tryCatch1 ;
var instances = parameters . instances ;:==:var projection:==:parameters . projection ;
var _ tolower = Module [ ' _ tolower ' ] = asm [ ' _ tolower ' ] ;:==:var _ memset:==:Module [ ' _ memset ' ]    asm [ ' _ memset ' ] ;
var observable = mobx . observable ;:==:var iterall:==:require ( ' iterall ' ) ;
var propertyNameShorthandTransformer = traceur . codegeneration . propertyNameShorthandTransformer ;:==:var quasiLiteralTransformer:==:traceur . codegeneration . quasiLiteralTransformer ;
var axes = axesLayout . axes ;:==:var plotArea:==:axesLayout . plotArea ;
var reactEmptyComponent = require ( ' reactEmptyComponent ' ) ;:==:var reactHostComponent:==:require ( ' reactHostComponent ' ) ;
var type = getOptionType ( o . type ) ;:==:var helpArg:==:o . helpArg  |  |  ( type & & type . helpArg )  |  |  ' arg ' ;
var reactServerRendering = require ( ' reactServerRendering ' ) ;:==:var reactVersion:==:require ( ' reactVersion ' ) ;
var expandClosestSibling = ! ! ( options & & options . expandClosestSibling ) ;:==:var onlyPartialContains:==:! ! ( options & & options . onlyPartialContains ) ;
var name = this . props . name ;:==:var memberName:==:this . props . memberName ;
var onTouchTap = _ props3 . onTouchTap ;:==:var style:==:_ props3 . style ;
var currency = order . price_amount . currency ( ) . to_json ( ) ;:==:var issuer:==:order . price_amount . issuer ( ) . to_json ( ) ;
var u = ( ( Math . abs ( uv . x ) * heightMapWidth ) % heightMapWidth )  |  0 ;:==:var v:==:( ( math . abs ( uv . y ) * heightMapHeight ) % heightMapHeight )  |  0 ;
var s = ' What 's the width of this line ? ' ;:==:var textWidth:==:p . textWidth ( s ) ;
var r = resp . httpResponse ;:==:var operation:==:req . service . api . operations [ req . operation ] ;
var search = location . search  |  |  '' ;:==:var hash:==:location . hash  |  |  '' ;
var frameData = playData . frameData ;:==:var currentFrameIndex:==:playData . currentFrameIndex ;
var express = require ( ' express ' ) ;:==:var async:==:require ( ' async ' ) ;
var helper = require ( ' helper ' ) ;:==:var jsdom:==:require ( ' jsdom ' ) . jsdom ;
var attribute = batchTable . attributes [ attributeIndex ] ;:==:var componentsPerAttribute:==:attribute . componentsPerAttribute ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var fileFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' fileFieldTestObject ' ) ) ;
var version = opt_version  |  |  '' ;:==:var displayName:==:opt_displayname  |  |  ( databaseName + ' name ' ) ;
var scene = entityCluster . _ scene ;:==:var labelCollection:==:entityCluster . _ labelCollection ;
var insert = require ( ' gulp - insert ' ) ;:==:var clean:==:require ( ' gulp - clean - css ' ) ;
var stream = this . stream ;:==:var len:==:chunk . length ;
var timers = metrics . timers ;:==:var timer_counters:==:metrics . timer_counters ;
var protractor = require ( ' protractor ' ) ;:==:var firebase:==:require ( ' firebase ' ) ;
var response = e . data . response ;:==:var type:==:response . type ;
var touches = originalEvent & & originalEvent . touches ;:==:var e:==:event ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactInstrumentation:==:require ( ' reactInstrumentation ' ) ;
var mini = docSet . getByLongname ( ' matryoshka . mini ' ) [ 0 ] ;:==:var mega:==:docSet . getByLongname ( ' matryoshka . mega ' ) [ 0 ] ;
var dimensions = p . dimensions ;:==:var f:==:dimensions [ dimension . xIndex ] . filter ;
var through = require ( ' through2 ' ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var footer = this . _ options . tooltips . callbacks . footer . apply ( this , arguments ) ;:==:var afterFooter:==:this . _ options . tooltips . callbacks . afterFooter . apply ( this , arguments ) ;
var pickIds = model . _ pickIds ;:==:var allowPicking:==:model . allowPicking ;
var PLACEMENT = Diagram . PLACEMENT ;:==:var LINETYPE:==:Diagram . LINETYPE ;
var selectionBehavior = library . selectionBehavior ;:==:var selectionMode:==:library . selectionMode ;
var fs = require ( ' fs ' ) ;:==:var babel:==:require ( ' babel - core ' ) ;
var parent = $ this . parents ( ' ul ' ) . first ( ) ;:==:var ul:==:parent . find ( ' ul : visible ' ) . slideUp ( animationSpeed ) ;
var viewMatrix = camera . viewMatrix ;:==:var position:==:camera . position ;
var isNonThenable = _ _ dependency2 _ _ . isNonThenable ;:==:var keysOf:==:_ _ dependency2 _ _ . keysOf ;
var emptyFunction = require ( ' emptyFunction ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var SAGA_ACTION = sym ( ' SAGA_ACTION ' ) ;:==:var SELF_CANCELLATION:==:sym ( ' SELF_CANCELLATION ' ) ;
var step = stepResult . step ;:==:var status:==:stepResult . status ;
var cols = g . cols . groups ;:==:var rows:==:g . rows . groups ;
var prompt = require ( ' prompt ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var isNumber = leafletHelpers . isNumber ;:==:var isObject:==:leafletHelpers . isObject ;
var exaggeration = defaultValue ( options . exaggeration , 1 . 0 ) ;:==:var includeWebMercatort:==:defaultValue ( options . includeWebMercatort , false ) ;
var iccId = conns [ i ] . iccId ;:==:var icc:==:iccManager . getIccById ( iccId ) ;
var post = store . createRecord ( ' post ' , i d : ' a - post - id ' , name : ' the parley letter ' ) ;:==:var comment:==:store . createRecord ( ' comment ' , i d : ' some - uuid ' , name : ' letters are fun ' , post : post ) ;
var defaultPlay = ( opts . defaultPlay=='false' |  | opts . defaultPlay==false ) ? false : true ;:==:var returnDefault:==:( opts . returnDefault   ' false' |  | opts . returnDefault   false ) ? false : true ;
var leftHandlePos = zoomHandleStatus . leftHandlePos ;:==:var rightHandlePos:==:zoomHandleStatus . rightHandlePos ;
var muleq = numeric . muleq ;:==:var norm:==:numeric . norminf , any    numeric . any , min    Math . min ;
var sharedClass = require ( ' strong - remoting ' ) . sharedClass ;:==:var extend:==:require ( ' util ' ) . _ extend ;
var childNode = point . node . childNodes [ point . offset ] ;:==:var clone:==:insertAfter ( point . node . cloneNode ( false ) , point . node ) ;
var width = corridorOutlineGeometry . _ width ;:==:var extrudedHeight:==:corridorOutlineGeometry . _ extrudedHeight ;
var l = s . left ;:==:var r:==:s . right ;
var scrollTop = math . max ( document . documentElement . scrollTop , document . body . scrollTop ) ;:==:var scrollLeft:==:math . max ( document . documentElement . scrollLeft , document . body . scrollLeft ) ;
var Element = scope . wrappers . Element ;:==:var htmlContentElement:==:scope . wrappers . htmlContentElement ;
var rec   = ( isSummary ? this . summary [ index ] : this . records [ index ] ) ;:==:var col:==:this . columns [ col_ind ] ;
var merge = require ( ' webpack - merge ' ) ;:==:var webpack:==:require ( ' webpack ' ) ;
var startContainer = this . startContainer ;:==:var startOffset:==:this . startOffset ;
var emit = typeof emit = = ' boolean ' ? emit : true ;:==:var $ dropdown:==:this . $ dropdown ;
var scrollTop = _ ref2 . scrollTop ;:==:var width:==:_ ref2 . width ;
var createFunctionDeclaration = parseTreeFactory . createFunctionDeclaration ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var sWantedSelectedKey = this . _ sWantedSelectedKey ;:==:var sWantedSelectedItemId:==:this . _ sWantedSelectedItemId ;
var importClause = this . transformAny ( tree . importClause ) ;:==:var moduleSpecifier:==:this . transformAny ( tree . moduleSpecifier ) ;
var extend = _ tetherBase$Utils . extend ;:==:var updateClasses:==:_ tetherBase$Utils . updateClasses ;
var actual = err . actual ;:==:var expected:==:err . expected ;
var inherits = _ interopDefault ( require ( ' inherits ' ) ) ;:==:var immediate:==:_ interopDefault ( require ( ' immediate ' ) ) ;
var r = Math . round ( this . hueTorgb ( p , q , tr ) * 255 ) ;:==:var g:==:math . round ( this . hueTorgb ( p , q , tg ) * 255 ) ;
var afterCompleteOpen = helpers . afterCompleteOpen ;:==:var isCompleterOpen:==:helpers . isCompleterOpen ;
var values = config . values  |  |  [ ] ;:==:var len:==:values . length ;
var DISABLE_DEPTH_DISTANCE_INDEX = pointPrimitive . disable_depth_distance_index ;:==:var number_of_properties:==:pointPrimitive . number_of_properties ;
var disable = options . disable ;:==:var readonly:==:options . readonly ;
var host = options . host  |  |  ' localhost ' ;:==:var port:==:options . port  |  |  27017 ;
var signature = req . query . msg_signature ;:==:var timestamp:==:req . query . timestamp ;
var createUnaryExpression = parseTreeFactory . createUnaryExpression ;:==:var createVariableDeclarationList:==:parseTreeFactory . createVariableDeclarationList ;
var added = e . added ;:==:var removed:==:e . removed ;
var gl = painter . gl ;:==:var tr:==:painter . transform ;
var mime = require ( ' mime ' ) ;:==:var validator:==:require ( ' validator ' ) ;
var SHOW_INDEX = Billboard . SHOW_INDEX = 0 ;:==:var POSITION_INDEX:==:Billboard . POSITION_INDEX    1 ;
var val = attr . val ;:==:var mustEscape:==:attr . mustEscape ;
var Panel = imports . Panel ;:==:var ui:==:imports . ui ;
var isArray = _ _ dependency2 _ _ . isArray ;:==:var slice:==:[ ] . slice ;
var distance = distances [ nodeOrdinal ] + 1 ;:==:var firstEdgeIndex:==:firstEdgeIndexes [ nodeOrdinal ] ;
var original = util . getArg ( aArgs , ' original ' , null ) ;:==:var source:==:util . getArg ( aArgs , ' source ' , null ) ;
var db = syncBrowserdb . db . _ db ;:==:var transaction:==:db . transaction ( dbos_icons , ' readwrite ' ) ;
var el = createUiSelect ( theme : ' select2 ' , allowClear : ' isClearAllowed ' ) ;:==:var $ select:==:el . scope ( ) . $ select ;
var tid = postData . tid ;:==:var title:==:data . title ? data . title . trim ( ) : '' ;
var mixin = scope . mixin ;:==:var oneOf:==:scope . oneOf ;
var entropy = utils . toArray ( options . entropy , options . entropyEnc ) ;:==:var nonce:==:utils . toArray ( options . nonce , options . nonceEnc ) ;
var path = require ( ' path ' ) ;:==:var Date:==:global . Date ;
var karma = require ( ' karma ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var extendDeepAll = extendModule . extendDeepAll ;:==:var extendDeepNoArrays:==:extendModule . extendDeepNoArrays ;
var subDeformer = subDeformers [ key ] ;:==:var indices:==:subDeformer . indices ;
var t = time : 0 ;:==:var tween:==:game . add . tween ( t ) . to ( time : 1 , 3000 , Phaser . Easing . Linear . None , true ) ;
var f8Button = require ( ' f8Button ' ) ;:==:var toastAndroid:==:require ( ' toastAndroid ' ) ;
var editorState = require ( ' editorState ' ) ;:==:var moveSelectionForward:==:require ( ' moveSelectionForward ' ) ;
var url = require ( ' url ' ) ;:==:var req:==:require ( ' request ' ) ;
var triangleNode = triangleNodes [ i ] ;:==:var v1:==:triangleNode . getAttribute ( ' v1 ' ) ;
var Service = require ( ' hap - nodejs ' ) . Service ;:==:var Characteristic:==:require ( ' hap - nodejs ' ) . Characteristic ;
var setTimeout = global$1 . setTimeout ;:==:var clearTimeout:==:global$1 . clearTimeout ;
var sass = require ( ' gulp - sass ' ) ;:==:var plumber:==:require ( ' gulp - plumber ' ) ;
var metadata = target . _ _ metadata = target . _ _ metadata  |  |  ;:==:var properties:==:metadata . properties    metadata . properties  |  |  ;
var name = this . transformAny ( tree . name ) ;:==:var args:==:this . transformAny ( tree . args ) ;
var doubleTap = new hammer . tap ( event : ' doubleTap ' , taps : 2 ) ;:==:var tripleTap:==:new hammer . tap ( event : ' tripleTap ' , taps : 3 ) ;
var I32 = new primitiveType ( ' i32 ' , 4 , ' i ' , -0x80000000 , 0x7fffffff ) ;:==:var u8:==:new primitiveType ( ' u8 ' , 1 , ' i ' , 0 , 255 ) ;
var radii = ellipsoid . radii ;:==:var p:==:frameState . camera . positionwc ;
var pi = math . pi ;:==:var atanh:==:math . atanh ;
var onAfterValidate = jasmine . createSpy ( ' onAfterValidate ' ) ;:==:var validator:==:jasmine . createSpy ( ' validator ' ) ;
var mainView = _ jsViewMainView [ ' default ' ] ;:==:var listController:==:_ jsControllerListController [ ' default ' ] ;
var textMeasurementService = powerbi . textMeasurementService ;:==:var sqExprConverter:==:powerbi . data . sqExprConverter ;
var moment = require ( ' moment - timezone ' ) ;:==:var minimatch:==:require ( ' minimatch ' ) ;
var preview = this . preview ;:==:var toolbar:==:this . toolbar ;
var type = this . type = event . type ;:==:var target:==:event . target  |  |  event . srcElement ;
var start = this . clippedPos ( range . start . row , range . start . column ) ;:==:var end:==:this . clippedPos ( range . end . row , range . end . column ) ;
var temp = weather . main . temp ;:==:var humidity:==:weather . main . humidity ;
var rowspan = cell . hasAttribute ( ' rowspan ' ) ? parseInt ( cell . getAttribute ( ' rowspan ' ) , 10 ) : 1 ;:==:var colspan:==:cell . hasAttribute ( ' colspan ' ) ? parseInt ( cell . getAttribute ( ' colspan ' ) , 10 ) : 1 ;
var State = traceur . codegeneration . generator . State ;:==:var tryState:==:traceur . codegeneration . generator . tryState ;
var isPlaying = instances [ i ] . isPlaying  |  |  instances [ i ] . isSuspended ;:==:var currentTime:==:instances [ i ] . currentTime ;
var scrollTop = window . pageyOffset  |  |  viewportElement . scrollTop ;:==:var scrollLeft:==:window . pagexOffset  |  |  viewportElement . scrollLeft ;
var s = Math . sin ( angle ) ;:==:var c:==:Math . cos ( angle ) ;
var diameterBottom = ( options . diameterBottom = = = 0 ) ? 0 : options . diameterBottom  |  |  options . diameter  |  |  1 ;:==:var tessellation:==:options . tessellation  |  |  24 ;
var t = [ ] , ti = 0 ;:==:var b:==:[ ] , bi    0 ;
var sentinel2 = sentinel2 : ' sentinel2 ' ;:==:var sentinel3:==:sentinel3 : ' sentinel3 ' ;
var paths   = leafletScope . paths ;:==:var createPath:==:leafletPathsHelpers . createPath ;
var includeBar = this . includeBar ;:==:var startSize:==:this . startSize ;
var faceSize = this . state . faceSize ;:==:var isOpaque:==:this . props . isOpaque ;
var depthRange = defaultValue ( rs . depthRange , ) ;:==:var depthTest:==:defaultValue ( rs . depthTest , ) ;
var async = require ( ' async ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var maxOpacity = this . _ maxOpacity ;:==:var minOpacity:==:this . _ minOpacity ;
var touchableOpacity = require ( ' touchableOpacity ' ) ;:==:var touchableWithoutFeedback:==:require ( ' touchableWithoutFeedback ' ) ;
var U1 = db . model ( ' U1 ' , uniqueUsernameSchema ) ;:==:var u2:==:db . model ( ' u2 ' , uniqueUsernameSchema ) ;
var document = window . document ;:==:var setTimeout:==:window . setTimeout ;
var n = this . geodeticSurfaceNormal ( p , cartesianToCartographicn ) ;:==:var h:==:cartesian3 . subtract ( cartesian , p , cartesianToCartographich ) ;
var message = challengeSpec . message ;:==:var required:==:challengeSpec . required  |  |  [ ] ;
var dateTimeUnit = powerbi . dateTimeUnit ;:==:var jsCommon:==:window . jsCommon ;
var rot = cesiumMath . zeroToTwoPi ( alphaDeltaw . rotation ) ;:==:var quat:==:quaternion . fromAxisAngle ( cartesian3 . unit_z , rot , quatScratch ) ;
var builtin = parserConfig . builtin  |  |  ;:==:var atoms:==:parserConfig . atoms  |  |  ;
var width = areaCameraUnits . width ;:==:var height:==:areaCameraUnits . height ;
var shell    = require ( ' gulp - shell ' ) ;:==:var grock:==:require ( ' grock ' ) ;
var extname = path . extname ;:==:var exists:==:fs . exists  |  |  path . exists ;
var googleCalendarId = sourceOptions . googleCalendarId ;:==:var url:==:sourceOptions . url ;
var m = matrix ;:==:var a:==:m . a ;
var moduleSymbol = traceur . semantics . symbols . moduleSymbol ;:==:var project:==:traceur . semantics . symbols . project ;
var KIND_HIDDEN = module . exports . KIND_HIDDEN = ' hidden ' ;:==:var KIND_DEFAULT:==:module . exports . KIND_DEFAULT    undefined ;
var uqid = jEl . data ( ' uqid ' )  |  |  null ;:==:var lastRange:==:jEl . data ( ' lastRange ' ) ;
var tzid = time . tzid ;:==:var offset:==:time . offset ;
var f8Colors = require ( ' f8Colors ' ) ;:==:var f8FriendGoing:==:require ( ' f8FriendGoing ' ) ;
var key = options . key  |  |  options ;:==:var padding:==:options . padding  |  |  defaultPadding ;
var points = c _ . givenLineArgs . points ;:==:var options:==:c _ . givenLineArgs . options ;
var sqExprBuilder = powerbi . data . sqExprBuilder ;:==:var createDataViewScopeIdentity:==:powerbi . data . createDataViewScopeIdentity ;
var streamify = require ( ' gulp - streamify ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var anchor = editor . getCursor ( ' anchor ' ) ;:==:var head:==:editor . getCursor ( ' head ' ) ;
var assert = require ( ' assert ' ) ;:==:var jsv:==:require ( ' jsverify ' ) ;
var rotation = options [ ' rotation ' ] ! = null ? options [ ' rotation ' ] : 0 ;:==:var rotationSkewx:==:options [ ' rotationSkewx ' ] !   null ? options [ ' rotationSkewx ' ] : 0 ;
var hboxMain = plugin . getElement ( ' hboxMain ' ) ;:==:var colRight:==:plugin . getElement ( ' colRight ' ) ;
var key = keys [ i ] ;:==:var stat:==:this . stats _ . get ( key ) ;
var collection = this . transformAny ( tree . collection ) ;:==:var body:==:this . transformAny ( tree . body ) ;
var min = global . Math . min ;:==:var kendo:==:global . kendo ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactdomEmptyComponent:==:require ( ' reactdomEmptyComponent ' ) ;
var fixedDataTableColumn = require ( ' fixedDataTableColumn . react ' ) ;:==:var fixedDataTableColumnGroup:==:require ( ' fixedDataTableColumnGroup . react ' ) ;
var setext = self . options . setext ;:==:var closeAtx:==:self . options . closeAtx ;
var Size = goog . math . Size ;:==:var getBorderBox:==:goog . style . getBorderBox ;
var MONGODB_OLD = nconf . get ( ' MONGODB_OLD ' ) ;:==:var MONGODB_NEW:==:nconf . get ( ' MONGODB_NEW ' ) ;
var terms = this . _ index . terms ;:==:var titleterms:==:this . _ index . titleterms ;
var c = Math . cos ( -angle ) ;:==:var s:==:Math . sin ( -angle ) ;
var createCatch = parseTreeFactory . createCatch ;:==:var createEmptyStatement:==:parseTreeFactory . createEmptyStatement ;
var Injection = domPropertyInjection ;:==:var properties:==:domPropertyConfig . properties  |  |  ;
var multi = _ state . multi ;:==:var multiValue:==:_ state . multiValue ;
var path = this . path ;:==:var createIfMissing:==:this . createIfMissing ;
var scopes = this . _ scopes ;:==:var length:==:listeners . length ;
var timers = require ( ' timers ' ) ;:==:var util:==:require ( ' util ' ) ;
var target = this . target ;:==:var position:==:this . position ;
var width = options . width  |  |  element . offsetWidth ;:==:var height:==:options . height  |  |  element . offsetHeight ;
var message = env . store . createRecord ( ' message ' , i d : 1 ) ;:==:var comment:==:env . store . createRecord ( ' comment ' , i d : 2 , message : message ) ;
var vertex = baseName . vertexElement  |  |  baseName . vertex  |  |  baseName ;:==:var fragment:==:baseName . fragmentElement  |  |  baseName . fragment  |  |  baseName ;
var switchStatement = traceur . syntax . trees . switchStatement ;:==:var thisExpression:==:traceur . syntax . trees . thisExpression ;
var pluginError = require ( ' gulp - util ' ) . pluginError ;:==:var path:==:require ( ' path ' ) ;
var minHeight = options . minHeight ;:==:var maxHeight:==:options . maxHeight  |  |  10 ;
var process = metaEvent . thread . process ( ) ;:==:var startTime:==:metaEvent . startTime ;
var col = $ ( ' # term - col ' ) . val ( ) ;:==:var row:==:$ ( ' # term - row ' ) . val ( ) ;
var getBounds = _ tetherBase$Utils . getBounds ;:==:var extend:==:_ tetherBase$Utils . extend ;
var Variable = scopeAnalyzer . variable ;:==:var proper:==:scopeAnalyzer . proper ;
var normal = attributes [ ' normal ' ] ;:==:var uv:==:attributes [ ' uv ' ] ;
var pointer = pointers [ objectKeys ( pointers ) [ 0 ] ] ;:==:var container:==:self . container ;
var context = event . context ;:==:var canvas:==:context . canvas ;
var depthRange = defaultValue ( statesFunctions . depthRange , [ 0 . 0 , 1 . 0 ] ) ;:==:var polygonOffset:==:defaultValue ( statesFunctions . polygonOffset , [ 0 . 0 , 0 . 0 ] ) ;
var style = _ props . style ;:==:var zDepth:==:_ props . zDepth ;
var skins = gltf . skins ;:==:var nodes:==:gltf . nodes ;
var argv = minimist ( process . argv . slice ( 2 ) ) ;:==:var skip:==:argv . skip  |  |  0 ;
var fs = require ( ' fs ' ) ;:==:var async:==:require ( ' async ' ) ;
var month = app . month ;:==:var daySquares:==:month . daySquares ;
var util = require ( ' util ' ) ;:==:var utils:==:require ( ' keystone - utils ' ) ;
var doc = documents [ docId ] ;:==:var tab:==:doc . original . tab ;
var o = observer ( ) ;:==:var usesOplog:==:o . handle . _ multiplexer . _ observeDriver . _ usesOplog ;
var uniforms = material . uniforms ;:==:var defines:==:material . defines ;
var reactNativeComponentEnvironment = require ( ' reactNativeComponentEnvironment ' ) ;:==:var reactNativeTextComponent:==:require ( ' reactNativeTextComponent ' ) ;
var express = require ( ' express ' ) ;:==:var passport:==:require ( ' passport ' ) ;
var functionMatch = functionMatches [ key ] ;:==:var listener:==:functionMatch . listener ;
var closingSelector = this . closingSelector ;:==:var contexts:==:this . contexts ;
var width = option . width ;:==:var height:==:option . height ;
var settings = imports . settings ;:==:var Plugin:==:imports . Plugin ;
var ellipsoid = options . ellipsoid ;:==:var stRotation:==:options . stRotation ;
var getMeasureIndexOfRole = powerbi . data . dataRoleHelper . getMeasureIndexOfRole ;:==:var registerStandardInteractivityHandlers:==:powerbi . visuals . interactivityUtils . registerStandardInteractivityHandlers ;
var c9 = imports . c9 ;:==:var tree:==:imports . tree ;
var displayOrientations = windows . graphics . display . displayOrientations ;:==:var ocr:==:windows . media . ocr ;
var util = require ( ' util ' ) ;:==:var Buffer:==:require ( ' buffer ' ) . Buffer ;
var name = docSet . getByLongname ( ' asset#name ' ) . filter ( undocumented ) ;:==:var shape:==:docSet . getByLongname ( ' asset#shape ' ) . filter ( undocumented ) ;
var nodeFieldCount = this . _ nodeFieldCount ;:==:var nodes:==:this . nodes ;
var body = $ ( ' # grid_'+ this . name + ' _ body ' ) ;:==:var columns:==:$ ( ' # grid_'+ this . name + ' _ columns ' ) ;
var curveSegments = parameters . curveSegments ! = = undefined ? parameters . curveSegments : 4 ;:==:var font:==:parameters . font !    undefined ? parameters . font : ' helvetiker ' ;
var forInStatement = traceur . syntax . trees . forInStatement ;:==:var forStatement:==:traceur . syntax . trees . forStatement ;
var cancel = options . cancel  |  |  gettext ( ' Cancel ' ) ;:==:var proceed:==:options . proceed  |  |  gettext ( ' Proceed ' ) ;
var numPts = cep . numPts ;:==:var outerPositions:==:cep . outerPositions ;
var scrollLeft = _ state3 . scrollLeft ;:==:var scrollTop:==:_ state3 . scrollTop ;
var dy2 = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dy2 ' , this . dy2 ) ) ) ) ;:==:var arrowHead:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;
var log = require ( dirs . core + ' log ' ) ;:==:var cp:==:require ( dirs . core + ' cp ' ) ;
var hasPrivate = m . hasPrivate ;:==:var deletePrivate:==:m . deletePrivate ;
var aspectRatio = options . aspectRatio ;:==:var width:==:cropBox . width ;
var menus = imports . menus ;:==:var login:==:imports . login ;
var externalExportBindings = $ _ _ 6 . externalExportBindings [ index ] ;:==:var exportStarBinding:==:$ _ _ 6 . exportStarBindings [ index ] ;
var a = X . instance ( ) ;:==:var c:==:Y . instance ( ) ;
var JSX_SPREAD_ATTRIBUTE = ' JSX_SPREAD_ATTRIBUTE ' ;:==:var JSX_TEXT:==:' JSX_TEXT ' ;
var setters = this . setters ;:==:var len:==:setters . length ;
var op = resp . request . operation ;:==:var code:==:resp . error . code ;
var i d = identify . userId ( ) ;:==:var email:==:identify . email ( ) ;
var valueColumn = reader . getValueColumn ( valueColumnRoleName , seriesIndex ) ;:==:var value:==:values [ 0 ] [ seriesIndex ] ;
var max1 = e1 . max1 . value ;:==:var min2:==:e1 . min2 . value ;
var distance = input . distance ;:==:var direction:==:input . direction ;
var child_process = require ( ' child_process ' ) ;:==:var colors:==:require ( ' colors ' ) ;
var mode = collection . _ mode ;:==:var modelMatrix:==:collection . _ modelMatrix ;
var height = that . options . height ;:==:var visible:==:that . popup . visible ( ) ;
var throwStatement = traceur . syntax . trees . throwStatement ;:==:var tryStatement:==:traceur . syntax . trees . tryStatement ;
var when = require ( ' when ' ) ;:==:var http:==:require ( ' http ' ) ;
var fullWhite = exports . fullWhite = ' rgba ( 255 , 255 , 255 , 1 ) ' ;:==:var darkWhite:==:exports . darkWhite    ' rgba ( 255 , 255 , 255 , 0 . 87 ) ' ;
var verification = goog . require ( ' goog . labs . mock . verification ' ) ;:==:var atLeast:==:verification . atLeast ;
var path = route . path ;:==:var name:==:route . name ;
var payload = data [ ' payload ' ] ;:==:var service:==:this . getService ( serviceName , payload ) ;
var length = children . length ;:==:var loose:==:node . loose ;
var direction = Cartesian3 . clone ( camera . direction ) ;:==:var up:==:Cartesian3 . clone ( camera . up ) ;
var titleBar = this . titleBar ;:==:var chromeBar:==:this . chromeBar ;
var a = cd [ 0 ] . a ;:==:var b:==:cd [ 0 ] . b ;
var nodes = data . nodes ;:==:var instanceCameras:==:data . instanceCameras ;
var Pattern = util . Pattern ;:==:var Permalink:==:util . Permalink ;
var w = w  |  |  window ;:==:var document:==:w . document ;
var outTangents = this . outTangents ;:==:var i:==:this . _ lastTimeIndex    this . findTimeInterval ( time , this . _ lastTimeIndex ) ;
var datatype = mm . datatype = = = ' real ' ? ' number ' : undefined ;:==:var d:==:mm . data ;
var records   = method . records ;:==:var searches:==:method . searches ;
var left = this . container . find ( ' . calendar . left ' ) ;:==:var right:==:this . container . find ( ' . calendar . right ' ) ;
var properties = params . properties ;:==:var objects:==:params . objects ;
var anotherTopic = ' anotherTopic ' ;:==:var now:==:goog . now ( ) ;
var height = _ ref . height ;:==:var width:==:_ ref . width ;
var editor = this . editor ;:==:var img:==:document . createElement ( ' img ' ) ;
var doWhileStatement = traceur . syntax . trees . doWhileStatement ;:==:var emptyStatement:==:traceur . syntax . trees . emptyStatement ;
var bbox = this . bbox ;:==:var xstep:==:this . xstep ;
var session = req . session ;:==:var auth:==:session & & session . auth ;
var flowEndTimes = timelineData . flowEndTimes ;:==:var flowStartLevels:==:timelineData . flowStartLevels ;
var dynCall_vii = Module [ ' dynCall_vii ' ] = asm [ ' dynCall_vii ' ] ;:==:var dynCall_ii:==:Module [ ' dynCall_ii ' ]    asm [ ' dynCall_ii ' ] ;
var extend = _ angular . extend ;:==:var element:==:_ angular . element ;
var method = req . method ;:==:var url:==:req . url ;
var base = entryPoint . basePath ;:==:var flags:==:loader . flags ;
var collate = pouchCollate . collate ;:==:var toIndexableString:==:pouchCollate . toIndexableString ;
var brightnessAutoCheckbox = this . elements . brightnessAutoCheckbox ;:==:var brightnessManual:==:this . elements . brightnessManual ;
var scaleLabelFont = helpers . fontString ( scaleLabelFontSize , scaleLabelFontStyle , scaleLabelFontFamily ) ;:==:var tickMarkLength:==:opts . gridLines . tickMarkLength ;
var reactInstanceMap = require ( ' reactInstanceMap ' ) ;:==:var reactInstrumentation:==:require ( ' reactInstrumentation ' ) ;
var morph = model . morphs [ i ] ;:==:var elements:==:morph . elements ;
var x = e . gesture . center . x ;:==:var y:==:e . gesture . center . y ;
var geometry = this . geometry ;:==:var position:==:geometry . getAttribute ( ' position ' ) ;
var icon = icons ;:==:var title:==:titles ;
var deltaX = this . _ deltaX + normalizedEvent . pixelx ;:==:var deltay:==:this . _ deltay + normalizedEvent . pixely ;
var q = $ q . defer ( ) ;:==:var prompt:==:appRate . promptForRating ( immediate ) ;
var has_web_sockets = zombie_array [ index ] [ ' has_web_sockets ' ] ;:==:var has_webrtc:==:zombie_array [ index ] [ ' has_webrtc ' ] ;
var topRadius = cylinderGeometry . _ topRadius ;:==:var bottomRadius:==:cylinderGeometry . _ bottomRadius ;
var colorMask = defaultValue ( statesFunctions . colorMask , [ true , true , true , true ] ) ;:==:var depthRange:==:defaultValue ( statesFunctions . depthRange , [ 0 . 0 , 1 . 0 ] ) ;
var getKey = localUtils . getKey ;:==:var getValue:==:localUtils . getValue ;
var S = db . model ( ' updateOneStrictThrowSchema ' ) ;:==:var s:==:new s ( name : ' orange crush ' ) ;
var style = _ props . style ;:==:var viewBox:==:_ props . viewBox ;
var src = ' src= ' ' + escapeHtml ( tokens [ idx ] . src ) + ' ' ' ;:==:var title:==:tokens [ idx ] . title ? ( ' title ' ' + escapeHtml ( replaceEntities ( tokens [ idx ] . title ) ) + ' ' ' ) : '' ;
var k = keys [ i ] ;:==:var e:==:terrainCache [ k ] ;
var EXPORT_SPECIFIER = ' EXPORT_SPECIFIER ' ;:==:var EXPORT_SPECIFIER_SET:==:' EXPORT_SPECIFIER_SET ' ;
var event = events [ i ] ;:==:var time:==:new Date ( event . time ) ;
var getNodeIndex = dom . getNodeIndex ;:==:var isOrIsAncestorOf:==:dom . isOrIsAncestorOf ;
var columnCount = parseFloat ( params . columnCount ) ;:==:var columnxUnit:==:parseFloat ( params . columnxUnit ) ;
var inc = semver . inc ;:==:var diff:==:semver . diff ;
var emulateJSON = Backbone . emulateJSON ;:==:var history:==:window . history ;
var git = require ( ' gulp - git ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var offsetX = parts [ offsetxIndex ] ;:==:var match:==:offsetx . match ( cssSizePattern ) ;
var URL = document . getElementById ( ' url ' ) . value ;:==:var a:==:new mozActivity ( name : ' view ' , data : type : ' url ' , url : url ) ;
var data = n . data , config = this . config ;:==:var siblingOffset:==:config . siblingOffset ;
var labelFormatter = dataZoomModel . get ( ' labelFormatter ' ) ;:==:var labelPrecision:==:dataZoomModel . get ( ' labelPrecision ' ) ;
var LRE = goog . i18n . bidi . Format . LRE ;:==:var RLE:==:goog . i18n . bidi . Format . RLE ;
var options = test . options ;:==:var uri:==:test . uri ;
var numComps = base . numComps ;:==:var lookup:==:this . lookup ;
var points = result . points ;:==:var rotation:==:result . rotation ;
var view = viewControllers [ i ] ;:==:var nav:==:view . _ nav ;
var materials = this . parseMaterials ( json . materials , textures ) ;:==:var object:==:this . parseObject ( json . object , geometries , materials ) ;
var snap = entry . indexOf ( ' snap ' ) > = 0 ;:==:var hover:==:entry . indexOf ( ' hover ' ) >   0 ;
var item = event . detail . item ;:==:var filter:==:this . _ filter ;
var implementPrototype = scope . implementPrototype ;:==:var useNative:==:scope . useNative ;
var getComponentName = require ( ' getComponentName ' ) ;:==:var getIteratorFn:==:require ( ' getIteratorFn ' ) ;
var spec = options . spec ;:==:var watch:==:options . watch ;
var identifierExpression = traceur . syntax . trees . identifierExpression ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var match = valueToMatch ( v , propVal , matches [ i ] , false , true ) ;:==:var duplicate:==:duplicates [ ' _ ' + match . i d ] ;
var Date = platform . Date ;:==:var Error:==:platform . Error ;
var wrap = scope . wrap ;:==:var mixin:==:scope . mixin ;
var w = style . strokeWidth * widthFactor ;:==:var str:==:style . strokeDashstyle ;
var oColumn = this . _ oColumn ;:==:var oTable:==:this . _ oTable ;
var children = instance . get ( ' children ' ) ;:==:var type:==:instance . get ( ' type ' ) ;
var activeGroup = this . get ( ' activeGroup ' ) ;:==:var activeClass:==:this . get ( ' activeClass ' ) ;
var getScrollParents = _ tetherBase$Utils . getScrollParents ;:==:var getBounds:==:_ tetherBase$Utils . getBounds ;
var data = this . dataSource . flatView ( ) ;:==:var optionsMap:==:this . _ optionsMap ;
var firstEdgeIndexes = this . _ firstEdgeIndexes ;:==:var flags:==:this . _ flags ;
var path = require ( ' path ' ) ;:==:var when:==:require ( ' when ' ) ;
var purple900 = exports . purple900 = ' # 4a148c ' ;:==:var purpleA100:==:exports . purpleA100    ' # ea80fc ' ;
var dimsDef = ( opt . dimsDef  |  |  [ ] ) . slice ( ) ;:==:var encodeDef:==:zrUtil . createHashMap ( opt . encodeDef ) ;
var x1 = Math . max ( a . x1 , b . x1 ) ;:==:var y1:==:Math . max ( a . y1 , b . y1 ) ;
var isRTL = this . isRTL ;:==:var rowCnt:==:this . rowCnt ;
var username = $ ( ' # input_username ' ) . val ( ) ;:==:var password:==:$ ( ' # input_password ' ) . val ( ) ;
var yScale = axisOptions . yScale ;:==:var columnWidth:==:axisOptions . columnWidth ;
var add = document . addEventListener ? ' addEventListener ' : ' attachEvent ' ;:==:var remove:==:document . removeEventListener ? ' removeEventListener ' : ' detachEvent ' ;
var deepOrange100 = exports . deepOrange100 = ' # ffccbc ' ;:==:var deepOrange200:==:exports . deepOrange200    ' # ffab91 ' ;
var ui = imports . ui ;:==:var apf:==:imports . apf ;
var Post = ctx . model ( ' Post ' ) ;:==:var post:==:Post . findById ( this . post ) ;
var edgeNameOffset = snapshot . _ edgeNameOffset ;:==:var strings:==:snapshot . strings ;
var loaded = bind ( this , this . loaded ) ;:==:var ready:==:this . ready ;
var rotation = rectangle . rotation ;:==:var outlineWidth:==:rectangle . outlineWidth ;
var width = shape . width ;:==:var angle:==:shape . angle ;
var key = ast . key . visit ( this ) ;:==:var value:==:ast . value . visit ( this ) ;
var info = sharedUtil . info ;:==:var isArray:==:sharedUtil . isArray ;
var moduleSymbol = traceur . semantics . symbols . moduleSymbol ;:==:var canonicalizeUrl:==:traceur . util . canonicalizeUrl ;
var Image = require ( ' Image ' ) ;:==:var pixelRatio:==:require ( ' pixelRatio ' ) ;
var src = path . join ( srcDir , file ) ;:==:var dst:==:path . join ( dstDir , file ) ;
var dx = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;:==:var dx2:==:math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx2 ' , this . dx2 ) ) ) ) ;
var yargs = require ( ' yargs ' ) ;:==:var argv:==:yargs . argv ;
var sass = require ( ' gulp - sass ' ) ;:==:var cssnano:==:require ( ' gulp - cssnano ' ) ;
var GET_CONTEXT = ' GET_CONTEXT ' ;:==:var SET_CONTEXT:==:' SET_CONTEXT ' ;
var vf = goog . i18n . pluralRules . get_vf _ ( n , opt_precision ) ;:==:var wt:==:goog . i18n . pluralRules . get_wt _ ( vf . v , vf . f ) ;
var a = new jsbn ( params . a ) ;:==:var b:==:new jsbn ( params . b ) ;
var direction = ray . direction ;:==:var center:==:sphere . center ;
var canvas = $ header . find ( ' canvas ' ) [ 0 ] ;:==:var s:==:spinner ( canvas ) ;
var createThisExpression = parseTreeFactory . createThisExpression ;:==:var createVariableDeclarationList:==:parseTreeFactory . createVariableDeclarationList ;
var bar1 = angular . element ( element [ 0 ] . querySelector ( ' . md - bar1 ' ) ) ;:==:var bar2:==:angular . element ( element [ 0 ] . querySelector ( ' . md - bar2 ' ) ) ;
var DOCUMENT_POSITION_CONTAINS = Node . DOCUMENT_POSITION_CONTAINS ;:==:var DOCUMENT_POSITION_CONTAINED_BY:==:Node . DOCUMENT_POSITION_CONTAINED_BY ;
var Change = Model . getChangeModel ( ) ;:==:var rev:==:change . revisionForInst ( current ) ;
var is = require ( ' is ' ) ;:==:var isodate:==:require ( ' isodate ' ) ;
var color = Base . color ;:==:var cursor:==:Base . cursor ;
var npm = require ( ' npm ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var keys = this . keys ;:==:var len:==:keys . length ;
var tag = options . tag ;:==:var content:==:options . content  |  |  '' ;
var width = parsePercent ( detailModel . get ( ' width ' ) , posInfo . r ) ;:==:var height:==:parsePercent ( detailModel . get ( ' height ' ) , posInfo . r ) ;
var lastIndex = p . get ( ' lastIndex ' ) ;:==:var multiline:==:p . get ( ' multiline ' ) ;
var pickerOptions = merge ( , this . pickerOptions ) ;:==:var picker:==:this . _ pickerCtrl . create ( pickerOptions ) ;
var attribute = geometry . attributes [ attributeName ] ;:==:var values:==:attribute . values ;
var c1 = p . comments . create ( title : ' c1 ' ) ;:==:var c2:==:c1 . comments . create ( title : ' c2 ' ) ;
var url = $ ( this ) . data ( ' url ' ) ;:==:var lock:==:+ $ ( this ) . data ( ' lock ' ) ;
var hasClass = exports . hasClass = hasClassMethod ;:==:var addClass:==:exports . addClass    addClassMethod ;
var Platform = require ( ' Platform ' ) ;:==:var backAndroid:==:require ( ' backAndroid ' ) ;
var width = itemLayout . width ;:==:var height:==:itemLayout . height ;
var traverseAllChildren = require ( ' traverseAllChildren ' ) ;:==:var twoArgumentPooler:==:pooledClass . twoArgumentPooler ;
var iter = nodeset . iterator ( ) ;:==:var type:==:typeof primitive ;
var superName = this . superName ;:==:var file:==:this . file ;
var min = x : contains180 ? -1 : Math . min ( start . x * ( start . x < 0 ? 1 : cutout ) , end . x * ( end . x < 0 ? 1 : cutout ) ) , y : contains270 ? -1 : Math . min ( start . y * ( start . y < 0 ? 1 : cutout ) , end . y * ( end . y < 0 ? 1 : cutout ) ) ;:==:var max:==:x : contains0 ? 1 : Math . max ( start . x * ( start . x > 0 ? 1 : cutout ) , end . x * ( end . x > 0 ? 1 : cutout ) ) , y : contains90 ? 1 : Math . max ( start . y * ( start . y > 0 ? 1 : cutout ) , end . y * ( end . y > 0 ? 1 : cutout ) ) ;
var name = $ ( this ) . attr ( ' gs_name ' ) ;:==:var callback:==:$ ( this ) . attr ( ' gs_callback ' ) ;
var slice   = emptyArray . slice ;:==:var concat:==:emptyArray . concat ;
var colors = options . colors ;:==:var colorsPerVertex:==:defaultValue ( options . colorsPerVertex , false ) ;
var config = JSON . parse ( JSON . stringify ( configuration . manager . configurations [ 0 ] ) ) ;:==:var members:==:config . members ;
var Dimensions = require ( ' Dimensions ' ) ;:==:var frameRateLogger:==:require ( ' frameRateLogger ' ) ;
var contours = trace . contours ;:==:var line:==:trace . line ;
var slices = cylinder . slices ;:==:var outlineWidth:==:cylinder . outlineWidth ;
var win = opt_win  |  |  goog . global ;:==:var doc:==:( win . Document & & win . Document . prototype )  |  |  win . document ;
var lat = element . attr ( ' data - lat ' ) ;:==:var lng:==:element . attr ( ' data - lng ' ) ;
var encrypted = socket . request ? ! ! socket . request . connection . encrypted : false ;:==:var host:==:headers . host ;
var next = this . next ;:==:var prev:==:this . prev ;
var wrench = require ( ' wrench ' ) ;:==:var os:==:require ( ' os ' ) ;
var verticies = strip . verticies ;:==:var uvs:==:strip . uvs ;
var b = wt . b ;:==:var c:==:wt . c ;
var loadResources = model . _ loadResources ;:==:var gltf:==:model . gltf ;
var Parser = traceur . syntax . Parser ;:==:var moduleAnalyzer:==:traceur . semantics . moduleAnalyzer ;
var reference = Cartesian3 . mostOrthogonalAxis ( f , referenceScratch ) ;:==:var secondAxis:==:cartesian3 . normalize ( cartesian3 . cross ( reference , firstAxis , secondAxisScratch ) , secondAxisScratch ) ;
var join = path . join ;:==:var readdirSync:==:require ( ' fs ' ) . readdirSync ;
var chalk = require ( ' chalk ' ) ;:==:var os:==:require ( ' os ' ) ;
var curves = this . curves ;:==:var i:==:frameIndex * curveTimeline . bezier_size ;
var right = getPropertyAsFloat ( style , ' border - right - width ' ) ;:==:var bottom:==:getPropertyAsFloat ( style , ' border - bottom - width ' ) ;
var settings = imports . settings ;:==:var join:==:require ( ' path ' ) . join ;
var gl = this . gl ;:==:var buffer:==:new uint8Array ( array . buffer ) ;
var config = configs [ type ] ;:==:var template:==:config . template ;
var activities = processDefinitionDiagramLayout . activities ;:==:var sequenceFlows:==:processDefinitionDiagramLayout . sequenceFlows ;
var imageryProvider = this . _ imageryProvider ;:==:var image:==:imagery . image ;
var _ im_get_sps_str = Module [ ' _ im_get_sps_str ' ] = asm [ ' _ im_get_sps_str ' ] ;:==:var _ memcmp:==:Module [ ' _ memcmp ' ]    asm [ ' _ memcmp ' ] ;
var shell = require ( ' gulp - shell ' ) ;:==:var uitest:==:require ( ' gulp - uitest ' ) ;
var generics = options . generics ;:==:var initialize:==:options . initialize ;
var mediaProperties = windows . media . mediaProperties ;:==:var storageLibrary:==:windows . storage . storageLibrary ;
var mixer = mesh . mixer ;:==:var ikSolver:==:mesh . ikSolver ;
var isAudio = detail . isAudio ;:==:var isVideo:==:detail . isVideo ;
var startCap = ( settings . startCap = = null ) ? 0 : settings . startCap ;:==:var endCap:==:( settings . endCap     null ) ? 0 : settings . endCap ;
var createElement = _ props4 . createElement ;:==:var render:==:_ props4 . render ;
var assign = require ( ' object - assign ' ) ;:==:var di:==:require ( ' asyncdi ' ) ;
var assert = require ( ' assert ' ) ;:==:var cookie:==:require ( ' cookie ' ) ;
var type = args . type  |  |  Constants . RESERVED . ALL ;:==:var startId:==:args . startId ;
var replace = require ( ' gulp - replace ' ) ;:==:var spawn:==:require ( ' spawn - local - bin ' ) ;
var Rect = graphic . Rect ;:==:var each:==:zrUtil . each ;
var crypto = require ( ' crypto ' ) ;:==:var http:==:require ( ' http ' ) ;
var tipLabel = options . tipLabel ? options . tipLabel : ' toggle full - screen ' ;:==:var button:==:document . createElement ( ' button ' ) ;
var proto = ctor . prototype ;:==:var parseRawValue:==:dataType . parseRawValue ;
var command = item . command ;:==:var hashId:==:binding . hashId ;
var getSong = client . method ( ' getSong ' , filePath ) ;:==:var getSongFile:==:client . method ( ' getSongFile ' , filePath ) ;
var assert = require ( ' power - assert ' ) ;:==:var mongoose:==:start . mongoose ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var debug:==:require ( ' debug ' ) ( ' marionette - js - logger ' ) ;
var argumentList = traceur . syntax . trees . argumentList ;:==:var arrayComprehension:==:traceur . syntax . trees . arrayComprehension ;
var Image = window . Image ;:==:var svg:==:opts . svg ;
var c = Math . cos ( newValue * pc . math . deg_to_rad ) ;:==:var s:==:math . sin ( newValue * pc . math . deg_to_rad ) ;
var ux = app . ns ( ' ux ' ) ;:==:var services:==:app . ns ( ' services ' ) ;
var face = faces [ i ] ;:==:var worldNormal:==:sphereconvex_worldnormal ;
var a = x : ' a ' , y : ' c ' ;:==:var b:==:x : ' b ' , z : 'd ' ;
var chalk = require ( ' chalk ' ) ;:==:var EOL:==:require ( ' os ' ) . EOL ;
var crypto = require ( ' crypto ' ) ;:==:var logger:==:require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;
var createIdentifierExpression = traceur . codegeneration . parseTreeFactory . createIdentifierExpression ;:==:var createMemberExpression:==:traceur . codegeneration . parseTreeFactory . createMemberExpression ;
var measure = measureLineInner ( cm , copy ) ;:==:var left:==:measureChar ( cm , copy , 0 , measure , ' left ' ) ;
var clientHeight = _ ref5 . clientHeight ;:==:var scrollHeight:==:_ ref5 . scrollHeight ;
var doc = ' contentDocument ' in this ? this . contentDocument : this . contentWindow . document ;:==:var a:==:doc . domain ;
var open = require ( ' open ' ) ;:==:var path:==:require ( ' path ' ) ;
var assign = require ( ' lodash ' ) . assign ;:==:var expect:==:require ( ' chai ' ) . expect ;
var contained1 = document . getElementById ( ' contained1 ' ) ;:==:var contained1_1:==:document . getElementById ( ' contained1_1 ' ) ;
var gl = options . context . _ gl ;:==:var maximumColorAttachments:==:contextLimits . maximumColorAttachments ;
var width = Math . max . apply ( null , widths ) ;:==:var height:==:Math . max . apply ( null , heights ) ;
var topRadius = property . getValueOrUndefined ( cylinder . topRadius , time ) ;:==:var bottomRadius:==:property . getValueOrUndefined ( cylinder . bottomRadius , time ) ;
var arrayExtensions = jsCommon . arrayExtensions ;:==:var semanticFilter:==:powerbi . data . semanticFilter ;
var daterange = config . backtest . daterange ;:==:var to:==:moment . utc ( daterange . to ) ;
var s = f ( sv . get ( ) ) ;:==:var d:==:dv . get ( ) ;
var resolve = Ember . RSVP . resolve ;:==:var run:==:Ember . run ;
var center = viewState . center ;:==:var rotation:==:viewState . rotation ;
var stiffness = options . stiffness ;:==:var damping:==:options . damping ;
var fraction = math . fraction ;:==:var matrix:==:math . matrix ;
var chalk = require ( ' chalk ' ) ;:==:var filesize:==:require ( ' filesize ' ) ;
var line = options . line ;:==:var column:==:options . column ;
var Menu = imports . Menu ;:==:var commands:==:imports . commands ;
var lock = $ ( ' # grid_'+ obj . name + ' _ lock ' ) ;:==:var status:==:$ ( ' # grid_'+ obj . name + ' _ status ' ) ;
var jsv = require ( ' jsverify ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var a32 = this . a32 ;:==:var a33:==:this . a33 ;
var line = lineAtHeight ( cm . doc , my ) ;:==:var gutter:==:cm . options . gutters [ i ] ;
var emailFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' emailFieldTestObject ' ) ) ;:==:var passwordFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' passwordFieldTestObject ' ) ) ;
var combineOutput = path . join ( ' build ' , ' combineOutput ' , optimizer ) ;:==:var copyrightHeader:==:fs . readFileSync ( path . join ( ' source ' , ' copyrightHeader . js ' ) ) ;
var a = typeof ma ;:==:var b:==:typeof mb ;
var calendar = view . calendar ;:==:var el:==:seg . el ;
var EOF = goog . labs . format . csv . Sentinels _ . EOF ;:==:var EOR:==:goog . labs . format . csv . Sentinels _ . EOR ;
var from = alias . from ( ) ;:==:var to:==:alias . to ( ) ;
var getAccessor = traceur . syntax . trees . getAccessor ;:==:var nullTree:==:traceur . syntax . trees . nullTree ;
var labels = axis . _ labels = [ ] ;:==:var gridlines:==:axis . _ gridlines ;
var scope = window [ scopeName ] ;:==:var entryPointName:==:scope . entryPointName ;
var fs = require ( ' fs - extra ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var getColCnt = t . getColCnt ;:==:var getColWidth:==:t . getColWidth ;
var scale = new Variable ( ' scale ' , 10 ) ;:==:var offset:==:new Variable ( ' offset ' , 1000 ) ;
var top = shadowFrustum . top ;:==:var near:==:shadowFrustum . near ;
var name = fixture . name ;:==:var fixture:==:fixture . fixture ;
var isSingleProp = schema . isSingleProperty ;:==:var stringifyProperties:==:schema . stringifyProperties ;
var vizion = require ( ' vizion ' ) ;:==:var child:==:require ( ' child_process ' ) ;
var i d = options . i d ;:==:var binary:==:apf . hasXhrBinary & & options . binary ;
var sourcesContent = util . getArg ( sourceMap , ' sourcesContent ' , null ) ;:==:var mappings:==:util . getArg ( sourceMap , ' mappings ' ) ;
var routes = _ props2 . routes ;:==:var children:==:_ props2 . children ;
var ellipsoid = projection . ellipsoid ;:==:var center:==:sphere . center ;
var hashId = binding . hashId ;:==:var hash:==:( ckb [ hashId ]  |  |  ( ckb [ hashId ]    ) ) ;
var imgSize = options . imgSize ! = = undefined ? options . imgSize : null ;:==:var src:==:options . src ;
var minSize = me . minSize ;:==:var isHorizontal:==:me . isHorizontal ( ) ;
var monthNamesShort = settings . monthNamesShort  |  |  this . local . monthNamesShort ;:==:var monthNames:==:settings . monthNames  |  |  this . local . monthNames ;
var crypto = require ( ' crypto ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var res = resMap [ i d ]  |  |  ;:==:var pkg:==:res . pkg ;
var spreadPatternElement = traceur . syntax . trees . spreadPatternElement ;:==:var superExpression:==:traceur . syntax . trees . superExpression ;
var enqueueMutation = scope . enqueueMutation ;:==:var getTreeScope:==:scope . getTreeScope ;
var clientX = event . clientX ;:==:var clientY:==:event . clientY ;
var latitude = document . getElementById ( ' latitude ' ) ;:==:var radius:==:document . getElementById ( ' radius ' ) ;
var fs = require ( ' fs ' ) ;:==:var ncp:==:require ( ' ncp ' ) . ncp ;
var utils = require ( ' utils ' ) ;:==:var f:==:utils . format ;
var pageIndex = data . pageIndex ;:==:var normalizeWhitespace:==:data . normalizeWhitespace ;
var deleteListener = reactBrowserEventEmitter . deleteListener ;:==:var listenTo:==:reactBrowserEventEmitter . listenTo ;
var ellipsoid = geometry . _ ellipsoid ;:==:var surfaceHeight:==:geometry . _ surfaceHeight ;
var yScale2 = chart . scales . yScale2 ;:==:var yScale3:==:chart . scales . yScale3 ;
var r = from . r + ( to . r - from . r ) * this . progress ( ) ;:==:var g:==:from . g + ( to . g - from . g ) * this . progress ( ) ;
var dx4 = Math . max ( parseFloat ( mxUtils . getValue ( this . state . style , ' dx3 ' , 0 ) ) , math . min ( parseFloat ( mxUtils . getValue ( this . state . style , ' dx5 ' , 0 ) ) , parseFloat ( mxUtils . getValue ( this . state . style , ' dx4 ' , 0 ) ) ) ) ;:==:var dy4:==:math . max ( 0 , math . min ( 100 , parseFloat ( mxUtils . getValue ( this . state . style , ' dy4 ' , 0 ) ) ) ) ;
var createIfMissing = this . createIfMissing ;:==:var recreateIfInvalid:==:this . recreateIfInvalid ;
var Post = hexo . model ( ' Post ' ) ;:==:var Page:==:hexo . model ( ' Page ' ) ;
var xa = pointData . xa ;:==:var ya:==:pointData . ya ;
var type = data . type  |  |  '' ;:==:var folderType:==:data . folderType  |  |  ' inbox ' ;
var charCode = this . json . grid [ row ] . charCodeAt ( col ) ;:==:var index:==:this . indexFromCharCode ( charCode ) ;
var network = options . network ;:==:var showNotInRange:==:options . showNotInRange  |  |  false ;
var lang = document . getElementById ( ' lang ' ) ;:==:var pitch:==:document . getElementById ( ' pitch ' ) ;
var spawn = require ( ' cross - spawn ' ) ;:==:var opn:==:require ( ' opn ' ) ;
var options = this . _ options ;:==:var shadows:==:this . _ geometryUpdater . shadowsProperty . getValue ( time ) ;
var a = new Element ( ' a [ text='Hello world ' ] ' ) ;:==:var div:==:new element ( ' div ' ) . inject ( document . body ) . adopt ( a ) . addEvent ( ' click : relay ( a ) ' , spy ) . fireEvent ( ' click ' ) ;
var question = imports [ ' dialog . question ' ] ;:==:var preinstalled:==:options . preinstalled ;
var accountStatus = identify . proxy ( ' traits . accountStatus ' ) ;:==:var referralCode:==:identify . proxy ( ' traits . referralCode ' ) ;
var pink400 = exports . pink400 = ' # ec407a ' ;:==:var pink500:==:exports . pink500    ' # e91e63 ' ;
var currentimEngine = this . app . inputMethodManager . currentimEngine ;:==:var layoutManager:==:this . app . layoutManager ;
var after = opts . after  |  |  $ . noop ;:==:var before:==:opts . before  |  |  $ . noop ;
var Plugin = imports . Plugin ;:==:var vfs:==:imports . vfs ;
var stringToBytes = sharedUtil . stringToBytes ;:==:var warn:==:sharedUtil . warn ;
var moduleBody = options . moduleBody ;:==:var firstWhitespace:==:options . firstWhitespace ;
var clearSelection = t . clearSelection ;:==:var getHoverListener:==:t . getHoverListener ;
var i d = i d  |  |  options . size ( ) ;:==:var option:==:chart_option_color ( ) ;
var loader = steal . loader ;:==:var clone:==:loader . clone ( ) ;
var EXPORT_DECLARATION = ' EXPORT_DECLARATION ' ;:==:var EXPORT_DEFAULT:==:' EXPORT_DEFAULT ' ;
var GET_GITHUB_SUCCESS = exports . GET_GITHUB_SUCCESS = ' GET_GITHUB_SUCCESS ' ;:==:var GET_GITHUB_FAIL:==:exports . GET_GITHUB_FAIL    ' GET_GITHUB_FAIL ' ;
var less = require ( ' gulp - less ' ) ;:==:var inject:==:require ( ' gulp - inject ' ) ;
var f8NotificationsView = require ( ' f8NotificationsView ' ) ;:==:var react:==:require ( ' react ' ) ;
var layout = imports . layout ;:==:var menus:==:imports . menus ;
var settings = imports . settings ;:==:var extname:==:require ( ' path ' ) . extname ;
var NULL2 = C . NULL2 = 0x42 ;:==:var NULL3:==:C . NULL3    0x43 ;
var d = ' ' d ' ' ;:==:var e:==:' ' e ' ' ;
var width = _ ref . width ;:==:var x:==:_ ref . x ;
var userAgent = require ( ' userAgent ' ) ;:==:var getEntityKeyForSelection:==:require ( ' getEntityKeyForSelection ' ) ;
var path = exports . path = new _ weakMap2 . default ( ) ;:==:var scope:==:exports . scope    new _ weakMap2 . default ( ) ;
var tabManager = imports . tabManager ;:==:var ui:==:imports . ui ;
var path = require ( ' path ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var karma = require ( ' karma ' ) . server ;:==:var argv:==:require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;
var x = layout . x ;:==:var y0:==:layout . y0 ;
var Column = fixedDataTable . column ;:==:var table:==:fixedDataTable . table ;
var yargs = require ( ' yargs ' ) ;:==:var aws:==:require ( ' aws - sdk ' ) ;
var entryLevels = timelineData . entryLevels ;:==:var length:==:entryStartTimes . length ;
var gulp = require ( ' gulp ' ) ;:==:var wrench:==:require ( ' wrench ' ) ;
var isArray = sharedUtil . isArray ;:==:var warn:==:sharedUtil . warn ;
var font = current . font ;:==:var fontSize:==:current . fontSize ;
var new_counter = new_counters_row [ destination_bytecode ] ;:==:var old_counter:==:old_counters_row [ destination_bytecode ] ;
var async = require ( ' async ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var sourcemaps = require ( ' gulp - sourcemaps ' ) ;:==:var webserver:==:require ( ' gulp - webserver ' ) ;
var Runner = mocha . Runner ;:==:var Test:==:mocha . Test ;
var invertUV = options . invertUV  |  |  false ;:==:var updatable:==:options . updatable ;
var basename = path . basename ;:==:var fs:==:require ( ' fs ' ) ;
var cloud1 = cloudLayer . create ( -60 , 120 , ' cloud1 ' ) ;:==:var cloud2:==:cloudLayer . create ( 900 , 170 , ' cloud2 ' ) ;
var getEncoding = coreEncodings . getEncoding ;:==:var getStdFontMap:==:coreStandardFonts . getStdFontMap ;
var sortField = ' sortField ' in $ stateParams ? $ stateParams . sortField : null ;:==:var sortDir:==:' sortDir ' in $ stateParams ? $ stateParams . sortDir : null ;
var walletId = client . credentials . walletId ;:==:var config:==:configService . getSync ( ) ;
var graph = this . graph ;:==:var min:==:Math . min , max    Math . max ;
var w = mipData . width ;:==:var h:==:mipData . height ;
var JSX_TEXT = ' JSX_TEXT ' ;:==:var LABELLED_STATEMENT:==:' LABELLED_STATEMENT ' ;
var s = o . smi ;:==:var d:==:d1 - d2 ;
var IE = goog . userAgent . ie ;:==:var root_panel_class:==:' . ' + goog . tweak . tweakUi . root_panel_class _ ;
var obj = objectMap [ data . postMessageProxy ] ;:==:var fn , args , responseId:==:data ;
var isArray = sharedUtil . isArray ;:==:var isString:==:sharedUtil . isString ;
var selectTransforms = transformContext . selectTransforms ;:==:var objectDescriptors:==:transformContext . objectDescriptors ;
var row = ace . selection . lead . row ;:==:var i:==:findChunkIndex ( this . chunks , row , orig ) ;
var $ links = this . $ links ;:==:var options:==:this . options ;
var fallbackCompositionState = require ( ' fallbackCompositionState ' ) ;:==:var syntheticCompositionEvent:==:require ( ' syntheticCompositionEvent ' ) ;
var mongo = require ( ' mongodb ' ) ;:==:var Db:==:mongo . Db ;
var _ malloc = Module [ ' _ malloc ' ] = asm [ ' _ malloc ' ] ;:==:var _ im_get_predicts_utf8:==:Module [ ' _ im_get_predicts_utf8 ' ]    asm [ ' _ im_get_predicts_utf8 ' ] ;
var registerWrapper = scope . registerWrapper ;:==:var rewrap:==:scope . rewrap ;
var period = this . period ;:==:var scheduler:==:this . scheduler ;
var n = new functionAssignmentNode ( ' f ' , [ ' x ' ] , c ) ;:==:var e:==:new constantNode ( 5 ) ;
var pressTime = aggregator . _ pressTime ;:==:var releaseTime:==:aggregator . _ releaseTime ;
var operators = this . operators ;:==:var length:==:operators . length ;
var webChannelBaseTransport = goog . labs . net . webChannel . webChannelBaseTransport ;:==:var webChannelBase:==:goog . labs . net . webChannel . webChannelBase ;
var toLower = invoker ( 0 , ' toLowerCase ' ) ;:==:var toUpper:==:invoker ( 0 , ' toUpperCase ' ) ;
var longitude = borderCartographic . longitude ;:==:var latitude:==:borderCartographic . latitude ;
var writeConcern = common . writeConcern ( shallowClone ( options ) , collection , options ) ;:==:var promiseLibrary:==:options . promiseLibrary ;
var once = require ( ' once ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var onAfterChange = jasmine . createSpy ( ' onAfterChange ' ) ;:==:var asyncSources:==:jasmine . createSpy ( ' asyncSources ' ) ;
var Text = reactCanvas . text ;:==:var fontFace:==:reactCanvas . fontFace ;
var closed = ( options . closed = = = undefined ) ? true : options . closed ;:==:var shape:==:options . shape ;
var zindex = options . zindex  |  |  50 ;:==:var opacity:==:options . opacity  |  |  70 ;
var indent = state . indented ;:==:var c:==:new Context ( indent , col , type , null , state . context ) ;
var z = q . z ( ) ;:==:var w:==:q . w ( ) ;
var width = this . width = mapDiv . clientWidth ;:==:var height:==:this . height    mapDiv . clientHeight ;
var b = el . bounds ;:==:var p:==:options . nodePosition . toUpperCase ( ) ;
var touchcancel = isTouch ? ' touchcancel ' : ' mousecancel ' ;:==:var touchstart:==:isTouch ? ' touchstart ' : ' mousedown ' ;
var functionBody = this . transformSuperInBlock _ ( tree , tree . functionBody ) ;:==:var name:==:state . name . identifierToken ;
var min = datetimepicker . timeView . options . min ;:==:var max:==:datetimepicker . timeView . options . max ;
var cropper = $ image . data ( ' cropper ' ) ;:==:var options:==:cropper . options ;
var ellipsoid = circleGeometry . _ ellipseGeometry . _ ellipsoid ;:==:var minHeight:==:minHeightFunc ( granularity , ellipsoid ) ;
var c = processDiagramCanvas . g . ellipse ( ax , ay , 2 , 2 ) . attr ( stroke : color . slateGrey ) ;:==:var c:==:processDiagramCanvas . g . ellipse ( bx , by , 2 , 2 ) . attr ( stroke : color . slateGrey ) ;
var loadOptions = this . props . loadOptions ;:==:var cache:==:this . _ cache ;
var yAxisModels = foundCpts . yAxisModels ;:==:var gridModels:==:foundCpts . gridModels ;
var cache = ref . cache ;:==:var shouldPreload:==:ref . shouldPreload ;
var activeApp = this . _ activeApp ;:==:var detail:==:evt . detail ;
var Uri = Windows . Foundation . Uri ;:==:var messageDialog:==:windows . ui . popups . messageDialog ;
var orange800 = exports . orange800 = ' # ef6c00 ' ;:==:var orange900:==:exports . orange900    ' # e65100 ' ;
var fs = require ( ' fs ' ) ;:==:var escape:==:utils . escape ;
var withoutRoot = options . withoutRoot ;:==:var root:==:options . root  |  |  jsbin . root ;
var session = e . session ;:==:var path:==:calcRootedPath ( session . url  |  |  session . path  |  |  session . initPath ) ;
var Button = require ( ' elemental ' ) . Button ;:==:var formField:==:require ( ' elemental ' ) . formField ;
var deepPurple500 = exports . deepPurple500 = ' # 673ab7 ' ;:==:var deepPurple600:==:exports . deepPurple600    ' # 5e35b1 ' ;
var rename = require ( ' gulp - rename ' ) ;:==:var filter:==:require ( ' gulp - filter ' ) ;
var href = win . location . href ;:==:var index:==:href . indexOf ( ' # ' ) ;
var swig = require ( ' swig ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var matrixWorld = this . object . matrixWorld ;:==:var position:==:this . geometry . attributes . position ;
var router = _ props . router ;:==:var history:==:_ props . history ;
var arrify = require ( ' arrify ' ) ;:==:var pify:==:require ( ' pify ' ) ;
var interoperabilityifdLength = ifDlengths . interoperabilityifdLength ;:==:var interoperabilityLengthDataSection:==:ifDlengths . interoperabilityLengthDataSection ;
var width = svg . viewPort . width ( ) ;:==:var height:==:svg . viewPort . height ( ) ;
var onTouchTap = props . onTouchTap ;:==:var prepareStyles:==:muiTheme . prepareStyles ;
var responseFlags = typeof options . responseFlags = = ' number ' ? options . responseFlags : 0 ;:==:var startingFrom:==:typeof options . startingFrom     ' number ' ? options . startingFrom : 0 ;
var brushOption = cover . _ _ brushOption ;:==:var range:==:zrUtil . clone ( brushOption . range ) ;
var min = seriesModel . get ( ' min ' ) ;:==:var max:==:seriesModel . get ( ' max ' ) ;
var bufferTimeSpan = state . bufferTimeSpan ;:==:var subscriber:==:state . subscriber ;
var url = require ( ' url ' ) ;:==:var dive:==:require ( ' diveSync ' ) ;
var abs = Math . abs ;:==:var x:==:this . x ;
var ID = ' iframe - upload- ' + this . uniqueID ;:==:var form:==:opts . form ;
var abs = Math . abs ;:==:var floor:==:Math . floor ;
var ngModelOptions = sfBuilderProvider . builders . ngModelOptions ;:==:var ngModel:==:sfBuilderProvider . builders . ngModel ;
var proxyB = input . proxyB ;:==:var sweepA:==:input . sweepA ;
var filename = ( f instanceof window . File ) ? f . name : f . filename ;:==:var dest:==:new VFS . File ( Utils . pathJoin ( args . destination , filename ) ) ;
var win = $ ( window ) ;:==:var w:==:win . width ( ) - widthOffset ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var mime:==:require ( ' mime ' ) ;
var createPromiseCapability = sharedUtil . createPromiseCapability ;:==:var customStyle:==:displaydomUtils . customStyle ;
var xFormatter = series . xFormatter  |  |  this . xFormatter ;:==:var yFormatter:==:series . yFormatter  |  |  this . yFormatter ;
var form = document . createElement ( ' form ' ) ;:==:var select:==:document . createElement ( ' select ' ) ;
var innerRadius = reset & & this . chart . options . animation . animateScale ? 0 : this . innerRadius ;:==:var outerRadius:==:reset & & this . chart . options . animation . animateScale ? 0 : this . outerRadius ;
var x : x : string = x : ' hello ' ;:==:var x : x : string:==:x : ' hello ' ;
var os = require ( ' os ' ) ;:==:var https:==:require ( ' https ' ) ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var touchableWithoutFeedback:==:require ( ' touchableWithoutFeedback ' ) ;
var fs = require ( ' fs - extra ' ) ;:==:var sass:==:require ( ' node - sass ' ) ;
var t = CHTML . TEX . rule_thickness ;:==:var h:==:( sbox |  | pbox ) . h , d    ( Sbox |  | Pbox ) . d ;
var height = cropBox . height ;:==:var left:==:cropBox . left ;
var max = Math . max . apply ( Math , nums ) ;:==:var min:==:Math . min . apply ( Math , nums ) ;
var blacklist = this . snapshot . blacklist ;:==:var special:==:this . snapshot . special ;
var res = _ res ;:==:var i:==:_ i ;
var programNode = jsProfileModel . programNode ;:==:var gcNode:==:jsProfileModel . gcNode ;
var pow = Math . pow ;:==:var round:==:Math . round ;
var txn = db . transaction ( [ storeName ] , txnType ) ;:==:var store:==:txn . objectStore ( storeName ) ;
var unauthorized = ' unauthorized ' ;:==:var uninitialized:==:' uninitialized ' ;
var lrz = require ( ' lrz ' ) ;:==:var expect:==:chai . expect ;
var isArray = _ _ dependency2 _ _ . isArray ;:==:var isNonThenable:==:_ _ dependency2 _ _ . isNonThenable ;
var Dummy8 = mongoose . model ( ' Dummy8 ' , dummy8Schema ) ;:==:var dummy9:==:mongoose . model ( ' dummy9 ' , dummy9Schema ) ;
var getShadingPatternFromir = displayPatternHelper . getShadingPatternFromir ;:==:var webglUtils:==:displayWebgl . webglUtils ;
var propertyNameAssignment = traceur . syntax . trees . propertyNameAssignment ;:==:var propertyNameShorthand:==:traceur . syntax . trees . propertyNameShorthand ;
var Map   = require ( ' immutable ' ) . Map ;:==:var List:==:require ( ' immutable ' ) . List ;
var layout = imports . layout ;:==:var tooltip:==:imports . tooltip ;
var style = el . style ;:==:var text:==:style . text ;
var Panel = imports . Panel ;:==:var panels:==:imports . panels ;
var cy = pcy + dot * diry ;:==:var cz:==:pcz + dot * dirz ;
var response = cr . response  |  |  cr ;:==:var statusCode:==:response . statusCode ;
var filePath = event . data . filePath ;:==:var handlerPath:==:event . data . handlerPath ;
var latitude = e . coords . latitude ;:==:var altitude:==:e . coords . altitude ;
var q = require ( ' q ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var increment = docSet . getByLongname ( ' increment ' ) [ 0 ] ;:==:var print:==:docSet . getByLongname ( ' print ' ) [ 0 ] ;
var models = _ _ alloyId6 . models ;:==:var len:==:models . length ;
var valueDim = opt . valueDim ;:==:var repeatTimes:==:symbolMeta . repeatTimes  |  |  0 ;
var sizes = shape . sizes ;:==:var symbolProxy:==:this . symbolProxy ;
var switchs = topo . data [ ' switchs ' ] ;:==:var anchors:==:topo . data [ ' anchors ' ] ;
var gitSemverTags = context . gitSemverTags ;:==:var commitGroups:==:context . commitGroups ;
var criteria = _ ref . criteria ;:==:var evidence:==:_ ref . evidence ;
var dim = _ dim  |  |  false ;:==:var timeout:==:_ timeout  |  |  50000 ;
var root = opt_root  |  |  document . body ;:==:var doc:==:root . ownerDocument  |  |  document ;
var Emitter = require ( ' events ' ) . eventEmitter ;:==:var util:==:require ( ' util ' ) ;
var nodeCount = this . nodeCount ;:==:var firstEdgeIndexes:==:this . _ firstEdgeIndexes ;
var a = new global . int8Array ( buffer ) ;:==:var b:==:new global . int16Array ( buffer ) ;
var key = keys [ i ] ;:==:var colInfo:==:_ this7 . colInfos [ key ] ;
var addon = spec . addon ;:==:var link:==:spec . link ;
var isName = corePrimitives . isName ;:==:var isCmd:==:corePrimitives . isCmd ;
var doc = win . document ;:==:var undefined:==:win . undefined ;
var el = n . pos ? n . pos . el : 0 ;:==:var a:==:n . annotations ;
var net = require ( ' net ' ) ;:==:var http:==:require ( ' http ' ) ;
var n = + conf . n ;:==:var p:==:path . win32 ;
var browserWindow = electron . browserWindow ;:==:var defaults:==:require ( ' deep - defaults ' ) ;
var w = window ;:==:var d:==:document & & document . documentElement ;
var set = classUtil . set ;:==:var get:==:classUtil . get ;
var gulp = require ( ' gulp ' ) ;:==:var open:==:require ( ' open ' ) ;
var slice = [ ] . slice ;:==:var proto:==:Function . prototype ;
var upload = imports . upload ;:==:var menus:==:imports . menus ;
var rotationMatrix = this . rotationMatrix ;:==:var yStretch:==:this . yStretch ;
var shadowCanvas = this . shadowCanvas = document . createElement ( ' canvas ' ) ;:==:var canvas:==:this . canvas    config . canvas  |  |  document . createElement ( ' canvas ' ) ;
var head = this . head ( ) ;:==:var tail:==:this . tail ( ) ;
var bridge = imports [ ' bridge . client ' ] ;:==:var fs:==:require ( ' fs ' ) ;
var createBindingIdentifier = parseTreeFactory . createBindingIdentifier ;:==:var createBlock:==:parseTreeFactory . createBlock ;
var index = graphStore . indexOf ( record ) ;:==:var clone:==:cloneGraphRecord ( record ) ;
var slugize = util . slugize ;:==:var hasOwn:==:object . prototype . hasOwnProperty ;
var flat = ( options . flat = = = undefined ) ? true : options . flat ;:==:var subdivisions:==:options . subdivisions  |  |  4 ;
var t = matchers [ j ] ;:==:var m:==:path . match ( t . re ) ;
var content = msg . content ;:==:var area:==:this . create_output_area ( ) ;
var panelSizex = panel . panelSizex ;:==:var panelSizey:==:panel . panelSizey ;
var itemsIndom = this . _ itemsIndom ;:==:var geo:==:this . geometry ;
var option = _ ref8 . option ;:==:var selectValue:==:_ ref8 . selectValue ;
var top = offset . top + pos . offsetY ;:==:var left:==:offset . left + pos . offsetX ;
var ellipsoid = projection . ellipsoid ;:==:var maximumHeight:==:options . maximumHeight ;
var dataViewObjects = powerbi . dataViewObjects ;:==:var axisType:==:powerbi . visuals . axisType ;
var extensions = material . extensions ;:==:var defines:==:material . defines ;
var arrayExtensions = jsCommon . arrayExtensions ;:==:var dataViewMetadataColumnUtils:==:powerbi . data . dataViewMetadataColumnUtils ;
var yMax = this . yMax  |  |  0 ;:==:var advanceWidth:==:this . advanceWidth  |  |  0 ;
var times = options . times ;:==:var inTangents:==:options . inTangents ;
var bind = require ( ' bind ' ) ;:==:var callback:==:require ( ' callback ' ) ;
var peers = util . Module ( ' peers ' ) ;:==:var assert:==:util . assert ;
var concat = require ( ' gulp - concat ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var nativeMethodsMixin = require ( ' nativeMethodsMixin ' ) ;:==:var react:==:require ( ' react ' ) ;
var base64PbStreamParser = goog . require ( ' goog . net . streams . base64PbStreamParser ' ) ;:==:var base64:==:goog . require ( ' goog . crypt . base64 ' ) ;
var anchor = cm . getCursor ( ' anchor ' ) , head = cm . getCursor ( ' head ' ) ;:==:var line:==:head . line ;
var session = editor . session ;:==:var path:==:session . c9doc . tab . path ;
var name = detail . name ;:==:var url:==:detail . url ;
var learningRate = options . learningRate  |  |  this . learningRate  |  |  0 . 3 ;:==:var callback:==:options . callback ;
var mongoose = start . mongoose ;:==:var castError:==:mongoose . schemaType . castError ;
var max = options . max  |  |  undefined ;:==:var close:==:options . close  |  |  false ;
var username = element ( by . i d ( ' username ' ) ) ;:==:var password:==:element ( by . i d ( ' password ' ) ) ;
var n = b . length ;:==:var b2j:==:this . b2j    ;
var db = new PouchDB ( dbs . name ) ;:==:var Promise:==:testUtils . promise ;
var clockseq = options . clockseq ! = null ? options . clockseq : _ clockseq ;:==:var msecs:==:options . msecs !   null ? options . msecs : new Date ( ) . getTime ( ) ;
var store = stdlib . Atomics . store ;:==:var fround:==:stdlib . Math . fround ;
var config = _ _ dependency1 _ _ . config ;:==:var eventTarget:==:_ _ dependency2 _ _ . eventTarget ;
var path = require ( ' path ' ) ;:==:var globby:==:require ( ' globby ' ) ;
var options = opt_options  |  |  ;:==:var size:==:options . size ;
var child_process = require ( ' child_process ' ) ;:==:var exec:==:bbPromise . promisify ( child_process . exec ) ;
var sourceType = getValue ( options . sourceType , camera . pictureSourceType . camera ) ;:==:var targetWidth:==:getValue ( options . targetWidth , -1 ) ;
var createCaseClause = parseTreeFactory . createCaseClause ;:==:var createCatch:==:parseTreeFactory . createCatch ;
var right = bounds . right  |  |  0 ;:==:var bottom:==:bounds . bottom  |  |  0 ;
var registerStandardInteractivityHandlers = powerbi . visuals . interactivityUtils . registerStandardInteractivityHandlers ;:==:var lazy:==:jsCommon . lazy ;
var pin_up = that . options . classes . pin_up = = = null ? notice . styles . pin_up : that . options . classes . pin_up ;:==:var pin_down:==:that . options . classes . pin_down      null ? notice . styles . pin_down : that . options . classes . pin_down ;
var arc = this . arc ;:==:var hasSelection:==:interactivityService & & interactivityService . hasSelection ( ) ;
var dec = formatData . dec ;:==:var group:==:formatData . group ;
var glob = require ( ' glob ' ) ;:==:var http:==:require ( ' http ' ) ;
var should = require ( ' should ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var anchorPoint = box . anchorPoint . _ matMult ( rotationMatrix ) ;:==:var x:==:anchorPoint . x ;
var children = _ props . children ;:==:var expandable:==:_ props . expandable ;
var $ action = elOption . $ action ;:==:var i d:==:elOption . i d ;
var Node = kendo . data . Node ;:==:var hierarchicalDataSource:==:kendo . data . hierarchicalDataSource ;
var width = requiredWidth  |  |  this . _ renderingCanvas . width ;:==:var height:==:requiredHeight  |  |  this . _ renderingCanvas . height ;
var symbolInstancesArray = tile . symbolInstancesArray . serialize ( ) ;:==:var symbolQuadsArray:==:tile . symbolQuadsArray . serialize ( ) ;
var predefinedMetrics = ob . predefinedMetrics ;:==:var params:==:ob . params ;
var dataChannelSend = document . querySelector ( ' textarea#dataChannelSend ' ) ;:==:var dataChannelReceive:==:document . querySelector ( ' textarea#dataChannelReceive ' ) ;
var Editor = imports . Editor ;:==:var Datagrid:==:imports . Datagrid ;
var left = trashRect . left + this . sprite_left _ - this . margin_hotspot _ ;:==:var top:==:trashRect . top + this . sprite_top _ - this . margin_hotspot _ ;
var center = Cartesian3 . add ( boundingSphereCullingVolume . center , offset , new cartesian3 ( ) ) ;:==:var radius:==:boundingSphereCullingVolume . radius * 0 . 5 ;
var dur = p . getAttribute ( ' dur ' ) ;:==:var end:==:p . getAttribute ( ' end ' ) ;
var libraries = init . libraries ;:==:var mangledNames:==:init . mangledNames ;
var index = target . dataset . index ;:==:var data:==:this . dataSource [ index ] ;
var w = imageData . width  |  0 ;:==:var h:==:imageData . height  |  0 ;
var additionalProperties = definition . additionalProperties ;:==:var xml:==:definition . xml ;
var a = fulfillBuiltInSoon ( ' a ' , 40 ) ;:==:var b:==:rejectBuiltInSoon ( ' rejected - b ' , 30 ) ;
var containerNode = options . containerNode ;:==:var forceRefreshImages:==:options . forceRefreshImages ;
var join = require ( ' path ' ) . join ;:==:var basename:==:require ( ' path ' ) . basename ;
var COMPREHENSION_IF = ' COMPREHENSION_IF ' ;:==:var COMPUTED_PROPERTY_NAME:==:' COMPUTED_PROPERTY_NAME ' ;
var setTimeout = global . setTimeout ;:==:var clearTimeout:==:global . clearTimeout ;
var caption = options . caption ;:==:var i d:==:options . i d ;
var h1 = document . createElement ( ' h1 ' ) ;:==:var s:==:h1 . style ;
var readonly = options . readonly ;:==:var wrapper:==:that . wrapper ;
var fs = require ( ' fs ' ) ;:==:var request:==:require ( ' request ' ) ;
var merge    = options . merge ;:==:var assert:==:require ( ' chai ' ) . assert ;
var concat   = require ( ' gulp - concat ' ) ;:==:var csslint:==:require ( ' gulp - csslint ' ) ;
var f8MapView = require ( ' f8MapView ' ) ;:==:var f8NotificationsView:==:require ( ' f8NotificationsView ' ) ;
var staticContainer = require ( ' staticContainer . react ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var writeBinaryOptions = struct ( ' writeBinaryOptions ' ) ;:==:var writer:==:struct ( ' writer ' ) ;
var gl = renderSession . gl ;:==:var projection:==:renderSession . projection ;
var samplingRate = this . samplingRate ;:==:var createViewNode:==:this . createViewNode ;
var target = e . target ;:==:var uid:==:target . dataset . uuid ;
var exec   = require ( ' child_process ' ) . exec ;:==:var os:==:require ( ' os ' ) ;
var test   = require ( ' utest ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var value = element ( by . binding ( ' value ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var from = Ledger . findOne ( name : from_name , world : world ) ;:==:var to:==:ledger . findOne ( name : to_name , world : world ) ;
var properties = track . properties ( ) ;:==:var channel:==:track . proxy ( ' properties . channel ' ) ;
var preloads = $ . data . preloads ;:==:var index:==:preloads . indexOf ( i d ) ;
var minY = this . minY ;:==:var maxX:==:this . maxX ;
var doc = def . doc  |  |  ;:==:var call:==:def . call ;
var boneDataList = armatureData . boneDataList ;:==:var i:==:boneDataList . length ;
var fs = require ( ' fs ' ) ;:==:var clone:==:require ( ' clone ' ) ;
var innerWidth = options [ ' innerWidth ' ] ! = null ? options [ ' innerWidth ' ] : 200 ;:==:var innerHeight:==:options [ ' innerHeight ' ] !   null ? options [ ' innerHeight ' ] : 200 ;
var exceptMultiline = this . _ exceptMultiline ;:==:var exceptAligned:==:this . _ exceptAligned ;
var thisArg = state . thisArg ;:==:var project:==:state . project ;
var aspectRatio = options . aspectRatio ;:==:var autoCropArea:==:num ( options . autoCropArea )  |  |  0 . 8 ;
var hasOwn = object . prototype . hasOwnProperty ;:==:var toStr:==:object . prototype . toString ;
var handles = displaybles . handles = [ ] ;:==:var handleLabels:==:displaybles . handleLabels    [ ] ;
var selectionId = powerbi . visuals . selectionId ;:==:var selectionIdBuilder:==:powerbi . visuals . selectionIdBuilder ;
var x = rect . x ;:==:var y:==:rect . y ;
var dbInfo = self . _ dbInfo ;:==:var keyPrefix:==:dbInfo . keyPrefix ;
var radius = proxyA . m_radius + proxyB . m_radius ;:==:var tolerance:==:input . tolerance ;
var utc = moment . utc ;:==:var telegram:==:require ( ' node - telegram - bot - api ' ) ;
var scale = interp ( fromM . scale , toM . scale , f ) ;:==:var skew:==:interp ( fromM . skew , toM . skew , f ) ;
var inlineChanges = chunk . inlineChanges ;:==:var row:==:range . start . row ;
var async = require ( ' async ' ) ;:==:var assign:==:require ( ' object - assign ' ) ;
var load = require ( ' pug - load ' ) ;:==:var parse:==:require ( ' pug - parser ' ) ;
var header   = require ( ' gulp - header ' ) ;:==:var minify:==:require ( ' gulp - minify - css ' ) ;
var coordinates = rectangle . coordinates ;:==:var show:==:rectangle . show ;
var VARIABLE_STATEMENT = parseTreeType . variable_statement ;:==:var createArgumentList:==:parseTreeFactory . createArgumentList ;
var fs    = require ( ' fs ' ) ;:==:var should:==:require ( ' should ' ) ;
var EVENT_MOVE = gestureDetector . event_move = ' move ' ;:==:var event_end:==:gestureDetector . event_end    ' end ' ;
var color = _ props . color ;:==:var opacity:==:_ props . opacity ;
var entityFactory = helpers . entityFactory ;:==:var mixinFactory:==:helpers . mixinFactory ;
var sass = require ( ' node - sass ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var bottom = Math . ceil ( box . bottom ) ;:==:var right:==:Math . ceil ( box . right ) ;
var has = require ( ' has ' ) ;:==:var once:==:require ( ' once ' ) ;
var opt = Parsers . opt ;:==:var constant:==:Parsers . constant ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var pattern:==:util . pattern ;
var $ button = this . emojiarea . $ button ;:==:var offset:==:$ button . offset ( ) ;
var Package = Protocol . Package ;:==:var Message:==:Protocol . Message ;
var types = this . types = ;:==:var fields:==:this . fields    ;
var operator = inputState . operator ;:==:var operatorArgs:==:inputState . operatorArgs  |  |  ;
var i d = docInfo . metadata . i d ;:==:var rev:==:docInfo . metadata . rev ;
var webpack = require ( ' webpack ' ) ;:==:var env:==:process . env . NODE_ENV ;
var shaders = gltf . shaders ;:==:var programs:==:gltf . programs ;
var http = require ( ' http ' ) ;:==:var https:==:require ( ' https ' ) ;
var nameLocation = axisModel . get ( ' nameLocation ' ) ;:==:var nameDirection:==:opt . nameDirection ;
var changeYear = this . _ get ( inst , ' changeYear ' ) ;:==:var showMonthAfterYear:==:this . _ get ( inst , ' showMonthAfterYear ' ) ;
var z = possibleCoordinates . z ;:==:var w:==:possibleCoordinates . w ;
var tx = ( transform . tx * renderSession . resolution ) + renderSession . shakex ;:==:var ty:==:( transform . ty * renderSession . resolution ) + renderSession . shakey ;
var bar_px = document . getElementById ( ' bar_px ' ) ;:==:var bar_mozmm:==:document . getElementById ( ' bar_mozmm ' ) ;
var height = _ props2 . height ;:==:var scrollToCell:==:_ props2 . scrollToCell ;
var netUtils = goog . labs . net . webChannel . netUtils ;:==:var webChannelDebug:==:goog . labs . net . webChannel . webChannelDebug ;
var tint = tilingSprite . tint ;:==:var verticies:==:this . vertices ;
var chalk = require ( ' chalk ' ) ;:==:var figures:==:require ( ' figures ' ) ;
var stagger = elementData . stagger ;:==:var maxDuration:==:elementData . maxDuration ;
var keys = kendo . keys ;:==:var create:==:splitterHelpers . create ;
var len = points . length ;:==:var cos:==:Math . cos ( angle ) ;
var timestamp = parseInt ( getData ( btn , ' data - timestamp ' ) , 10 ) ;:==:var postEditDuration:==:parseInt ( ajaxify . data . postEditDuration , 10 ) ;
var center = Rectangle . center ( rectangle ) ;:==:var southwest:==:Rectangle . southwest ( rectangle ) ;
var minimumHeights = wall . minimumHeights ;:==:var maximumHeights:==:wall . maximumHeights ;
var connectionAgent = obj . connectionAgent ;:==:var method:==:obj . method . toLowerCase ( ) ;
var manualOffset = _ ref . manualOffset ;:==:var manualTargetOffset:==:_ ref . manualTargetOffset ;
var camera = this . entity . camera ;:==:var distance:==:this . orbitCamera . distance ;
var typePropMap = this . props . typePropMap ;:==:var member:==:this . props . member ;
var store = this . store = new viewHistory ( i d ) ;:==:var pdfViewer:==:this . pdfViewer ;
var util = require ( ' util ' ) ;:==:var rand:==:require ( ' random ' ) ;
var sprite = this . exportCommon ( img , o , ' sprite ' , -r . x - frame . regx , -r . y - frame . regy ) ;:==:var i d:==:this . getuid ( sprite . id+'_mask ' ) ;
var core = breeze . core ;:==:var complexAspect:==:breeze . complexAspect ;
var mout = require ( ' mout ' ) ;:==:var junk:==:require ( ' junk ' ) ;
var onCellEdit = this . props . options . onCellEdit ;:==:var afterSaveCell:==:this . props . cellEdit . afterSaveCell ;
var path = require ( ' path ' ) ;:==:var textFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;
var col = filterCols ( cols , group ) [ 0 ] ;:==:var val:==:$ utils . evalProperty ( model , group ) ;
var argv = require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;:==:var path:==:require ( ' path ' ) ;
var entries = _ options . entries ;:==:var current:==:_ options . current ;
var focusNode = selection . focusNode ;:==:var focusOffset:==:selection . focusOffset ;
var textDiv = textDivs [ i ] ;:==:var textDivProperties:==:task . _ textDivProperties . get ( textDiv ) ;
var Schema = require ( ' warehouse ' ) . Schema ;:==:var util:==:require ( ' hexo - util ' ) ;
var source = asset . source ;:==:var path:==:asset . path ;
var selectedIds = this . selectedIds ;:==:var selectableDataPoints:==:this . selectableDataPoints ;
var panel = $ ( ' # ' + panelId ) ;:==:var iframe:==:$ ( ' # iframe- ' + panelId ) ;
var yaml = require ( ' js - yaml ' ) ;:==:var fs:==:require ( ' hexo - fs ' ) ;
var viewFormat = defaultValue ( queryStringValue ( link , ' viewFormat ' , namespaces . kml ) , defaultViewFormat ) ;:==:var httpQuery:==:queryStringValue ( link , ' httpQuery ' , namespaces . kml ) ;
var c = new blockNode ( [ node : new symbolNode ( ' x ' ) , node : new constantNode ( 4 ) ] ) ;:==:var d:==:new blockNode ( [ node : new symbolNode ( ' x ' ) , node : new constantNode ( 2 ) , visible : false ] ) ;
var detach = self . _ simpleBind ( self . detach , self ) ;:==:var onCloseSuccess:==:self . config [ ' onCloseSuccess ' ]  |  |  angular . noop ;
var lightGreen600 = exports . lightGreen600 = ' # 7cb342 ' ;:==:var lightGreen700:==:exports . lightGreen700    ' # 689f38 ' ;
var type = uniform . info . type ;:==:var arg:==:args . uniforms [ name ] ;
var pixelRatio = frameState . pixelRatio ;:==:var size:==:frameState . size ;
var dropLast = _ curry2 ( _ dispatchable ( [ ] , _ xdropLast , _ dropLast ) ) ;:==:var dropLastWhile:==:_ curry2 ( _ dispatchable ( [ ] , _ xdropLastWhile , _ dropLastWhile ) ) ;
var parent = $ ( this ) . parents ( ' [ data - id ] ' ) ;:==:var i d:==:parent . attr ( ' data - id ' ) ;
var Plugin = imports . Plugin ;:==:var pubsub:==:imports . pubsub ;
var save = imports . save ;:==:var Editor:==:imports . Editor ;
var less = require ( ' gulp - less ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var array = _ react$PropTypes . array ;:==:var func:==:_ react$PropTypes . func ;
var isString = leafletHelpers . isString ;:==:var isNumber:==:leafletHelpers . isNumber ;
var backdrop = options . backdrop ? $ window . getComputedStyle ( options . backdrop [ 0 ] ) : null ;:==:var height:==:backdrop ? math . min ( $ document [ 0 ] . body . clientHeight , math . ceil ( math . abs ( parseInt ( backdrop . height , 10 ) ) ) ) : 0 ;
var onload = require ( ' script - onload ' ) ;:==:var tick:==:require ( ' next - tick ' ) ;
var targets = boundAgent . targets ;:==:var index:==:targets . indexOf ( target ) ;
var c = decode_col ( $ 3 ) - base . c ;:==:var r:==:decode_row ( $ 5 ) - base . r ;
var weekday = getOption ( options , ' weekday ' , ' string ' , [ ' narrow ' , ' short ' , ' long ' ] , undefined ) ;:==:var era:==:getOption ( options , ' era ' , ' string ' , [ ' narrow ' , ' short ' , ' long ' ] , undefined ) ;
var start = typeof options . start = = ' number ' ? options . start : -32768 ;:==:var end:==:typeof options . end     ' number ' ? options . end : 1000 ;
var myplugin = imports . myplugin ;:==:var describe:==:test . describe ;
var newDataLabelUtils = powerbi . visuals . newDataLabelUtils ;:==:var labelStyle:==:powerbi . visuals . labelStyle ;
var k = kf ( key ) ;:==:var bucket:==:self . buckets [ k . v ] ;
var RLE = goog . i18n . bidi . Format . RLE ;:==:var PDF:==:goog . i18n . bidi . Format . PDF ;
var position = powerbi . dataViewObjects . getValue ( objects , pulseChart . properties [ ' runnerCounter ' ] [ ' position ' ] , pulseChart . defaultSettings . runnerCounter . position ) ;:==:var fontSize:==:parseInt ( powerbi . dataViewObjects . getValue ( objects , pulseChart . properties [ ' runnerCounter ' ] [ ' fontSize ' ] , pulseChart . defaultSettings . runnerCounter . fontSize ) , 10 ) ;
var PORT = parseInt ( process . env . port  |  |  80 , 10 ) ;:==:var bind:==:process . env . bind  |  |  ' 127 . 0 . 0 . 1 ' ;
var command = commands [ j ] ;:==:var parameters:==:command [ ' parameters ' ] ;
var radius = chordSeries . get ( ' radius ' ) ;:==:var parsePercent:==:numberUtil . parsePercent ;
var v = cam . viewport . toGlobal ( this . engine . getRenderWidth ( ) , rh ) ;:==:var tmpVec3:==:canvas2d_1 . _ tmpVec3 ;
var width = parseInt ( this . canvas . getAttribute ( ' width ' ) ) ;:==:var height:==:parseInt ( this . canvas . getAttribute ( ' height ' ) ) ;
var b = this . b ;:==:var c:==:this . c ;
var ignorePunctuation = getOption ( options , ' ignorePunctuation ' , ' boolean ' , undefined , false ) ;:==:var caseFirst:==:getOption ( options , ' caseFirst ' , ' string ' , [ ' upper ' , ' lower ' , ' false ' ] , undefined ) ;
var context = this . context ;:==:var scripts:==:this . scripts ;
var createAssignmentStatement = parseTreeFactory . createAssignmentStatement ;:==:var createBlock:==:parseTreeFactory . createBlock ;
var getRowHeader = window . getRowHeader ;:==:var getRowAction:==:window . getRowAction ;
var up = SIMD . float32x4 ( upRef . x , upRef . y , upRef . z , 0 ) ;:==:var f:==:simd . float32x4 . sub ( center , eye ) ;
var delegate = jasmine . createSpy ( ' delegate ' ) ;:==:var exceptionHandler:==:exceptionHandlerFactory ( delegate ) ;
var EMPTY_ARRAY = ' EMPTY_ARRAY ' ;:==:var TYPE_NOT_EQUAL:==:' TYPE_NOT_EQUAL ' ;
var node = DDM . activeDrag . get ( ' node ' ) ;:==:var proxyNode:==:instance . get ( ' proxyNode ' ) ;
var private_cdn = option_consume ( options , ' private_cdn ' , $ . cloudinary . config ( ) . private_cdn ) ;:==:var secure_distribution:==:option_consume ( options , ' secure_distribution ' , $ . cloudinary . config ( ) . secure_distribution ) ;
var minimist = require ( ' minimist ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var src = listener . src ;:==:var type:==:listener . type ;
var paramName = options . paramName  |  |  ' nk ' ;:==:var http:==:[ ] . concat ( sharedToClass . http  |  |  [ ] ) [ 0 ] ;
var y = ( p1 + yOffset )  |  0 ;:==:var canvas:==:this . canvas ;
var scrollToAlignment = _ props6 . scrollToAlignment ;:==:var scrollToCell:==:_ props6 . scrollToCell ;
var textColor = defaultValue ( parseColorString ( queryStringValue ( node , ' textColor ' , namespaces . kml ) ) , color . black ) ;:==:var text:==:queryStringValue ( node , ' text ' , namespaces . kml ) ;
var gulp = require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;:==:var glob:==:require ( ' glob ' ) ;
var S = $ String ( this ) ;:==:var searchStr:==:$ string ( searchString ) ;
var type = obj . type  |  |  ' jointHinge ' ;:==:var axe1:==:obj . axe1  |  |  [ 1,0,0 ] ;
var touchableWithoutFeedback = require ( ' touchableWithoutFeedback ' ) ;:==:var ensurePositiveDelayProps:==:require ( ' ensurePositiveDelayProps ' ) ;
var express = require ( ' express ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var statTimer = sharedUtil . statTimer ;:==:var unexpectedResponseException:==:sharedUtil . unexpectedResponseException ;
var $ = window . $ ;:==:var _:==:window . _ ;
var re = result . elements ;:==:var me:==:m3 . elements ;
var or = stdlib . Atomics . or ;:==:var fround:==:stdlib . Math . fround ;
var TOTAL_MEMORY = Module [ ' TOTAL_MEMORY ' ]  |  |  134217728 ;:==:var FAST_MEMORY:==:Module [ ' FAST_MEMORY ' ]  |  |  2097152 ;
var positions = computedPositions . positions ;:==:var corners:==:computedPositions . corners ;
var key = relationship . key ;:==:var belongsTo:==:record . belongsTo ( key ) ;
var dimensions = box . dimensions ;:==:var position:==:entity . position ;
var superClass = this . transformAny ( tree . superClass ) ;:==:var annotations:==:this . transformList ( tree . annotations ) ;
var tessellation = options . tessellation  |  |  64  |  0 ;:==:var radiusFunction:==:options . radiusFunction ;
var View = require ( ' View ' ) ;:==:var scrollView:==:require ( ' scrollView ' ) ;
var document = window . document ;:==:var slice:==:arr . slice ;
var SHOW_INDEX = pointPrimitive . show_index = 0 ;:==:var position_index:==:pointPrimitive . position_index    1 ;
var subtitleStyle = _ props . subtitleStyle ;:==:var title:==:_ props . title ;
var win = rules . win [ commandId ]  |  |  '' ;:==:var osx:==:rules . osx [ commandId ]  |  |  '' ;
var nodeBin = options . nodeBin  |  |  [ ' node ' ] ;:==:var settingDir:==:options . settingDir  |  |  options . installPath ;
var c = this . charMap _ [ str . charAt ( i ) ] ;:==:var meta:==:c % metasize ;
var view = this . view ;:==:var source:==:event . source  |  |  ;
var rangeError = errors . rangeError ;:==:var typeError:==:errors . typeError ;
var flat = ( options . flat = = = undefined ) ? true : options . flat ;:==:var sideOrientation:==:( options . sideOrientation      0 ) ? 0 : options . sideOrientation  |  |  babylon . mesh . defaultside ;
var docId = data . docId ;:==:var postProcessor:==:data . postProcessor ;
var lineThickness = lineDotChart . defaultSettings . lineThickness ;:==:var dotSizeMin:==:lineDotChart . defaultSettings . dotSizeMin ;
var result = processor . result ( ) ;:==:var distortion:==:parseInt ( result . distortion ) ;
var x = radiusx * Math . cos ( phi ) * Math . sin ( theta ) ;:==:var y:==:radiusy * Math . sin ( phi ) ;
var sass = require ( ' gulp - sass ' ) ;:==:var webpack:==:require ( ' webpack ' ) ;
var g = _ addGroupAndDomElement ( _ jsPlumb , ' g1 ' ) ;:==:var d1:==:_ addDiv ( ' d1 ' ) ;
var lng = parseFloat ( readCookie ( ' ingress . intelmap . lng ' ) )  |  |  0 . 0 ;:==:var z:==:parseInt ( readCookie ( ' ingress . intelmap . zoom ' ) )  |  |  17 ;
var symbolSize = symbolMeta . symbolSize ;:==:var valueLineWidth:==:symbolMeta . valueLineWidth ;
var index = options . index  |  |  100 ;:==:var buttoncssClass:==:options . buttoncssClass ;
var index = indexList [ i ] ;:==:var $ item:==:that . $ itemList [ index ] ;
var index = options . index  |  |  100 ;:==:var watcher:==:imports . watcher ;
var width = context . canvas . width ;:==:var height:==:context . canvas . height ;
var content = contents [ i ] ;:==:var select:==:content . select ;
var pi = math . pi ;:==:var acos:==:math . acos ;
var margin = style & & resolveBoxStyle ( ' margin ' , style )  |  |  blank ;:==:var padding:==:style & & resolveBoxStyle ( ' padding ' , style )  |  |  blank ;
var clusterState = data . clusterState ;:==:var status:==:data . status ;
var w = gl . drawingBufferWidth ;:==:var h:==:gl . drawingBufferHeight ;
var List   = Immutable . List ;:==:var qs:==:require ( ' qs ' ) ;
var timers = require ( ' timers ' ) ;:==:var Buffer:==:require ( ' buffer ' ) . Buffer ;
var container = new Hilo . Container ( i d : ' container ' ) ;:==:var view:==:new Hilo . View ( i d : ' view ' ) ;
var scope = scopeChain [ i ] ;:==:var object:==:scope . object ( ) ;
var timeWindowLeft = this . _ timeWindowLeft - this . _ paddingLeftTime ;:==:var entryTotalTimes:==:timelineData . entryTotalTimes ;
var utils = _ this . utils ;:==:var error:==:utils . error ;
var menus = imports . menus ;:==:var Plugin:==:imports . Plugin ;
var lastIdealStyles = _ state . lastIdealStyles ;:==:var lastIdealVelocities:==:_ state . lastIdealVelocities ;
var container = properties . container ;:==:var renderType:==:properties . renderType |  | 'canvas ' ;
var IMPORT_DECLARATION = parseTreeType . import_declaration ;:==:var module_declaration:==:parseTreeType . module_declaration ;
var qs = require ( ' qs ' ) ;:==:var zlib:==:require ( ' zlib ' ) ;
var assert = require ( ' assert ' ) ;:==:var sqlString:==:common . sqlString ;
var options = this . options ;:==:var val:==:$ element . is ( ' input ' ) ? ' val ' : ' html ' ;
var a = rejectSoon ( ' rejected - a ' , 40 ) ;:==:var b:==:rejectThenableSoon ( ' rejected - b ' , 30 ) ;
var propagationPhases = eventConstants . propagationPhases ;:==:var getListener:==:eventPluginHub . getListener ;
var minimatch = require ( ' minimatch ' ) ;:==:var minimist:==:require ( ' minimist ' ) ;
var cordovaPopupNavigator = exports . cordovaPopupNavigator = _ _ webpack_require _ _ ( 341 ) ;:==:var cordovaiFrameNavigator:==:exports . cordovaiFrameNavigator    _ _ webpack_require _ _ ( 343 ) ;
var container = me . container . parentNode ;:==:var textarea:==:me . textarea ;
var lineDisplayTextAttribute = windows . devices . pointOfService . lineDisplayTextAttribute ;:==:var lineDisplayTextAttributeGranularity:==:windows . devices . pointOfService . lineDisplayTextAttributeGranularity ;
var key = ' key ' in opts ? opts . key : false ;:==:var descending:==:' descending ' in opts & & opts . descending ? ' prev ' : null ;
var chai = require ( ' chai ' ) ;:==:var should:==:chai . should ( ) ;
var through = require ( ' through2 ' ) ;:==:var duplexer:==:require ( ' duplexer ' ) ;
var istanbul    = require ( ' istanbul ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var appearClass = ref . appearClass ;:==:var appearToClass:==:ref . appearToClass ;
var PNG = require ( ' pngjs ' ) . PNG ;:==:var should:==:chai . should ( ) ;
var radius = options . radius  |  |  1 ;:==:var flat:==:( options . flat      undefined ) ? true : options . flat ;
var multer = require ( ' multer ' ) ;:==:var path:==:require ( ' path ' ) ;
var t = tk [ j ] ;:==:var m:==:q . match ( t . re ) ;
var supportType = exports . supportType = ' animation - fill - mode | alignment - adjust | alignment - baseline | animation - delay | animation - direction | animation - duration | animation - iteration - count | animation - name | animation - play - state | animation - timing - function | animation | appearance | azimuth | backface - visibility | background - attachment | background - break | background - clip | background - color | background - image | background - origin | background - position | background - repeat | background - size | background | baseline - shift | binding | bleed | bookmark - label | bookmark - level | bookmark - state | bookmark - target | border - bottom | border - bottom - color | border - bottom - left - radius | border - bottom - right - radius | border - bottom - style | border - bottom - width | border - collapse | border - color | border - image | border - image - outset | border - image - repeat | border - image - slice | border - image - source | border - image - width | border - left | border - left - color | border - left - style | border - left - width | border - radius | border - right | border - right - color | border - right - style | border - right - width | border - spacing | border - style | border - top | border - top - color | border - top - left - radius | border - top - right - radius | border - top - style | border - top - width | border - width | border | bottom | box - align | box - decoration - break | box - direction | box - flex - group | box - flex | box - lines | box - ordinal - group | box - orient | box - pack | box - shadow | box - sizing | break - after | break - before | break - inside | caption - side | clear | clip | color - profile | color | column - count | column - fill | column - gap | column - rule | column - rule - color | column - rule - style | column - rule - width | column - span | column - width | columns | content | counter - increment | counter - reset | crop | cue - after | cue - before | cue | cursor | direction | display | dominant - baseline | drop - initial - after - adjust | drop - initial - after - align | drop - initial - before - adjust | drop - initial - before - align | drop - initial - size | drop - initial - value | elevation | empty - cells | fit | fit - position | float - offset | float | font - family | font - size | font - size - adjust | font - stretch | font - style | font - variant | font - weight | font | grid - columns | grid - rows | hanging - punctuation | height | hyphenate - after | hyphenate - before | hyphenate - character | hyphenate - lines | hyphenate - resource | hyphens | icon | image - orientation | image - rendering | image - resolution | inline - box - align | left | letter - spacing | line - height | line - stacking - ruby | line - stacking - shift | line - stacking - strategy | line - stacking | list - style - image | list - style - position | list - style - type | list - style | margin - bottom | margin - left | margin - right | margin - top | margin | mark - after | mark - before | mark | marks | marquee - direction | marquee - play - count | marquee - speed | marquee - style | max - height | max - width | min - height | min - width | move - to | nav - down | nav - index | nav - left | nav - right | nav - up | opacity | orphans | outline - color | outline - offset | outline - style | outline - width | outline | overflow - style | overflow - x | overflow - y | overflow | padding - bottom | padding - left | padding - right | padding - top | padding | page - break - after | page - break - before | page - break - inside | page - policy | page | pause - after | pause - before | pause | perspective - origin | perspective | phonemes | pitch - range | pitch | play - during | pointer - events | position | presentation - level | punctuation - trim | quotes | rendering - intent | resize | rest - after | rest - before | rest | richness | right | rotation - point | rotation | ruby - align | ruby - overhang | ruby - position | ruby - span | size | speak - header | speak - numeral | speak - punctuation | speak | speech - rate | stress | string - set | table - layout | target - name | target - new | target - position | target | text - align - last | text - align | text - decoration | text - emphasis | text - height | text - indent | text - justify | text - outline | text - shadow | text - transform | text - wrap | top | transform - origin | transform - style | transform | transition - delay | transition - duration | transition - property | transition - timing - function | transition | unicode - bidi | vertical - align | visibility | voice - balance | voice - duration | voice - family | voice - pitch - range | voice - pitch | voice - rate | voice - stress | voice - volume | volume | white - space - collapse | white - space | widows | width | word - break | word - spacing | word - wrap | z - index ' ;:==:var supportFunction:==:exports . supportFunction    ' rgb | rgba | url | attr | counter | counters ' ;
var left = expr . left ? this . visit ( expr . left ) : null ;:==:var right:==:expr . right ? this . visit ( expr . right ) : null ;
var passport = imports . passport ;:==:var connect:==:imports . connect ;
var test    = require ( ' utest ' ) ;:==:var assert:==:common . assert ;
var getLookupTableFactory = sharedUtil . getLookupTableFactory ;:==:var warn:==:sharedUtil . warn ;
var edgeShortcutType = this . _ edgeShortcutType ;:==:var edgeWeakType:==:this . _ edgeWeakType ;
var canvas = this . canvas = this . data ;:==:var ctx:==:this . ctx    canvas . getContext ( ' 2d ' ) ;
var pageHidden = exports . pageHidden = false ;:==:var docModalCount:==:exports . docModalCount    0 ;
var literalToken = traceur . syntax . literalToken ;:==:var sourcePosition:==:traceur . util . sourcePosition ;
var stRotation = defaultValue ( options . stRotation , 0 . 0 ) ;:==:var height:==:defaultValue ( options . height , 0 . 0 ) ;
var sourceUri = options . sourceUri ;:==:var uriResolver:==:options . uriResolver ;
var ruby = createElement ( ' ruby ' ) ;:==:var rt:==:createElement ( ' rt ' ) ;
var events = require ( ' events ' ) ;:==:var log:==:require ( dirs . core + ' log ' ) ;
var gradientUtils = powerbi . visuals . gradientUtils ;:==:var colorHelper:==:powerbi . visuals . colorHelper ;
var stack = err . stack  |  |  message ;:==:var index:==:message ? stack . indexOf ( message ) : -1 ;
var x = vm . x ;:==:var y:==:vm . y ;
var matrix = object . matrixWorld ;:==:var me:==:matrix . elements ;
var common = fs . readFileSync ( path . join ( pubdir , ' common . js ' ) ) ;:==:var beep:==:fs . readFileSync ( path . join ( pubdir , ' beep . js ' ) ) ;
var methods = $ . extend ( , $ . validator . methods ) ;:==:var messages:==:$ . extend ( , $ . validator . messages ) ;
var b = this . beginValue ;:==:var f:==:this . finishValue ;
var isEOF = coreParser . iseof ;:==:var pdfImage:==:coreImage . pdfImage ;
var menuItem = imports . menuItem ;:==:var divider:==:imports . divider ;
var boundingSphere = boundingSphere . fromVertices ( cartesianVertices , cartesian3 . zero , 3 , boundingSphereScratch ) ;:==:var orientedBoundingBox:==:orientedBoundingBox . fromRectangle ( rectangle , minimumHeight , maximumHeight , ellipsoid , orientedBoundingBoxScratch ) ;
var createBlock = parseTreeFactory . createBlock ;:==:var createIfStatement:==:parseTreeFactory . createIfStatement ;
var rename = require ( ' gulp - rename ' ) ;:==:var sh:==:require ( ' shelljs ' ) ;
var slicePartitions = ellipsoidGeometry . _ slicePartitions ;:==:var subdivisions:==:ellipsoidGeometry . _ subdivisions ;
var uuid = require ( ' uuid ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' jsbin : flash ' ) ;
var type = accessor . type ;:==:var count:==:accessor . count ;
var sortBy = _ ref . sortBy ;:==:var sortDirection:==:_ ref . sortDirection ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var passwordFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' passwordFieldTestObject ' ) ) ;
var ctx = me . _ chart . ctx ;:==:var spanGaps:==:vm . spanGaps ;
var debug = utils . debug ;:==:var setComponentProperty:==:utils . entity . setComponentProperty ;
var cellGroupRenderer = _ props2 . cellGroupRenderer ;:==:var cellRenderer:==:_ props2 . cellRenderer ;
var hoveringItem = this . hoveringItem ;:==:var hoveredItem:==:this . hoveredItem ;
var theme = options . theme  |  |  ' default ' ;:==:var hue:==:options . hue  |  |  ' 800 ' ;
var cookie = require ( ' cookie ' ) ;:==:var tmp:==:require ( ' tmp ' ) ;
var appearance = this . appearance ;:==:var material:==:appearance . material ;
var quadraticAt = curveUtil . quadraticAt ;:==:var quadraticDerivativeAt:==:curveUtil . quadraticDerivativeAt ;
var coord = this . coord . build ( builder , ' v3 ' ) ;:==:var bias:==:this . bias ? this . bias . build ( builder , ' fv1 ' ) : undefined ;
var entry = document . createElement ( ' gui - menu - entry ' ) ;:==:var img:==:document . createElement ( ' img ' ) ;
var level = portal . options . level ;:==:var team:==:portal . options . team ;
var Size = goog . math . Size ;:==:var setBorderBoxSize:==:goog . style . setBorderBoxSize ;
var reactNativeStackInspector = require ( ' reactNativeStackInspector ' ) ;:==:var findNumericNodeHandle:==:require ( ' findNumericNodeHandleStack ' ) ;
var Image = require ( ' Image ' ) ;:==:var colorPropType:==:require ( ' colorPropType ' ) ;
var Double = powerbi . Double ;:==:var textMeasurementService:==:powerbi . textMeasurementService ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var text:==:require ( ' text ' ) ;
var conn = simslot . conn ;:==:var index:==:simslot . index ;
var titleColor = this . context . muiTheme . cardMedia . titleColor ;:==:var subtitleColor:==:this . context . muiTheme . cardMedia . subtitleColor ;
var resy = args [ ' resy ' ] ;:==:var distortion:==:args [ ' distortion ' ] ;
var vm = require ( ' vm ' ) ;:==:var backbone:==:require ( ' backbone ' ) ;
var canvas = this . gl . canvas ;:==:var gl:==:this . gl ;
var createStringLiteral = parseTreeFactory . createStringLiteral ;:==:var createTryStatement:==:parseTreeFactory . createTryStatement ;
var db = mandreel_indexedDB . db ;:==:var trans:==:db . transaction ( [ ' cache ' ] ) ;
var bower = require ( ' bower ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var newValue = context . newValue ;:==:var entityManager:==:entityAspect . entityManager ;
var O = Object ( this ) ;:==:var len:==:parseInt ( o . length )  |  |  0 ;
var edgeFieldsCount = this . _ edgeFieldsCount ;:==:var edgeWeakType:==:this . _ edgeWeakType ;
var b = model . bones [ i ] ;:==:var ik:==:b . ik ;
var keepCollapsedContent = _ props3 . keepCollapsedContent ;:==:var props:==:_ objectWithoutProperties ( _ props3 , [ ' springConfig ' , ' onHeightReady ' , ' onRest ' , ' isOpened ' , ' style ' , ' children ' , ' fixedHeight ' , ' keepCollapsedContent ' ] ) ;
var ax = this . ax + this . system . gx ;:==:var ay:==:this . ay + this . system . gy ;
var db = core . db ;:==:var store:==:core . storeFactory . get ( storeName ) ;
var firstRetainerIndex = this . _ firstRetainerIndex ;:==:var containmentEdges:==:this . containmentEdges ;
var val = parseInt ( this . $ input . val ( ) ) ;:==:var width:==:this . options . slider . width  |  |  200 ;
var current = $ . rwdrag . current ;:==:var data:==:$ . data ( current . el , ' pp - rwdrag ' ) ;
var row = this . _ grid . getOrCreateRow ( rowIndex ) ;:==:var column:==:this . _ grid . getOrCreateColumn ( columnIndex + this . _ columnLayoutManager . _ gridOffset ) ;
var burst = options . burst ;:==:var rate:==:options . rate ;
var axisLine = this . get ( ' axisLine ' ) ;:==:var axisTick:==:this . get ( ' axisTick ' ) ;
var console = imports . console ;:==:var commands:==:imports . commands ;
var simpleOrientation = windows . devices . sensors . simpleOrientation ;:==:var simpleOrientationSensor:==:windows . devices . sensors . simpleOrientationSensor ;
var y = xy . y  |  0 ;:==:var data:==:this . hitContext . getImageData ( x , y , 1 , 1 ) . data ;
var createStatementList = parseTreeFactory . createStatementList ;:==:var createAssignmentStatement:==:parseTreeFactory . createAssignmentStatement ;
var x = bounds . x ;:==:var y:==:bounds . y ;
var awaitGlobalException = testUtils . awaitGlobalException ;:==:var sinon:==:require ( ' sinon ' ) ;
var prompt = require ( ' gulp - prompt ' ) ;:==:var spawn:==:require ( ' spawn - local - bin ' ) ;
var subdivisions = options . subdivisions  |  |  w : 1 , h : 1 ;:==:var precision:==:options . precision  |  |  w : 1 , h : 1 ;
var htmlElement = scope . wrappers . htmlElement ;:==:var registerObject:==:scope . registerObject ;
var topRadius = cylinder . topRadius ;:==:var bottomRadius:==:cylinder . bottomRadius ;
var debug = require ( ' debug ' ) ( ' express : view ' ) ;:==:var path:==:require ( ' path ' ) ;
var path   = require ( ' path ' ) ;:==:var async:==:require ( ' async ' ) ;
var shapes = powerbi . visuals . shapes ;:==:var Rect:==:powerbi . visuals . shapes . Rect ;
var mockery = require ( ' mockery ' ) ;:==:var path:==:require ( ' path ' ) ;
var nativeMethodsMixin = require ( ' nativeMethodsMixin ' ) ;:==:var reactNativeAttributePayload:==:require ( ' reactNativeAttributePayload ' ) ;
var methodNotAllowedError = errors . methodNotAllowedError ;:==:var notAuthorizedError:==:errors . notAuthorizedError ;
var http = require ( ' http ' ) ;:==:var util:==:require ( ' util ' ) ;
var vm = require ( ' vm ' ) ;:==:var exists:==:fs . exists  |  |  require ( ' path ' ) . exists ;
var mnuWrapPrintMargin = handle . getElement ( ' mnuWrapPrintMargin ' ) ;:==:var wrap:==:editor . getOption ( ' wrap ' ) ;
var props = this . _ props ;:==:var keys:==:Object . keys ( data ) ;
var degToRad = three . math . degToRad ;:==:var warn:==:debug ( ' components : light : warn ' ) ;
var x1 = vertices [ index1 ] ;:==:var x2:==:vertices [ index2 ] ;
var NEW_EXPRESSION = ' NEW_EXPRESSION ' ;:==:var OBJECT_LITERAL_EXPRESSION:==:' OBJECT_LITERAL_EXPRESSION ' ;
var height = _ state . height ;:==:var width:==:_ state . width ;
var r = Ca . alpha * Ca . rgb . r + ( 1 - Ca . alpha ) * Cb . rgb . r ;:==:var g:==:Ca . alpha * Ca . rgb . g + ( 1 - Ca . alpha ) * Cb . rgb . g ;
var processingFlags = this . processingFlags ;:==:var contexts:==:this . contexts ;
var bottom = options . bottom  |  |  wall ;:==:var perPositionHeight:==:options . perPositionHeight ;
var Group = reactCanvas . group ;:==:var image:==:reactCanvas . image ;
var unusedIndexes = this . _ unusedIndexes ;:==:var length:==:unusedIndexes . length ;
var type = definition . type ;:==:var format:==:definition . format ;
var description = test . description ;:==:var hosts:==:test . hosts ;
var message = _ ref2 . message ;:==:var assert:==:_ ref2 . assert ;
var imagesPath = this . config . imagesPath ;:==:var config:==:this . config ;
var createRestParameter = parseTreeFactory . createRestParameter ;:==:var createSpreadExpression:==:parseTreeFactory . createSpreadExpression ;
var parseTreeVisitor = traceur . syntax . parseTreeVisitor ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var isInt = sharedUtil . isInt ;:==:var isNum:==:sharedUtil . isNum ;
var east = rectangle . east ;:==:var west:==:rectangle . west ;
var valueType = powerbi . valueType ;:==:var dateTimeSequence:==:powerbi . dateTimeSequence ;
var blueGrey600 = exports . blueGrey600 = ' # 546e7a ' ;:==:var blueGrey700:==:exports . blueGrey700    ' # 455a64 ' ;
var bodyReps = body . bodyReps ;:==:var len:==:bodyReps . length ;
var OPS = sharedUtil . ops ;:==:var textRenderingMode:==:sharedUtil . textRenderingMode ;
var parse = propertyTypes . selectorAll . parse ;:==:var stringify:==:propertyTypes . selectorAll . stringify ;
var browserify = require ( ' browserify ' ) ;:==:var path:==:require ( ' path ' ) ;
var editor = e . editor ;:==:var selection:==:editor . selection ;
var debounceCore = require ( ' debounceCore ' ) ;:==:var emptyFunction:==:require ( ' emptyFunction ' ) ;
var searchBy = data . searchBy  |  |  ' username ' ;:==:var page:==:data . page  |  |  1 ;
var PIXEL_SIZE_INDEX = pointPrimitive . pixel_size_index = 5 ;:==:var scale_by_distance_index:==:pointPrimitive . scale_by_distance_index    6 ;
var scope = args . scope  |  |  self ;:==:var query:==:args . query ;
var child_process = require ( ' child_process ' ) ;:==:var http:==:require ( ' http ' ) ;
var canvas = document . createElement ( ' canvas ' ) ;:==:var canvasHolder:==:document . getElementById ( ' canvasHolder ' ) ;
var edgeFieldsCount = this . _ edgeFieldsCount ;:==:var nodeEdgeCountOffset:==:this . _ nodeEdgeCountOffset ;
var $ q = self . _ $ q ;:==:var interceptors:==:self . _ interceptors & & self . _ interceptors [ type ]  |  |  [ ] ;
var forward = actionArgs . forward ;:==:var jumpList:==:vimGlobalState . jumpList ;
var repeat = actionArgs . repeat ;:==:var forward:==:actionArgs . forward ;
var Util = sharedUtil . util ;:==:var isArray:==:sharedUtil . isArray ;
var parameter = this . transformAny ( tree . parameter ) ;:==:var typeAnnotation:==:this . transformAny ( tree . typeAnnotation ) ;
var select = element . find ( ' md - select ' ) ;:==:var controller:==:element . controller ( ' mdInputContainer ' ) ;
var getUserConfirmation = options . getUserConfirmation ;:==:var keyLength:==:options . keyLength ;
var i d = this . i d ;:==:var scheduler:==:this . scheduler ;
var model = me . _ model ;:==:var start:==:me . _ start ;
var blueA100 = exports . blueA100 = ' # 82b1ff ' ;:==:var blueA200:==:exports . blueA200    ' # 448aff ' ;
var d = this . y . redMul ( p . y ) ;:==:var e:==:this . curve . d . redMul ( c ) . redMul ( d ) ;
var min = Math . min ( r , g , b ) ;:==:var max:==:Math . max ( r , g , b ) ;
var createCallExpression = parseTreeFactory . createCallExpression ;:==:var createFunctionExpression:==:parseTreeFactory . createFunctionExpression ;
var Readable = require ( ' stream ' ) . Readable ;:==:var util:==:require ( ' util ' ) ;
var pinv = s . pinv ;:==:var leftmost:==:s . leftmost ;
var toString = class2type . toString ;:==:var hasOwn:==:class2type . hasOwnProperty ;
var tool = workerTools [ _ i ] . tool ;:==:var name:==:workerTools [ _ i ] . name ;
var lat = content . getAttribute ( ' data - latitude ' )  |  |  defaultLat ;:==:var setZoom:==:content . getAttribute ( ' data - setZoom ' )  |  |  17 ;
var yellowA700 = exports . yellowA700 = ' # ffd600 ' ;:==:var amber50:==:exports . amber50    ' # fff8e1 ' ;
var south = Math . max ( rectangle . south , otherRectangle . south ) ;:==:var north:==:math . min ( rectangle . north , otherRectangle . north ) ;
var components = locations . components ;:==:var point:==:this . getElementsByTagNamens ( node , georssns , ' point ' ) ;
var each = zrUtil . each ;:==:var isObject:==:zrUtil . isObject ;
var mode = frameState . mode ;:==:var pass:==:frameState . passes ;
var p = this . el . up ( ' form ' )  |  |  Ext . getBody ( ) ;:==:var c:==:p . child ( ' input [ name ' ' + this . el . dom . name+ ' ' ] : checked ' , true ) ;
var assign = require ( ' object - assign ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var promise = enumerator . promise ;:==:var input:==:enumerator . _ input ;
var haveStatePropsBeenPrecalculated = this . haveStatePropsBeenPrecalculated ;:==:var statePropsPrecalculationError:==:this . statePropsPrecalculationError ;
var changes = this . _ changes ;:==:var change:==:changes [ changes . length - 1 ] ;
var POINTER_MOUSE = gestureDetector . pointer_mouse = ' mouse ' ;:==:var pointer_touch:==:gestureDetector . pointer_touch    ' touch ' ;
var bob = doc . getElement ( ' bob ' ) ;:==:var disappear:==:doc . getElement ( ' disappear ' ) ;
var dataLabelUtils = powerbi . visuals . dataLabelUtils ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var fs = require ( ' fs - extra ' ) ;:==:var postcss:==:require ( ' postcss ' ) ;
var changedObjects = this . _ changedObjects ;:==:var entity:==:updater . entity ;
var a = this . _ lastAlpha - this . _ alpha ;:==:var b:==:this . _ lastBeta - this . _ beta ;
var resolution = renderSession . resolution ;:==:var tx:==:( wt . tx * resolution ) + renderSession . shakex ;
var query = searchConfig . query ;:==:var currentMatchedRequestNode:==:this . _ currentMatchedRequestNode ;
var root = config . root ;:==:var context:==:config . context ;
var traits = group . traits ( ) ;:==:var user:==:this . analytics . user ( ) ;
var FOR_ON_STATEMENT = ' FOR_ON_STATEMENT ' ;:==:var FOR_STATEMENT:==:' FOR_STATEMENT ' ;
var plist = require ( ' plist ' ) ;:==:var util:==:require ( ' util ' ) ;
var port = state . port ;:==:var ddr:==:state . ddr ;
var isName = corePrimitives . isName ;:==:var isDict:==:corePrimitives . isDict ;
var two = document . getElementById ( ' two ' ) ;:==:var last:==:document . getElementById ( ' last ' ) ;
var aspectRatio = options . aspectRatio ;:==:var autoCropArea:==:number ( options . autoCropArea )  |  |  0 . 8 ;
var propertyMethodAssignment = traceur . syntax . trees . propertyMethodAssignment ;:==:var propertyNameAssignment:==:traceur . syntax . trees . propertyNameAssignment ;
var path = require ( ' path ' ) ;:==:var redis:==:config . redis ;
var Subscribable = require ( ' Subscribable ' ) ;:==:var textInputState:==:require ( ' textInputState ' ) ;
var node = stack . node ;:==:var index:==:stack . index++ ;
var movementX = event . movementX  |  |  event . mozMovementx  |  |  event . webkitMovementx  |  |  0 ;:==:var movementy:==:event . movementy  |  |  event . mozMovementy  |  |  event . webkitMovementy  |  |  0 ;
var video = document . createElement ( ' video ' ) ;:==:var button:==:document . createElement ( ' button ' ) ;
var digest = attachment . digest ;:==:var type:==:attachment . content_type ;
var width = image . width * image . pixelRatio ;:==:var height:==:image . height * image . pixelRatio ;
var decimalPlaces = $ . data ( this , ' numeric . decimalPlaces ' ) ;:==:var altDecimal:==:$ . data ( this , ' numeric . altDecimal ' ) ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var postfixExpression:==:traceur . syntax . trees . postfixExpression ;
var contact = evt . detail . contact ;:==:var isFavorite:==:evt . detail . isFavorite ;
var g = Math . round ( cpGlobal . hueTorgb ( p , q , tg ) * 255 ) ;:==:var b:==:math . round ( cpGlobal . hueTorgb ( p , q , tb ) * 255 ) ;
var locks = mockRequestWakeLock . locks ;:==:var lock:==:locks [ 0 ] ;
var IDENTITY_MATRIX = sharedUtil . identity_matrix ;:==:var imageKind:==:sharedUtil . imageKind ;
var editors = imports . editors ;:==:var layout:==:imports . layout ;
var indices = options . indices ;:==:var maximumIndex:==:options . maximumIndex ;
var canvas = document . createElement ( ' canvas ' ) ;:==:var gl:==:canvas . getContext ( ' webgl ' )  |  |  canvas . getContext ( ' experimental - webgl ' ) ;
var template = this . template ;:==:var webview:==:this . webview ;
var key = operation . key ;:==:var value:==:operation . value ;
var expect = require ( ' chai ' ) . expect ;:==:var path:==:require ( ' path ' ) ;
var scrollLeft = _ state . scrollLeft ;:==:var scrollTop:==:_ state . scrollTop ;
var max = data . max ;:==:var radi:==:data . radi ;
var siblings = this . siblings ;:==:var index:==:siblings . indexOf ( this ) ;
var assert = require ( ' assert ' ) ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var type = Math . floor ( Math . random ( ) * $ scope . types . length ) ;:==:var quote:==:Math . floor ( Math . random ( ) * $ scope . quotes . length ) ;
var w = n . getData ( ' width ' ) + siblingOffset ;:==:var h:==:n . getData ( ' height ' ) + siblingOffset ;
var createCharacterList = require ( ' createCharacterList ' ) ;:==:var encodeInlineStyleRanges:==:require ( ' encodeInlineStyleRanges ' ) ;
var framebufferyOffset = defaultValue ( options . framebufferyOffset , 0 ) ;:==:var width:==:defaultValue ( options . width , gl . drawingBufferWidth ) ;
var createNodeIterator = document . createNodeIterator ;:==:var getElementsByTagName:==:document . getElementsByTagName ;
var less = require ( ' gulp - less ' ) ;:==:var markdown:==:require ( ' gulp - markdown ' ) ;
var modal = options . modal ;:==:var zindex:==:options . zindex ;
var incomingForm = common . require ( ' incoming_form ' ) . incomingForm ;:==:var path:==:require ( ' path ' ) ;
var b = positionBlock . anchor . bottom ;:==:var r:==:positionBlock . anchor . right ;
var Name = corePrimitives . name ;:==:var isName:==:corePrimitives . isName ;
var update = program . update ;:==:var subscriptions:==:program . subscriptions ;
var X = Axis . X ;:==:var Y:==:Axis . Y ;
var sqrt = stdlib . Math . sqrt ;:==:var abs:==:stdlib . Math . abs ;
var color = dataViewObjects . getFillColor ( objects , mekkoChart . properties [ ' columnBorder ' ] [ ' color ' ] , mekkoChart . defaultSettings . columnBorder . color ) ;:==:var width:==:dataViewObjects . getValue ( objects , mekkoChart . properties [ ' columnBorder ' ] [ ' width ' ] , mekkoChart . defaultSettings . columnBorder . width ) ;
var db = app . dataSource ( ' db ' , connector : ' memory ' ) ;:==:var customer:==:app . registry . createModel ( ' customer ' , , base : ' user ' ) ;
var root = _ ref . root ;:==:var onChange:==:_ ref . onChange ;
var swipePanel = $ . smConfig . swipePanel ;:==:var swipePanelOnlyClose:==:$ . smConfig . swipePanelOnlyClose ;
var index = scope . $ index ;:==:var key:==:hasOwn ( scope , ' $ key ' ) & & scope . $ key ;
var fs = imports . fs ;:==:var c9:==:imports . c9 ;
var dotSizeMin = lineDotChart . defaultSettings . dotSizeMin ;:==:var dotSizeMax:==:lineDotChart . defaultSettings . dotSizeMax ;
var path = require ( ' path ' ) ;:==:var zipWriter:==:require ( ' moxie - zip ' ) . zipWriter ;
var slowAnimations = exports . layout . _ debugAnimations  |  |  exports . layout . _ slowAnimations ;:==:var site:==:this . _ site ;
var assert = require ( ' assert ' ) ;:==:var validator:==:require ( ' validator ' ) ;
var shader = this . shader ;:==:var samplers:==:shader . samplers ;
var Parser = cst . Parser ;:==:var sinon:==:require ( ' sinon ' ) ;
var west = rectangle . west ;:==:var south:==:rectangle . south ;
var execFile = require ( ' child_process ' ) . execFile ;:==:var path:==:require ( ' path ' ) ;
var suffix = this . helpers . suffix ;:==:var prefix:==:this . helpers . prefix ;
var bitsDecoded = this . bitsDecoded ;:==:var processingFlags:==:this . processingFlags ;
var pass = shadowMap . _ passes [ i ] ;:==:var framebuffer:==:pass . framebuffer ;
var cap    = options . cap ;:==:var cutoff:==:options . cutoff ;
var run = require ( ' run - sequence ' ) ;:==:var spawn:==:require ( ' spawn - local - bin ' ) ;
var outlineColor = property . getValueOrClonedDefault ( polygon . outlineColor , time , color . black , scratchColor ) ;:==:var outlineWidth:==:property . getValueOrDefault ( polygon . outlineWidth , time , 1 . 0 ) ;
var buffer = file_ids [ file_id ] . buffer ;:==:var byteArray:==:file_ids [ file_id ] . byteArray ;
var targetIndex = _ ref3 . targetIndex ;:==:var totalSize:==:_ ref3 . totalSize ;
var pwd = options . pwd  |  |  '' ;:==:var https:==:options . https ;
var vertices = mesh . vertices ;:==:var encoding:==:mesh . encoding ;
var red300 = exports . red300 = ' # e57373 ' ;:==:var red400:==:exports . red400    ' # ef5350 ' ;
var ace = imports . ace ;:==:var Menu:==:imports . Menu ;
var showContentAnimation = animation . showContentAnimation ;:==:var hideContentAnimation:==:animation . hideContentAnimation ;
var enabled = this . _ settings [ key + ' . enabled ' ] ;:==:var suspended:==:this . _ settings [ key + ' . suspended ' ] ;
var createDataViewScopeIdentity = powerbi . data . createDataViewScopeIdentity ;:==:var dataViewConcatenateCategoricalColumns:==:powerbi . data . dataViewConcatenateCategoricalColumns ;
var y = shape . cy ;:==:var r:==:shape . r ;
var eventTarget = scope . wrappers . eventTarget ;:==:var mixin:==:scope . mixin ;
var a = Object . getOwnPropertyDescriptor ( o , ' a ' ) . get ;:==:var b:==:object . getOwnPropertyDescriptor ( o , ' b ' ) . set ;
var baseTexture = texture . baseTexture ;:==:var gl:==:this . gl ;
var Style = require ( ' Style ' ) ;:==:var unicodeBidiDirection:==:require ( ' unicodeBidiDirection ' ) ;
var dirname = require ( ' path ' ) . dirname ;:==:var treeAsPane:==:options . treeAsPane ;
var add = stdlib . Atomics . add ;:==:var fround:==:stdlib . Math . fround ;
var React = require ( ' React ' ) ;:==:var View:==:require ( ' View ' ) ;
var li = document . createElement ( ' li ' ) ;:==:var button:==:document . createElement ( ' button ' ) ;
var granularity = polygon . granularity ;:==:var stRotation:==:polygon . stRotation ;
var pixelRatio = frameState . pixelRatio ;:==:var resolution:==:viewState . resolution ;
var value = element ( by . binding ( ' example . value  |  date : ' yyyy - MM - dd ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var lightGreena700 = exports . lightGreena700 = ' # 64dd17 ' ;:==:var lime50:==:exports . lime50    ' # f9fbe7 ' ;
var addedObjects = this . _ addedObjects ;:==:var added:==:addedObjects . values ;
var extend = require ( ' extend ' ) ;:==:var slug:==:require ( ' slug ' ) ;
var merge = require ( ' merge - stream ' ) ;:==:var plug:==:require ( ' gulp - load - plugins ' ) ( ) ;
var symbolSize = normalize ( itemModel . getShallow ( ' symbolSize ' , true ) ) ;:==:var opacity:==:itemModel . get ( opacityQuery ) ;
var el = this . $ element ;:==:var icon:==:el . getAttribute ( ' data - icon ' ) ;
var tileWidth = defaultValue ( options . tileWidth , 256 ) ;:==:var tileHeight:==:defaultValue ( options . tileHeight , 256 ) ;
var has_stree = desc . stat_desc . has_stree ;:==:var elems:==:desc . stat_desc . elems ;
var a = response [ ' a ' ] ;:==:var aInb:==:response [ ' aInb ' ] ;
var jTab = jTabs . eq ( iTabIndex ) ;:==:var jGroup:==:jGroups . eq ( iTabIndex ) ;
var dataViewObjects = powerbi . dataViewObjects ;:==:var valueFormatter:==:powerbi . visuals . valueFormatter ;
var source = document . _ _ source ;:==:var _ _ getUserInput:==:document . _ _ getUserInput  |  |  ( x   > x ) ;
var https = require ( ' https ' ) ;:==:var http:==:require ( ' http ' ) ;
var path = pathArray [ p ] ;:==:var l:==:path . length ;
var session = this . session ;:==:var size:==:this . $ size ;
var b = fulfillBuiltInSoon ( ' b ' , 30 ) ;:==:var c:==:fulfillBuiltInSoon ( ' c ' , 10 ) ;
var assert = sharedUtil . assert ;:==:var error:==:sharedUtil . error ;
var v = vertical [ i ] ;:==:var h:==:horizontal [ i ] ;
var translate = client . translate ;:==:var report_plugins:==:Nightscout . report_plugins ;
var x = this . x * 2 ;:==:var y:==:this . y * 2 ;
var nconf = require ( ' nconf ' ) ;:==:var templates:==:require ( ' templates . js ' ) ;
var breaks = self . options . breaks ;:==:var length:==:value . length ;
var data = JSON . parse ( e . data ) ;:==:var type:==:data . type ;
var length = nodes . length ;:==:var rootNode:==:dataGrid . rootNode ( ) ;
var collabPanel = imports . collabPanel ;:==:var c9:==:imports . c9 ;
var console = imports . console ;:==:var layout:==:imports . layout ;
var tangentPlane = options . tangentPlane ;:==:var ellipsoid:==:options . ellipsoid ;
var d = new blockNode ( [ node : new symbolNode ( ' x ' ) , node : new constantNode ( 2 ) , visible : false ] ) ;:==:var e:==:new blockNode ( [ node : new symbolNode ( ' x ' ) , node : new constantNode ( 2 ) , node : new constantNode ( 5 ) ] ) ;
var options = context . options [ 0 ] ;:==:var allowLoop:==:boolean ( options & & options . allowLoop ) ;
var singleChar = node . getAttribute ( ' singleChar ' ) ;:==:var esc:==:node . getAttribute ( ' escape ' ) ;
var Program = traceur . syntax . trees . Program ;:==:var propertyNameAssignment:==:traceur . syntax . trees . propertyNameAssignment ;
var receiver = this . _ receiverAt ( index ) ;:==:var promise:==:this . _ promiseAt ( index ) ;
var appName = options . appName  |  |  '' ;:==:var appKey:==:options . appKey  |  |  '' ;
var https = require ( ' https ' ) ;:==:var path:==:require ( ' path ' ) ;
var left = this . margin . left ;:==:var top:==:this . margin . top ;
var getAnimationDuration = powerbi . visuals . animatorCommon . getAnimationDuration ;:==:var legendIcon:==:powerbi . visuals . legendIcon ;
var initializer = this . transformAny ( tree . initializer ) ;:==:var condition:==:this . transformAny ( tree . condition ) ;
var current = diff . current ;:==:var stackedOnCurrent:==:diff . stackedOnCurrent ;
var exec = require ( ' child_process ' ) . exec ;:==:var fs:==:require ( ' fs ' ) ;
var icon = $ ( e . target ) . closest ( ' . k - window - action ' ) . find ( ' . k - icon ' ) ;:==:var action:==:this . _ actionForIcon ( icon ) ;
var ifClause = this . ensureTransformed _ ( result . ifClause ) ;:==:var elseClause:==:this . ensureTransformed _ ( result . elseClause ) ;
var second = getOption ( options , ' second ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;:==:var timeZoneName:==:getOption ( options , ' timeZoneName ' , ' string ' , [ ' short ' , ' long ' ] , undefined ) ;
var uuid = require ( ' hap - nodejs ' ) . uuid ;:==:var Accessory:==:require ( ' hap - nodejs ' ) . Accessory ;
var undoManager = firepad . undoManager ;:==:var textOperation:==:firepad . textOperation ;
var min = ' _ _ min _ _ ' = = ' _ _ ' + ' min _ _ ' ? false : ' _ _ min _ _ ' = = ' yes ' ;:==:var baseUrlOverride:==:localStorage . getItem ( ' togetherjs . baseUrlOverride ' ) ;
var _ memmove = Module [ ' _ memmove ' ] = asm [ ' _ memmove ' ] ;:==:var _ tolower:==:Module [ ' _ tolower ' ]    asm [ ' _ tolower ' ] ;
var cy = this . attribute ( ' cy ' ) . Length . toPixels ( ' y ' ) ;:==:var r:==:this . attribute ( ' r ' ) . length . toPixels ( ) ;
var promises = this . promises ;:==:var block:==:this . block ;
var extent = this . _ extent ;:==:var min:==:Math . min ( extent [ 0 ] , extent [ 1 ] ) ;
var packageConfigPath = config . packageConfigPaths [ i ] ;:==:var p:==:packageConfigPaths [ packageConfigPath ]  |  |  ( packageConfigPaths [ packageConfigPath ]    createPkgConfigPathObj ( packageConfigPath ) ) ;
var p = this . port ? ' : ' + this . port : '' ;:==:var h:==:this . hostname  |  |  '' ;
var kl = this . kl ;:==:var kr:==:this . kr ;
var toAddress = $ scope . toAddress ;:==:var description:==:$ scope . description ;
var initialTab = config . initialTab  |  |  0 ;:==:var parentElement:==:config . parentElement  |  |  null ;
var Connection   = loadClass ( ' connection ' ) ;:==:var connectionConfig:==:loadClass ( ' connectionConfig ' ) ;
var top = options . top  |  |  wall ;:==:var bottom:==:options . bottom  |  |  wall ;
var path = require ( ' path ' ) ;:==:var merge:==:require ( ' utils - merge ' ) ;
var x = translation . x ;:==:var y:==:translation . y ;
var lazy = ref . lazy ;:==:var trim:==:ref . trim ;
var dataZoomModel = this . dataZoomModel ;:==:var handleEnds:==:this . _ handleEnds ;
var username = identify . username ( ) ;:==:var email:==:identify . email ( ) ;
var children = _ props2 . children ;:==:var columnMaxWidth:==:_ props2 . columnMaxWidth ;
var month = this . $ headerTitle . attr ( ' data - month ' ) ;:==:var year:==:this . $ headerTitle . attr ( ' data - year ' ) ;
var React = require ( ' React ' ) ;:==:var assign:==:require ( ' object - assign ' ) ;
var option = new virtualElement ( ' option ' ) ;:==:var children:==:this . _ children ;
var r = rotation*Matrix2d . deg_to_rad ;:==:var cos:==:math . cos ( r ) ;
var tape = require ( ' tape ' ) ;:==:var request:==:require ( ' request ' ) ;
var font = font : ' 11px Arial ' , ' font - style ' : ' italic ' , opacity : 1 , ' fill ' : LABEL_COLOR , stroke : LABEL_COLOR , ' stroke - width ' : . 3 ;:==:var font:==:font : ' 11px Arial ' , opacity : 1 , ' fill ' : LABEL_COLOR ;
var options = _ props2 . options ;:==:var promptTextCreator:==:_ props2 . promptTextCreator ;
var description = $ scope . description ;:==:var unitToSatoshi:==:config . settings . unitToSatoshi ;
var ch = input . charAt ( nextCharIndex++ ) ;:==:var b:==:goog . crypt . base64 . charToByteMap _ [ ch ] ;
var container = option . container ;:==:var width:==:option . width ;
var nodeNativeType = this . _ nodeNativeType ;:==:var nodeFieldCount:==:this . _ nodeFieldCount ;
var timings = elementData . timings ;:==:var itemIndex:==:elementData . itemIndex ;
var groups = geometry . groups ;:==:var materials:==:material . materials ;
var wizardPage = imports . wizardPage ;:==:var ui:==:imports . ui ;
var uiManager = require ( ' uiManager ' ) ;:==:var assertEquals:==:require ( ' asserts ' ) . assertEquals ;
var sceneModePicker = viewer . _ sceneModePicker ;:==:var projectionPicker:==:viewer . _ projectionPicker ;
var l0 = intersectCapsule_l0 ;:==:var l1:==:intersectCapsule_l1 ;
var $ cells = that . $ cells = $ dataSpans . find ( ' td , th ' ) ;:==:var $ dataCells:==:that . $ dataCells    $ cells . filter ( ' td ' ) ;
var images = [ ' gulpfile . js ' ] . concat ( pkg . paths . images ) ;:==:var js:==:[ ' gulpfile . js ' ] . concat ( pkg . paths . js ) ;
var y = shape . y ;:==:var width:==:shape . width ;
var commands = imports . commands ;:==:var experimental:==:imports [ ' preferences . experimental ' ] ;
var merge = imports . threewaymerge ;:==:var Menu:==:imports . Menu ;
var meshInstance = model . meshInstances [ i ] ;:==:var mesh:==:meshInstance . mesh ;
var text = text_and_math [ 0 ] ;:==:var math:==:text_and_math [ 1 ] ;
var max = new Date ( range . max . valueOf ( ) + interval * 0 . 01 ) ;:==:var animation:==:( options & & options . animation !    undefined ) ? options . animation : true ;
var listView = that . listView ;:==:var key:==:e . keyCode ;
var clone = require ( ' clone ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var description = options . description  |  |  page . description  |  |  page . excerpt  |  |  content  |  |  config . description ;:==:var keywords:==:page . keywords  |  |  ( page . tags & & page . tags . length ? page . tags : undefined )  |  |  config . keywords ;
var zoomingOnVector = object . _ zoomingOnVector ;:==:var rotatingZoom:==:object . _ rotatingZoom ;
var h = mipData . height ;:==:var c:==:mipData . channels ;
var moduleAnalyzer = traceur . semantics . moduleAnalyzer ;:==:var moduleSymbol:==:traceur . semantics . symbols . moduleSymbol ;
var className = _ props . className ;:==:var disabled:==:_ props . disabled ;
var nodes = this . nodes _ ;:==:var node:==:nodes [ index ] ;
var gltf = model . gltf ;:==:var buffers:==:gltf . buffers ;
var switchState = traceur . codegeneration . generator . switchState ;:==:var switchClause:==:traceur . codegeneration . generator . switchClause ;
var jpxStream = coreStream . jpxStream ;:==:var lzwStream:==:coreStream . lzwStream ;
var Stream = coreStream . stream ;:==:var colorSpace:==:coreColorSpace . colorSpace ;
var showExpandableButton = _ props . showExpandableButton ;:==:var style:==:_ props . style ;
var code = req . query . code ;:==:var state:==:req . query . state ;
var start = moment ( now ) . clone ( ) . startOf ( ' hour ' ) . toDate ( ) ;:==:var end:==:moment ( now ) . clone ( ) . endOf ( ' hour ' ) . toDate ( ) ;
var Card = Parse . Object . extend ( ' Card ' ) ;:==:var House:==:Parse . Object . extend ( ' House ' ) ;
var spy = jasmine . createSpy ( ' $ watch spy ' ) ;:==:var digest:==:$ rootScope . $ digest ;
var key = options . key ;:==:var style:==:options . style ;
var maxButton = this . maxButton ;:==:var iconpos:==:this . iconpos ;
var brfs = require ( ' brfs ' ) ;:==:var ecstatic:==:require ( ' ecstatic ' ) ;
var width = this . _ image . width ;:==:var height:==:this . _ image . height ;
var face = faces [ i ] ;:==:var a:==:face [ 0 ] + indexOffset ;
var positions = wall . positions ;:==:var show:==:wall . show ;
var max = req . query . max  |  |  10 ;:==:var prefix:==:req . query . prefix  |  |  '' ;
var gltf = model . gltf ;:==:var skins:==:gltf . skins ;
var tan = stdlib . Math . tan ;:==:var exp:==:stdlib . Math . exp ;
var proxyquire = require ( ' proxyquire ' ) ;:==:var path:==:require ( ' path ' ) ;
var a = locations [ ai ] ;:==:var b:==:locations [ bi ] ;
var planePointToFrom = intersectplane_planepointtofrom ;:==:var dir_scaled_with_t:==:intersectplane_dir_scaled_with_t ;
var IF_STATEMENT = ' IF_STATEMENT ' ;:==:var IMPORT_CLAUSE_PAIR:==:' IMPORT_CLAUSE_PAIR ' ;
var p2pService = _ appJsServicesp2pService [ ' default ' ] ;:==:var wifiService:==:_ appJsServicesWifiService [ ' default ' ] ;
var radiusAxis = radiusAxisModel . axis ;:==:var polar:==:radiusAxis . polar ;
var takePicture = this . camera . mozCamera . takePicture ;:==:var resumePreview:==:this . camera . mozCamera . resumePreview ;
var offsets = this . _ offsets ;:==:var len:==:points . length ;
var height = state . parent . node . getAttribute ( ' height ' )  |  |  null ;:==:var width:==:state . parent . node . getAttribute ( ' width ' )  |  |  null ;
var timestamp = parseInt ( getData ( btn , ' data - timestamp ' ) , 10 ) ;:==:var postDeleteDuration:==:parseInt ( ajaxify . data . postDeleteDuration , 10 ) ;
var template = ref . template ;:==:var inject:==:ref . inject ;
var filename = options . filename ;:==:var imports:==:options . imports ;
var row = position . row ;:==:var width:==:Number ( viewModel . width ( ) ) ;
var c = Math . cos ( this . cookieAngle * pc . math . deg_to_rad ) ;:==:var s:==:math . sin ( this . cookieAngle * pc . math . deg_to_rad ) ;
var dynCall_iiiidd = Module [ ' dynCall_iiiidd ' ] = asm [ ' dynCall_iiiidd ' ] ;:==:var dynCall_vii:==:Module [ ' dynCall_vii ' ]    asm [ ' dynCall_vii ' ] ;
var Schema = mongoose . Schema ;:==:var assert:==:require ( ' power - assert ' ) ;
var origin = originator . element ;:==:var bounds:==:originator . bounds ;
var entities = this . _ entitiesToVisualize . values ;:==:var modelHash:==:this . _ modelHash ;
var app = detail . app ;:==:var manifest:==:app . manifest ? app . manifest : app . updateManifest ;
var fieldValue = this . props . fieldValue ;:==:var className:==:this . state . className ;
var error = sharedUtil . error ;:==:var stream:==:coreStream . stream ;
var o = mobx . observable ;:==:var value:==:mobx . value ;
var height = data . height ;:==:var aspectRatio:==:data . aspectRatio ;
var path = this . path ;:==:var router:==:this . router ;
var workspace = Blockly . Workspace . getById ( event . workspaceId ) ;:==:var block:==:workspace . getBlockById ( event . blockId ) ;
var delay = device . delay ;:==:var data:==:device . data . bind ( this ) ;
var send = $ scope . send ;:==:var recipient:==:send . recipient_address ;
var settings = imports . settings ;:==:var util:==:imports . util ;
var re = new regExp ( ' ^ ' + goog . string . regExpEscape ( prefix ) , ' i ' ) ;:==:var skip:==:opt_skip & & this . selectedElement _ ;
var error = logEntry . error ;:==:var took:==:logEntry . took ;
var b = new symbolNode ( ' b ' ) ;:==:var add:==:new operatorNode ( ' + ' , ' add ' , [ a , b ] ) ;
var stride = structure . stride ;:==:var elementsPerHeight:==:structure . elementsPerHeight ;
var b = this . b ;:==:var r1:==:this . r1 ;
var path = require ( ' path ' ) ;:==:var chai:==:require ( ' chai ' ) ;
var loc = core . locators . parseLocator _ ( locator ) ;:==:var win:==:opt_win  |  |  bot . getWindow ( ) ;
var context = this . context ;:==:var verticies:==:strip . verticies ;
var config = ( modelDesc  |  |  ) . config  |  |  ;:==:var adapter:==:config . adapter  |  |  ;
var configure = imports . configure ;:==:var settings:==:imports . settings ;
var whitelist = terms [ term ] . whitelist ;:==:var checkInTestFolder:==:terms [ term ] . checkInTestFolder ;
var digits = opts ( ' digitsAfterDecimal ' ) ;:==:var maxNumberWidth:==:opts ( ' maxNumberWidth ' ) ;
var asyncTestCase = asyncTestCase  |  |  testCase ;:==:var asyncConditionalTestCase:==:asyncConditionalTestCase  |  |  conditionalTestCase ;
var menus = imports . menus ;:==:var Menu:==:imports . Menu ;
var expect = chai . expect ;:==:var should:==:chai . should ;
var registerWrapper = scope . registerWrapper ;:==:var wrappers:==:scope . wrappers ;
var gl = painter . gl ;:==:var bufferGroups:==:bucket . bufferGroups . fill ;
var step = config . step ;:==:var preview:==:config . preview ;
var Person = db . model ( ' gh2562 ' , personSchema ) ;:==:var band:==:db . model ( ' gh2562_0 ' , bandSchema ) ;
var fs = require ( ' fs ' ) ;:==:var bump:==:require ( ' gulp - bump ' ) ;
var combineSeries = powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . combineSeries , trendLineHelper . defaults . combineSeries ) ;:==:var useHighlightValues:==:powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . useHighlightValues , trendLineHelper . defaults . useHighlightValues ) ;
var url = this . options . url ;:==:var serverData:==:this . _ application . _ serverData ;
var x = geometries [ j ] [ k ] . x ;:==:var y:==:geometries [ j ] [ k ] . y ;
var createConnection = mysql . createConnection ;:==:var createPool:==:mysql . createPool ;
var banner = container . querySelector ( ' . jasmine - banner ' ) ;:==:var title:==:banner . querySelector ( ' a . jasmine - title ' ) ;
var item = $ ( event . target ) . data ( ' item ' ) ;:==:var name:==:item . data ( ' name ' ) ;
var jbig2Stream = coreStream . jbig2Stream ;:==:var jpegStream:==:coreStream . jpegStream ;
var shape = _ react . propTypes . shape ;:==:var string:==:_ react . propTypes . string ;
var accumulate = require ( ' accumulate ' ) ;:==:var isStartish:==:eventPluginUtils . isStartish ;
var height = _ props . height ;:==:var noRowsRenderer:==:_ props . noRowsRenderer ;
var style = _ props . style ;:==:var className:==:_ props . className ;
var domFactory = inJs . domFactory ;:==:var dataViewObjectDefinitions:==:powerbi . data . dataViewObjectDefinitions ;
var html = pan . html ( ) ;:==:var st:==:pan [ 0 ] . style . cssText ;
var c = Math . cos ( angle ) ;:==:var s:==:-Math . sin ( angle ) ;
var now = goog . debug . Trace _ . now ( ) ;:==:var timeStamp:==:opt_timestamp ? opt_timestamp : now ;
var domMarkersPlugin = leafletHelpers . domMarkersPlugin ;:==:var safeApply:==:leafletHelpers . safeApply ;
var ctx = this . ctx ;:==:var current:==:this . current ;
var width = this . getPixels ( options . width ) ;:==:var height:==:this . getPixels ( options . height ) ;
var v = this . value ;:==:var s:==:scope [ v ] ;
var less = require ( ' gulp - less ' ) ;:==:var autoprefix:==:require ( ' less - plugin - autoprefix ' ) ;
var width = this . data . settings . popup . width ;:==:var height:==:this . data . settings . popup . height ;
var maybeWrapAsError = util . maybeWrapAsError ;:==:var canEvaluate:==:util . canEvaluate ;
var width = getScrollbarWidth . width ;:==:var doc:==:document ;
var bufferLength = this . bufferLength ;:==:var firstDigit:==:this . firstDigit ;
var angle = data . angle ;:==:var color:==:new THREE . Color ( data . color ) . getHex ( ) ;
var crossPageChannelRole = goog . net . xpc . crossPageChannelRole ;:==:var transportTypes:==:goog . net . xpc . transportTypes ;
var findLocaleId = closurei18nExtractor . findLocaleId ;:==:var extractNumberSymbols:==:closurei18nExtractor . extractNumberSymbols ;
var center = options . center ;:==:var ellipsoid:==:options . ellipsoid ;
var fill = require ( ' ndarray - fill ' ) ;:==:var ops:==:require ( ' ndarray - ops ' ) ;
var uiManager = require ( ' uiManager ' ) ;:==:var ensurePositiveDelayProps:==:require ( ' ensurePositiveDelayProps ' ) ;
var isObject = leafletHelpers . isObject ;:==:var helpers:==:leafletHelpers ;
var A = db . model ( ' A ' , name : String ) ;:==:var B:==:db . model ( ' B ' , other : Schema . objectId ) ;
var aspectRatio = options . aspectRatio ;:==:var container:==:this . container ;
var elementsPerHeight = structure . elementsPerHeight ;:==:var elementMultiplier:==:structure . elementMultiplier ;
var values = json . values ;:==:var animate:==:this . config . animate ;
var frame = imports [ ' window . frame ' ] ;:==:var preview:==:imports . preview ;
var dx5 = mxUtils . getValue ( this . style , ' dx5 ' , ' 0 ' ) ;:==:var dy5:==:mxUtils . getValue ( this . style , ' dy5 ' , ' 0 ' ) ;
var clean = require ( ' gulp - clean - css ' ) ;:==:var notify:==:require ( ' gulp - notify ' ) ;
var bunyan = require ( ' bunyan ' ) ;:==:var getopt:==:require ( ' posix - getopt ' ) ;
var key = current . keys [ l ] ;:==:var data:==:current . data [ key ] ;
var $ $ rAF = injector . get ( ' $ $ rAF ' ) ;:==:var $ window:==:injector . get ( ' $ window ' ) ;
var oModel = window . oModel ;:==:var createTables:==:window . createTables ;
var wtTable = this . hot . view . wt . wtTable ;:==:var scrollableElement:==:this . hot . view . wt . wtOverlays . scrollableElement ;
var property = context . property ;:==:var accessType:==:context . accessType ;
var nodes = this . nodes ;:==:var len:==:nodes . length ;
var match = this . matchDimen ( dim ) ;:==:var m:==:parseFloat ( match [ 1 ]  |  | '1 ' ) , unit    match [ 2 ] ;
var passwordFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' passwordFieldTestObject ' ) ) ;:==:var textFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;
var status = eventArgs . status ;:==:var error:==:eventArgs . error ;
var target = this . target ;:==:var scrollTop:==:target . scrollTop ;
var diff = macd . diff ;:==:var signal:==:macd . signal . result ;
var registerWrapper = scope . registerWrapper ;:==:var setTreeScope:==:scope . setTreeScope ;
var edge = ! ( options & & options . edge = = = false ) ;:==:var details:==:edge & & options & & options . details ;
var columnData = _ column$props . columnData ;:==:var dataKey:==:_ column$props . dataKey ;
var unselectable = this . props . selectRow . unselectable  |  |  [ ] ;:==:var isSelectRowDefined:==:this . _ isSelectRowDefined ( ) ;
var queue = source . queue ;:==:var scheduler:==:state . scheduler ;
var comprehensionTransformer = traceur . codegeneration . comprehensionTransformer ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var x = w * Text . H_OFFSETS [ this . textAlign |  | 'left ' ] ;:==:var lineHeight:==:this . lineHeight |  | this . getMeasuredLineHeight ( ) ;
var width = this . width , height = this . height ;:==:var coefficentsMagnitude:==:this . coefficentsMagnitude ;
var email = req . param ( ' email ' ) . trim ( ) ;:==:var key:==:req . param ( ' key ' ) ;
var backgroundBillboard = label . _ backgroundBillboard ;:==:var width:==:backgroundBillboard . width * scale ;
var tilingScheme = defined ( options . tilingScheme ) ? options . tilingScheme : new webMercatorTilingScheme ( ellipsoid : options . ellipsoid ) ;:==:var rectangle:==:defaultValue ( options . rectangle , tilingScheme . rectangle ) ;
var title = _ . trim ( req . body . title ) ;:==:var tab:==:_ . trim ( req . body . tab ) ;
var concat   = require ( ' gulp - concat ' ) ;:==:var header:==:require ( ' gulp - header ' ) ;
var rect = frame . rect ;:==:var sourceRect:==:frame . sourceRect ;
var debug = require ( ' debug ' ) ( ' socket . io - parser ' ) ;:==:var json:==:require ( ' json3 ' ) ;
var isElement = _ angular . isElement ;:==:var isString:==:_ angular . isString ;
var App = window . nwGui . app ;:==:var argv:==:app . argv ;
var url = require ( ' url ' ) ;:==:var http:==:require ( ' http ' ) ;
var keyBinding = lastAce . keyBinding ;:==:var selection:==:placeHolder . session . selection ;
var each = zrUtil . each ;:==:var map:==:zrUtil . map ;
var assign = require ( ' object - assign ' ) ;:==:var actionTypes:==:appConstants . actionTypes ;
var extend = require ( ' extend ' ) ;:==:var ccount:==:require ( ' ccount ' ) ;
var kind = this . kind ;:==:var value:==:this . value ;
var x = this . position . x ;:==:var y:==:this . position . y ;
var flows = config . flows ;:==:var credentials:==:config . credentials ;
var db = new PouchDB ( dbs . name ) ;:==:var docId:==:' docId ' ;
var scopeToPunc = helper . scopeToPunc ;:==:var hasOwnProp:==:object . prototype . hasOwnProperty ;
var toWorldPoint = orbitCameraInputTouch . toWorldPoint ;:==:var worldDiff:==:orbitCameraInputTouch . worldDiff ;
var cbr = this . _ cbr ;:==:var cx:==:cbr . cx , cy    cbr . cy , r    cbr . r ;
var tmp = require ( ' tmp ' ) ;:==:var path:==:require ( ' path ' ) ;
var offsetX = defaultValue ( options . offsetx , 0 ) ;:==:var offsety:==:defaultValue ( options . offsety , 0 ) ;
var reactUpdates = require ( ' reactUpdates ' ) ;:==:var finddomNode:==:require ( ' finddomNode ' ) ;
var kind = e . kind ;:==:var userid:==:e . remoteUser  |  |  e . userid ;
var request = require ( ' request ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var treeSelect = ' treeSelect ' + i d ;:==:var zTree:==:$ . fn . zTree . init ( $ ( ' # ' + treeSelect ) , setting , config . zNodes ) ;
var center = Matrix4 . multiplyByPoint ( model . modelMatrix , model . boundingSphere . center , new cartesian3 ( ) ) ;:==:var r:==:4 . 0 * math . max ( model . boundingSphere . radius , camera . frustum . near ) ;
var newOptionCreator = _ props . newOptionCreator ;:==:var onNewOptionClick:==:_ props . onNewOptionClick ;
var i = this . _ getNodeUnderMouse ( e ) ;:==:var gravity:==:this . vertical ? dojo . html . gravity . west : dojo . html . gravity . north ;
var TRUE    = C . TRUE    = 0x7 ;:==:var FALSE:==:C . FALSE      0x8 ;
var mangledNames = init . mangledNames ;:==:var mangledGlobalNames:==:init . mangledGlobalNames ;
var valueFormatter = powerbi . visuals . valueFormatter ;:==:var colorHelper:==:powerbi . visuals . colorHelper ;
var concat = require ( ' gulp - concat ' ) ;:==:var lazypipe:==:require ( ' lazypipe ' ) ;
var mediaList = this . _ mediaList ;:==:var mediaDefault:==:this . _ mediaDefault ;
var e = new Error ( ) ;:==:var stack:==:e . stack ;
var a = require ( ' a ' ) ;:==:var b:==:require ( ' b ' ) ;
var t = this ;:==:var currentTime:==:t . media . currentTime ;
var e = _ h_points [ _ point_index ] . elevation - self . elevation_offset ;:==:var d:==:google . maps . geometry . spherical . computeDistanceBetween ( _ h_points [ _ point_index ] . location , self . lookat ) ;
var root = options . root ;:==:var extname:==:options . extname ;
var assert = require ( ' assert ' ) ;:==:var clone:==:require ( ' clone ' ) ;
var left = leftPadding + leftPaddingAddition ;:==:var top:==:topPadding + topPaddingAddition ;
var path = require ( ' path ' ) ;:==:var forkCheckerPlugin:==:require ( ' awesome - typescript - loader ' ) . forkCheckerPlugin ;
var glob = require ( ' glob ' ) ;:==:var resolve:==:require ( ' resolve ' ) ;
var name = $ ( ' # new - alarm - name ' ) . val ( ) ;:==:var hour:==:parseInt ( $ ( ' # new - alarm - hour ' ) . val ( ) ) ;
var getUserColor = togetherjs . config . get ( ' getUserColor ' ) ;:==:var getUserAvatar:==:togetherjs . config . get ( ' getUserAvatar ' ) ;
var htmlContentElement = scope . wrappers . htmlContentElement ;:==:var node:==:scope . wrappers . node ;
var head = doc . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var script:==:doc . createElement ( ' script ' ) ;
var range = goog . editor . range . placeCursorNextTo ( node , true ) ;:==:var expose:==:goog . testing . dom . exposeNode ;
var cell = client . cells [ i ] ;:==:var angle:==:cell . position . angleTo ( client . mouse . x , client . mouse . y ) ;
var diff_match_patch = DMP . diff_match_patch ;:==:var DIFF_EQUAL:==:DMP . DIFF_EQUAL ;
var noteId = $ ( this ) . attr ( ' noteId ' ) ;:==:var note:==:note . getNote ( noteId ) ;
var entityName = model . entityNames . speaker ;:==:var logger:==:common . logger ;
var u = o . core . utils ;:==:var Runtime:==:o . runtime . Runtime ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var url:==:require ( ' url ' ) ;
var offset = $ element . offset ( ) ;:==:var left:==:offset . left ;
var ptr = A . _ ptr ;:==:var size:==:A . _ size ;
var max = Math . max ( Math . max ( r , g ) , b ) ;:==:var min:==:Math . min ( Math . min ( r , g ) , b ) ;
var start = getPositionByOffset ( startIndex ) ;:==:var end:==:getPositionByOffset ( endIndex ) ;
var toolbar    = this . toolbar ;:==:var settings:==:this . settings ;
var createBindingIdentifier = traceur . codegeneration . parseTreeFactory . createBindingIdentifier ;:==:var options:==:traceur . options . parse ;
var loadedImages = this . _ loadedImages ;:==:var length:==:loadedImages . length ;
var replace = require ( ' gulp - replace ' ) ;:==:var bump:==:require ( ' gulp - bump ' ) ;
var description = scenarioTest . description ;:==:var name:==:scenarioTest . operation . name ;
var x = options . x  |  |  100 ;:==:var y:==:options . y  |  |  100 ;
var mkdirp = Promise . promisify ( require ( ' mkdirp ' ) ) ;:==:var beautify:==:require ( ' js - beautify ' ) . js_beautify ;
var viewDate = scheduler . get ( ' viewDate ' ) ;:==:var displayDaysInterval:==:instance . get ( ' displayDaysInterval ' ) ;
var multilineTagIndentFactor = parserConfig . multilineTagIndentFactor  |  |  1 ;:==:var multilineTagIndentPastTag:==:parserConfig . multilineTagIndentPastTag  |  |  true ;
var isObject = _ vue$util . isObject ;:==:var addClass:==:_ vue$util . addClass ;
var tabManager = imports . tabManager ;:==:var commands:==:imports . commands ;
var OBJECT_TYPE = ' OBJECT_TYPE ' ;:==:var PAREN_EXPRESSION:==:' PAREN_EXPRESSION ' ;
var eventName = this . eventName ;:==:var selector:==:this . selector ;
var reactNativeComponentTree = require ( ' reactNativeComponentTree ' ) ;:==:var reactNativeInjection:==:require ( ' reactNativeInjection ' ) ;
var editor = e . editor ;:==:var ace:==:editor . ace ;
var bytesToString = sharedUtil . bytesToString ;:==:var string32:==:sharedUtil . string32 ;
var initScopeMetadata = utils . initScopeMetadata ;:==:var syntax:==:esprima . syntax ;
var bigNumber = math . type . bigNumber ;:==:var complex:==:math . type . complex ;
var login = imports . login ;:==:var info:==:imports . info ;
var moment = require ( ' moment ' ) ;:==:var adapter:==:config [ config . adapter ] ;
var Role = loopback . Role ;:==:var roleMapping:==:loopback . roleMapping ;
var Note = db . model ( ' noteWithStringId ' , noteSchema , random ( ) ) ;:==:var alice:==:new user ( _ i d : ' alice ' , name : ' alice ' ) ;
var merge = require ( ' merge - stream ' ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var c = checkCompiling . call ( this , schema , root , baseId ) ;:==:var compilation:==:this . _ compilations [ c . index ] ;
var dir = dirname ( partial ) ;:==:var base:==:basename ( partial , ext ) ;
var tabId = details . tabId ;:==:var url:==:details . url ;
var mssql = clients . mssql ;:==:var mysql:==:clients . mysql ;
var w = image . bitmap . width ;:==:var h:==:image . bitmap . height ;
var sin = stdlib . Math . sin ;:==:var tan:==:stdlib . Math . tan ;
var path = ' M ' + makepath ( xp , yp , gridline . smoothing ) ;:==:var el:==:d3 . select ( this ) ;
var path = require ( ' path ' ) ;:==:var exists:==:require ( ' fs ' ) . existsSync ;
var element = this . element ;:==:var value:==:this . value ( ) ;
var Node = scope . wrappers . Node ;:==:var mixin:==:scope . mixin ;
var settings = imports . settings ;:==:var metadata:==:imports . metadata ;
var fs = imports . fs ;:==:var navigate:==:imports . navigate ;
var pxSign = symbolMeta . pxSign ;:==:var i:==:index ;
var lastCameraView = this . _ lastCameraView ;:==:var camera:==:this . _ camera ;
var i d = getAttr ( edgeDom , ' i d ' ) ;:==:var label:==:getAttr ( edgeDom , ' label ' ) ;
var x = parseInt ( lasso . attr ( ' x ' ) ) ;:==:var y:==:parseInt ( lasso . attr ( ' y ' ) ) ;
var INTERFACE_DECLARATION = ' INTERFACE_DECLARATION ' ;:==:var JSX_ATTRIBUTE:==:' JSX_ATTRIBUTE ' ;
var Scope = debug . Scope ;:==:var url:==:require ( ' url ' ) ;
var typescript = require ( ' gulp - typescript ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var w = window . innerWidth  |  |  document . documentElement . clientWidth ;:==:var h:==:window . innerHeight  |  |  document . documentElement . clientHeight ;
var orange900 = exports . orange900 = ' # e65100 ' ;:==:var orangeA100:==:exports . orangeA100    ' # ffd180 ' ;
var b = df . appendChild ( document . createTextNode ( ' b ' ) ) ;:==:var c:==:df . appendChild ( document . createTextNode ( ' c ' ) ) ;
var triangle = this . triangles [ i ] ;:==:var d:==:triangle . intersect ( origin , dir , near , far ) ;
var x = eventData . x ;:==:var y:==:eventData . y ;
var p = $ . extend ( , params , config ) ;:==:var val:==:$ ( this ) . val ( ) ;
var right = shadowFrustum . right ;:==:var bottom:==:shadowFrustum . bottom ;
var min = Math . min ( minSize , 0 ) ;:==:var max:==:math . max ( maxSize , 0 ) ;
var scrollTop = _ state . scrollTop ;:==:var height:==:_ state . height ;
var hasStoreStateChanged = this . hasStoreStateChanged ;:==:var renderedElement:==:this . renderedElement ;
var type = node . type ;:==:var kind:==:node . kind ;
var logger = self . logger ;:==:var messaging:==:vAPI . messaging ;
var breeze = breezeConfig . breeze ;:==:var entityName:==:model . entityNames . session ;
var reactBrowserEventEmitter = require ( ' reactBrowserEventEmitter ' ) ;:==:var reactdomComponentFlags:==:require ( ' reactdomComponentFlags ' ) ;
var width = this . width = computeDimension ( context . canvas , ' width ' ) ;:==:var height:==:this . height    computeDimension ( context . canvas , ' height ' ) ;
var modifier = this . _ modifiers [ index ] ;:==:var state:==:this . _ states [ index ] ;
var q = $ q . defer ( ) ;:==:var navigate:==:appRate . navigateToAppStore ( ) ;
var index = event . detail . index ;:==:var item:==:event . detail . item ;
var path = require ( ' path ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var e = ' ' e ' ' ;:==:var f:==:' ' f ' ' ;
var f = objf . f ;:==:var fAsync:==:objf . fAsync ;
var http = require ( ' http ' ) ;:==:var express:==:require ( ' express ' ) ;
var builder = require ( ' botbuilder ' ) ;:==:var express:==:require ( ' express ' ) ;
var height = _ props7 . height ;:==:var isScrollingChange:==:_ props7 . isScrollingChange ;
var acsc = math . acsc ;:==:var csc:==:math . csc ;
var isArray = array . isArray ;:==:var isNumber:==:number . isNumber ;
var options = that . options ;:==:var data:==:that . dataSource . flatView ( ) ;
var metaKey = defaultValue ( options . metaKey , false ) ;:==:var wheelDelta:==:defaultValue ( options . wheelDelta , 0 ) ;
var stdin = FS . createDevice ( devFolder , ' stdin ' , input ) ;:==:var stdout:==:fs . createDevice ( devFolder , ' stdout ' , null , output ) ;
var t = b . translation ;:==:var q:==:b . quaternion ;
var label = ( feature . style & & feature . style . label ) ? feature . style . label : feature . i d ;:==:var name:==:feature . attributes . name  |  |  label ;
var predefinedName = traceur . syntax . predefinedName ;:==:var propertyMethodAssignment:==:traceur . syntax . trees . propertyMethodAssignment ;
var operator = tree . operator ;:==:var operand:==:tree . operand ;
var c = bucket . pop ( ) ;:==:var b:==:bucket . pop ( ) ;
var animation = animations [ animationId ] ;:==:var channels:==:animation . channels ;
var emptyFunction = require ( ' emptyFunction ' ) ;:==:var findRangesImmutable:==:require ( ' findRangesImmutable ' ) ;
var Debug = debug . Debug ;:==:var scopeType:==:debug . scopeType ;
var y = options . y  |  |  100 ;:==:var distance:==:options . distance  |  |  10 ;
var imdb_id = _ this . model . get ( ' imdb_id ' ) ;:==:var episodes:==:_ this . model . get ( ' episodes ' ) ;
var data = kendo . data ;:==:var keys:==:kendo . keys ;
var observable = this . transformAny ( tree . observable ) ;:==:var body:==:this . transformToBlockOrStatement ( tree . body ) ;
var isInt = sharedUtil . isInt ;:==:var isEmptyObj:==:sharedUtil . isEmptyObj ;
var width = Math . min ( frame . x + frame . width , otherFrame . x + otherFrame . width ) ;:==:var y:==:math . max ( frame . y , otherFrame . y ) ;
var clip = clips [ i ] ;:==:var e:==:clip . step ( time , delta ) ;
var value = _ ref . value ;:==:var subscriber:==:_ ref . subscriber ;
var dateTimeFormat = goog . require ( ' goog . i18n . dateTimeFormat ' ) ;:==:var datetimesymbols_ar:==:goog . require ( ' goog . i18n . datetimesymbols_ar ' ) ;
var iframe = document . getElementsByTagName ( ' iframe ' ) [ 0 ] ;:==:var name:==:iframe . name ;
var hLayout1 = new horizontalLayout ( ' hLayout1 ' ) ;:==:var hLayout2:==:new horizontalLayout ( ' hLayout2 ' ) ;
var attrs = this . attrs ;:==:var outputs:==:this . info . outputs ;
var source = new ol . source . Vector ( ) ;:==:var style:==:new ol . style . Style ( ) ;
var initializeHooks = _ _ initializeHooks ( sails ) ;:==:var checkGruntConfig:==:_ _ checkGruntConfig ( sails ) ;
var axes = this . _ axesMap ;:==:var dimensions:==:this . dimensions ;
var svgTag = svgTags [ i ] ;:==:var c:==:document . createElement ( ' canvas ' ) ;
var h = ( hue - Math . floor ( hue ) ) * 6 . 0 ;:==:var f:==:h - Math . floor ( h ) ;
var functionName = frame . functionName  |  |  ' ( anonymous ) ' ;:==:var url:==:frame . url ? frame . url : inspectorTest . _ scriptMap . get ( frame . location . scriptId ) . url ;
var noise = p5 . prototype . noise ;:==:var noiseSeed:==:p5 . prototype . noiseSeed ;
var postData   = method . postData ;:==:var toolbar:==:method . toolbar ;
var input = operation . input ;:==:var output:==:operation . output ;
var createBlock = parseTreeFactory . createBlock ;:==:var createVariableStatement:==:parseTreeFactory . createVariableStatement ;
var progressBar = require ( ' progressBarAndroid ' ) ;:==:var react:==:require ( ' react ' ) ;
var fs = require ( ' fs ' ) ;:==:var createServer:==:require ( ' http - server ' ) . createServer ;
var wrap = this . $ element [ 0 ] . querySelector ( ' md - chips - wrap ' ) ;:==:var chip:==:this . $ element [ 0 ] . querySelector ( ' md - chip [ index ' ' + index + ' ' ] ' ) ;
var east = Math . min ( rectangle1 . east , rectangle2 . east ) ;:==:var north:==:Math . min ( rectangle1 . north , rectangle2 . north ) ;
var saveResult = saveContext . saveResult ;:==:var entitiesWithErrors:==:saveResult . entitiesWithErrors ;
var obj = descriptor . object ;:==:var path:==:getPath ( descriptor . path ) ;
var fs = require ( ' fs ' ) ;:==:var regenerate:==:require ( ' regenerate ' ) ;
var valid = element ( by . binding ( ' myForm . namesInput . $ valid ' ) ) ;:==:var error:==:element ( by . css ( ' span . error ' ) ) ;
var settings = this . settings ;:==:var sort:==:settings . sortField ;
var redA400 = exports . redA400 = ' # ff1744 ' ;:==:var redA700:==:exports . redA700    ' # d50000 ' ;
var Cursor = firepad . Cursor ;:==:var textOperation:==:firepad . textOperation ;
var cpx1 = shape . cpx1 ;:==:var cpy1:==:shape . cpy1 ;
var semver = require ( ' semver ' ) ;:==:var exec:==:require ( ' shelljs ' ) . exec ;
var mode = group . mode ;:==:var value:==:group . value ;
var BINARY_OPERATORS = exports . BINARY_OPERATORS = [ ' + ' ] . concat ( NUMBER_BINARY_OPERATORS , BOOLEAN_BINARY_OPERATORS ) ;:==:var BOOLEAN_UNARY_OPERATORS:==:exports . BOOLEAN_UNARY_OPERATORS    [ ' delete ' , ' ! ' ] ;
var r = parseInt ( rgb [ 0 ] , 10 ) . toString ( 16 ) ;:==:var g:==:parseInt ( rgb [ 1 ] , 10 ) . toString ( 16 ) ;
var basedir = defined ( opts . basedir , self . _ options . basedir , process . cwd ( ) ) ;:==:var expose:==:opts . expose ;
var left = ast . left . visit ( this ) ;:==:var right:==:ast . right . visit ( this ) ;
var zmax = options . zmax  |  |  1 . 0 ;:==:var subdivisions:==:options . subdivisions  |  |  w : 1 , h : 1 ;
var hash = system . hash ( data ) ;:==:var sinon:==:this . sinon ;
var Schema = mongoose . Schema ;:==:var validatorError:==:mongoose . error . validatorError ;
var createMemberLookupExpression = traceur . codegeneration . parseTreeFactory . createMemberLookupExpression ;:==:var createNullLiteral:==:traceur . codegeneration . parseTreeFactory . createNullLiteral ;
var htmlparser   = require ( ' htmlparser2 ' ) ;:==:var exit:==:require ( ' exit ' ) ;
var reactNativeTagHandles = require ( ' reactNativeTagHandles ' ) ;:==:var reactMultiChild:==:require ( ' reactMultiChild ' ) ;
var file = input_attrs . file ;:==:var attrs:==:Dygraph . copyUserAttrs _ ( input_attrs ) ;
var eggs = _ getFormattedItemReference ( ' items . eggs ' , _ . keys ( content . eggs ) , ' numeric quantity ' ) ;:==:var hatchingPotions:==:_ getFormattedItemReference ( ' items . hatchingPotions ' , _ . keys ( content . hatchingPotions ) , ' numeric quantity ' ) ;
var children = lastState . children ;:==:var total:==:lastState . total ;
var activeClass = buttonConfig . activeClass  |  |  ' active ' ;:==:var toggleEvent:==:buttonConfig . toggleEvent  |  |  ' click ' ;
var Result = goog . result . Result ;:==:var simpleResult:==:goog . result . simpleResult ;
var date = forecast_day . date . split ( ' - ' ) ;:==:var day:==:days [ ( ( new Date ( ) . getDay ( ) + i ) % 7 ) ] ;
var fontStyle = helpers . getValueOrDefault ( pointLabelOptions . fontStyle , globalDefaults . defaultFontStyle ) ;:==:var fontFamily:==:helpers . getValueOrDefault ( pointLabelOptions . fontFamily , globalDefaults . defaultFontFamily ) ;
var getUpdatedSelectionState = require ( ' getUpdatedSelectionState ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var fontFamily = extractSingleFontFamily ( font . fontFamily ) ;:==:var fontSize:==:+ font . fontSize  |  |  12 ;
var net = require ( ' net ' ) ;:==:var tls:==:require ( ' tls ' ) ;
var info = this . props . info ;:==:var type:==:this . props . type ;
var isGeographic = defaultValue ( options . isGeographic , true ) ;:==:var ellipsoid:==:defaultValue ( options . ellipsoid , ellipsoid . wgs84 ) ;
var s = arguments [ 0 ] ;:==:var a:==:arguments ;
var fragmentedTracks = config . fragmentedTracks ;:==:var allTracksAreDisabled:==:config . allTracksAreDisabled ;
var pos1 = obj . pos1  |  |  [ 0,0,0 ] ;:==:var pos2:==:obj . pos2  |  |  [ 0,0,0 ] ;
var sgvdata = require ( ' sgvdata ' ) ;:==:var expand:==:require ( ' expand - braces ' ) ;
var l = $ ( target ) . offset ( ) . left+10 ;:==:var t:==:$ ( target ) . offset ( ) . bottom-10 ;
var skyAtmosphere = scene . skyAtmosphere ;:==:var globe:==:scene . globe ;
var M = date [ ' get ' + utc + ' Month ' ] ( ) + 1 ;:==:var d:==:date [ ' get ' + utc + ' Date ' ] ( ) ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var expect:==:require ( ' chai ' ) . expect ;
var upgradeDocumentTree = scope . upgradeDocumentTree ;:==:var upgrade:==:scope . upgrade ;
var git = require ( ' gulp - git ' ) ;:==:var gulp:==:require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;
var storage = this . _ _ storage ;:==:var children:==:this . _ children ;
var maxForce = ( typeof ( options . maxForce ) = = = ' undefined ' ? number . max_value : options . maxForce ) ;:==:var localAngleb:==:options . localAngleb  |  |  0 ;
var htmlDocument = imports . htmlDocument ;:==:var jsDocument:==:imports . jsDocument ;
var sideOrientation = ( options . sideOrientation = = = 0 ) ? 0 : options . sideOrientation  |  |  babylon . mesh . defaultside ;:==:var cap:==:options . cap  |  |  babylon . mesh . no_cap ;
var row = results . rows . item ( i ) ;:==:var data:==:JSON . parse ( row . data ) ;
var textOperation = firepad . textOperation ;:==:var client:==:firepad . client ;
var element = this . element , o = this . options ;:==:var parent:==:element . parent ( ) ;
var endpoint = service . endpoint ;:==:var region:==:service . config . region ;
var bindingRecord = proto . bindingRecord ;:==:var directiveRecord:==:bindingRecord . directiveRecord ;
var y = anchor . yCoordinate ;:==:var variationProcessor:==:this . font . _ variationProcessor ;
var second = parseInt ( kernings [ i ] . attributes . getNamedItem ( ' second ' ) . nodeValue , 10 ) ;:==:var amount:==:parseInt ( kernings [ i ] . attributes . getNamedItem ( ' amount ' ) . nodeValue , 10 ) ;
var initializer = this . transformAny ( tree . initializer ) ;:==:var collection:==:this . transformAny ( tree . collection ) ;
var categoryThickness = layout . categoryThickness ;:==:var isScalar:==:layout . isScalar ;
var frontFunction = stencilTest . frontFunction ;:==:var backFunction:==:stencilTest . backFunction ;
var https = require ( ' https ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var decimal = ( config . decimal = = = false ) ? ' ' : config . decimal  |  |  ' . ' ;:==:var altDecimal:==:( config . altDecimal      false ) ? ' ' : config . altDecimal  |  |  decimal ;
var polygonPool = this . polygonPool ;:==:var slots:==:skeleton . slots ;
var drawWidth = imageObj . drawWidth ;:==:var drawHeight:==:imageObj . drawHeight ;
var concat   = emptyArray . concat ;:==:var push:==:emptyArray . push ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var xtend:==:require ( ' xtend ' ) ;
var y = today . getFullYear ( ) ;:==:var d:==:today . getDate ( ) ;
var noSubsets = node . getAttribute ( ' noSubsets ' ) ;:==:var fixedWidth:==:node . getAttribute ( ' fixedWidth ' ) ;
var scrollCtrl = infiniteScrollCtrl . scrollCtrl = ctrls [ 0 ] ;:==:var jsScrolling:==:infiniteScrollCtrl . jsScrolling    ! scrollCtrl . isNative ( ) ;
var cacheFunctions = options [ ' cacheFunctions ' ] = = null ? false : options [ ' cacheFunctions ' ] ;:==:var cacheFunctionsCrc32:==:options [ ' cacheFunctionsCrc32 ' ]     null ? false : options [ ' cacheFunctionsCrc32 ' ] ;
var orient = this . _ orient ;:==:var inverse:==:this . visualMapModel . get ( ' inverse ' ) ;
var screenY = defaultValue ( options . screeny , 0 ) ;:==:var clientx:==:defaultValue ( options . clientx , 0 ) ;
var yellow50 = exports . yellow50 = ' # fffde7 ' ;:==:var yellow100:==:exports . yellow100    ' # fff9c4 ' ;
var beta = defaultValue ( options . beta , 0 . 0 ) ;:==:var gamma:==:defaultValue ( options . gamma , 0 . 0 ) ;
var css = obj . css ;:==:var sourceMap:==:obj . sourceMap ;
var d16 = _ addDiv ( ' d16 ' ) , d17 = _ addDiv ( ' d17 ' ) ;:==:var conn:==:_ jsPlumb . connect ( source : d16 , target : d17 , connector : [ ' bezier ' , curviness : 300 ] ) ;
var unescapeMd   = _ _ webpack_require _ _ ( 1023 ) . unescapeMd ;:==:var replaceEntities:==:_ _ webpack_require _ _ ( 1023 ) . replaceEntities ;
var exportSpecifierSet = traceur . syntax . trees . exportSpecifierSet ;:==:var expressionStatement:==:traceur . syntax . trees . expressionStatement ;
var Spec = reporters . Spec ;:==:var Base:==:reporters . Base ;
var worldNormal = intersectheightfield_worldnormal ;:==:var l0:==:intersectheightfield_l0 ;
var user = data & & data . userId & & workspace . getUser ( data . userId ) ;:==:var type:==:msg . type ;
var properties = metadata . properties = metadata . properties  |  |  ;:==:var property:==:properties [ propertyName ]    properties [ propertyName ]  |  |  ;
var event = track . event ( ) ;:==:var revenue:==:track . revenue ( ) ;
var store = new datastore ( tests . data . readOnlyItemFileTestTemplates . getTestData ( ' data_multitype ' ) ) ;:==:var d:==:new doh . deferred ( ) ;
var edgeShortcutType = this . _ edgeShortcutType ;:==:var edgeElementType:==:this . _ edgeElementType ;
var canvas = require ( ' canvas ' ) ;:==:var canvas:==:new canvas ( dim , dim ) ;
var action = message . action ;:==:var body:==:message . body ;
var white = Color . fromString ( ' white ' ) . toRgba ( ) ;:==:var maroon:==:color . fromString ( ' maroon ' ) . toRgba ( ) ;
var diameterZ = options . diameterZ  |  |  options . diameter  |  |  1 ;:==:var arc:==:( options . arc <   0  |  |  options . arc > 1 ) ? 1 . 0 : options . arc  |  |  1 . 0 ;
var Program = traceur . syntax . trees . Program ;:==:var tokenType:==:traceur . syntax . tokenType ;
var d1 = _ addDiv ( ' d1 ' , null , null , 0 , 0 , 500 , 500 ) ;:==:var d2:==:_ addDiv ( ' d2 ' , d1 , null , 200 , 200 , 50 , 50 ) ;
var root = config . root ;:==:var data:==:config . data ;
var layout = imports . layout ;:==:var c9:==:imports . c9 ;
var isArray = leafletHelpers . isArray ;:==:var isNumber:==:leafletHelpers . isNumber ;
var geometry = instance . geometry ;:==:var boundingSphere:==:geometry . boundingSphere ;
var green800 = exports . green800 = ' # 2e7d32 ' ;:==:var green900:==:exports . green900    ' # 1b5e20 ' ;
var current = formatTime ( e . currentTime ) ;:==:var duration:==:formatTime ( e . duration ) ;
var properties = action . properties ;:==:var propertiesResults:==:action . propertiesResults ;
var ctx = this . ctx ;:==:var width:==:img . width , height    img . height ;
var Image = require ( ' Image ' ) ;:==:var f8Touchable:==:require ( ' f8Touchable ' ) ;
var info = sharedUtil . info ;:==:var isNum:==:sharedUtil . isNum ;
var node = lookup . node ;:==:var mount:==:node . mounted ;
var unwrapIfNeeded = scope . unwrapIfNeeded ;:==:var wrap:==:scope . wrap ;
var createExpressionStatement = parseTreeFactory . createExpressionStatement ;:==:var createFunctionDeclaration:==:parseTreeFactory . createFunctionDeclaration ;
var undefsafe = require ( ' undefsafe ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var face = faces [ i ] ;:==:var normal:==:face . normal ;
var y = rect . y ;:==:var height:==:rect . height ;
var clearTimeout = global . clearTimeout ;:==:var clearInterval:==:global . clearInterval ;
var s1 = shape . s1 ;:==:var t0:==:shape . t0 ;
var hoist_funs = compressor . option ( ' hoist_funs ' ) ;:==:var hoist_vars:==:compressor . option ( ' hoist_vars ' ) ;
var model = this . model ;:==:var seriesIndex:==:model . get ( ' seriesIndex . ' + type ) ;
var success_message = props . success_message  |  |  ' Update Successfully ! ' ;:==:var fail_message:==:props . fail_message  |  |  ' Error occurred while updating . ' ;
var getLineInfo = _ . getLineInfo ;:==:var lineBreakg:==:_ . lineBreakg ;
var net = require ( ' net ' ) ;:==:var os:==:require ( ' os ' ) ;
var dx = e . detail . absolute . dx ;:==:var dy:==:e . detail . absolute . dy ;
var geometry = object . geometry ;:==:var material:==:object . material ;
var src = scriptTags [ i ] . src ;:==:var index:==:src . toLowerCase ( ) . indexOf ( scriptTagSrc ) ;
var after = test . after ;:==:var beforeEach:==:test . beforeEach ;
var M = this . MAX_TURN_SPEED ;:==:var dir:==:old . dir ;
var container = cc . game . container ;:==:var a:==:t . a * scaleX , b    t . b , c    t . c , d    t . d * scaleY ;
var limit = this . _ limit ;:==:var values:==:this . _ values ;
var tls = require ( ' tls ' ) ;:==:var http:==:require ( ' http ' ) ;
var scm = imports . scm ;:==:var layout:==:imports . layout ;
var artist = ( metadata . artist  |  |  '' ) . substr ( 0 , 64 ) ;:==:var album:==:( metadata . album  |  |  '' ) . substr ( 0 , 64 ) ;
var fixedDataTableCellGroup = require ( ' fixedDataTableCellGroup . react ' ) ;:==:var cx:==:require ( ' cx ' ) ;
var sh = require ( ' shelljs ' ) ;:==:var version:==:process . env . npm_package_version ;
var errorhandler = require ( ' errorhandler ' ) ;:==:var cors:==:require ( ' cors ' ) ;
var ignoreCase = configuration . ignoreCase  |  |  false ;:==:var callbacksLast:==:configuration . callbacksLast  |  |  false ;
var helper = this . helper ;:==:var form:==:this . getBoneTransform ( ) ;
var fontFamily = _ muiTheme . fontFamily ;:==:var palette:==:_ muiTheme . palette ;
var btn2 = document . getElementById ( ' btn2 ' ) ;:==:var btn3:==:document . getElementById ( ' btn3 ' ) ;
var isRtl = kendo . support . isRtl ( that . wrapper ) ;:==:var overflowWrapper:==:that . _ overflowWrapper ( ) ;
var assert = require ( ' chai ' ) . assert ;:==:var socket:==:require ( ' socket . io ' ) ;
var group = groups [ y ] ;:==:var col:==:filterCols ( cols , group ) [ 0 ] ;
var min = extremes . min ;:==:var max:==:extremes . max ;
var arrowFunctionExpression = traceur . syntax . trees . arrowFunctionExpression ;:==:var atNameDeclaration:==:traceur . syntax . trees . atNameDeclaration ;
var complete = this . _ completed . bind ( this ) ;:==:var error:==:this . _ error . bind ( this ) ;
var codeFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' codeFieldTestObject ' ) ) ;:==:var textFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;
var HAS_IOS_FULLSCREEN = exports . HAS_IOS_FULLSCREEN = hasiosFullScreen ;:==:var has_true_native_fullscreen:==:exports . has_true_native_fullscreen    hasTrueNativeFullScreen ;
var Timer = goog . require ( ' goog . Timer ' ) ;:==:var Replacer:==:goog . require ( ' goog . testing . propertyReplacer ' ) ;
var graph = ui . editor . graph ;:==:var div:==:document . createElement ( ' div ' ) ;
var n1 = e . n1 ;:==:var n2:==:e . n2 ;
var allClasses = init . allClasses ;:==:var hasOwnProperty:==:object . prototype . hasOwnProperty ;
var mixin = scope . mixin ;:==:var registerTransientObservers:==:scope . registerTransientObservers ;
var cleanInput = utilities . cleanInput ;:==:var isShiftHeld:==:utilities . isShiftHeld ;
var textStylePropTypes = require ( ' textStylePropTypes ' ) ;:==:var view:==:require ( ' view ' ) ;
var isValid = isValidPreview ( preview ) ;:==:var isBigEnough:==:isBigEnoughPreview ( preview ) ;
var i d = data . _ i d ;:==:var rev:==:data . _ rev ;
var bindThisParameter = traceur . syntax . trees . bindThisParameter ;:==:var bindingElement:==:traceur . syntax . trees . bindingElement ;
var warn = sharedUtil . warn ;:==:var ref:==:corePrimitives . ref ;
var sass    = require ( ' gulp - ruby - sass ' ) ;:==:var jshint:==:require ( ' gulp - jshint ' ) ;
var setInnerhtml = require ( ' setInnerhtml ' ) ;:==:var setTextContent:==:require ( ' setTextContent ' ) ;
var debug = require ( ' debug ' ) ( ' analytics : group ' ) ;:==:var inherit:==:require ( ' inherit ' ) ;
var request = require ( ' request ' ) ;:==:var nconf:==:require ( ' nconf ' ) ;
var dirname = path . dirname ( mainAppScript ) ;:==:var basename:==:path . basename ( mainAppScript ) ;
var newExpression = traceur . syntax . trees . newExpression ;:==:var objectLiteralExpression:==:traceur . syntax . trees . objectLiteralExpression ;
var node = observer . nodes _ [ i ] ;:==:var registrations:==:registrationsTable . get ( node ) ;
var edgeVector = spheretrimesh_edgevector ;:==:var edgeVectorUnit:==:spheretrimesh_edgevectorunit ;
var fields = method . fields ;:==:var toolbar:==:method . toolbar ;
var expressionStatement = traceur . syntax . trees . expressionStatement ;:==:var finally:==:traceur . syntax . trees . finally ;
var originApp = obj . originApp ;:==:var message:==:obj . message  |  |  '' ;
var password = $ ( ' # password ' ) ;:==:var repeat:==:$ ( ' # repeat ' ) ;
var Lexer = coreParser . lexer ;:==:var iseof:==:coreParser . iseof ;
var Plugin = imports . Plugin ;:==:var terminal:==:imports . terminal ;
var uriResolver = options . uriResolver ;:==:var context:==:options . context ;
var assert = require ( ' assert ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' loopback : middleware : token ' ) ;
var Globalization = Windows . Globalization ;:==:var Geolocation:==:Windows . Devices . Geolocation ;
var t = tValues [ ti ] ;:==:var s:==:sValues [ si ] ;
var key = subscription . key ;:==:var subscriptionsForType:==:this . _ subscriptionsForType [ eventType ] ;
var isArray = array . isArray ;:==:var once:==:require ( ' once ' ) ;
var shr64_lo = utils . shr64_lo ;:==:var sum64:==:utils . sum64 ;
var mixin = scope . mixin ;:==:var rewrap:==:scope . rewrap ;
var express = require ( ' express ' ) ;:==:var format:==:require ( ' util ' ) . format ;
var snaps = this . snaps ;:==:var length:==:snaps . length ;
var buffer = this . buffer ;:==:var bufferLength:==:this . bufferLength ;
var si = sideInfo . si ;:==:var data_bitlen:==:sideInfo . data_bitlen ;
var electron = require ( ' electron ' ) ;:==:var remote:==:electron . remote ;
var initRowActions = window . initRowActions ;:==:var setFocusOutsideOfTable:==:window . setFocusOutsideOfTable ;
var symbolDraw = this . _ symbolDraw ;:==:var polyline:==:this . _ polyline ;
var callbacksLast = configuration . callbacksLast  |  |  false ;:==:var shorthandFirst:==:configuration . shorthandFirst  |  |  false ;
var result = results [ resultIndex ] ;:==:var image:==:imageryLayers [ resultIndex ] ;
var scale = this . get ( ' scale ' ) ;:==:var axisLine:==:this . get ( ' axisLine ' ) ;
var btnPlay = document . getElementById ( ' btnPlay ' ) ;:==:var btnStop:==:document . getElementById ( ' btnStop ' ) ;
var majorLabels = options . majorLabels ;:==:var minorLabels:==:options . minorLabels ;
var x = Math . max ( 0 , pos . x ) ;:==:var y:==:Math . max ( 0 , pos . y ) ;
var port = req . port ;:==:var handler:==:handlers [ req . keyword ] ;
var chain = fx . chain ( anims ) ;:==:var length:==:anims . length ;
var log = Math . log ;:==:var LN10:==:Math . LN10 ;
var frame = this . _ frames [ this . _ index ] ;:==:var sc:==:frame . scale*this . _ scale ;
var att = attachment ;:==:var bone:==:slot . bone ;
var position = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . position , visuals . referenceLinePosition . front ) ;:==:var dataLabelShow:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . dataLabelShow , false ) ;
var n = readmpInt ( der , ' modulus ' ) ;:==:var e:==:readmpInt ( der , ' public exponent ' ) ;
var save = document . getElementById ( ' save ' ) ;:==:var header:==:document . getElementById ( ' header ' ) ;
var filename = options . filename ;:==:var cache:==:options . cache ;
var impulse = this . impulse ;:==:var options:==:this . options ;
var localDiff = diff . localDiff ;:==:var remoteDiff:==:diff . remoteDiff ;
var big = bigMath . sum ( [ ] ) ;:==:var frac:==:fracMath . sum ( [ ] ) ;
var i d = schema . options . i d ;:==:var keys:==:Object . keys ( schema . options ) ;
var container = parent [ 0 ] . querySelector ( ' . md - dialog - container ' ) ;:==:var dialog:==:angular . element ( container ) . find ( ' md - dialog ' ) ;
var frecords = $ ( ' # grid_'+ this . name + ' _ frecords ' ) ;:==:var scroll1:==:$ ( ' # grid_'+ this . name + ' _ scroll1 ' ) ;
var extname = require ( ' path ' ) . extname ;:==:var basename:==:require ( ' path ' ) . basename ;
var name = user . name  |  |  ' default ' ;:==:var d:==:'d blank ' ;
var x = elementPosition . x - videoPosition . x ;:==:var y:==:elementPosition . y - videoPosition . y ;
var has_webrtc    = zombie_array [ index ] [ ' has_webrtc ' ] ;:==:var has_activex:==:zombie_array [ index ] [ ' has_activex ' ] ;
var cardState = simCard & & simCard . cardState ;:==:var iccid:==:simCard & & simCard . iccInfo & & simCard . iccInfo . iccid ;
var x = current . end . x ;:==:var y:==:current . end . y ;
var httpSignatureError = utils . httpSignatureError ;:==:var invalidAlgorithmError:==:utils . invalidAlgorithmError ;
var table = editor . document . getElementsByTagName ( ' table ' ) [ 0 ] ;:==:var cell:==:table . rows [ 0 ] . cells [ 0 ] ;
var filter = typeof filter ! = = ' undefined ' ? filter : Array . prototype . filter ;:==:var trim:==:typeof trim !    ' undefined ' ? trim : String . prototype . trim ;
var url = this . _ workspace . urlForPath ( this . _ fileSystem . path ( ) , filePath ) ;:==:var extension:==:this . _ extensionForPath ( name ) ;
var beforeFirstParagraph = options . beforeFirstParagraph = = null ? beforeParagraph : options . beforeFirstParagraph ;:==:var afterLastParagraph:==:options . afterLastParagraph     null ? afterParagraph : options . afterLastParagraph ;
var aspectRatio = options . aspectRatio ;:==:var action:==:this . action ;
var availableField = event . currentTarget . getData ( ' availableField ' ) ;:==:var connector:==:instance . connector ;
var after = require ( ' after ' ) ;:==:var bind:==:require ( ' bind ' ) ;
var n = vrotate ( this . grv_n , a . rot ) ;:==:var d:==:vdot ( ta , n ) ;
var indent = options . indent ;:==:var lowercaseHex:==:options . lowercaseHex ;
var grunt = require ( ' grunt ' ) ;:==:var spawn:==:require ( ' npm - run ' ) . spawn ;
var source = parsed . source ;:==:var i d:==:parsed . i d ;
var diff = imagediff . diff ( oldImg , newImg ) ;:==:var canvas:==:document . createElement ( ' canvas ' ) ;
var Schema = mongoose . Schema ;:==:var co:==:require ( ' co ' ) ;
var dialog = dialogObject . element ;:==:var offset:==:dialogObject . wrapper . offset ( ) ;
var divisor = divisors [ i ] ;:==:var div:==:uint32Div ( divisor ) ;
var fs = require ( ' fs ' ) ;:==:var exists:==:fs . exists  |  |  path . exists ;
var recordingModule = require ( ' nativeModules ' ) . shareRecordingModule ;:==:var share:==:require ( ' share ' ) ;
var sfnt = this . sfnt ;:==:var tables:==:this . tables ;
var doc = node . ownerDocument . documentElement ;:==:var parent:==:node . parentNode ;
var makeIframe = helpers . makeIframe ;:==:var writeIframe:==:helpers . writeIframe ;
var d = new symbolNode ( 'd ' ) ;:==:var mult:==:new operatorNode ( ' * ' , ' multiply ' , [ a , b , c ] ) ;
var element = elements [ i ] ;:==:var parent:==:element . parentNode ;
var pos = symbol . position ;:==:var quadraticAt:==:curveUtil . quadraticAt ;
var path = route . overview_path ;:==:var legs:==:route . legs ;
var others = collisions [ guid ] . others ;:==:var length:==:others . length ;
var type = contentmmlNode . getAttribute ( ' type ' ) ;:==:var base:==:contentmmlNode . getAttribute ( ' base ' ) ;
var toString = object . prototype . toString ;:==:var slice:==:array . prototype . slice ;
var pie = this . pie ;:==:var key:==:this . key ;
var options = vm . $ options ;:==:var parent:==:options . parent ;
var w = Math . min ( rect . width , tintedImgCache [ 0 ] . width ) ;:==:var h:==:math . min ( rect . height , tintedImgCache [ 0 ] . height ) ;
var play = document . querySelector ( ' # ' + type + ' . play ' ) ;:==:var pause:==:document . querySelector ( ' # ' + type + ' . pause ' ) ;
var arrowHead = math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;:==:var rounded:==:mxUtils . getValue ( this . style , ' rounded ' , ' 0 ' ) ;
var header = require ( ' gulp - header ' ) ;:==:var istanbul:==:require ( ' gulp - istanbul ' ) ;
var scrollView = require ( ' scrollView ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var material = object . material ;:==:var face:==:intersection . face ;
var entities = require ( ' character - entities - html4 ' ) ;:==:var legacy:==:require ( ' character - entities - legacy ' ) ;
var createNumberLiteral = parseTreeFactory . createNumberLiteral ;:==:var createOperatorToken:==:parseTreeFactory . createOperatorToken ;
var APN_PROPERTIES = apnEditorConst . apn_properties ;:==:var value_converters:==:apnEditorConst . value_converters ;
var params = options . params , vars = options . vars , callBacks = options . callBacks ;:==:var properties:==:object . append ( height : options . height , width : options . width , options . properties ) ;
var tagName = goog . require ( ' goog . dom . tagName ' ) ;:==:var timer:==:goog . require ( ' goog . timer ' ) ;
var name = this . props . name ;:==:var callSig:==:this . props . callSig  |  |  ;
var scope = ( options & & options . scope )  |  |  el ;:==:var min:==:( options & & options . min )  |  |  300 ;
var Globalization = Windows . Globalization ;:==:var Calendar:==:Globalization . Calendar ;
var save = imports . save ;:==:var layout:==:imports . layout ;
var Panel = imports . Panel ;:==:var tabManager:==:imports . tabManager ;
var data = message . data  |  |  ;:==:var docId:==:data . docId  |  |  ' ' ;
var startButton = document . getElementById ( ' startButton ' ) ;:==:var callButton:==:document . getElementById ( ' callButton ' ) ;
var fs = require ( ' fs ' ) ;:==:var gulp:==:require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;
var lineNumber = callFrame . lineNumber ? callFrame . lineNumber - 1 : 0 ;:==:var columnNumber:==:callFrame . columnNumber ? callFrame . columnNumber - 1 : 0 ;
var editors = imports . editors ;:==:var tabManager:==:imports . tabManager ;
var condition = sfBuilderProvider . builders . condition ;:==:var array:==:sfBuilderProvider . builders . array ;
var transform = options . transform ;:==:var suffix:==:options . suffix  |  |  '' ;
var grey200 = exports . grey200 = ' # eeeeee ' ;:==:var grey300:==:exports . grey300    ' # e0e0e0 ' ;
var pkg = this . pkg ;:==:var context:==:this . context ;
var placement = $ attrs . popupPlacement ? $ attrs . popupPlacement : datepickerPopupConfig . placement ;:==:var position:==:$ position . positionElements ( $ element , dpElement , placement , appendToBody ) ;
var r = new testReader ( 5 ) ;:==:var w:==:[ new testWriter , new testWriter ] ;
var uiLocation = breakpointLocations [ i ] . uiLocation ;:==:var breakpoint:==:breakpointLocations [ i ] . breakpoint ;
var timestamp = + record . timestamp ;:==:var i d:==:record . i d ;
var Controller = _ componentsFxosMvcDistMvc . controller ;:==:var mainView:==:_ jsViewMainView [ ' default ' ] ;
var roles = Array . isArray ( options . roles ) ? options . roles : [ ] ;:==:var maxTimems:==:typeof options . maxTimems     ' number ' ? options . maxTimems : null ;
var autoprefixer = require ( ' autoprefixer ' ) ;:==:var noErrorsPlugin:==:webpack . noErrorsPlugin ;
var error = details . error ;:==:var advertisements:==:details . advertisements ;
var backgroundExecutionManager = windows . applicationModel . background . backgroundExecutionManager ;:==:var backgroundAccessStatus:==:windows . applicationModel . background . backgroundAccessStatus ;
var provider = this . provider ;:==:var graph:==:this . graph ;
var state = utils . retrieveIgnoreError ( ' gdrive . state ' ) ;:==:var userId:==:storage [ accountId + ' . userId ' ] ;
var user = document . getElementById ( ' wifi_user ' ) . value ;:==:var ssid:==:document . getElementById ( ' wifi_ssid ' ) . value ;
var item = this . props . itemGetter ( itemIndex , this . state . scrollTop ) ;:==:var itemHeight:==:this . props . itemHeightGetter ( ) ;
var defines = vs . defines . slice ( 0 ) ;:==:var sources:==:vs . sources . slice ( 0 ) ;
var vertices = this . vertices ;:==:var bones:==:this . bones ;
var fontSizeScale = current . fontSizeScale ;:==:var charSpacing:==:current . charSpacing ;
var parent = this . parent ;:==:var m:==:this . transform ;
var header = require ( ' gulp - header ' ) ;:==:var connect:==:require ( ' gulp - connect ' ) ;
var short = ppo . short . result ;:==:var long:==:ppo . long . result ;
var sinon = require ( ' sinon ' ) ;:==:var r:==:require ( ' redis ' ) ;
var abbrs = pomelo . data . abbrs ;:==:var route:==:msg . route ;
var destination = this . destination ;:==:var buffers:==:this . buffers ;
var c = Ti . UI . createView ( borderColor : ' # 133899',borderWidth : 6,borderRadius : 2,backgroundColor : ' red',width : 100,height : 100,top : 115,left : 40,name : ' view c ' ) ;:==:var d:==:ti . ui . createView ( borderColor : ' # 133899',borderWidth : 6,borderRadius : 2,backgroundColor : ' cyan',width : 100,height : 100,top : 220,name : ' view d ' ) ;
var Container = Hilo . Container ;:==:var Drawable:==:Hilo . Drawable ;
var visualDataRoleKind = powerbi . visualDataRoleKind ;:==:var legendPosition:==:powerbi . visuals . legendPosition ;
var min = ( options & & options . min )  |  |  300 ;:==:var instant:==:options & & options . instant ;
var geometry = object . geometry ;:==:var matrixWorld:==:object . matrixWorld ;
var hasVertexNormals = encoding . hasVertexNormals ;:==:var exaggeration:==:parameters . exaggeration ;
var text = Array ( actionArgs . repeat + 1 ) . join ( text ) ;:==:var linewise:==:register . linewise ;
var rimraf = require ( ' rimraf ' ) ;:==:var argv:==:require ( ' yargs ' ) . argv ;
var uri = test . uri ;:==:var valid:==:test . valid ;
var _ free = Module [ ' _ free ' ] = asm [ ' _ free ' ] ;:==:var _ realloc:==:Module [ ' _ realloc ' ]    asm [ ' _ realloc ' ] ;
var page = qb ( ) . from ( ' page ' ) . select ( ' i d ' ) . whereIn ( ' chapter_id ' , chain ) ;:==:var word:==:qb ( ) . from ( ' word ' ) . select ( ' i d ' ) . whereIn ( ' page_id ' , page ) ;
var w = win . width ( ) - widthOffset ;:==:var h:==:win . height ( ) - heightOffset ;
var r1 = con . r1 ;:==:var r2:==:con . r2 ;
var start = token . loc . start . line ;:==:var end:==:token . loc . end . line ;
var useOIT = environmentState . useoit ;:==:var usefxaa:==:environmentState . usefxaa ;
var xScale = axisOptions . xScale ;:==:var yScale:==:axisOptions . yScale ;
var el = elements [ x ] ;:==:var parent:==:el . parentNode ;
var x = Math . cos ( radian ) * radius + this . cx ;:==:var y:==:-Math . sin ( radian ) * radius + this . cy ;
var sets = params . sets ;:==:var start:==:params . hasOwnProperty ( ' start ' ) ? params . start : 0 ;
var eventPropagators = require ( ' eventPropagators ' ) ;:==:var syntheticuiEvent:==:require ( ' syntheticuiEvent ' ) ;
var createIdentifierToken = parseTreeFactory . createIdentifierToken ;:==:var createMemberExpression:==:parseTreeFactory . createMemberExpression ;
var format = require ( ' util ' ) . format ;:==:var fs:==:require ( ' fs ' ) ;
var from = cn [ ' from ' ] ;:==:var to:==:cn [ ' to ' ] ;
var name = uniform . name ;:==:var type:==:uniform . info . type ;
var locals = angular . extend ( , options . locals ) ;:==:var transformTemplate:==:options . transformTemplate  |  |  angular . identity ;
var tls    = require ( ' tls ' ) ;:==:var Packets:==:common . Packets ;
var sum64_lo = utils . sum64_lo ;:==:var sum64_4_hi:==:utils . sum64_4_hi ;
var variableBinder = traceur . semantics . variableBinder ;:==:var variablesInFunction:==:variableBinder . variablesInFunction ;
var CANCEL = sym ( ' CANCEL_PROMISE ' ) ;:==:var SAGA_ACTION:==:sym ( ' SAGA_ACTION ' ) ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var connect:==:require ( ' react - redux ' ) ;
var sass   = require ( ' gulp - sass ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var givenName = ( contact . givenName & & contact . givenName [ 0 ] )  |  |  '' ;:==:var familyName:==:( contact . familyName & & contact . familyName [ 0 ] )  |  |  '' ;
var aoa = aoasht [ 0 ] , ws = aoasht [ 1 ] ;:==:var o:==:aoa_to_sheet ( aoa , opts ) ;
var type = data . type ;:==:var lineWidth:==:data . lineWidth ;
var screenSpaceCameraController = scene . screenSpaceCameraController ;:==:var enableCollisionDetection:==:screenSpaceCameraController . enableCollisionDetection ;
var section = e . section ;:==:var row:==:e . row ;
var options = this . options ;:==:var dampingRatio:==:options . dampingRatio ;
var out = doc . outputStr ( ) ;:==:var fs:==:require ( ' fs ' ) ;
var example = examples [ i ] ;:==:var pos:==:cm . posFromIndex ( example . index ) ;
var yellow500 = exports . yellow500 = ' # ffeb3b ' ;:==:var yellow600:==:exports . yellow600    ' # fdd835 ' ;
var merge = PouchDB . utils . merge ;:==:var winningRev:==:pouchdb . utils . winningRev ;
var xunits = node . getAttribute ( ' xunits ' ) ;:==:var yunits:==:node . getAttribute ( ' yunits ' ) ;
var _ testSetjmp = module [ ' _ testSetjmp ' ] = asm [ ' _ testSetjmp ' ] ;:==:var _ i64Subtract:==:module [ ' _ i64Subtract ' ]    asm [ ' _ i64Subtract ' ] ;
var rows = session . term . rows ;:==:var cols:==:session . term . cols ;
var createPromise = parseTreeFactory . createPromise ;:==:var createReturnStatement:==:parseTreeFactory . createReturnStatement ;
var keys = Object . keys ( obj ) ;:==:var len:==:keys . length ;
var element = self . element = scrollViewOptions . el ;:==:var $ element:==:self . $ element    jqLite ( element ) ;
var url = this . find ( ' [ data - url ] ' ) . val ( ) ;:==:var alt:==:this . find ( ' [ data - alt ] ' ) . val ( ) ;
var href = window . location . href ;:==:var hash:==:window . location . hash ;
var isDefined = leafletHelpers . isDefined ;:==:var isArray:==:leafletHelpers . isArray ;
var cron = crons [ i ] ;:==:var i d:==:parseInt ( cron . i d ) ;
var Switch = require ( ' Switch ' ) ;:==:var toolbarAndroid:==:require ( ' toolbarAndroid ' ) ;
var constraints = http . get [ 0 ] . constraints ;:==:var allowedValues:==:constraints . getEncoding . allowedValues ;
var eventElementHandlers = t . eventElementHandlers ;:==:var setHeight:==:t . setHeight ;
var w = window . innerWidth ;:==:var h:==:window . innerHeight ;
var viewport = Crafty . viewport ;:==:var options:==:this . options ;
var prepareStyles = props . muiTheme . prepareStyles ;:==:var style:==:props . style ;
var paused = element . paused ;:==:var shouldAnimate:==:clock . shouldAnimate ;
var markers = parseMarkersOption ( config [ type ] & & config [ type ] . markers  |  |  config . markers ) ;:==:var exceptions:==:config [ type ] & & config [ type ] . exceptions  |  |  config . exceptions  |  |  [ ] ;
var blueGrey300 = exports . blueGrey300 = ' # 90a4ae ' ;:==:var blueGrey400:==:exports . blueGrey400    ' # 78909c ' ;
var missingDataException = sharedUtil . missingDataException ;:==:var assert:==:sharedUtil . assert ;
var count = this . count + = 1 ;:==:var destination:==:this . destination ;
var entityKey = result . entityKey ;:==:var fromCache:==:result . fromCache ;
var provider = this . tree . provider ;:==:var columns:==:provider . columns ;
var sp = col . cellFilter . split ( ' : ' ) ;:==:var filter:==:col . cellFilter ? $ filter ( sp [ 0 ] ) : null ;
var surface = effect . profile . surfaces [ sampler . source ] ;:==:var texture:==:textureLoader . load ( getImage ( surface . init_from ) ) ;
var uuid = li . dataset . uuid ;:==:var el:==:li . querySelector ( ' input ' ) ;
var reactNativePropRegistry = require ( ' reactNativePropRegistry ' ) ;:==:var reactNativeStyleAttributes:==:require ( ' reactNativeStyleAttributes ' ) ;
var programInterface = programInterfaces [ programName ] ;:==:var paintVertexArrayTypes:==:options . paintVertexArrayTypes [ programName ] ;
var tildify = require ( ' tildify ' ) ;:==:var commander:==:require ( ' commander ' ) ;
var reactNodeTypes = require ( ' reactNodeTypes ' ) ;:==:var reactReconciler:==:require ( ' reactReconciler ' ) ;
var pageX = touches ? touches [ 0 ] . pageX : e . pageX ;:==:var pageY:==:touches ? touches [ 0 ] . pageY : e . pageY ;
var TYPE_NAME = ' TYPE_NAME ' ;:==:var TYPE_PARAMETER:==:' TYPE_PARAMETER ' ;
var webdriver = require ( ' selenium - webdriver ' ) ;:==:var async:==:require ( ' async ' ) ;
var position = entity . position ;:==:var radii:==:ellipsoid . radii ;
var actual = Cartesian3 . fromArray ( actualTangents , i ) ;:==:var expected:==:cartesian3 . fromArray ( expectedTangents , i ) ;
var name = this . name ;:==:var labelContainer:==:this . labelContainer ;
var transform = context . transform ;:==:var opacity:==:context . opacity ;
var sourceIndex = node . sourceIndex ;:==:var subIndex:==:node . subIndex ;
var peerConnection = w . mozrtcPeerConnection  |  |  w . webkitrtcPeerConnection ;:==:var sessionDescription:==:w . mozrtcSessionDescription  |  |  w . rtcSessionDescription ;
var readUint32 = sharedUtil . readUint32 ;:==:var warn:==:sharedUtil . warn ;
var short = ppo . short . result ;:==:var macd:==:ppo . macd ;
var outputName = metadata . outputName  |  |  metadata . sourceName  |  |  ' < loaderOutput > ' ;:==:var sourceRoot:==:metadata . sourceRoot ;
var scrollToRow = props . scrollToRow ;:==:var scrollTop:==:state . scrollTop ;
var disabledTextColor = _ context$muiTheme$tex . disabledTextColor ;:==:var backgroundColor:==:_ context$muiTheme$tex . backgroundColor ;
var end = obj . endDate . valueOf ( ) ;:==:var start:==:obj . startDate . valueOf ( ) ;
var slicePartitions = property . getValueOrUndefined ( ellipsoid . slicePartitions , time ) ;:==:var subdivisions:==:property . getValueOrUndefined ( ellipsoid . subdivisions , time ) ;
var deepPurple800 = exports . deepPurple800 = ' # 4527a0 ' ;:==:var deepPurple900:==:exports . deepPurple900    ' # 311b92 ' ;
var item = this . linegraph . groups [ groupId ] . itemsData [ i ] ;:==:var value:==:util . convert ( item . x , ' date ' ) . valueOf ( ) ;
var area_coords = self . calculate_overlapped_area_coords ( player_coords , collider_coords ) ;:==:var area:==:self . calculate_overlapped_area ( area_coords ) ;
var glob = Promise . promisify ( require ( ' glob ' ) ) ;:==:var path:==:require ( ' path ' ) ;
var createVariableStatement = parseTreeFactory . createVariableStatement ;:==:var createVoid0:==:parseTreeFactory . createVoid0 ;
var extensions = this . extensions ;:==:var options:==:this . options ;
var ONEAVGMONTH = constants . ONEAVGMONTH ;:==:var ONEDAY:==:constants . ONEDAY ;
var vectorContext = event . vectorContext ;:==:var frameState:==:event . frameState ;
var parameterList = this . transformAny ( tree . parameterList ) ;:==:var returnType:==:this . transformAny ( tree . returnType ) ;
var north = rectangle . north ;:==:var ellipsoid:==:Ellipsoid . clone ( parameters . ellipsoid ) ;
var order = options . order  |  |  ' preorder ' ;:==:var children:==:this [ options . attr  |  |  ' children ' ] ;
var fs = require ( ' fs ' ) ;:==:var mustache:==:require ( ' mustache ' ) ;
var tilelat = tileLayout . tilelat ;:==:var startcol:==:tileLayout . startcol ;
var bundle = ' bundle ' in argv ;:==:var minify:==:' minify ' in argv ;
var format = require ( ' util ' ) . format ;:==:var join:==:require ( ' path ' ) . join ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var async:==:require ( ' asyncjs ' ) ;
var reactEventEmitterMixin = require ( ' reactEventEmitterMixin ' ) ;:==:var reactNativeComponentTree:==:require ( ' reactNativeComponentTree ' ) ;
var importBinding = traceur . syntax . trees . importBinding ;:==:var importDeclaration:==:traceur . syntax . trees . importDeclaration ;
var F32 = new primitiveType ( ' f32 ' , 4 , ' f ' ) ;:==:var f64:==:new primitiveType ( ' f64 ' , 8 , 'd ' ) ;
var leaveActiveClass = ref . leaveActiveClass ;:==:var beforeLeave:==:ref . beforeLeave ;
var nextPage = topics [ catid ] . nextPage ;:==:var hasNextPage:==:topics [ catid ] . hasNextPage ;
var POSITION_INDEX = pointPrimitive . position_index = 1 ;:==:var color_index:==:pointPrimitive . color_index    2 ;
var h = size . height ;:==:var r:==:this . roundRadius ;
var V = SAT . Vector ;:==:var C:==:SAT . Circle ;
var path = options . path ;:==:var args:==:options . args ;
var refreshMode = queryStringValue ( iconNode , ' refreshMode ' , namespaces . kml ) ;:==:var viewRefreshMode:==:queryStringValue ( iconNode , ' viewRefreshMode ' , namespaces . kml ) ;
var shell = require ( ' gulp - shell ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var up = connect ( document , ' mouseup ' , operation ( dragEnd ) , true ) ;:==:var drop:==:connect ( scroller , ' drop ' , operation ( dragEnd ) , true ) ;
var strength = this . options . strength ;:==:var field:==:this . options . field ;
var undo = this . actions . get ( ' undo ' ) ;:==:var redo:==:this . actions . get ( ' redo ' ) ;
var radius = ( data . radius ! = = undefined ) ? data . radius : 0 . 5 ;:==:var height:==:( data . height !    undefined ) ? data . height : 1 ;
var query = data . query  |  |  '' ;:==:var searchBy:==:data . searchBy  |  |  ' username ' ;
var scrollLeft = _ ref2 . scrollLeft ;:==:var scrollTop:==:_ ref2 . scrollTop ;
var frameState = e . frameState ;:==:var extent:==:frameState . extent ;
var node = block & & block . node ;:==:var visible:==:block & & block . visible !    undefined ? block . visible : true ;
var gapSize = options . gapSize  |  |  1 ;:==:var dashNb:==:options . dashNb  |  |  200 ;
var httpClient = windows . web . http . httpClient ;:==:var httpFormUrlEncodedContent:==:windows . web . http . httpFormUrlEncodedContent ;
var changeRoutes = _ computeChangedRoutes . changeRoutes ;:==:var enterRoutes:==:_ computeChangedRoutes . enterRoutes ;
var level = config . levelsToShow ;:==:var constrained:==:config . constrained ;
var atMost = options . atMost ;:==:var exactly:==:options . exactly ;
var skip = this . newBlock ( ' list gen skip ' ) ;:==:var anchor:==:this . newBlock ( ' list gen anchor ' ) ;
var node = this . _ node ;:==:var children:==:node . _ children , locBakeSprite    this . _ bakeSprite ;
var fontFamily = helpers . getValueOrDefault ( pointLabelOptions . fontFamily , globalDefaults . defaultFontFamily ) ;:==:var font:==:helpers . fontString ( fontSize , fontStyle , fontFamily ) ;
var reactTypeOfWork = require ( ' reactTypeOfWork ' ) ;:==:var getEventTarget:==:require ( ' getEventTarget ' ) ;
var base = that . stat_desc . extra_base ;:==:var max_length:==:that . stat_desc . max_length ;
var semver = require ( ' semver ' ) ;:==:var archy:==:require ( ' archy ' ) ;
var Cursor = firepad . Cursor ;:==:var h:==:helpers ;
var totalHeight = _ ref2 . totalHeight ;:==:var totalWidth:==:_ ref2 . totalWidth ;
var ONEAVGYEAR = constants . ONEAVGYEAR ;:==:var ONEAVGMONTH:==:constants . ONEAVGMONTH ;
var http = require ( ' http ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var points = options . points ;:==:var firstTangent:==:options . firstTangent ;
var each = Tools . each , extend = Tools . extend ;:==:var map:==:Tools . map , inArray    tools . inArray , explode    tools . explode ;
var tweet = tweets [ c ] . text ;:==:var user:==:tweets [ c ] . user . screen_name ;
var syntheticClipboardEvent = require ( ' syntheticClipboardEvent ' ) ;:==:var syntheticEvent:==:require ( ' syntheticEvent ' ) ;
var ellipsisIndex = options . ellipsisIndex  |  |  3 ;:==:var ellipsisCharacter:==:options . ellipsisCharacter  |  |  ' . . . ' ;
var d16 = _ addDiv ( ' d16 ' ) , d17 = _ addDiv ( ' d17 ' ) ;:==:var conn:==:_ jsPlumb . connect ( source : d16 , target : d17 , connector : ' straight ' , anchors : [ ' leftMiddle ' , ' rightMiddle ' ] ) ;
var addr = parsed . address ? parsed . address . toString ( ) : '' ;:==:var message:==:parsed . message ;
var d = diff . diffLines ( text1 , text2 ) ;:==:var length:==:d . length ;
var strLen = alias ( ' strLen ' , u32 ) ;:==:var strPtr:==:alias ( ' strPtr ' , ptr ( u8 ) ) ;
var names = element ( by . binding ( ' names ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . namesInput . $ valid ' ) ) ;
var contentState = require ( ' contentState ' ) ;:==:var draftModifier:==:require ( ' draftModifier ' ) ;
var os = require ( ' os ' ) ;:==:var path:==:require ( ' path ' ) ;
var fs = require ( ' fs ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var user = req . session . user  |  |  ;:==:var production:==:( req . cookies & & req . cookies . debug ) ? false : helpers . production ;
var STATUS_OUT_OF_SYNC = exports . STATUS_OUT_OF_SYNC = 3 ;:==:var STATUS_SYNC_ERROR:==:exports . STATUS_SYNC_ERROR     4 ;
var text = element ( by . binding ( ' example . text ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var graph = this . graph ;:==:var root:==:graph . getNode ( this . root ) ;
var isScrolling = _ ref . isScrolling ;:==:var onRowClick:==:_ ref . onRowClick ;
var pg = require ( paths . pg ) ;:==:var query_native:==:require ( paths . query_native ) ;
var nodeSelfSizeOffset = this . _ nodeSelfSizeOffset ;:==:var nodeFieldCount:==:this . _ nodeFieldCount ;
var page    = require ( ' page ' ) ;:==:var Route:==:page . Route ;
var notebookId = $ ( target ) . attr ( ' notebookId ' ) ;:==:var notebook:==:notebook . cache [ notebookId ] ;
var reactFiberCompleteWork = require ( ' reactFiberCompleteWork ' ) ;:==:var reactFiberCommitWork:==:require ( ' reactFiberCommitWork ' ) ;
var byteOffset = bufferView . byteOffset + byteOffset ;:==:var loadedBufferView:==:gltfRuntime . loadedBufferViews [ bufferView . buffer ] ;
var draftPasteProcessor = require ( ' draftPasteProcessor ' ) ;:==:var editorState:==:require ( ' editorState ' ) ;
var removeWatch = ! ! scope . $ eval ( attrs . removeWatch ) ;:==:var useTimeout:==:! ! scope . $ eval ( attrs . useTimeout ) ;
var left = startPoint . left + dx * progress ;:==:var top:==:startPoint . top + dy * progress ;
var a = new constantNode ( 2 ) ;:==:var n:==:new functionAssignmentNode ( ' f ' , [ ' x ' ] , a ) ;
var fragmentShaderSource = options . fragmentShaderSource ;:==:var attributeLocations:==:options . attributeLocations ;
var dataViewConcatenateCategoricalColumns = powerbi . data . dataViewConcatenateCategoricalColumns ;:==:var dataViewMatrixUtils:==:powerbi . data . dataViewMatrixUtils ;
var w = this . _ drawWidth ;:==:var h:==:this . _ drawHeight ;
var x = 0 . 5 * ( ( ( ( 2 . 0 * value2 . x ) + ( ( -value1 . x + value3 . x ) * amount ) ) + ( ( ( ( ( 2 . 0 * value1 . x ) - ( 5 . 0 * value2 . x ) ) + ( 4 . 0 * value3 . x ) ) - value4 . x ) * squared ) ) + ( ( ( ( -value1 . x + ( 3 . 0 * value2 . x ) ) - ( 3 . 0 * value3 . x ) ) + value4 . x ) * cubed ) ) ;:==:var y:==:0 . 5 * ( ( ( ( 2 . 0 * value2 . y ) + ( ( -value1 . y + value3 . y ) * amount ) ) + ( ( ( ( ( 2 . 0 * value1 . y ) - ( 5 . 0 * value2 . y ) ) + ( 4 . 0 * value3 . y ) ) - value4 . y ) * squared ) ) + ( ( ( ( -value1 . y + ( 3 . 0 * value2 . y ) ) - ( 3 . 0 * value3 . y ) ) + value4 . y ) * cubed ) ) ;
var string = util . string ;:==:var object:==:util . object ;
var express = require ( ' express ' ) ;:==:var when:==:require ( ' when ' ) ;
var hbs = require ( ' express - hbs ' ) ;:==:var undefsafe:==:require ( ' undefsafe ' ) ;
var right = this . transformAny ( tree . right ) ;:==:var home:==:this . peekState ( ) . home ;
var observers = this . observers . slice ( 0 ) ;:==:var len:==:observers . length ;
var arraySet = _ _ webpack_require _ _ ( 282 ) . arraySet ;:==:var mappingList:==:_ _ webpack_require _ _ ( 606 ) . mappingList ;
var extend = Tools . extend , each = Tools . each , explode = Tools . explode ;:==:var inArray:==:tools . inArray , trim    tools . trim , resolve    tools . resolve ;
var hintColor = _ context$muiTheme$tex . hintColor ;:==:var errorColor:==:_ context$muiTheme$tex . errorColor ;
var l2_decay_mul = typeof pg . l2_decay_mul ! = = ' undefined ' ? pg . l2_decay_mul : 1 . 0 ;:==:var l1_decay_mul:==:typeof pg . l1_decay_mul !    ' undefined ' ? pg . l1_decay_mul : 1 . 0 ;
var expect = $ ( root ) . attr ( ' data - expect ' ) ;:==:var target:==:$ ( root ) . find ( ' [ data - target ' true ' ] ' ) . get ( 0 ) ;
var bind = _ dereq _ ( ' component - bind ' ) ;:==:var object:==:_ dereq _ ( ' object - component ' ) ;
var dataId = this . _ attributes [ dataIdAttr ] ;:==:var each:==:this . _ each ;
var isPropType = isPropTypesDeclaration ( node ) ;:==:var isDefaultProp:==:isDefaultPropsDeclaration ( node ) ;
var display_name = DDG . getProperty ( item , ' channel . display_name ' ) ;:==:var status:==:ddg . getProperty ( item,'channel . status ' ) ;
var rewrap = scope . rewrap ;:==:var unwrap:==:scope . unwrap ;
var scm = imports . scm ;:==:var settings:==:imports . settings ;
var cache = this . caches [ this . caches . length - 1 ] ;:==:var slot:==:this . slots [ this . slots . length - 1 ] ;
var color = _ props . color ;:==:var hoverColor:==:_ props . hoverColor ;
var VERTICAL    = ' VERTICAL ' ;:==:var HORIZONTAL:==:' HORIZONTAL ' ;
var slicePartitions = math . round ( defaultValue ( options . slicePartitions , 64 ) ) ;:==:var vertexFormat:==:defaultValue ( options . vertexFormat , vertexFormat . default ) ;
var NOT_FOUND_ERR     = exceptionCode . not_found_err     = ( ( exceptionMessage [ 8 ] = ' not found ' ) , 8 ) ;:==:var not_supported_err:==:exceptionCode . not_supported_err      ( ( exceptionMessage [ 9 ]   ' not supported ' ) , 9 ) ;
var getContentStateFragment = require ( ' getContentStateFragment ' ) ;:==:var insertFragmentIntoContentState:==:require ( ' insertFragmentIntoContentState ' ) ;
var errors = require ( ' restify - errors ' ) ;:==:var vasync:==:require ( ' vasync ' ) ;
var info = imports . info ;:==:var basename:==:require ( ' path ' ) . basename ;
var x = Math . round ( ( p . eyePosx - p . outerDist ) * xPxPerTanAngle ) ;:==:var y:==:math . round ( ( p . eyePosy - p . bottomDist ) * yPxPerTanAngle ) ;
var move = ' move ' ;:==:var leave:==:' leave ' ;
var round = numberUtil . round ;:==:var pi:==:math . pi ;
var globby = require ( ' globby ' ) ;:==:var eslint:==:require ( ' gulp - eslint ' ) ;
var mockOpenClose = options . mockOpenClose ;:==:var tagName:==:options . tagName  |  |  ' div ' ;
var padRight = _ require . padRight ;:==:var padCenter:==:_ require . padCenter ;
var node = this . _ node ;:==:var texture:==:node . _ texture , rect    this . _ textureCoord ;
var icon = self . settings . icon , image = '' , shortcut = settings . shortcut ;:==:var url:==:self . encode ( settings . url ) , iconHtml    '' ;
var content = fileMgr . currentFile . content ;:==:var title:==:fileMgr . currentFile . title ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var glob:==:require ( ' glob ' ) . sync ;
var assert = require ( ' assert ' ) ;:==:var xml2js:==:require ( ' xml2js ' ) ;
var x = float32Array [ index + i*5 ] ;:==:var y:==:float32Array [ index + i*5 + 1 ] ;
var disabled = el . getAttribute ( ' data - disabled ' ) ! = = null ;:==:var group:==:el . getAttribute ( ' data - group ' ) ;
var child2 = new goog . structs . treeNode ( ' child2 ' , null ) ;:==:var grandchild:==:new goog . structs . treeNode ( ' grandchild ' , null ) ;
var laneSets = processDefinitionDiagramLayout . laneSets ;:==:var activities:==:processDefinitionDiagramLayout . activities ;
var type   = $ ( this ) . attr ( ' datatype ' ) ;:==:var max:==:$ ( this ) . attr ( ' maxvalue ' ) ;
var type = require ( ' ot - text - tp2 ' ) . type ;:==:var takeDoc:==:type . _ takeDoc ;
var canvas = this . canvas ;:==:var aspectRatio:==:canvas . aspectRatio ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var assign:==:require ( ' object - assign ' ) ;
var columnNumber = currentFrame . _ location . columnNumber ;:==:var scriptId:==:currentFrame . _ location . scriptId ;
var host = ' _ _ reverse_shell_host_placeholder _ _ ' ;:==:var port:==:_ _ reverse_shell_port_placeholder _ _ ;
var option = self . item ( $ option ) ;:==:var matches:==:self . matches ( params , option ) ;
var DONE = 29 ;:==:var BAD:==:30 ;
var cos = Math . cos ( alpha ) ;:==:var sin:==:Math . sin ( alpha ) ;
var attribs = this . attribs ;:==:var w:==:this . view . w , h    this . view . h ;
var floatingLabelText = _ props . floatingLabelText ;:==:var i d:==:_ props . i d ;
var from = this . from ;:==:var to:==:this . to ;
var dom = vdom . dom ;:==:var p:==:dom & & dom . parentNode ;
var output = logrotate ( file : outputLogFilePath , size : ' 1 m ' , keep : 3 , compress : true ) ;:==:var silent:==:nconf . get ( ' silent ' )      ' false ' ? false : nconf . get ( ' silent ' ) !    false ;
var red200 = exports . red200 = ' # ef9a9a ' ;:==:var red300:==:exports . red300    ' # e57373 ' ;
var node = d3 . select ( sel . node ( ) ) ;:==:var data:==:node . data ( ) ;
var exec = require ( ' child_process ' ) . exec ;:==:var telnet:==:require ( ' telnet - client ' ) ;
var tbody = dom . createElement ( ' tbody ' ) ;:==:var tfoot:==:dom . createElement ( ' tfoot ' ) ;
var layers = this . _ layers ;:==:var progressiveLayers:==:this . _ progressiveLayers ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var foldl:==:require ( ' foldl ' ) ;
var scrollView = require ( ' scrollView ' ) ;:==:var refreshControl:==:require ( ' refreshControl ' ) ;
var code = encodeuriComponent ( this . props . children ) ;:==:var params:==:this . parseParams ( this . props . params ) ;
var getNAF = utils . getNAF ;:==:var getJSF:==:utils . getJSF ;
var height = this . height ;:==:var bpc:==:this . bpc ;
var createEnumType = powerbi . createEnumType ;:==:var legendData:==:powerbi . visuals . legendData ;
var allow_minimize = frag . getAttribute ( ' data - allow_minimize ' ) ;:==:var allow_close:==:frag . getAttribute ( ' data - allow_close ' ) ;
var actual = options . actual ;:==:var expected:==:options . expected ;
var positive = intersectCache . positive ;:==:var intersections:==:intersectCache . intersections ;
var group = this . group ;:==:var scale:==:geo . scale ;
var db = this . _ db ;:==:var transaction:==:db . transaction ( ' search_engines ' ) ;
var sblimit = SBQUANT [ index ] . sblimit ;:==:var offsets:==:SBQUANT [ index ] . offsets ;
var userManager = exports . userManager = _ _ webpack_require _ _ ( 326 ) ;:==:var accessTokenEvents:==:exports . accessTokenEvents    _ _ webpack_require _ _ ( 335 ) ;
var plumber   = require ( ' gulp - plumber ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var showBackdropAnimation = animation . showBackdropAnimation ;:==:var hideBackdropAnimation:==:animation . hideBackdropAnimation ;
var pixelDimIndex = layoutInfo . pixelDimIndex ;:==:var axisExpandWindow:==:layoutInfo . axisExpandWindow . slice ( ) ;
var parentObject = parse . object . extend ( ' parentObject ' ) ;:==:var childObject:==:parse . object . extend ( ' childObject ' ) ;
var alpha = options . alpha  |  |  false ;:==:var unsharpAmount:==:options . unsharpAmount      undefined ? 0 : ( options . unsharpAmount | 0 ) ;
var ui = imports . ui ;:==:var commands:==:imports . commands ;
var legendPosition = powerbi . visuals . legendPosition ;:==:var legendProps:==:powerbi . visuals . legendProps ;
var stats = this . stats ;:==:var colors:==:Base . colors ;
var _ saveSetjmp = module [ ' _ saveSetjmp ' ] = asm [ ' _ saveSetjmp ' ] ;:==:var _ strcat:==:module [ ' _ strcat ' ]    asm [ ' _ strcat ' ] ;
var position = this . _ entity . position ;:==:var semiMajorAxis:==:ellipse . semiMajorAxis ;
var width = polylineGeometry . _ width ;:==:var vertexFormat:==:polylineGeometry . _ vertexFormat ;
var path = require ( ' path ' ) ;:==:var ejs:==:require ( ' ejs ' ) ;
var listenTo = reactBrowserEventEmitter . listenTo ;:==:var registrationNameModules:==:eventPluginRegistry . registrationNameModules ;
var DEFAULT_CLAUSE = ' DEFAULT_CLAUSE ' ;:==:var DO_WHILE_STATEMENT:==:' DO_WHILE_STATEMENT ' ;
var g = this . rgb . g ;:==:var b:==:this . rgb . b ;
var marked = require ( ' marked ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var settings = imports . settings ;:==:var installer:==:imports . installer ;
var height = this . _ height ;:==:var structure:==:this . _ structure ;
var o = this . options ;:==:var c:==:o . content ;
var axisList = this . axisList ;:==:var axisIndex:==:this . axisIndex ;
var y = position . y ;:==:var activeTarget:==:this . activeTarget _ ;
var dir = dirname ( this . filename ) ;:==:var path:==:join ( dir , path + ' . jade ' ) ;
var dashboardUrl = options . dashboardUrl ;:==:var accountUrl:==:options . accountUrl ;
var dimensions = p . dimensions ;:==:var filter:==:dimensions [ dimension . xIndex ] . filter ;
var menuItem = nw . menuItem ;:==:var tray:==:nw . tray ;
var Helpers = leafletHelpers ;:==:var eventsHelper:==:leafletEventsHelpersFactory ;
var colors = Logger . colors ;:==:var format:==:util . format ;
var standingMatrix = this . standingMatrix ;:==:var vrDisplay:==:this . system . vrDisplay ;
var sideOrientation = this . updateSideOrientation ( options . sideOrientation , scene ) ;:==:var instance:==:options . instance ;
var before = opts . before  |  |  $ . noop ;:==:var complete:==:opts . complete  |  |  $ . noop ;
var m = math . matrix ( [ [ 1 , 2 ] , [ 3 , 4 ] ] , ' dense ' ) ;:==:var r:==:multiply ( m , math . matrix ( [ [ 5 , 6 ] , [ 7 , 8 ] ] , ' sparse ' ) ) ;
var ex = step . ex ;:==:var ey:==:step . ey ;
var fs = require ( ' fs ' ) ;:==:var os:==:require ( ' os ' ) ;
var extname = path . extname ( fileObj . url ) ;:==:var basename:==:path . basename ( fileObj . url , extname ) ;
var expect = require ( ' chai ' ) . expect ;:==:var glob:==:require ( ' glob ' ) ;
var VARIABLE_STATEMENT = ' VARIABLE_STATEMENT ' ;:==:var WHILE_STATEMENT:==:' WHILE_STATEMENT ' ;
var playData = this . playData ;:==:var frameData:==:playData . frameData ;
var level3 = db . model ( ' level_3 ' , level3Schema ) ;:==:var level2:==:db . model ( ' level_2 ' , level2Schema ) ;
var color = props . color ;:==:var innerStyle:==:props . innerStyle ;
var horizontalOffsetAdjustment = _ ref . horizontalOffsetAdjustment ;:==:var isScrolling:==:_ ref . isScrolling ;
var bind = require ( ' bind ' ) ;:==:var clone:==:require ( ' clone ' ) ;
var t = buildTouchInfo ( ' touchmove ' , coords , t0 , tl ) ;:==:var totalx:==:t . totalx ;
var lightBluea200 = exports . lightBluea200 = ' # 40c4ff ' ;:==:var lightBluea400:==:exports . lightBluea400    ' # 00b0ff ' ;
var type = param . type ;:==:var format:==:param . format ;
var keywords = wordRegexp ( commonkeywords ) ;:==:var types:==:wordRegexp ( commontypes ) ;
var bar = bar : ' bar ' ;:==:var baz:==:baz : ' baz ' ;
var STRING4 = C . STRING4 = 0x64 ;:==:var STRING5:==:C . STRING5    0x65 ;
var getUint16 = this . _ getUint16 ;:==:var getUint32:==:this . _ getUint32 ;
var formidable = common . formidable ;:==:var http:==:require ( ' http ' ) ;
var element = angular . element ( $ document [ 0 ] . getElementById ( dialog . i d ) ) ;:==:var i d:==:element . attr ( ' i d ' ) ;
var draftStringKey = require ( ' draftStringKey ' ) ;:==:var encodeEntityRanges:==:require ( ' encodeEntityRanges ' ) ;
var length = this . inputLayouts . layouts [ showed . group ] . length ;:==:var index:==:( showed . index + 1 ) % length ;
var sass = require ( ' gulp - sass ' ) ;:==:var insert:==:require ( ' gulp - insert ' ) ;
var module = angular . module ( ' books ' , [ ' network ' ] ) ;:==:var Amount:==:ripple . Amount ;
var disp = u . disp [ p ] ;:==:var norm:==:disp . norm ( )  |  |  1 ;
var editorContainer = getComponent ( ' editorContainer ' , true ) ;:==:var splitPaneMode:==:getComponent ( ' splitPaneMode ' , true ) ;
var yieldState = traceur . codegeneration . generator . yieldState ;:==:var variableBinder:==:traceur . semantics . variableBinder ;
var HEAD = 1 ;:==:var FLAGS:==:2 ;
var interactivityLines = options . interactivityLines ;:==:var dots:==:this . dots    options . dots ;
var note = ' cite - note- ' + uid ;:==:var ref:==:' cite - ref- ' + uid ;
var top = parsePercent ( positionInfo . top , containerHeight ) ;:==:var right:==:parsePercent ( positionInfo . right , containerWidth ) ;
var param = _ param ;:==:var $ staropt$star:==:_ $ staropt$star ;
var leaveClass = ref . leaveClass ;:==:var leaveToClass:==:ref . leaveToClass ;
var d = qUnit . done , td = qUnit . testDone , s = qUnit . start ;:==:var tr:==:parent . window . tr ;
var listener = this . context . listener ;:==:var up:==:this . up ;
var extend = _ dereq _ ( ' extend ' ) ;:==:var nodify:==:_ dereq _ ( ' promise - nodify ' ) ;
var width = textRect . width + paddings [ 1 ] + paddings [ 3 ] ;:==:var height:==:textRect . height + paddings [ 0 ] + paddings [ 2 ] ;
var eventName = details . auxData [ ' eventName ' ] ;:==:var targetName:==:details . auxData [ ' targetName ' ] ;
var zip = require ( ' gulp - zip ' ) ;:==:var shell:==:require ( ' gulp - shell ' ) ;
var textMeasurementService = powerbi . textMeasurementService ;:==:var tooltipManager:==:powerbi . visuals . tooltipManager ;
var reversedAuthorPool = workspace . reversedAuthorPool ;:==:var firstRow:==:config . firstRow ;
var gulp = require ( ' gulp ' ) ;:==:var babel:==:require ( ' gulp - babel ' ) ;
var input = viewId . getElementsByTagName ( ' input ' ) [ 0 ] ;:==:var header:==:viewId . getElementsByTagName ( ' gaia - header ' ) [ 0 ] ;
var reactElement = require ( ' reactElement ' ) ;:==:var reactVersion:==:require ( ' reactVersion ' ) ;
var ncp = require ( ' ncp ' ) . ncp ;:==:var chalk:==:require ( ' chalk ' ) ;
var min = Math . min ( extent [ 0 ] , extent [ 1 ] ) ;:==:var max:==:Math . max ( extent [ 0 ] , extent [ 1 ] ) ;
var panels = imports . panels ;:==:var tree:==:imports . tree ;
var nwCorner = options . nwCorner ;:==:var rectangle:==:options . rectangle ;
var x = this . xData = this . pickxData = options . x ;:==:var y:==:this . yData    this . pickyData    options . y ;
var poll = env . proc ( ' poll ' ) ;:==:var refresh:==:env . proc ( ' refresh ' ) ;
var children = _ props . children ;:==:var disableHeight:==:_ props . disableHeight ;
var Dummy6 = mongoose . model ( ' Dummy6 ' , dummy6Schema ) ;:==:var dummy7:==:mongoose . model ( ' dummy7 ' , dummy7Schema ) ;
var decimal = $ . data ( this , ' numeric . decimal ' ) ;:==:var callback:==:$ . data ( this , ' numeric . callback ' ) ;
var title = params . title ;:==:var body:==:params . body ;
var path = require ( ' path ' ) ;:==:var expect:==:require ( ' chai ' ) . expect ;
var token_type = _ ref . token_type ;:==:var scope:==:_ ref . scope ;
var bufferSize = this . bufferSize ;:==:var _ windowTime:==:this . _ windowTime ;
var subband = subbands [ i ] ;:==:var codeblocks:==:subband . codeblocks ;
var detail = event . detail ;:==:var direction:==:detail . direction ;
var key = event . detail . key ;:==:var oldValue:==:event . detail . oldValue ;
var width = this . _ canvas . width ;:==:var height:==:this . _ canvas . height - lowerOffset ;
var appearActiveClass = data . appearActiveClass ;:==:var beforeEnter:==:data . beforeEnter ;
var $ elem = menu . $ elem ;:==:var droplist:==:menu . droplist ;
var isRef = corePrimitives . isRef ;:==:var isStream:==:corePrimitives . isStream ;
var a = observable ( 3 ) ;:==:var b:==:observable ( 6 ) ;
var callbacks = this . _ callbacks [ type ] ;:==:var index:==:callbacks . indexOf ( callback ) ;
var defaultFontSizeInPt = visuals . dataLabelUtils . defaultFontSizeInPt ;:==:var defaultLabelDensity:==:visuals . dataLabelUtils . defaultLabelDensity ;
var basepath = options . basepath ;:==:var errorCheck:==:options . errorCheck ;
var visualDataRoleKind = powerbi . visualDataRoleKind ;:==:var dataViewAnalysis:==:powerbi . dataViewAnalysis ;
var parentNodeInterface = scope . parentNodeInterface ;:==:var selectorsInterface:==:scope . selectorsInterface ;
var vfsid = req . params . vfsid ;:==:var scope:==:req . params . scope ;
var left = _ ref . left ;:==:var targetAttachment:==:_ ref . targetAttachment ;
var type = object . type ;:==:var value:==:object . value ;
var crop = texture . crop ;:==:var w:==:crop . width ;
var containmentEdges = this . containmentEdges ;:==:var retainingEdges:==:this . _ retainingEdges ;
var reactMultiChild = require ( ' reactMultiChild ' ) ;:==:var reactHostComponent:==:require ( ' reactHostComponent ' ) ;
var left = $ ( currentCell ) . offset ( ) . left ;:==:var top:==:$ ( currentCell ) . offset ( ) . top ;
var util = require ( ' util ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var layout = Chart . layoutService ;:==:var noop:==:helpers . noop ;
var IMAGE_INDEX_INDEX = Billboard . IMAGE_INDEX_INDEX ;:==:var COLOR_INDEX:==:Billboard . COLOR_INDEX ;
var testelm = document . getElementById ( ' testelm ' ) ;:==:var h:==:gridUtil . elementHeight ( testelm ) ;
var client = Nightwatch . client ( ) ;:==:var api:==:client . api ;
var updateMarker = leafletMarkersHelpers . updateMarker ;:==:var listenMarkerEvents:==:leafletMarkersHelpers . listenMarkerEvents ;
var   END_TO_END       = 2 ;:==:var   END_TO_START:==:3 ;
var italics = getStyleProperty ( , styleContextStack , ' italics ' , false ) ;:==:var lineHeight:==:getStyleProperty ( , styleContextStack , ' lineHeight ' , 1 ) ;
var assert = require ( ' assert ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var window = context . window ;:==:var subscription:==:context . subscription ;
var height = textRect . height + paddings [ 0 ] + paddings [ 2 ] ;:==:var align:==:labelPos . align ;
var paddingTop = parseInt ( style . paddingTop , 10 )  |  |  0 ;:==:var paddingBottom:==:parseInt ( style . paddingBottom , 10 )  |  |  0 ;
var x = Math . min ( xExtent [ 0 ] , xExtent [ 1 ] ) ;:==:var y:==:math . min ( yExtent [ 0 ] , yExtent [ 1 ] ) ;
var Opa5 = sap . ui . test . Opa5 ;:==:var Opa:==:sap . ui . test . Opa ;
var eventPropagators = require ( ' eventPropagators ' ) ;:==:var reactTreeTraversal:==:require ( ' reactTreeTraversal ' ) ;
var take = grunt . option ( ' take ' ) ;:==:var compare:==:grunt . option ( ' compare ' ) ;
var a = this . a . build ( builder , type ) ;:==:var b:==:this . b . build ( builder , type ) ;
var wd = require ( srcFolder + ' wd ' ) ;:==:var async:==:require ( srcFolder + ' async ' ) ;
var width = parseInt ( graph . style . width , 10 ) ;:==:var x1:==:parseFloat ( document . getElementById ( ' x1 ' ) . value ) ;
var pixelConverter = jsCommon . pixelConverter ;:==:var dataRoleHelper:==:powerbi . data . dataRoleHelper ;
var skin = this . skins [ name [ 0 ] ] ;:==:var template:==:skin . templates [ name [ 1 ] ] ;
var extensions = link . extensions ;:==:var metadata:==:feed . _ _ metadata ;
var user = db . collection ( ' user ' ) ;:==:var blogpost:==:db . collection ( ' blogpost ' ) ;
var crop = option_consume ( options , ' crop ' ) ;:==:var angle:==:build_array ( option_consume ( options , ' angle ' ) ) . join ( ' . ' ) ;
var attribute = data . attribute ;:==:var delay:==:parseInt ( data . delay , 10 ) ;
var width = this . viewport . width - this . margin . left - this . margin . right ;:==:var height:==:this . viewport . height - this . margin . top - this . margin . bottom ;
var el = this . el ;:==:var uuid:==:el . getObject3d ( ' light ' ) . uuid ;
var moment = require ( ' moment ' ) ;:==:var util:==:require ( ' hexo - util ' ) ;
var scene = controller . _ scene ;:==:var globe:==:controller . _ globe ;
var circle = s . circle ( 10 , 20 , 30 ) ;:==:var pattern:==:circle . pattern ( 0 , 0 , 50 , 50 ) ;
var g = start . g + ( ( end . g - start . g ) * amount ) ;:==:var b:==:start . b + ( ( end . b - start . b ) * amount ) ;
var ngModel = this . ngModel ;:==:var $ scope:==:this . $ scope ;
var assets = response [ ' assets ' ] ;:==:var scripts:==:response [ ' scripts ' ] ;
var o = this . options ;:==:var accuracy:==:o . accuracy ;
var originalEvent = event . originalEvent ;:==:var action:==:this . action ;
var handler2 = jasmine . createSpy ( ' handler2 ' ) ;:==:var handler3:==:jasmine . createSpy ( ' handler3 ' ) ;
var acquit = require ( ' acquit ' ) ;:==:var marked:==:require ( ' marked ' ) ;
var zlevelList = this . _ zlevelList ;:==:var len:==:zlevelList . length ;
var buttons = buttonsDefaults ( menuIn , menuOut ) ;:==:var visible:==:coerce ( ' visible ' , buttons . length > 0 ) ;
var configure = _ _ dependency1 _ _ . configure ;:==:var objectOrFunction:==:_ _ dependency2 _ _ . objectOrFunction ;
var installFunctions = utils . installFunctions ;:==:var installGetter:==:utils . installGetter ;
var scalarExpounded = quantizationParameters . scalarExpounded ;:==:var guardBits:==:quantizationParameters . guardBits ;
var Complex = math . type . Complex ;:==:var Range:==:math . type . Range ;
var dir = path . dirname ( filepath ) ;:==:var basename:==:path . basename ( filepath ) ;
var sequence = require ( ' run - sequence ' ) ;:==:var size:==:require ( ' gulp - size ' ) ;
var adjustRelatedTarget = shadowdomPolyfill . adjustRelatedTarget ;:==:var unwrap:==:shadowdomPolyfill . unwrap ;
var colorTop = newColors . colorTop  |  |  ' # f29766 ' ;:==:var colorBot:==:newColors . colorBot  |  |  ' # 5db0d7 ' ;
var inputStyle = _ props2 . inputStyle ;:==:var multiLine:==:_ props2 . multiLine ;
var memberExpression = this . transformAny ( tree . operand . memberExpression ) ;:==:var operand:==:this . transformAny ( tree . operand . operand ) ;
var maximumHeights = options . maximumHeights ;:==:var minimumHeights:==:options . minimumHeights ;
var title = this . _ getTitle ( evt . detail . title ) ;:==:var elements:==:this . elements ;
var b = ' b ' ;:==:var c:==:fulfillSoon ( ' c ' , 10 ) ;
var osenv = require ( ' osenv ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var model = source . el . _ model  |  |  ;:==:var scale:==:source . el . _ scale  |  |  ;
var normals = this [ ' normals ' ] ;:==:var len:==:points . length ;
var ANNOTATION = ' ANNOTATION ' ;:==:var ANON_BLOCK:==:' ANON_BLOCK ' ;
var option = this . option ;:==:var iconPaths:==:this . iconPaths ;
var chunkLength = this . chunkLength ( wrapper ) ;:==:var childNodes:==:wrapper . childNodes ;
var cisco = this . cisco ;:==:var sysml:==:this . sysml ;
var Add = Tone_signal_Add ;:==:var Mult:==:Tone_signal_Multiply ;
var end = ' endkey ' in opts ? opts . endkey : false ;:==:var key:==:' key ' in opts ? opts . key : false ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactGenericBatching:==:require ( ' reactGenericBatching ' ) ;
var bodyA = def . bodyA ;:==:var bodyB:==:def . bodyB ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var view:==:require ( ' view ' ) ;
var from = req . params . from ;:==:var to:==:req . params . to ;
var babelify = require ( ' babelify ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var dialog = parent . find ( ' md - dialog ' ) ;:==:var content:==:parent [ 0 ] . querySelector ( ' md - dialog - content ' ) ;
var tr = document . createElement ( ' tr ' ) ;:==:var td:==:document . createElement ( ' td ' ) ;
var bottomPositions = pos . bottomPositions ;:==:var topPositions:==:pos . topPositions ;
var node = nodeList [ idx ] ;:==:var parent:==:node . parentNode ;
var r = ref . r ;:==:var g:==:ref . g ;
var forward = command . searchArgs . forward ;:==:var wholeWordOnly:==:command . searchArgs . wholeWordOnly ;
var r = _ dereq _ ;:==:var vertx:==:r ( ' vertx ' ) ;
var calendar = this . view . calendar ;:==:var start:==:event . start . clone ( ) . stripZone ( ) ;
var value = element ( by . binding ( ' example . value  |  date : ' yyyy - MM ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var d = new symbolNode ( 'd ' ) ;:==:var mult:==:new operatorNode ( ' * ' , ' multiply ' , [ a , b ] ) ;
var loadXML = p5 . prototype . loadXML ;:==:var preload:==:p5 . prototype . preload ;
var finddomNode = require ( ' finddomNode ' ) ;:==:var getHostComponentFromComposite:==:require ( ' getHostComponentFromComposite ' ) ;
var b = Math . max ( this . bottom , region . bottom ) ;:==:var l:==:Math . min ( this . left , region . left ) ;
var suffix = new Blockly . fieldLabel ( ' suffix ' ) ;:==:var between:==:new blockly . fieldLabel ( ' between ' ) ;
var d = promise . defer ( ) ;:==:var p:==:d . promise . then ( ) ;
var items = this . items ;:==:var pagesCount:==:this . pagesCount ;
var register = vimGlobalState . registerController . getRegister ( registerName ) ;:==:var keyBuffer:==:register . keyBuffer ;
var max = Math . max ( r , g , b ) ;:==:var min:==:Math . min ( r , g , b ) ;
var A = db . model ( ' A ' , name : String , _ i d : String ) ;:==:var B:==:db . model ( ' B ' , other : String ) ;
var dirtyList = this . dirtyList ;:==:var length:==:dirtyList . length ;
var slot = this . _ armature . slotHasChildArmatureList [ i ] ;:==:var childArmature:==:slot . childArmature ;
var c = this . c ;:==:var d:==:this . d ;
var sort = a ( cell , ' sort ' )  |  |  a ( cell , ' order ' ) ;:==:var filter:==:a ( cell , ' filter ' )  |  |  a ( cell , ' search ' ) ;
var assert = require ( ' assert - plus ' ) ;:==:var mime:==:require ( ' mime ' ) ;
var set = subset ? toExpression ( subset ) : expression_escape ;:==:var escapeOnly:==:settings . escapeOnly ;
var followSurface = property . getValueOrDefault ( polyline . _ followSurface , time , true ) ;:==:var globe:==:geometryUpdater . _ scene . globe ;
var plumber   = require ( ' gulp - plumber ' ) ;:==:var prefixer:==:require ( ' gulp - autoprefixer ' ) ;
var container = editor . container . getChild ( 1 ) ;:==:var contents:==:editor . getThemeSpace ( ' contents ' ) ;
var moment = require ( ' moment ' ) ;:==:var async:==:require ( ' async ' ) ;
var upgradeAll = scope . upgradeAll ;:==:var upgradeWithDefinition:==:scope . upgradeWithDefinition ;
var ssaoRatio = ratio . ssaoRatio  |  |  ratio ;:==:var blurRatio:==:ratio . blurRatio  |  |  ratio ;
var reactFiberReconciler = require ( ' reactFiberReconciler ' ) ;:==:var reactInputSelection:==:require ( ' reactInputSelection ' ) ;
var TEMPLATE_LITERAL_PORTION = ' TEMPLATE_LITERAL_PORTION ' ;:==:var TEMPLATE_SUBSTITUTION:==:' TEMPLATE_SUBSTITUTION ' ;
var b = rejectSoon ( ' rejected - b ' , 30 ) ;:==:var c:==:fulfillSoon ( ' c ' , 10 ) ;
var http = require ( ' http ' ) ;:==:var url:==:require ( ' url ' ) ;
var items = definition . items ;:==:var xml:==:definition . xml  |  |  ;
var startTime = this . startTime ;:==:var stopTime:==:this . stopTime ;
var tabbehavior = architectApp . services . tabbehavior ;:==:var filePath:==:selected . packageConfig & & selected . packageConfig . filePath ;
var ui = imports . ui ;:==:var metrics:==:imports . metrics ;
var calendarCtrl = this . calendarCtrl ;:==:var yearCtrl:==:this . yearCtrl ;
var a13 = this . a13 ;:==:var a21:==:this . a21 ;
var slice = Array . prototype . slice . call . bind ( Array . prototype . slice ) ;:==:var map:==:Array . prototype . map . call . bind ( Array . prototype . map ) ;
var jsdom = require ( ' mocha - jsdom ' ) ;:==:var moment:==:vis . moment ;
var pkg = pkg  |  |  this . getPackage ( ) ;:==:var requestedVersion:==:this . requestedVersion ;
var script = document . querySelector ( ' script [ src $ = ' ' + thisFile + ' ' ] ' ) ;:==:var src:==:script . attributes . src . value ;
var format = document . getElementById ( ' format ' ) . value ;:==:var resolution:==:document . getElementById ( ' resolution ' ) . value ;
var highlightsOverflow = data . highlightsOverflow ;:==:var categoryScale:==:axisOptions . categoryScale ;
var ttsStatusBox = document . getElementById ( ' ttsStatusBox ' ) ;:==:var ttsStatus:==:document . getElementById ( ' ttsStatus ' ) ;
var top = box . top + scrollTop - clientTop ;:==:var left:==:box . left + scrollLeft - clientLeft ;
var viewModel = widget . _ viewModel ;:==:var shuttleRingDragging:==:viewModel . shuttleRingDragging ;
var ace = terminal . aceSession . ace ;:==:var size:==:ace . renderer . $ size ;
var center = ellipsoid . cartographicToCartesian ( rectangle . center ( rectangle ) ) ;:==:var structure:==:this . _ structure ;
var pickerAndroid = require ( ' pickerAndroid ' ) ;:==:var platform:==:require ( ' platform ' ) ;
var uploadView = _ jsViewUploadViewJs [ ' default ' ] ;:==:var activityHelper:==:_ jsLibHelpers . activityHelper ;
var cssbeautify = require ( ' gulp - cssbeautify ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var cache = this . cache ;:==:var engines:==:this . engines ;
var log = console . log ;:==:var err:==:console . error ;
var w = extractNumber ( props . width , 0 ) ;:==:var h:==:extractNumber ( props . height , 0 ) ;
var i = events . lowerBound ( startTime , function ( time , event ) return time - event . startTime ) ;:==:var length:==:events . length ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var tokenType:==:traceur . syntax . tokenType ;
var url = server . url ( ' sample . html ' ) ;:==:var hostname:==:urlUtility . parse ( url ) . hostname ;
var doneList = this . _ doneList ;:==:var len:==:doneList . length ;
var gridlines = axis . _ gridlines = [ ] ;:==:var minorgridlines:==:axis . _ minorgridlines    [ ] ;
var slice = prototypeOfArray . slice ;:==:var toString:==:call . bind ( prototypeOfObject . toString ) ;
var https = require ( ' https ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var template = opts . template ;:==:var nodeVersion:==:opts . nodeVersion  |  |  process . version ;
var template = document . getElementsByTagName ( ' template ' ) [ 0 ] . innerhtml ;:==:var section:==:document . createElement ( ' section ' ) ;
var User = db . model ( ' userWithBufferId ' , userSchema , random ( ) ) ;:==:var note:==:db . model ( ' noteWithBufferId ' , noteSchema , random ( ) ) ;
var company = $ ( this ) . parents ( ' . innerMarbleWrap ' ) . parents ( ' . marblesWrap ' ) . attr ( ' company ' ) ;:==:var username:==:$ ( this ) . parents ( ' . innerMarbleWrap ' ) . parents ( ' . marblesWrap ' ) . attr ( ' username ' ) ;
var container = this . container ;:==:var canvas:==:this . canvas ;
var n = new accessorNode ( a , new indexNode ( [ b , c ] ) ) ;:==:var e:==:new symbolNode ( ' c ' ) ;
var b = [ ' bar ' ] ;:==:var c:==:a . concat ( b ) ;
var focusedOption = _ ref . focusedOption ;:==:var focusOption:==:_ ref . focusOption ;
var isScrolling = _ ref4 . isScrolling ;:==:var rowData:==:_ ref4 . rowData ;
var async = require ( ' async ' ) ;:==:var nomnom:==:require ( ' nomnom ' ) ;
var handlerFactory = handlerFactory  |  |  undefined ;:==:var handlerFactory2:==:handlerFactory2  |  |  undefined ;
var noWrap = getStyleProperty ( item , styleContextStack , ' noWrap ' , null ) ;:==:var font:==:fontProvider . provideFont ( fontName , bold , italics ) ;
var height = options . height ;:==:var skirtHeight:==:options . skirtHeight ;
var food = _ getFormattedItemReference ( ' items . food ' , _ . keys ( content . food ) , ' numeric quantity ' ) ;:==:var eggs:==:_ getFormattedItemReference ( ' items . eggs ' , _ . keys ( content . eggs ) , ' numeric quantity ' ) ;
var ellipsoid = projection . ellipsoid ;:==:var sunCartographic:==:ellipsoid . cartesianToCartographic ( uniformState . _ sunPositionwc , sunCartographicScratch ) ;
var io = instance . get ( ' io ' ) ;:==:var loaded:==:instance . get ( ' loaded ' ) ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var sass:==:require ( ' gulp - sass ' ) ;
var reactNativePropRegistry = require ( ' reactNativePropRegistry ' ) ;:==:var deepDiffer:==:require ( ' deepDiffer ' ) ;
var delta = deltas [ i ] ;:==:var x:==:cx + delta [ 0 ] ;
var img = document . createElement ( ' img ' ) ;:==:var ip:==:long2ip ( ip_from_long ) ;
var f = foo ( ) ;:==:var g:==:goo ( ) ;
var divide = math . divide ;:==:var bignumber:==:math . bignumber ;
var sourcePosition = traceur . syntax . sourcePosition ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var keyCommandMoveSelectionToEndOfBlock = require ( ' keyCommandMoveSelectionToEndOfBlock ' ) ;:==:var keyCommandMoveSelectionToStartOfBlock:==:require ( ' keyCommandMoveSelectionToStartOfBlock ' ) ;
var request = require ( ' request ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var escodegen = require ( ' escodegen ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var store = new datastore ( tests . data . readOnlyItemFileTestTemplates . getTestData ( ' countries_withdates ' ) ) ;:==:var d:==:new doh . deferred ( ) ;
var from = this . from ;:==:var distance:==:distanceFromIntersection ( from , this . _ direction , position ) ;
var ref = $ this . attr ( ' ref ' ) ;:==:var refUrl:==:$ this . attr ( ' refUrl ' )  |  |  '' ;
var format = imports . format ;:==:var settings:==:imports . settings ;
var add = new operatorNode ( ' + ' , ' add ' , [ a , b , c ] ) ;:==:var multiply:==:new operatorNode ( ' * ' , ' multiply ' , [ a , b , c ] ) ;
var disabled = _ props2 . disabled ;:==:var errorStyle:==:_ props2 . errorStyle ;
var filterKind = data . filterKind ;:==:var jsCommon:==:window . jsCommon ;
var cmp = semver . cmp ;:==:var gte:==:semver . gte ;
var legendPosition = powerbi . visuals . legendPosition ;:==:var legend:==:powerbi . visuals . legend ;
var Auth = $ injector . get ( ' Auth ' ) ;:==:var to:==:$ rootScope . toState ;
var createElement = reactElement . createElement ;:==:var createFactory:==:reactElement . createFactory ;
var repsw = validator . trim ( req . body . repsw )  |  |  '' ;:==:var key:==:validator . trim ( req . body . key )  |  |  '' ;
var handlebars = require ( ' handlebars ' ) ;:==:var reference:==:require ( ' reference ' ) ;
var ALIGNED_AXIS_INDEX = Billboard . ALIGNED_AXIS_INDEX = 10 ;:==:var SCALE_BY_DISTANCE_INDEX:==:Billboard . SCALE_BY_DISTANCE_INDEX    11 ;
var a = new int8Array ( 2 ) ;:==:var b:==:a . subarray ( 2 , 4 ) ;
var utils = require ( ' utils ' ) ;:==:var manager:==:require ( ' homescreen - manager ' ) ;
var title = this . _ title = ;:==:var bb:==:paper . text_bbox ( diagram . title , font ) ;
var deviceInformation = windows . devices . enumeration . deviceInformation ;:==:var deviceClass:==:windows . devices . enumeration . deviceClass ;
var initialState = ' initialState ' ;:==:var firstState:==:' firstState ' ;
var legend = legendAndSeriesInfo . legend . dataPoints ;:==:var seriesSources:==:legendAndSeriesInfo . seriesSources ;
var diameterY = options . diameterY  |  |  options . diameter  |  |  1 ;:==:var diameterZ:==:options . diameterZ  |  |  options . diameter  |  |  1 ;
var bottom = Math . min ( rect . bottom * zoomFactor - this . _ margins . bottom , bodyRect . bottom * zoomFactor ) ;:==:var right:==:math . min ( rect . right * zoomFactor - this . _ margins . right , bodyRect . right * zoomFactor ) ;
var tab = ( aml . getPage ( )  |  |  ) . cloud9tab ;:==:var dark:==:! tab  |  |  tab . classList . names . indexOf ( ' dark ' ) > -1 ;
var signals = editor . signals ;:==:var config:==:editor . config ;
var city = this . _ $ cityPicker . val ( ) . trim ( ) ;:==:var code:==:this . _ code  |  |  null ;
var filePath = filePathNode . value ;:==:var currentFileInfo:==:functionContext . currentFileInfo ;
var moduleRecords = loader . _ loader . moduleRecords ;:==:var module:==:entry . module    getOrCreateModuleRecord ( entry . name , moduleRecords ) ;
var rewire = require ( ' rewire ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var precision = context . components [ c ] . precision ;:==:var reversible:==:codingStyleParameters . reversibleTransformation ;
var tags = extractToSet ( json , ' tags ' ) ;:==:var categories:==:extractToSet ( json , ' categories ' ) ;
var r = processFeature ( dataSource , parent , placemark , entityCollection , styleCollection , sourceUri , uriResolver , promises , context ) ;:==:var entity:==:r . entity ;
var consequent = this . consequent . drop_side_effect_free ( compressor ) ;:==:var alternative:==:this . alternative . drop_side_effect_free ( compressor ) ;
var from = Math . max ( visible . from - cm . options . viewportMargin , 0 ) ;:==:var to:==:math . min ( doc . size , visible . to + cm . options . viewportMargin ) ;
var gltf = model . gltf ;:==:var materials:==:gltf . materials ;
var mode = editor . session . $ mode ;:==:var isSupported:==:exports . isSupportedMode ( mode ) ;
var Datagrid = imports . Datagrid ;:==:var tern:==:imports [ ' language . tern ' ] ;
var writeFile = denodeify ( fs . writeFile ) ;:==:var log:==:denodeify ( require ( ' some - async - logger ' ) ) ;
var marker = this . markers [ key ] ;:==:var range:==:marker . range . clipRows ( config . firstRow , config . lastRow ) ;
var q = options . q  |  |  3 ;:==:var sideOrientation:==:( options . sideOrientation      0 ) ? 0 : options . sideOrientation  |  |  babylon . mesh . defaultside ;
var info = sharedUtil . info ;:==:var isArrayBuffer:==:sharedUtil . isArrayBuffer ;
var column = options . column ;:==:var filename:==:options . filename ;
var b = goog . bind ( getFoo , obj , ' hot ' ) ;:==:var p:==:goog . partial ( b , ' dog ' ) ;
var payload = payloads [ i ] ;:==:var callback:==:payload_callbacks [ payload . source ] ;
var subdivisionsX = this . _ subdivisionsX ;:==:var subdivisionsY:==:this . _ subdivisionsY ;
var closeTop = polygon . closeTop ;:==:var closeBottom:==:polygon . closeBottom ;
var estimate = typeof opts . estimate = = = ' number ' ? opts . estimate : null ;:==:var progress:==:typeof opts . progress      ' function ' ? opts . progress : null ;
var events   = cfg . events  |  |  [ ] ;:==:var callbacks:==:cfg . callbacks  |  |  ;
var r = Number ( regExpResultArray [ 1 ] ) ;:==:var g:==:number ( regExpResultArray [ 2 ] ) ;
var myPos = myPosition  |  |  sap . ui . core . popup . dock . beginBottom ;:==:var atPos:==:atPosition  |  |  sap . ui . core . popup . dock . beginTop ;
var word = Words . findOne ( word_id ) ;:==:var game:==:games . findOne ( word . game_id ) ;
var number = document . querySelector ( ' # number ' ) . value ;:==:var message:==:document . querySelector ( ' # message ' ) . value ;
var q = a1 * a3 + a2Squared - 4 . 0 * a0 ;:==:var r:==:a3Squared * a0 - a1 * a2 * a3 + a1Squared ;
var createThisExpression = parseTreeFactory . createThisExpression ;:==:var createTrueLiteral:==:parseTreeFactory . createTrueLiteral ;
var key = keyValue . key ;:==:var value:==:keyValue . value ;
var panel = $ ( this ) . closest ( ' . panel ' ) ;:==:var state:==:panel . data ( ' state ' ) ;
var rowGetter = _ props3 . rowGetter ;:==:var rowRenderer:==:_ props3 . rowRenderer ;
var project = options . project ;:==:var clientId:==:opts . clientId ;
var height = options . height ;:==:var extrudedHeight:==:options . extrudedHeight ;
var cx = data . getLayout ( ' cx ' ) ;:==:var cy:==:data . getLayout ( ' cy ' ) ;
var q = node . getAttribute ( ' quantity ' ) ;:==:var o:==:node . getAttribute ( ' opacity ' ) ;
var cells = evt . getProperty ( ' cells ' ) ;:==:var parent:==:evt . getProperty ( ' parent ' ) ;
var consequent = node . consequent ? convert ( [ node . consequent ] ) : scope . buildUndefinedNode ( ) ;:==:var alternate:==:node . alternate ? convert ( [ node . alternate ] ) : scope . buildUndefinedNode ( ) ;
var key = goog . string . urlEncode ( keys [ i ] ) ;:==:var value:==:goog . string . urlEncode ( values [ i ] ) ;
var size = calculate_size ( ) ;:==:var terminal:==:terminado . make_terminal ( $ ( ' # terminado - container ' ) [ 0 ] , size , ws_url ) ;
var el = this . el ;:==:var material:==:el . getAttribute ( ' material ' ) ;
var scaleX = ( typeof node . _ scaleX = = = ' number ' ) ? node . _ scaleX : 1 ;:==:var scaleY:==:( typeof node . _ scaleY      ' number ' ) ? node . _ scaleY : 1 ;
var crossvent = require ( ' crossvent ' ) ;:==:var sortable:==:$ ( ' sortable ' ) ;
var path = require ( ' path ' ) ;:==:var spawn:==:require ( ' cross - spawn ' ) ;
var clientX = originalEvent . clientx ;:==:var clienty:==:originalEvent . clienty ;
var GITHUB_ACCESS_TOKEN = process . env . GITHUB_ACCESS_TOKEN ;:==:var exec:==:bbPromise . promisify ( child_process . exec ) ;
var and = Parsers . and ;:==:var not:==:Parsers . not ;
var ok = options . ok  |  |  function ( ) ;:==:var cancel:==:options . cancel  |  |  function ( ) ;
var _ _ f_28 = _ _ v_34 . _ _ f_28 ;:==:var _ _ f_59:==:_ _ v_34 . _ _ f_59 ;
var _ saveSetjmp = module [ ' _ saveSetjmp ' ] = asm [ ' _ saveSetjmp ' ] ;:==:var _ memset:==:module [ ' _ memset ' ]    asm [ ' _ memset ' ] ;
var ctx = this . ctx ;:==:var strokeColor:==:this . current . strokeColor ;
var key = e . keyCode ;:==:var listView:==:that . listView ;
var p = element . _ _ proto _ _ ;:==:var meta:==:element . meta & & element . meta . properties ;
var markdown = require ( ' metalsmith - markdown ' ) ;:==:var layouts:==:require ( ' metalsmith - layouts ' ) ;
var initRowActions = window . initRowActions ;:==:var checkFocus:==:window . checkFocus ;
var h = this . _ state . minimized ;:==:var f:==:! this . _ state . focused ;
var User = app . models . User ;:==:var userIdentity:==:app . models . userIdentity ;
var column = columns [ i ] ;:==:var width:==:widths [ i ] . _ calcWidth ;
var scmp = require ( ' scmp ' ) ;:==:var utils:==:require ( ' keystone - utils ' ) ;
var condition = this . transformAny ( tree . condition ) ;:==:var ifClause:==:this . transformAny ( tree . ifClause ) ;
var exec = require ( ' child_process ' ) . exec ;:==:var me:==:' my_username ' ;
var ul = parent . getElementsByTagName ( ' ul ' ) [ 0 ] ;:==:var display:==:ul . style . display ;
var rename = require ( ' gulp - rename ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var spreadPatternElement = traceur . syntax . trees . spreadPatternElement ;:==:var switchStatement:==:traceur . syntax . trees . switchStatement ;
var blockMapBuilder = require ( ' blockMapBuilder ' ) ;:==:var generateRandomKey:==:require ( ' generateRandomKey ' ) ;
var injector = self . element . injector ( ) ;:==:var compile:==:injector ? injector . get ( ' $ compile ' ) : $ defaultCompile ;
var parent = node . parent ( ) . prev ( ) ;:==:var checked:==:' unchecked ' ;
var amber300 = exports . amber300 = ' # ffd54f ' ;:==:var amber400:==:exports . amber400    ' # ffca28 ' ;
var bignumber = math . bignumber ;:==:var fraction:==:math . fraction ;
var fs = require ( ' fs ' ) ;:==:var querystring:==:require ( ' querystring ' ) ;
var boundingSphere = primitive . getGeometryInstanceAttributes ( ' rect ' ) . boundingSphere ;:==:var center:==:boundingSphere . center ;
var options = context . options [ 0 ]  |  |  ;:==:var skipComments:==:! ! options . skipComments ;
var success = config . success ;:==:var failure:==:config . failure ;
var toolbar = $ ( ' # grid_'+ this . name + ' _ toolbar ' ) ;:==:var fsummary:==:$ ( ' # grid_'+ this . name + ' _ fsummary ' ) ;
var React = require ( ' React ' ) ;:==:var blogPostDate:==:require ( ' blogPostDate ' ) ;
var deltaControllerPosition = this . deltaControllerPosition ;:==:var dolly:==:this . dolly ;
var gen = ref . gen ;:==:var num:==:ref . num ;
var tooltipManager = powerbi . visuals . tooltipManager ;:==:var appendClearCatcher:==:powerbi . visuals . appendClearCatcher ;
var length = polylinesToUpdate . length ;:==:var polylineBuckets:==:this . _ polylineBuckets ;
var a = goog . dom . getElement ( ' a ' ) . contentWindow ;:==:var b:==:goog . dom . getElement ( ' b ' ) . contentWindow ;
var unwrap = scope . unwrap ;:==:var rewrap:==:scope . rewrap ;
var g = this . mesh . geometry . grants [ i ] ;:==:var b:==:this . mesh . skeleton . bones [ g . index ] ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactdomInput:==:require ( ' reactdomInput ' ) ;
var shape = this . shape ;:==:var segs:==:shape . segs ;
var type = request . type ;:==:var data:==:request . data ;
var path   = require ( ' path ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var    LEN = 21 ;:==:var    LENEXT:==:22 ;
var parent = this . element . parent ( ) , o = this . options ;:==:var toggle:==:o . toggleElement ? $ ( o . toggleElement ) : parent . children ( ' . dropdown - toggle ' ) . length > 0 ? parent . children ( ' . dropdown - toggle ' ) : parent . children ( ' a : nth - child ( 1 ) ' ) ;
var User = db . model ( ' gh4329 ' , userSchema ) ;:==:var task:==:db . model ( ' gh4329_0 ' , taskSchema ) ;
var shadowMaps = frameState . shadowHints . shadowMaps ;:==:var lightShadowMaps:==:frameState . shadowHints . lightShadowMaps ;
var bottom = getPropertyAsFloat ( style , ' padding - bottom ' ) ;:==:var top:==:getPropertyAsFloat ( style , ' padding - top ' ) ;
var options = options  |  |  ;:==:var name:==:options . name  |  |  ' template ' ;
var displayNameKeys = powerbi . visuals . slicerUtil . displayNameKeys ;:==:var selectMenu:==:powerbi . visual . controls . selectMenu ;
var username = $ ( ' # username ' ) ;:==:var password:==:$ ( ' # password ' ) ;
var r = Math . sqrt ( dx*dx + dy*dy ) ;:==:var t:==:Math . atan2 ( dy , dx ) ;
var express = require ( ' express ' ) ;:==:var session:==:require ( ' express - session ' ) ;
var triangles = mesh . triangles ;:==:var hullLength:==:mesh . hullLength ;
var MEMBER_LOOKUP_EXPRESSION = ' MEMBER_LOOKUP_EXPRESSION ' ;:==:var METHOD:==:' METHOD ' ;
var parseuri = require ( ' parseuri ' ) ;:==:var parsejson:==:require ( ' parsejson ' ) ;
var eventTime = $ ( ' # bc_eventtimevalue ' ) ;:==:var eventDate:==:$ ( ' # bc_eventdatevalue ' ) ;
var data = session . repl . history . _ data ;:==:var pos:==:session . repl . history . position ;
var main = $ ( this ) . find ( ' form . main ' ) . serializeArray ( ) ;:==:var rewards:==:$ ( this ) . find ( ' form . rewards ' ) . serializeArray ( ) ;
var slicePartitions = ellipsoidGeometry . _ slicePartitions + 1 ;:==:var stackPartitions:==:ellipsoidGeometry . _ stackPartitions + 1 ;
var S = db . model ( ' updateOneStrictSchema ' ) ;:==:var s:==:new s ( name : ' orange crush ' ) ;
var end = options . end ;:==:var endArgs:==:options . endArgs ;
var timeWindowRight = this . _ timeWindowRight ;:==:var timeWindowLeft:==:this . _ timeWindowLeft - this . _ paddingLeftTime ;
var Dimensions = require ( ' Dimensions ' ) ;:==:var f8Header:==:require ( ' f8Header ' ) ;
var sinon = require ( ' sinon ' ) ;:==:var assign:==:require ( ' object - assign ' ) ;
var reactRef = require ( ' reactRef ' ) ;:==:var reactInstrumentation:==:require ( ' reactInstrumentation ' ) ;
var item = items [ i ] ;:==:var jid:==:item . getAttribute ( ' jid ' ) ;
var samples = jsProfileModel . samples ;:==:var timestamps:==:jsProfileModel . timestamps ;
var a = new stdlib . int32Array ( heap ) ;:==:var b:==:new stdlib . float32Array ( heap ) ;
var keys = ! _ isArrayLike ( obj ) & & _ keys ( obj ) ;:==:var length:==:( keys  |  |  obj ) . length ;
var patch = patches [ i ] ;:==:var index:==:patch . index ;
var a = new blogPost ( title : ' searching in mongoose ' ) ;:==:var b:==:new blogPost ( title : ' text search in mongoose ' ) ;
var cssClass = theme . cssClass ;:==:var isDark:==:theme . isDark ;
var lineDisplay = windows . devices . pointOfService . lineDisplay ;:==:var claimedLineDisplay:==:windows . devices . pointOfService . claimedLineDisplay ;
var editor   = this . editor ;:==:var classPrefix:==:this . classPrefix ;
var I16 = new primitiveType ( ' i16 ' , 2 , ' i ' , -32768 , 32767 ) ;:==:var i32:==:new primitiveType ( ' i32 ' , 4 , ' i ' , -0x80000000 , 0x7fffffff ) ;
var config = this . config ;:==:var level:==:config . levelsToShow ;
var request = require ( ' request ' ) ;:==:var zlib:==:require ( ' zlib ' ) ;
var parseTreeValidator = traceur . syntax . parseTreeValidator ;:==:var privateNameSyntaxTransformer:==:traceur . codegeneration . privateNameSyntaxTransformer ;
var req = resp . request ;:==:var operation:==:req . operation ;
var delta = opt_delta  |  |  0 ;:==:var order:==:opt_order  |  |  Blockly . Dart . ORDER_NONE ;
var startX = this . startX ;:==:var height:==:this . height ;
var getContextForSubtree = require ( ' getContextForSubtree ' ) ;:==:var instantiateReactComponent:==:require ( ' instantiateReactComponent ' ) ;
var insert = require ( ' gulp - insert ' ) ;:==:var replace:==:require ( ' gulp - replace ' ) ;
var pkgMain = exports . pkgMain ( context , pkg ) ;:==:var options:==:exports . options ( context ) ;
var valueArray = _ ref . valueArray ;:==:var valueKey:==:_ ref . valueKey ;
var functionDeclaration = traceur . syntax . trees . functionDeclaration ;:==:var identifierExpression:==:traceur . syntax . trees . identifierExpression ;
var child_process = require ( ' child_process ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var scrollLeft = state . scrollLeft ;:==:var scrollTop:==:state . scrollTop ;
var doc = e . doc ;:==:var session:==:e . session ;
var screenX = defaultValue ( options . screenx , 0 ) ;:==:var screeny:==:defaultValue ( options . screeny , 0 ) ;
var target = url . parse ( options . target ) ;:==:var u:==:url . parse ( proxyRes . headers [ ' location ' ] ) ;
var q = readmpInt ( der , ' q ' ) ;:==:var g:==:readmpInt ( der , ' g ' ) ;
var isDownArrow = utilities . isDownArrow ;:==:var cleanInput:==:utilities . cleanInput ;
var view = this . view , buffer = this . view . buffer ;:==:var w:==:view . w , h    view . h ;
var start = this . start ;:==:var end:==:this . end ;
var logErrors = _ options$logErrors = = = undefined ? true : _ options$logErrors ;:==:var collapsed:==:options . collapsed ;
var options = self . options ;:==:var pointers:==:self . pointers ;
var height = parsePercent ( detailModel . get ( ' height ' ) , posInfo . r ) ;:==:var value:==:seriesModel . getData ( ) . get ( ' value ' , 0 ) ;
var constraint = constraints [ i ] ;:==:var a:==:constraint . a , b    constraint . b ;
var e = tree . e = sr2 . firstChild ;:==:var content2:==:tree . content2    e . firstChild ;
var error = sharedUtil . error ;:==:var deprecated:==:sharedUtil . deprecated ;
var _ memcmp = Module [ ' _ memcmp ' ] = asm [ ' _ memcmp ' ] ;:==:var _ strlen:==:Module [ ' _ strlen ' ]    asm [ ' _ strlen ' ] ;
var reconnectSocket = kaefer . reconnectSocket ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var graph = this . editor . graph ;:==:var view:==:graph . view ;
var ribbonCloseArray = options . ribbonCloseArray  |  |  false ;:==:var ribbonClosePath:==:options . ribbonClosePath  |  |  false ;
var sin = Math . sin ( phi ) ;:==:var cos:==:Math . cos ( phi ) ;
var slice = Array . prototype . slice ;:==:var hasOwnProperty:==:object . prototype . hasOwnProperty ;
var createParameterReference = traceur . codegeneration . parseTreeFactory . createParameterReference ;:==:var createParenExpression:==:traceur . codegeneration . parseTreeFactory . createParenExpression ;
var browserify = require ( ' browserify ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var chalk = require ( ' chalk ' ) ;:==:var captains:==:require ( ' captains - log ' ) ;
var child_process = require ( ' child_process ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var width = dds . width ;:==:var height:==:dds . height ;
var h = box . height - 2 * margin ;:==:var rect:==:this . draw_rect ( x , y , w , h ) ;
var textOp = firepad . textOp ;:==:var h:==:helpers ;
var blue100 = exports . blue100 = ' # bbdefb ' ;:==:var blue200:==:exports . blue200    ' # 90caf9 ' ;
var colLeft = t . colLeft ;:==:var colRight:==:t . colRight ;
var lightGreen700 = exports . lightGreen700 = ' # 689f38 ' ;:==:var lightGreen800:==:exports . lightGreen800    ' # 558b2f ' ;
var norm = numeric . norminf , any = numeric . any , min = Math . min ;:==:var all:==:numeric . all , gt    numeric . gt ;
var spawnSync = require ( ' child_process ' ) . spawnSync ;:==:var path:==:require ( ' path ' ) ;
var b = pixel . b ;:==:var a:==:pixel . a ;
var start = util . convert ( this . body . range . start , ' Number ' ) ;:==:var end:==:util . convert ( this . body . range . end , ' Number ' ) ;
var utils = client . utils ;:==:var renderer:==:client . renderer ;
var   TYPE = 12 ;:==:var   TYPEDO:==:13 ;
var buttons = data . buttons ;:==:var step:==:data . step ;
var width = cluster . width = cluster . width * factor ;:==:var height:==:cluster . height    cluster . height * factor ;
var ctx = this . _ ctx ;:==:var canvas:==:this . _ canvas ;
var glob = require ( ' glob ' ) . sync ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var topic_id = req . params . topic_id ;:==:var reply_id:==:req . body . reply_id ;
var det = math . det ;:==:var diag:==:math . diag ;
var resources = $ ( ' div#resources ' ) ;:==:var special:==:$ ( ' div#special ' ) ;
var pickIds = this . _ pickIds ;:==:var length:==:pickIds . length ;
var y = temp . y ;:==:var z:==:temp . z ;
var g = generator ;:==:var len:==:g ( ) . toString ( ) . length ;
var touchableHighlight = require ( ' touchableHighlight ' ) ;:==:var view:==:require ( ' view ' ) ;
var heightOffset = defaultValue ( structure . heightOffset , heightmapTessellator . default_structure . heightOffset ) ;:==:var elementsPerHeight:==:defaultValue ( structure . elementsPerHeight , heightmapTessellator . default_structure . elementsPerHeight ) ;
var sourceFile = traceur . syntax . sourceFile ;:==:var moduleAnalyzer:==:traceur . semantics . moduleAnalyzer ;
var fs = require ( ' fs ' ) ;:==:var marked:==:require ( ' marked ' ) ;
var propertyiDs = this . propertyiDs ;:==:var timelines:==:entry . animation . timelines ;
var object = state . objects [ i ] ;:==:var geometry:==:object . geometry ;
var assert = require ( ' assert ' ) ;:==:var expect:==:require ( ' chai ' ) . expect ;
var firstEdgeIndexes = this . _ firstEdgeIndexes ;:==:var nodeCount:==:this . nodeCount ;
var x = hw + dx ;:==:var y:==:hh + dy ;
var errorSource = telemetry . errorSource ;:==:var jsCommon:==:window . jsCommon ;
var firstTaskIndex = info . firstTaskIndex ;:==:var lastTaskIndex:==:info . lastTaskIndex ;
var categoryAxis = dataViewMetadata . objects [ ' categoryAxis ' ] ;:==:var valueAxis:==:dataViewMetadata . objects [ ' valueAxis ' ] ;
var htmldomPropertyConfig = require ( ' htmldomPropertyConfig ' ) ;:==:var reactBrowserEventEmitter:==:require ( ' reactBrowserEventEmitter ' ) ;
var path = require ( ' path ' ) ;:==:var badge:==:require ( path . join ( _ _ dirname , ' lib ' , ' badge . js ' ) ) ;
var gulp = require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;:==:var minimatch:==:require ( ' minimatch ' ) ;
var localPdfManager = corePdfManager . localPdfManager ;:==:var networkPdfManager:==:corePdfManager . networkPdfManager ;
var east = rectangle . east ;:==:var north:==:rectangle . north ;
var times = this . times ;:==:var inTangents:==:this . inTangents ;
var unit = texture . unit ;:==:var target:==:texture . target ;
var getRowAction = window . getRowAction ;:==:var getSelectAll:==:window . getSelectAll ;
var textOne = this . textOne ;:==:var textTwo:==:this . textTwo ;
var util = imports . util ;:==:var c9:==:imports . c9 ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var concat:==:require ( ' concat - stream ' ) ;
var s = this . _ hsv [ 1 ] ;:==:var v:==:this . _ hsv [ 2 ] ;
var path = require ( ' path ' ) ;:==:var os:==:require ( ' os ' ) ;
var uri = item . data . uri ;:==:var text:==:item . data . text ;
var groupId = group . groupId ( ) ;:==:var traits:==:group . traits ( ) ;
var rotation = parseFloat ( dom . rotation . value ) ;:==:var font:==:weight + ' ' + size + ' ' + dom . font . value ;
var onMouseLeave = _ props . onMouseLeave ;:==:var onMouseEnter:==:_ props . onMouseEnter ;
var abs = Math . abs ;:==:var now:==:Date . now ;
var stringify = utils . stringify ;:==:var type:==:utils . type ;
var IMPORT_DECLARATION = ' IMPORT_DECLARATION ' ;:==:var IMPORT_SPECIFIER:==:' IMPORT_SPECIFIER ' ;
var seed = select ( ' # seed ' ) ;:==:var submit:==:select ( ' # submit ' ) ;
var showCurrentAtPos = this . _ get ( inst , ' showCurrentAtPos ' ) ;:==:var stepMonths:==:this . _ get ( inst , ' stepMonths ' ) ;
var dataParser = dragonBones . dataParser ;:==:var textureData:==:dragonBones . textureData ;
var session = this . session ;:==:var actionId:==:el . getAttribute ( ' actionId ' ) ;
var i d = $ ( this ) . attr ( ' dialog_id ' ) ;:==:var title:==:$ ( this ) . attr ( ' dialog_title ' ) ? $ ( this ) . attr ( ' dialog_title ' ) : '' ;
var SQRT1_2 = stdlib . Math . SQRT1_2 ;:==:var SQRT2:==:stdlib . Math . SQRT2 ;
var placeholder = instance . get ( ' placeholder ' ) ;:==:var proxyNode:==:instance . get ( ' proxyNode ' ) ;
var util = require ( ' util ' ) ;:==:var path:==:require ( ' path ' ) ;
var state    = this . state ;:==:var settings:==:this . settings ;
var naturalWidth = precomputedFeatures ? precomputedFeatures . naturalWidth : imageElement . naturalWidth ;:==:var naturalHeight:==:precomputedFeatures ? precomputedFeatures . naturalHeight : imageElement . naturalHeight ;
var dynCall_viiiiiiiiiiiii = Module [ ' dynCall_viiiiiiiiiiiii ' ] = asm [ ' dynCall_viiiiiiiiiiiii ' ] ;:==:var dynCall_di:==:Module [ ' dynCall_di ' ]    asm [ ' dynCall_di ' ] ;
var SYNC_CALCULATION_LIMIT = Handsontable . plugins . autoRowSize . sync_calculation_limit ;:==:var calculation_step:==:handsontable . plugins . autoRowSize . calculation_step ;
var dynCall_iiii = Module [ ' dynCall_iiii ' ] = asm [ ' dynCall_iiii ' ] ;:==:var dynCall_vii:==:Module [ ' dynCall_vii ' ]    asm [ ' dynCall_vii ' ] ;
var dom = goog . dom . getDomHelper ( root ) ;:==:var e:==:dom . getElement ( target ) ;
var width = size . width  |  |  size ;:==:var height:==:size . height  |  |  size ;
var leaveCancelled = ref . leaveCancelled ;:==:var delayLeave:==:ref . delayLeave ;
var el = this . el ;:==:var renderer:==:el . renderer ;
var title = task . title ;:==:var completed:==:task . completed ;
var integerOverflow = caml_exceptions . create ( ' numeric_error . integerOverflow ' ) ;:==:var integerDivideByZero:==:caml_exceptions . create ( ' numeric_error . integerDivideByZero ' ) ;
var pooledClass = require ( ' pooledClass ' ) ;:==:var reactElement:==:require ( ' reactElement ' ) ;
var noop   = angular . noop ;:==:var extend:==:angular . extend ;
var inTangents = this . inTangents ;:==:var outTangents:==:this . outTangents ;
var revenue = this . proxy ( ' properties . revenue ' ) ;:==:var event:==:this . event ( ) ;
var keys = Object . keys ( path ) ;:==:var len:==:keys . length ;
var tooltipBuilder = powerbi . visuals . tooltipBuilder ;:==:var selectionId:==:powerbi . visuals . selectionId ;
var isShiftHeld = function isShiftHeld ( e ) return e . shiftKey = = = true ; ;:==:var isKey:==:function isKey ( keyCode )
var localFrom = intersecttrimesh_localfrom ;:==:var localTo:==:intersecttrimesh_localto ;
var r = renderer  |  |  constants . P2D ;:==:var c:==:document . createElement ( ' canvas ' ) ;
var atNameExpression = traceur . syntax . trees . atNameExpression ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var primitive = groundPrimitive . _ primitive ;:==:var length:==:primitive . _ va . length * 3 ;
var express = require ( ' express ' ) ;:==:var less:==:require ( ' less - middleware ' ) ;
var w = $ ( window ) . height ( ) ;:==:var h:==:$ ( ' # nav ' ) . outerHeight ( ) ;
var el = this . el ;:==:var animationEl:==:this . animationEl ;
var stRotation = geometry . _ stRotation ;:==:var extrudedHeight:==:geometry . _ extrudedHeight ;
var createGetAccessor = parseTreeFactory . createGetAccessor ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var sopMarkerUsed = context . cod . sopMarkerUsed ;:==:var ephMarkerUsed:==:context . cod . ephMarkerUsed ;
var w = i * width * 4 + j * 4 ;:==:var pixel:==:~~ ( pixels [ w ] * 0 . 299 + pixels [ w + 1 ] * 0 . 587 + pixels [ w + 2 ] * 0 . 114 ) ;
var jsonResultsAdapter = breeze . jsonResultsAdapter ;:==:var abstractDataServiceAdapter:==:breeze . abstractDataServiceAdapter ;
var message = _ ref4 . message ;:==:var assert:==:_ ref4 . assert ;
var removed = collection . _ removedEntities ;:==:var changed:==:collection . _ changedEntities ;
var y = gridGeo . vertices [ i ] . position . y ;:==:var z:==:gridGeo . vertices [ i ] . position . z ;
var lastRenderedStopIndex = _ ref2 . lastRenderedStopIndex ;:==:var startIndex:==:_ ref2 . startIndex ;
var webview = dce ( ' webview ' ) ;:==:var tab:==:browser . tabs . append ( webview ) ;
var data = pes . data ;:==:var length:==:data . length ;
var React = require ( ' React ' ) ;:==:var recordingModule:==:require ( ' nativeModules ' ) . datePickerDialogRecordingModule ;
var path = require ( ' path ' ) ;:==:var Package:==:require ( ' dgeni ' ) . Package ;
var base = this . _ baseRect ;:==:var current:==:this . _ currentRect ;
var buffer = this . _ buffer ;:==:var method:==:this . method ;
var createBoundCall = parseTreeFactory . createBoundCall ;:==:var createBreakStatement:==:parseTreeFactory . createBreakStatement ;
var disconnected = ' disconnected ' ;:==:var connected:==:' connected ' ;
var indigoA200 = exports . indigoA200 = ' # 536dfe ' ;:==:var indigoA400:==:exports . indigoA400    ' # 3d5afe ' ;
var events = this . events ( track . event ( ) ) ;:==:var revenue:==:track . revenue ( )  |  |  0 ;
var n = x0 . length ;:==:var f0:==:f ( x0 ) , f1,df0 ;
var timingFunctionUtils = require ( ' timingFunctionUtils ' ) ;:==:var stepEditorTemplate:==:require ( ' text!StepEditorTemplate . html ' ) ;
var int16 = Fn . int16 ;:==:var TAU:==:Fn . TAU ;
var op = $ ( this ) . attr ( ' gs_op ' ) ;:==:var store_id:==:$ ( this ) . attr ( ' gs_store_id ' ) ;
var registerTransientObservers = scope . registerTransientObservers ;:==:var registerWrapper:==:scope . registerWrapper ;
var lower = ( options & & options . lower ! = = undefined ) ? options . lower : 1e-3 ;:==:var upper:==:( options & & options . upper !    undefined ) ? options . upper : 1e+5 ;
var parseTreeType = traceur . syntax . parseTreeType ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var aria = goog . a11y . aria ;:==:var State:==:goog . a11y . aria . State ;
var velocityX = e . gesture . velocityX ;:==:var x:==:e . gesture . center . x ;
var concat = require ( ' gulp - concat ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var lineColor = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . lineColor , solid : color : defaultColor ) ;:==:var transparency:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . transparency , 50 ) ;
var intValue = rounded . intValue ;:==:var fracValue:==:rounded . fracValue ;
var preload = imports [ ' layout . preload ' ] ;:==:var anims:==:imports . anims ;
var height = _ props6 . height ;:==:var scrollToAlignment:==:_ props6 . scrollToAlignment ;
var browser_version = zombie_array [ index ] [ ' browser_version ' ] ;:==:var browser_icon:==:zombie_array [ index ] [ ' browser_icon ' ] ;
var bufLen = alias ( ' bufLen ' , u32 ) ;:==:var bufPtr:==:alias ( ' bufPtr ' , voidPtr ) ;
var arg = args . join ( ' ' ) ;:==:var config:==:ctx . config . highlight  |  |  ;
var isopackCache = options . isopackCache ;:==:var acceptableWeakPackages:==:options . acceptableWeakPackages  |  |  ;
var allOptions = _ _ webpack_require _ _ ( 157 ) . allOptions ;:==:var configureOptions:==:_ _ webpack_require _ _ ( 157 ) . configureOptions ;
var colorAllocatorFactory = options . colorAllocatorFactory ;:==:var transformSelects:==:options . transformSelects ;
var reactdomFiberComponent = require ( ' reactdomFiberComponent ' ) ;:==:var reactdomFrameScheduling:==:require ( ' reactdomFrameScheduling ' ) ;
var environmentState = scene . _ environmentState ;:==:var useGlobeDepthFramebuffer:==:environmentState . useGlobeDepthFramebuffer ;
var events = require ( ' events ' ) ;:==:var path:==:require ( ' path ' ) ;
var extrude = rectangleGeometry . _ extrude ;:==:var extrudedHeight:==:rectangleGeometry . _ extrudedHeight ;
var dpr = this . dpr ;:==:var dom:==:this . dom ;
var storage = this . _ storage = ;:==:var indices:==:this . indices    [ ] ;
var api = imports . api ;:==:var fs:==:imports . fs ;
var a_part = a_parts [ i ] ;:==:var b_part:==:b_parts [ i ] ;
var IDENTIFIER_EXPRESSION = parseTreeType . identifier_expression ;:==:var import_declaration:==:parseTreeType . import_declaration ;
var getAnimationDuration = powerbi . visuals . animatorCommon . getAnimationDuration ;:==:var getTailoredTextOrDefault:==:powerbi . textMeasurementService . getTailoredTextOrDefault ;
var maximumLevel = options . maximumLevel ;:==:var tilingScheme:==:defined ( options . tilingScheme ) ? options . tilingScheme : new webMercatorTilingScheme ( ellipsoid : options . ellipsoid ) ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var dataRoleHelper:==:powerbi . data . dataRoleHelper ;
var subplotsRegistry = plots . subplotsRegistry ;:==:var transformsRegistry:==:plots . transformsRegistry ;
var protocol = require ( ' protocol ' ) ;:==:var send:==:require ( ' send - json ' ) ;
var installer = imports . installer ;:==:var readTabOrFile:==:imports [ ' language . worker_util_helper ' ] . readTabOrFile ;
var rangeNode = math . expression . node . rangeNode ;:==:var objectNode:==:math . expression . node . objectNode ;
var resolve = path . resolve ;:==:var vary:==:require ( ' vary ' ) ;
var cameraRotationHelper = sdkSample . cameraRotationHelper ;:==:var capture:==:windows . media . capture ;
var d = self . definition ( ) ;:==:var fixed:==:self . fixed_value ( ) ;
var $ = this . $ ;:==:var parent:==:$ . parentNode ;
var collabPanel = imports . collabPanel ;:==:var ui:==:imports . ui ;
var actions = scheduler . actions ;:==:var index:==:actions . indexOf ( this ) ;
var tab   = req . body . tab ;:==:var content:==:req . body . t_content ;
var newValue = context . newValue ;:==:var dataType:==:property . dataType ;
var user = this . user ? this . user . get ( ' login ' ) : this . repo . get ( ' owner ' ) . login ;:==:var permissions:==:this . repo ? this . repo . get ( ' permissions ' ) : undefined ;
var height = corridor . height ;:==:var extrudedHeight:==:corridor . extrudedHeight ;
var paper = this . _ paper ;:==:var font:==:this . _ font ;
var keyEscapeUtils = require ( ' keyEscapeUtils ' ) ;:==:var reactFeatureFlags:==:require ( ' reactFeatureFlags ' ) ;
var reviver = math . json . reviver ;:==:var Range:==:math . type . Range ;
var undoManager = firepad . undoManager ;:==:var wrappedOperation:==:firepad . wrappedOperation ;
var rangeToSegments = t . rangeToSegments ;:==:var formatDate:==:calendar . formatDate ;
var width = defaultValue ( viewport . width , 0 . 0 ) ;:==:var height:==:defaultValue ( viewport . height , 0 . 0 ) ;
var animation = axisPointerModel . get ( ' animation ' ) ;:==:var axis:==:axisModel . axis ;
var alpha = options . series . pie . shadow . alpha ;:==:var radius:==:options . series . pie . radius > 1 ? options . series . pie . radius : maxRadius * options . series . pie . radius ;
var f8Colors = require ( ' f8Colors ' ) ;:==:var f8MapView:==:require ( ' f8MapView ' ) ;
var bind = utils . bind ;:==:var debug:==:utils . debug ;
var util = AWS . util ;:==:var typeOf:==:_ _ webpack_require _ _ ( 407 ) . typeOf ;
var bigInteger = require ( ' jsbn ' ) . bigInteger ;:==:var crypto:==:require ( ' crypto ' ) ;
var restitution = options . restitution ;:==:var n:==:this . normal ;
var initData = this . initData ;:==:var startdts:==:mp4Demuxer . startdts ( initData , data ) ;
var stat = files . statOrNull ( absPath ) ;:==:var mustNotExist:==:self . _ mustNotExist ( absPath ) ;
var cfgFields = goog . net . xpc . cfgFields ;:==:var crossPageChannel:==:goog . net . xpc . crossPageChannel ;
var children = _ props . children ;:==:var color:==:_ props . color ;
var e = self . handlers [ event ] ;:==:var index:==:indexOf ( e , callback ) ;
var v = p . value ;:==:var own:==:p . isOwn ? ' own ' : ' inherited ' ;
var show = dataViewObjects . getValue ( objects , mekkoChart . properties [ ' columnBorder ' ] [ ' show ' ] , mekkoChart . defaultSettings . columnBorder . show ) ;:==:var color:==:dataViewObjects . getFillColor ( objects , mekkoChart . properties [ ' columnBorder ' ] [ ' color ' ] , mekkoChart . defaultSettings . columnBorder . color ) ;
var state = this . _ states [ index ] ;:==:var renderable:==:this . _ renderables [ index ] ;
var width = elevationImage . width ;:==:var height:==:elevationImage . height ;
var level2 = db . model ( ' gh3974_0 ' , level2Schema ) ;:==:var level1:==:db . model ( ' gh3974_1 ' , level1Schema ) ;
var assign = require ( ' object - assign ' ) ;:==:var utils:==:require ( ' keystone - utils ' ) ;
var m = new THREE . Matrix4 ( ) . makePerspective ( -1 , 1 , 1 , -1 , 1 , 100 ) ;:==:var a:==:new three . frustum ( ) . setFromMatrix ( m ) ;
var knownLibraryId = windows . storage . knownLibraryId ;:==:var applicationData:==:windows . storage . applicationData ;
var guid = element . attr ( ' data - guid ' ) ;:==:var lat:==:element . attr ( ' data - lat ' ) ;
var min = item . min . codePoint ;:==:var max:==:item . max . codePoint ;
var def = this . _ definition [ attr ] ;:==:var type:==:def . type ;
var indices = this . indices ;:==:var length:==:indices . length ;
var random = utils . random ;:==:var Schema:==:mongoose . Schema ;
var cache = instance . get ( ' cache ' ) ;:==:var io:==:instance . get ( ' io ' ) ;
var path   = require ( ' path ' ) ;:==:var micromatch:==:require ( ' micromatch ' ) ;
var leftDelim = ( typeof config . mode . leftDelimiter ! = ' undefined ' ) ? config . mode . leftDelimiter : ' ' ;:==:var rightDelim:==:( typeof config . mode . rightDelimiter !   ' undefined ' ) ? config . mode . rightDelimiter : ' ' ;
var flash = require ( ' connect - flash ' ) ;:==:var morgan:==:require ( ' morgan ' ) ;
var params = this . params ;:==:var bodyA:==:this . bodyA ;
var scene = editor . scene ;:==:var sceneHelpers:==:editor . sceneHelpers ;
var x = gridline . x ;:==:var y:==:gridline . y ;
var def = accent : true ; if ( this . stack . env . font ) def . mathvariant = this . stack . env . fontvar mm:==:l:==:this . mmlToken ( mml . mo ( mml . entity ( ' # x'+accent ) ) . with ( def ) ) ;
var oldValue = event . detail . oldValue ;:==:var sortFunction:==:this . _ sortFunction ;
var colorHelper = powerbi . visuals . colorHelper ;:==:var createInteractivityService:==:powerbi . visuals . createInteractivityService ;
var root = instance . root ;:==:var doc:==:root . document ;
var tvdb_id = _ this . model . get ( ' tvdb_id ' ) ;:==:var imdb_id:==:_ this . model . get ( ' imdb_id ' ) ;
var remotingContext = context . remotingContext ;:==:var model:==:context . model ;
var paramNames = _ compilePattern2 . paramNames ;:==:var tokens:==:_ compilePattern2 . tokens ;
var name = info . name ;:==:var data:==:info . data ;
var cos = Math . cos ( -angle ) ;:==:var sin:==:Math . sin ( -angle ) ;
var gulp = require ( ' gulp ' ) ;:==:var documentation:==:require ( ' gulp - documentation ' ) ;
var xref = this . xref ;:==:var handler:==:this . handler ;
var FALSE1 = C . FALSE1 = 0x31 ;:==:var FALSE2:==:C . FALSE2    0x32 ;
var getInvalidValueWarnings = powerbi . visuals . getInvalidValueWarnings ;:==:var dataLabelUtils:==:powerbi . visuals . dataLabelUtils ;
var oKey = this . _ oKey = key . clone ( ) ;:==:var iKey:==:this . _ iKey    key . clone ( ) ;
var originatesFromRejection = errors . originatesFromRejection ;:==:var markAsOriginatingFromRejection:==:errors . markAsOriginatingFromRejection ;
var Self = makeParamDecorator ( ' self ' , [ ] ) ;:==:var skipSelf:==:makeParamDecorator ( ' skipSelf ' , [ ] ) ;
var castError = error . castError ;:==:var validatorError:==:error . validatorError ;
var e = new Error ( ' message ' ) ;:==:var keys:==:Object . keys ( e ) ;
var createAssignStateStatement = parseTreeFactory . createAssignStateStatement ;:==:var createBlock:==:parseTreeFactory . createBlock ;
var Q = new _ cg ( 2 , 3 , ' Q ' ) ;:==:var H:==:new _ cg ( 3 , 2 , ' H ' ) ;
var clientWidth = self . _ _ clientWidth ;:==:var clientHeight:==:self . _ _ clientHeight ;
var runtime = options . runtime ;:==:var basepath:==:options . basepath ;
var to = _ props . to ;:==:var query:==:_ props . query ;
var current = formatTagNumber ( currentVersion ) ;:==:var latest:==:formatTagNumber ( latestVersion ) ;
var y = fromAxisAngleScratch . y * s ;:==:var z:==:fromAxisAngleScratch . z * s ;
var keyLoader = new _ keyLoader2 . default ( this ) ;:==:var id3TrackController:==:new _ id3TrackController2 . default ( this ) ;
var geom = feature . geometry ;:==:var center:==:this . center ;
var string = require ( ' string ' ) ;:==:var path:==:require ( ' path ' ) ;
var client = this . client ;:==:var section:==:client . api . page . simplePageObj ( ) . section . signUp ;
var Plugin = imports . Plugin ;:==:var cache:==:imports [ ' vfs . cache ' ] ;
var util = imports . util ;:==:var fs:==:imports . fs ;
var fs = require ( ' fs ' ) ;:==:var child:==:require ( ' child_process ' ) ;
var Stream = stream . Stream ;:==:var eventEmitter:==:events . eventEmitter ;
var el = $ ( opts . el  |  |  ' . fc - event : first ' ) ;:==:var row:==:opts . row  |  |  0 ;
var arg1 = this . arg1 . f ( obj ) ;:==:var arg2:==:this . arg2 . f ( obj ) ;
var primitives = scene . primitives ;:==:var groundPrimitives:==:scene . groundPrimitives ;
var trim    = String . prototype . trim ;:==:var trimLeft:==:string . prototype . trimLeft ;
var axi = gd . _ fullLayout [ updates [ updatedAxisIds [ i ] ] . axisName ] ;:==:var to:==:updates [ updatedAxisIds [ i ] ] . to ;
var connect = require ( ' connect ' ) ;:==:var express:==:require ( ' express ' ) ;
var Plugin = imports . Plugin ;:==:var editors:==:imports . editors ;
var slice = array . slice ;:==:var toString:==:( ) . toString ;
var sequence = require ( ' run - sequence ' ) ;:==:var inquirer:==:require ( ' inquirer ' ) ;
var eachline = require ( ' eachline ' ) ;:==:var p:==:child_process . spawn ( file , args , opts ) ;
var object = require ( ' object - component ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' socket . io - client : manager ' ) ;
var nodes = this . body . nodes ;:==:var velocities:==:this . physicsBody . velocities ;
var util = require ( ' util ' ) ;:==:var async:==:require ( ' async ' ) ;
var timePickerAndroid = require ( ' timePickerAndroid ' ) ;:==:var react:==:require ( ' react ' ) ;
var ui = imports . ui ;:==:var settings:==:imports . settings ;
var execSync = require ( ' child_process ' ) . execSync ;:==:var chalk:==:require ( ' chalk ' ) ;
var x = moves [ i ] . start . x ;:==:var y:==:moves [ i ] . start . y ;
var io = require ( ' socket . io ' ) ( server ) ;:==:var path:==:require ( ' path ' ) ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var slimerjs:==:require ( ' slimerjs ' ) ;
var frames = rotateTimeline . frames ;:==:var bone:==:skeleton . bones [ rotateTimeline . boneIndex ] ;
var Tcp = require ( ' marionette - client ' ) . Drivers . Tcp ;:==:var client:==:marionette . client ( driver : Tcp ) ;
var Post = hexo . model ( ' Post ' ) ;:==:var postAsset:==:hexo . model ( ' postAsset ' ) ;
var transaction = database . transaction ( [ ' states ' ] , ' readwrite ' ) ;:==:var objectStore:==:transaction . objectStore ( ' states ' ) ;
var fakexmlHttpRequest = fakeXhr . fakexmlHttpRequest ;:==:var assert:==:referee . assert ;
var qunit   = require ( ' gulp - qunit ' ) ;:==:var babel:==:require ( ' gulp - babel ' ) ;
var clone = zrUtil . clone ;:==:var bind:==:zrUtil . bind ;
var yaml = require ( ' js - yaml ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var z = temp . z ;:==:var w:==:temp . w ;
var analytics = imports [ ' c9 . analytics ' ] ;:==:var alert:==:imports [ ' dialog . alert ' ] . show ;
var link = env . link ;:==:var global:==:env . global ;
var _ i d = schema . options . _ i d ;:==:var i d:==:schema . options . i d ;
var value = element ( by . binding ( ' example . value  |  date : ' yyyy - Www ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var cellSize = _ ref . cellSize ;:==:var computeMetadataCallback:==:_ ref . computeMetadataCallback ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var subscribable:==:require ( ' subscribable ' ) ;
var app = this . app ;:==:var model:==:app . models [ modelName ] ;
var grid   = $ ( this . box ) . find ( ' > div . w2ui - grid - box ' ) ;:==:var header:==:$ ( ' # grid_'+ this . name + ' _ header ' ) ;
var config = configService . getSync ( ) . wallet ;:==:var unitToSatoshi:==:config . settings . unitToSatoshi ;
var assert = require ( ' chai ' ) . assert ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var panels = imports . panels ;:==:var ui:==:imports . ui ;
var chart = me . chart ;:==:var datasets:==:chart . data . datasets ;
var damping = opts . damping  |  |  4 . 5 ;:==:var elasticity:==:opts . elasticity  |  |  6 ;
var aborted = _ props . aborted ;:==:var color:==:_ props . color ;
var x = daysSinceEpoch - firstIndex * this . _ stepSizeDays ;:==:var work:==:this . _ work ;
var args = util . args ;:==:var Server:==:require ( ' karma ' ) . Server ;
var appendText = this . _ get ( inst , ' appendText ' ) ;:==:var isrtl:==:this . _ get ( inst , ' isrtl ' ) ;
var indexableKeysToKeyValues = docData . indexableKeysToKeyValues ;:==:var changes:==:docData . changes ;
var context = this . context ;:==:var options:==:this . options ;
var props = this . props ;:==:var w:==:extractNumber ( props . width , 0 ) ;
var wtTable = this . hot . view . wt . wtTable ;:==:var td:==:priv . target . td ;
var node = e . node ;:==:var action:==:e . action ;
var document = window . document ;:==:var documentElement:==:document . documentElement ;
var strSlice = struct ( ' strSlice ' ) ;:==:var writeBinaryOptions:==:struct ( ' writeBinaryOptions ' ) ;
var arguments = scenarioTest . operation . arguments ;:==:var fieldName:==:arguments . fieldName ;
var teal50 = exports . teal50 = ' # e0f2f1 ' ;:==:var teal100:==:exports . teal100    ' # b2dfdb ' ;
var Stream = require ( ' stream ' ) . Stream ;:==:var crypto:==:require ( ' crypto ' ) ;
var overflowWrapper = that . _ overflowWrapper ( ) ;:==:var element:==:( overflowWrapper  |  |  that . element ) ;
var min = Math . min ( width , height ) ;:==:var x:==:obj . x     null ? 0 . 5 : obj . x ;
var codeBuf = this . codeBuf ;:==:var bytes:==:this . bytes ;
var continueStatement = traceur . syntax . trees . continueStatement ;:==:var defaultClause:==:traceur . syntax . trees . defaultClause ;
var instanceCameras = data . instanceCameras ;:==:var instanceLights:==:data . instanceLights ;
var target = e . target  |  |  e . fromElement ;:==:var relatedTarget:==:e . relatedTarget  |  |  e . toElement ;
var top = a . top ;:==:var height:==:a . height ;
var save = imports . save ;:==:var ui:==:imports . ui ;
var variableStatement = traceur . syntax . trees . variableStatement ;:==:var whileStatement:==:traceur . syntax . trees . whileStatement ;
var d = a . thread_ctx _ ;:==:var e:==:cf [ a . filter_type _ ] ;
var range = scale . range ( ) ;:==:var domain:==:scale . domain ( ) ;
var eventPluginUtils = require ( ' eventPluginUtils ' ) ;:==:var rctEventEmitter:==:require ( ' rctEventEmitter ' ) ;
var day = options . day ;:==:var hour:==:options . hour ;
var ALIGNED_AXIS_INDEX = Billboard . ALIGNED_AXIS_INDEX ;:==:var SCALE_BY_DISTANCE_INDEX:==:Billboard . SCALE_BY_DISTANCE_INDEX ;
var user = msg . user . toLowerCase ( ) ;:==:var text:==:$ scope . query . text . toLowerCase ( ) ;
var Router = require ( ' express ' ) . Router ;:==:var url:==:require ( ' url ' ) ;
var createForOfStatement = traceur . codegeneration . parseTreeFactory . createForOfStatement ;:==:var createVariableDeclarationList:==:traceur . codegeneration . parseTreeFactory . createVariableDeclarationList ;
var color = this . color . buildCode ( builder , ' c ' , slot : ' color ' ) ;:==:var specular:==:this . specular . buildCode ( builder , ' c ' ) ;
var key = keyCode ;:==:var keyIdentifier:==:be . keyIdentifier ;
var col = geometry . attributes . color . array ;:==:var v:==:lineGeo . vertices ;
var colorHelper = powerbi . visuals . colorHelper ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var fs     = require ( ' fs ' ) ;:==:var prompt:==:require ( ' prompt - sync ' ) ;
var tr = $ ( ' < tr > ' ) ;:==:var r:==:result [ range ] ;
var metrics = imports . metrics ;:==:var apf:==:imports . apf ;
var S = db . model ( ' updateStrictSchema ' ) ;:==:var s:==:new s ( name : ' orange crush ' ) ;
var gltf = model . gltf ;:==:var techniques:==:gltf . techniques ;
var p = this . _ props ;:==:var Shape:==:shapesMap . getShape ( this . _ props . shape ) ;
var onAfterValidate = jasmine . createSpy ( ' onAfterValidate ' ) ;:==:var onBeforeChange:==:jasmine . createSpy ( ' onBeforeChange ' ) ;
var BSON = require ( ' mongodb ' ) . bsonPure ;:==:var mongodb:==:require ( ' mongodb ' ) ;
var next = this . shared . next ;:==:var scale_upto:==:this . shared . scale_upto ;
var mDependencies = mChangesMap . mDependencies ;:==:var mDependentChangesOnMe:==:mChangesMap . mDependentChangesOnMe ;
var onLoad = options . onLoad ;:==:var preload:==:options . preload  |  |  noop ;
var flatCoordinates = gxTrackObject . flatCoordinates ;:==:var s:==:ol . xml . getAllTextContent ( node , false ) ;
var blue800 = exports . blue800 = ' # 1565c0 ' ;:==:var blue900:==:exports . blue900    ' # 0d47a1 ' ;
var credit1 = new Credit ( ' credit1 ' ) ;:==:var credit2:==:new Credit ( ' credit2 ' ) ;
var selectionState = require ( ' selectionState ' ) ;:==:var applyEntityToContentState:==:require ( ' applyEntityToContentState ' ) ;
var setInnerhtml = scope . setInnerhtml ;:==:var unwrap:==:scope . unwrap ;
var breakpoints = this . c . breakpoints ;:==:var breakpoint:==:breakpoints [ 0 ] . name ;
var async = require ( ' async ' ) ;:==:var basename:==:require ( ' path ' ) . basename ;
var t = height - pbottom . sizeCalculated ;:==:var w:==:width ;
var start = this . multiselection . start ;:==:var end:==:this . multiselection . end  |  |  this . multiselection . start ;
var top = base . top ;:==:var left:==:base . left ;
var egg = data . params . egg ;:==:var hatchingPotion:==:data . params . hatchingPotion ;
var canvas = this . shared . canvas ;:==:var interval:==:this . shared . interval ;
var x = data [ i ] . x ;:==:var y:==:data [ i ] . y ;
var channelRequest = goog . labs . net . webChannel . channelRequest ;:==:var requestStats:==:goog . labs . net . webChannel . requestStats ;
var callButton = document . getElementById ( ' callButton ' ) ;:==:var restartButton:==:document . getElementById ( ' restartButton ' ) ;
var value = dir . value ;:==:var modifiers:==:dir . modifiers ;
var col = db . collection ( ' find_one_and_update_with_generators ' ) ;:==:var r:==:yield col . insertMany ( [ a : 1 , b : 1 ] , w : 1 ) ;
var hashbang = _ ref . hashbang ;:==:var onChange:==:_ ref . onChange ;
var metaEvent = metaEvents [ i ] ;:==:var process:==:metaEvent . thread . process ( ) ;
var centerRipple = _ props3 . centerRipple ;:==:var children:==:_ props3 . children ;
var categories = thisOption . categories ;:==:var visual:==:thisOption . visual ;
var ctx = chart . ctx ;:==:var width:==:chart . canvas . width ;
var extend = require ( ' extend ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var inclusiveRenderDuration = item . inclusiveRenderDuration ;:==:var renderCount:==:item . renderCount ;
var x = obj . x = = null ? 0 . 5 : obj . x ;:==:var y:==:obj . y     null ? 0 . 5 : obj . y ;
var vb = sphereTrimesh_vb ;:==:var vc:==:sphereTrimesh_vc ;
var minificationFilter = defaultValue ( options . minificationFilter , textureMinificationFilter . linear ) ;:==:var magnificationFilter:==:defaultValue ( options . magnificationFilter , textureMagnificationFilter . linear ) ;
var x = screenCoords . x , y = screenHeight - screenCoords . y - 1 ;:==:var tmp:==:this . tmp ;
var tar = require ( ' gulp - tar ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var log4js = require ( ' log4js ' ) ;:==:var db:==:new ueberDB . database ( settings . dbType , settings . dbSettings , null , log4js . getLogger ( ' ueberdb ' ) ) ;
var storageApplicationPermissions = windows . storage . accessCache . storageApplicationPermissions ;:==:var recentStorageItemVisibility:==:windows . storage . accessCache . recentStorageItemVisibility ;
var dy5 = mxUtils . getValue ( this . style , ' dy5 ' , ' 0 ' ) ;:==:var dy6:==:mxUtils . getValue ( this . style , ' dy6 ' , ' 0 ' ) ;
var bakeLmEnd = chunks . bakeLmEndps ;:==:var dilate:==:chunks . dilateps ;
var concat = arr . concat ;:==:var push:==:arr . push ;
var dy4 = mxUtils . getValue ( this . style , ' dy4 ' , ' 0 ' ) ;:==:var dx5:==:mxUtils . getValue ( this . style , ' dx5 ' , ' 0 ' ) ;
var Parser = coreParser . parser ;:==:var chunkedStream:==:coreChunkedStream . chunkedStream ;
var edgeShortcutType = this . _ edgeShortcutType ;:==:var containmentEdges:==:this . containmentEdges ;
var color = props . color ;:==:var size:==:props . size ;
var omit = require ( ' omit ' ) ;:==:var pick:==:require ( ' pick ' ) ;
var hash = context . hash ;:==:var minLength:==:parseInt ( hash . minLength , 10 ) ;
var rect = shapedIcon . image . rect ;:==:var layout:==:layer . layout ;
var payloadBatch = payloadInfo . payloadBatch ;:==:var axis:==:axisInfo . axis ;
var ctrl = e . ctrlKey  |  |  false ;:==:var shift:==:e . shiftKey  |  |  false ;
var a = div . appendChild ( document . createElement ( ' a ' ) ) ;:==:var b:==:div . appendChild ( document . createElement ( ' b ' ) ) ;
var filename = removeNullCharacters ( getFilenameFromUrl ( item . filename ) ) ;:==:var div:==:document . createElement ( ' div ' ) ;
var row = parseInt ( event . target . getAttribute ( ' data - row ' ) , 10 ) ;:==:var col:==:parseInt ( event . target . getAttribute ( ' data - col ' ) , 10 ) ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , data , plugins : [ plugin ] ) ;
var menus = this . menus ;:==:var editor:==:this . editor ;
var Platform = require ( ' Platform ' ) ;:==:var nativeModules:==:require ( ' nativeModules ' ) ;
var wrapNodeList = scope . wrapNodeList ;:==:var wrappers:==:scope . wrappers ;
var parser = require ( ' socket . io - parser ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' socket . io : namespace ' ) ;
var name = ref . name ;:==:var tmpl:==:ref . tmpl ;
var mappings = util . getArg ( sourceMap , ' mappings ' ) ;:==:var file:==:util . getArg ( sourceMap , ' file ' ) ;
var jasmine = require ( ' gulp - jasmine ' ) ;:==:var stylish:==:require ( ' jshint - stylish ' ) ;
var events = this . events ;:==:var tracks:==:this . tracks ;
var m = matrix ( a ) ;:==:var r:==:_ denseBackwardSubstitution ( m , b ) ;
var sizeX = options . sizeX  |  |  size  |  |  1 ;:==:var sizeY:==:options . sizeY  |  |  size  |  |  1 ;
var callback = options . callback  |  |  function ( ) ;:==:var noSettingsTriggerCallback:==:options . noSettingsTriggerCallback  |  |  false ;
var browsers = grunt . option ( ' browsers ' ) ;:==:var libs:==:grunt . option ( ' libs ' ) ;
var lightBlue900 = exports . lightBlue900 = ' # 01579b ' ;:==:var lightBluea100:==:exports . lightBluea100    ' # 80d8ff ' ;
var tid = data . tid ;:==:var uid:==:data . uid ;
var nodeFieldCount = this . _ nodeFieldCount ;:==:var nodeCount:==:this . nodeCount ;
var Node = _ . Node ;:==:var sourceLocation:==:_ . sourceLocation ;
var L = CMD . L ;:==:var A:==:CMD . A ;
var numberFormat = kendo . getCulture ( this . options . culture ) . numberFormat ;:==:var rules:==:this . _ rules ;
var LEFT_BRACKET = C . LEFT_BRACKET = 0x3 ;:==:var RIGHT_BRACKET:==:C . RIGHT_BRACKET    0x4 ;
var file = result . file ;:==:var error:==:result . error ;
var group = _ ref8 . group ;:==:var force:==:_ ref8 . force ;
var visualMapModel = this . visualMapModel ;:==:var shapes:==:this . _ shapes ;
var loc = win . location . href ;:==:var index:==:loc . indexOf ( ' # ' ) ;
var dynCall_iiii = Module [ ' dynCall_iiii ' ] = asm [ ' dynCall_iiii ' ] ;:==:var dynCall_viiiiiii:==:Module [ ' dynCall_viiiiiii ' ]    asm [ ' dynCall_viiiiiii ' ] ;
var x = tag . getAttribute ( ' x ' ) ;:==:var y:==:tag . getAttribute ( ' y ' ) ;
var Types = keystone . Field . Types ;:==:var sourceRelationship:==:new keystone . list ( ' sourceRelationship ' ) ;
var lexState = this . lexState ;:==:var interveningWhitespace:==:this . interveningWhitespace ;
var query = url . query ;:==:var pathname:==:url . pathname ;
var rows = options . rows  |  |  0 ;:==:var cols:==:options . cols  |  |  0 ;
var dontShowClicks = togetherjs . config . get ( ' dontShowClicks ' ) ;:==:var cloneClicks:==:togetherjs . config . get ( ' cloneClicks ' ) ;
var max = this . options . max ;:==:var min:==:this . options . min ;
var r = radiusExtent [ 1 ] ;:==:var p:==:polar . coordToPoint ( [ r + labelMargin , labelsAngles [ i ] ] ) ;
var width = viewModel . viewport . width ;:==:var height:==:viewModel . viewport . height ;
var node = event . tree . node ;:==:var ownerTree:==:instance . get ( ' ownerTree ' ) ;
var label = document . getElementById ( ' label ' ) ;:==:var start:==:document . getElementById ( ' start ' ) ;
var home = this . stateStack _ [ this . stateStack _ . length - 2 ] . home ;:==:var superConstructor:==:this . getRuntimeExpression ( ' superConstructor ' ) ;
var overlayStyle = _ props . overlayStyle ;:==:var style:==:_ props . style ;
var tree = imports . tree ;:==:var ui:==:imports . ui ;
var nconf = require ( ' nconf ' ) ;:==:var request:==:require ( ' request ' ) ;
var Hilo = window . Hilo ;:==:var Class:==:Hilo . Class ;
var merge    = cli . merge ;:==:var assert:==:require ( ' chai ' ) . assert ;
var jpegImage = coreJpg . jpegImage ;:==:var jpxImage:==:coreJpx . jpxImage ;
var prev = entry . prev ;:==:var next:==:entry . next ;
var cellClassName = _ ref . cellClassName ;:==:var cellRenderer:==:_ ref . cellRenderer ;
var lineAttribs = ccData . lineAttribs ;:==:var linesWrapped:==:ccData . linesWrapped ;
var heightScale = structure . heightScale ;:==:var exaggeration:==:meshData . exaggeration ;
var min = this . _ min = data . min ;:==:var max:==:this . _ max    data . max ;
var nodeConsStringType = this . _ nodeConsStringType ;:==:var nodeSlicedStringType:==:this . _ nodeSlicedStringType ;
var data = this . _ data ;:==:var cells:==:this . _ cells ;
var nodeList = scope . wrappers . nodeList ;:==:var registerWrapper:==:scope . registerWrapper ;
var left = offset . left ;:==:var top:==:offset . top ;
var operation = this . sidebarPanes . asyncOperationBreakpoints . operationById ( details . target ( ) , operationId ) ;:==:var description:==:( operation & & operation . description )  |  |  webInspector . uiString ( ' < unknown > ' ) ;
var babelify = require ( ' babelify ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var decodeStream = coreStream . decodeStream ;:==:var jpegStream:==:coreStream . jpegStream ;
var address = evt . address ;:==:var i d:==:' div [ data - id ' ' + address + ' ' ] progress ' ;
var client = Nightscout . client ;:==:var translate:==:client . translate ;
var el = this . el ;:==:var rotation:==:el . getAttribute ( ' rotation ' ) ;
var breakStatement = exports . breakStatement = buildLabelStatement ( ' break ' ) ;:==:var throwStatement:==:exports . throwStatement    buildLabelStatement ( ' throw ' , ' argument ' ) ;
var derequire = require ( ' gulp - derequire ' ) ;:==:var flatten:==:require ( ' gulp - flatten ' ) ;
var y = ' g . y ' ;:==:var z:==:' g . z ' ;
var sinon = require ( ' sinon ' ) ;:==:var expect:==:require ( ' chai ' ) . expect ;
var safeAddLayer = leafletLayerHelpers . safeAddLayer ;:==:var safeRemoveLayer:==:leafletLayerHelpers . safeRemoveLayer ;
var x = ( vector . x * transformation . m [ 0 ] ) + ( vector . y * transformation . m [ 4 ] ) + ( vector . z * transformation . m [ 8 ] ) ;:==:var y:==:( vector . x * transformation . m [ 1 ] ) + ( vector . y * transformation . m [ 5 ] ) + ( vector . z * transformation . m [ 9 ] ) ;
var buffers = gltf . buffers ;:==:var bufferViews:==:gltf . bufferViews ;
var name = props . name ;:==:var route:==:parent . $ route ;
var fork = require ( ' child_process ' ) . fork ;:==:var redis:==:config . redis ;
var Contacts = Windows . applicationModel . contacts ;:==:var contactPicker:==:contacts . contactPicker ;
var chunk = this . chunk _ ;:==:var K _:==:goog . crypt . Sha2_64bit . K _ ;
var button = originalEvent . button ;:==:var fromElement:==:originalEvent . fromElement ;
var computeMetadataCallbackProps = _ ref . computeMetadataCallbackProps ;:==:var nextCellsCount:==:_ ref . nextCellsCount ;
var data = datastorage . allstatsrecords ;:==:var now:==:Date . now ( ) ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var ms:==:require ( ' ms ' ) ;
var path = require ( ' path ' ) ;:==:var passport:==:require ( ' passport ' ) ;
var a = df . appendChild ( document . createElement ( ' a ' ) ) ;:==:var b:==:df . appendChild ( document . createElement ( ' b ' ) ) ;
var createCommaExpression = parseTreeFactory . createCommaExpression ;:==:var createConditionalExpression:==:parseTreeFactory . createConditionalExpression ;
var metadata = this . file . get ( ' metadata ' ) ;:==:var published:==:metadata . published ;
var camera = this . camera ;:==:var canvas:==:this . canvas ;
var forceFunction = this . options . forceFunction ;:==:var force:==:this . force ;
var data = this . _ tile . data ;:==:var width:==:this . _ tile . width ;
var x = ( geo . relative ) ? geo . offset . x : geo . x ;:==:var y:==:( geo . relative ) ? geo . offset . y : geo . y ;
var cssDocument = imports . cssDocument ;:==:var htmlDocument:==:imports . htmlDocument ;
var autoprefixer = require ( ' gulp - autoprefixer ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var binding = process . binding ( ' zlib ' ) ;:==:var util:==:require ( ' util ' ) ;
var color = newColors . color  |  |  ' # ccc ' ;:==:var colorTop:==:newColors . colorTop  |  |  ' # f29766 ' ;
var operatorNode = math . expression . node . operatorNode ;:==:var conditionalNode:==:math . expression . node . conditionalNode ;
var dotSizeMax = lineDotChart . defaultSettings . dotSizeMax ;:==:var counterTitle:==:lineDotChart . defaultSettings . counterTitle ;
var b = Math . min ( this . bottom , region . bottom ) ;:==:var l:==:Math . max ( this . left , region . left ) ;
var juggler = require ( ' loopback - datasource - juggler ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' loopback : registry ' ) ;
var ri = r . ri ;:==:var rj:==:r . rj ;
var top = ref . style . top ;:==:var bottom:==:ref . style . bottom ;
var networkMapping = this . _ breakpointManager . _ networkMapping ;:==:var debuggerWorkspaceBinding:==:this . _ breakpointManager . _ debuggerWorkspaceBinding ;
var path = require ( ' path ' ) ;:==:var loopback:==:require ( ' loopback ' ) ;
var pos = settings . position ;:==:var indent:==:settings . indent  |  |  [ ] ;
var fs = require ( ' fs - extra ' ) ;:==:var request:==:require ( ' request ' ) ;
var directives = context . directives ;:==:var modules:==:context . modules ;
var prepareStyles = _ context$muiTheme . prepareStyles ;:==:var ripple:==:_ context$muiTheme . ripple ;
var zoom = ' zoom ' in options ? + options . zoom : startZoom ;:==:var bearing:==:' bearing ' in options ? this . _ normalizeBearing ( options . bearing , startBearing ) : startBearing ;
var isScrolling = _ ref . isScrolling ;:==:var rowSizeAndPositionManager:==:_ ref . rowSizeAndPositionManager ;
var elements = this . elements _ ;:==:var priorities:==:this . priorities _ ;
var width = this . context . canvas . width ;:==:var height:==:this . context . canvas . height ;
var remoteChunkSize = $ ( ' # remoteChunkSize ' ) . val ( ) ;:==:var files:==:$ ( ' # files ' ) [ 0 ] . files ;
var fillDropdown = util . fillDropdown ;:==:var bindCheckbox:==:util . bindCheckbox ;
var initialState = ' initialState ' ;:==:var realState:==:' realState ' ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var path:==:require ( ' path ' ) ;
var merge = require ( ' merge - stream ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var addWrapNodeListMethod = scope . addWrapNodeListMethod ;:==:var mixin:==:scope . mixin ;
var date = post . published ? post . date . format ( ' YYYY - MM - DD ' ) : ' Draft ' ;:==:var tags:==:post . tags . map ( mapName ) ;
var splitDataNode = dom . splitDataNode ;:==:var getClosestAncestorIn:==:dom . getClosestAncestorIn ;
var ace = editor . ace ;:==:var sel:==:ace . selection ;
var events = this . events ( event ) ;:==:var revenue:==:track . revenue ( )  |  |  0 ;
var x = 400 + this . xx [ i ] * perspective ;:==:var y:==:300 + this . yy [ i ] * perspective ;
var http = require ( ' http ' ) ;:==:var send:==:require ( ' send ' ) ;
var style = this . _ averageRatingElement . nextSibling . style ;:==:var direction:==:_ global . getComputedStyle ( this . _ element ) . direction ;
var highlightStyle = _ ref$highlightStyle = = = undefined ? : _ ref$highlightStyle ;:==:var searchWords:==:_ ref . searchWords ;
var className = _ props . className ;:==:var style:==:_ props . style ;
var scrollLeft = math . max ( math . min ( self . _ _ scrollLeft , self . _ _ maxScrollLeft ) , 0 ) ;:==:var scrollTop:==:math . max ( math . min ( self . _ _ scrollTop , self . _ _ maxScrollTop ) , 0 ) ;
var source = require ( ' vinyl - source - stream ' ) ;:==:var through:==:require ( ' through2 ' ) ;
var offsetLeft = snap . offsetLeft ;:==:var offsetWidth:==:snap . offsetWidth ;
var equal = require ( ' assert ' ) . equal ;:==:var path:==:require ( ' path ' ) ;
var radius = options . radius  |  |  0 . 5 ;:==:var tessellation:==:options . tessellation  |  |  64 ;
var reactdomFeatureFlags = require ( ' reactdomFeatureFlags ' ) ;:==:var useFiber:==:reactdomFeatureFlags . useFiber ;
var a = value : ' a ' ;:==:var b:==:value : ' b ' ;
var debug = require ( ' debug ' ) ( ' socket . io : server ' ) ;:==:var url:==:require ( ' url ' ) ;
var body   = options . body ;:==:var buttons:==:options . buttons ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var minimatch:==:require ( ' minimatch ' ) ;
var element = this . element ;:==:var graph:==:this . graph ;
var through2 = require ( ' through2 ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var path = require ( ' path ' ) ;:==:var docs:==:path . join ( _ _ dirname , ' docs ' ) ;
var moduleVisitor = traceur . codegeneration . module . moduleVisitor ;:==:var moduleSymbol:==:traceur . semantics . symbols . moduleSymbol ;
var browserify = require ( ' browserify ' ) ;:==:var transform:==:require ( ' vinyl - transform ' ) ;
var className = props . className ;:==:var children:==:props . children ;
var babel = require ( ' gulp - babel ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var newValue = event . detail . newValue ;:==:var groupedItems:==:this . _ groupedItems ;
var cssVar = require ( ' cssVar ' ) ;:==:var cx:==:require ( ' cx ' ) ;
var spot = spots [ r ] ;:==:var x:==:spot . x ;
var isValidBounds = leafletBoundsHelpers . isValidBounds ;:==:var isNumber:==:leafletHelpers . isNumber ;
var scheme = options . get ( ' scheme ' ) ;:==:var port:==:options . get ( ' port ' ) ;
var width = _ props7 . width ;:==:var scrollbarSize:==:this . _ scrollbarSize ;
var row = rowCache [ i ] ;:==:var docRow:==:this . $ docRowCache [ i ] ;
var width = node . getBoundingClientRect ( ) . width ;:==:var height:==:node . getBoundingClientRect ( ) . height ;
var x = plane . normal . x ;:==:var y:==:plane . normal . y ;
var remote = new PouchDB ( dbs . remote ) ;:==:var changes:==:remote . changes ;
var radius = point . radius ;:==:var value:==:Math . min ( point . value , max ) ;
var viewport = options . viewport ;:==:var margin:==:options . margin ;
var prompt = require ( ' cli - prompt ' ) ;:==:var render:==:require ( ' consolidate ' ) . handlebars . render ;
var root = opts . root  |  |  ' ' ;:==:var paths:==:opts . paths  |  |  ;
var name = parsedAction . properties [ i ] . name ;:==:var targetType:==:parsedAction . properties [ i ] . targetType ;
var tab = this . tabManager . focussedTab ;:==:var editor:==:tab & & tab . editor ;
var getCellsPerWeek = t . getCellsPerWeek ;:==:var formatDates:==:calendar . formatDates ;
var g1 = obj . g1 ;:==:var g2:==:Object . getOwnPropertyDescriptor ( obj , ' g2 ' ) . get ;
var group = groups [ this . _ groupname [ i ] ] ;:==:var files:==:group & & group . files ;
var deepPurplea200 = exports . deepPurplea200 = ' # 7c4dff ' ;:==:var deepPurplea400:==:exports . deepPurplea400    ' # 651fff ' ;
var x = v . x , y = v . y , z = v . z ;:==:var a:==:Math . cos ( x ) , b    Math . sin ( x ) ;
var f = new foo ( ) ;:==:var a:==:new Array ( ) ;
var lowerThreshold = volume . lowerThreshold ;:==:var windowLow:==:volume . windowLow ;
var proxyA = input . proxyA ;:==:var proxyB:==:input . proxyB ;
var parenExpression = traceur . syntax . trees . parenExpression ;:==:var postfixExpression:==:traceur . syntax . trees . postfixExpression ;
var store = instance . stores [ storeName ] ;:==:var config:==:store . storeModel . config ;
var creationix = require ( ' creationix ' ) ;:==:var stack:==:require ( ' stack ' ) ;
var b = o . b ;:==:var m:==:o . m ;
var frame = domWindow . frames [ i ] ;:==:var frameElement:==:frame . frameElement  |  |  frame ;
var value1 = oConditionGrid . value1 ;:==:var value2:==:oConditionGrid . value2 ;
var y = flyoutRect . top ;:==:var width:==:flyoutRect . width ;
var arc = ( options . arc < = 0  |  |  options . arc > 1 ) ? 1 . 0 : options . arc  |  |  1 . 0 ;:==:var closed:==:( options . closed      undefined ) ? true : options . closed ;
var moment = require ( ' moment ' ) ;:==:var path:==:require ( ' path ' ) ;
var getTilingPatternir = corePattern . getTilingPatternir ;:==:var cMapFactory:==:corecMap . cMapFactory ;
var parent = scope . parent ;:==:var child:==:scope . child ;
var content = template . content ;:==:var c:==:content . firstChild ;
var nodeName = options & & options . nodeName  |  |  ' span ' ;:==:var expandClosestSibling:==:! ! ( options & & options . expandClosestSibling ) ;
var g = a . max_length ;:==:var i:==:a . static_tree ;
var parentEle = ele . parentElement ;:==:var children:==:parentEle . children ;
var path = options . path ;:==:var scriptId:==:options . script ? options . script . i d : options . scriptId ;
var x = box . right + node . getStyle ( ' space - left ' ) ;:==:var y:==:box . cy ;
var hash = window . location . hash . substring ( 1 ) ;:==:var lhostlport:==:hash . substring ( hash . indexOf ( ' lhostlport ' ) + 11 , hash . indexOf ( ' & ' ) ) ;
var r = Math . round ( rgb [ 0 ] * 255 ) ;:==:var g:==:Math . round ( rgb [ 1 ] * 255 ) ;
var pattern = this . pattern ;:==:var options:==:this . options ;
var categoryValue = dataPoint . categoryValue ;:==:var identity:==:subDataPoint . identity ;
var image = this . _ image ;:==:var element:==:image . _ element ;
var style = options . style  |  |  ' ' ;:==:var showTitle:==:options . showTitle  |  |  false ;
var Menu = imports . Menu ;:==:var Plugin:==:imports . Plugin ;
var image = this . addCheckbox ( div , imageLabel ) ;:==:var lightbox:==:this . addCheckbox ( div , mxResources . get ( ' lightbox ' ) , true ) ;
var face = geometry . faces [ i ] ;:==:var a:==:face . a ;
var ndarray = require ( ' ndarray ' ) ;:==:var homography:==:require ( ' ndarray - homography ' ) ;
var px = ' px ' ;:==:var style:==:this . element _ . style ;
var scene = this . scene ;:==:var scripts:==:this . scripts ;
var getScrollBarSize = _ tetherBase$Utils . getScrollBarSize ;:==:var removeUtilElements:==:_ tetherBase$Utils . removeUtilElements ;
var width = $ child . width ( ) ;:==:var height:==:$ child . height ( ) ;
var component = components . get ( utils . getParentComponent ( ) ) ;:==:var usedPropTypes:==:( component & & component . usedPropTypes  |  |  [ ] ) . slice ( ) ;
var autoIncrement = this . autoIncrement ;:==:var includeSpinner:==:this . includeSpinner ;
var size_y = widget_grid_data . size_y ;:==:var r:==:min_row - 1 ;
var bottomRadius = cylinderGeometry . _ bottomRadius ;:==:var vertexFormat:==:cylinderGeometry . _ vertexFormat ;
var spring = Math . pow ( this . params . spring , delta ) ;:==:var friction:==:Math . pow ( this . params . friction , delta ) ;
var center = bmapModel . get ( ' center ' ) ;:==:var zoom:==:bmapModel . get ( ' zoom ' ) ;
var armature = this . armature = dragonbonesFactory . buildArmature ( skeletonData . armature [ 0 ] . name ) ;:==:var armatureDisplay:==:this . armatureDisplay    armature . getDisplay ( ) ;
var format = require ( ' util ' ) . format ;:==:var webpack:==:require ( ' webpack - stream ' ) ;
var title = pic . photo_title ;:==:var url:==:pic . photo_url ;
var mimeType = data . mimeType ;:==:var name:==:data . name ;
var clone = iframe . cloneNode ( ) ;:==:var url:==:clone . getAttribute ( ' data - url ' ) ;
var user = this . analytics . user ( ) ;:==:var global:==:exports . global ;
var foo = function * foo ( ) ;:==:var foo:==:function foo ( ) ;
var models = _ _ alloyId8 . models ;:==:var len:==:models . length ;
var tempKeys = saveContext . tempKeys ;:==:var contentKeys:==:saveContext . contentKeys ;
var leaveRoutes = _ computeChangedRoutes . leaveRoutes ;:==:var changeRoutes:==:_ computeChangedRoutes . changeRoutes ;
var QUX = docSet . getByLongname ( ' qux ' ) [ 0 ] ;:==:var socket:==:docSet . getByLongname ( ' socket ' ) [ 0 ] ;
var p0 = Cartesian3 . fromArray ( positions , i0 * 3 , p0Scratch ) ;:==:var p1:==:cartesian3 . fromArray ( positions , i1 * 3 , p1Scratch ) ;
var cx = require ( ' cx ' ) ;:==:var emptyFunction:==:require ( ' emptyFunction ' ) ;
var v = goog . vec . vec3d . createFromValues ( 3 , 4 , 5 ) ;:==:var s:==:goog . vec . vec3d . createFromValues ( 6 , 7 , 8 ) ;
var granularity = message . data . granularity ;:==:var start:==:message . data . start ;
var options = bs . options ;:==:var emitter:==:bs . emitter ;
var cors = require ( ' has - cors ' ) ;:==:var jsonp:==:require ( ' jsonp ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var gzip:==:require ( ' gulp - gzip ' ) ;
var cuePoints = attributes . cuePoints ;:==:var styles:==:attributes . styles ;
var tiptip_content = $ ( ' # tiptip_content ' ) ;:==:var tiptip_arrow:==:$ ( ' # tiptip_arrow ' ) ;
var path     = require ( ' path ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var filePath = status . filePath ;:==:var getSong:==:client . method ( ' getSong ' , filePath ) ;
var h = this . hsv _ [ 0 ] ;:==:var s:==:this . hsv _ [ 1 ] ;
var assert = require ( ' chai ' ) . assert ;:==:var bunyan:==:require ( ' bunyan ' ) ;
var dynCall_dii = Module [ ' dynCall_dii ' ] = asm [ ' dynCall_dii ' ] ;:==:var dynCall_viidddddd:==:Module [ ' dynCall_viidddddd ' ]    asm [ ' dynCall_viidddddd ' ] ;
var srcVideo = document . getElementById ( ' srcVideo ' ) ;:==:var motionVideo:==:document . getElementById ( ' motionVideo ' ) ;
var matches = require ( ' matches - selector ' ) ;:==:var bindings:==:require ( ' ampersand - dom - bindings ' ) ;
var concat = require ( ' gulp - concat ' ) ;:==:var replace:==:require ( ' gulp - replace ' ) ;
var path    = require ( ' path ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var markSupportedForProcessing = _ baseUtils . markSupportedForProcessing ;:==:var requireSupportedForProcessing:==:_ baseUtils . requireSupportedForProcessing ;
var length = self . values . length ;:==:var values:==:self . values ;
var index = editor . undoManger . index ;:==:var br:==:ua . browser . ie ? '' : ' < br > ' ;
var type = details . type ;:==:var stack:==:details . stack ;
var Tokenizer = lexer . Tokenizer ;:==:var Dict:==:definitions . Dict ;
var a = ( y : any ) ;:==:var a:==:( ( y : foo ) : any ) ;
var flaverr = require ( ' flaverr ' ) ;:==:var rttc:==:require ( ' rttc ' ) ;
var fs = Plugin . fs ;:==:var path:==:Plugin . path ;
var line = lines [ error . line - 1 ] ;:==:var start:==:starts [ error . line - 1 ] ;
var me = document . querySelector ( ' script [ src$='require - config . js ' ] ' ) ;:==:var console:==:window . console  |  |  log : function ( ) ;
var document = this . document ;:==:var window:==:document . window    this ;
var enterActiveClass = data . enterActiveClass ;:==:var appearClass:==:data . appearClass ;
var Program = traceur . syntax . trees . Program ;:==:var setAccessor:==:traceur . syntax . trees . setAccessor ;
var packetWriter = common . packetWriter ;:==:var parser:==:common . parser ;
var enhanced = opts . enhancedLinkAttribution ;:==:var ignore:==:opts . ignoredReferrers ;
var a4 = expected [ i ] . locals . a4 ;:==:var b4:==:expected [ i ] . locals . b4 ;
var isA = isArray ( val ) ;:==:var iso:==:isObject ( val ) ;
var m = this . mass ;:==:var r:==:this . radius ;
var component = this . components [ name ] ;:==:var attrValue:==:component & & component . attrValue ;
var ne = node . _ ne & & rectangleContainsPosition ( node . _ ne . extent , position ) ;:==:var sw:==:node . _ sw & & rectangleContainsPosition ( node . _ sw . extent , position ) ;
var first = parseInt ( kernings [ i ] . attributes . getNamedItem ( ' first ' ) . nodeValue , 10 ) ;:==:var second:==:parseInt ( kernings [ i ] . attributes . getNamedItem ( ' second ' ) . nodeValue , 10 ) ;
var staticError = errors . staticError ;:==:var staticWarning:==:errors . staticWarning ;
var superTransformer = traceur . codegeneration . superTransformer ;:==:var tempVarTransformer:==:traceur . codegeneration . tempVarTransformer ;
var action = self . action ;:==:var pointers:==:self . pointers ;
var rotation = node . _ rotation  |  |  0 ;:==:var scaleX:==:( typeof node . _ scaleX      ' number ' ) ? node . _ scaleX : 1 ;
var dy1 = h * 0 . 5 * Math . max ( 0 , Math . min ( 1 , parseFloat ( mxUtils . getValue ( this . style , ' dy1 ' , this . dy1 ) ) ) ) ;:==:var dx1:==:math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx1 ' , this . dx1 ) ) ) ) ;
var azure = require ( ' azure - storage ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var fetchStartOffset = request . fetchStartOffset ;:==:var start:==:fetchStartOffset + request . startTime ;
var convert = require ( ' npm - convert ' ) ;:==:var utils:==:require ( ' npm - utils ' ) ;
var IMPORT_TYPE_CLAUSE = ' IMPORT_TYPE_CLAUSE ' ;:==:var IMPORTED_BINDING:==:' IMPORTED_BINDING ' ;
var trans = database . transaction ( [ objStoreName ] , ' readwrite ' ) ;:==:var objectStore:==:trans . objectStore ( objStoreName ) ;
var show = powerbi . dataViewObject . getValue ( forecastObject , forecastPropertyNames . show , false ) ;:==:var displayName:==:powerbi . dataViewObject . getValue ( forecastObject , forecastPropertyNames . displayName ) ;
var optionComponent = _ ref . optionComponent ;:==:var optionRenderer:==:_ ref . optionRenderer ;
var user = ob . user ;:==:var isNewUser:==:ob . isNewUser ;
var nextScrollToIndex = _ ref . nextScrollToIndex ;:==:var scrollToIndex:==:_ ref . scrollToIndex ;
var width = backgroundBillboard . width * scale ;:==:var height:==:backgroundBillboard . height * scale ;
var t = value_type ( s ) ;:==:var mut:==:mutability ( s ) ;
var i = -1 ; while ( + + i < n ):==:var j:==:-1 ; while ( + + j < n )
var server = window . server ;:==:var windowManager:==:server . windowManager ;
var skipStart = typeof options . skipStart = = ' boolean ' ? options . skipStart : false ;:==:var skipTermination:==:typeof options . skipTermination     ' boolean ' ? options . skipTermination : false ;
var rel = link . rel ;:==:var extensions:==:link . extensions ;
var index = require ( ' indexof ' ) ;:==:var parser:==:require ( ' engine . io - parser ' ) ;
var extent = dimension . brush . extent ( ) ;:==:var dimensions:==:p . dimensions ;
var or = Parsers . or ;:==:var and:==:Parsers . and ;
var d = new gd ( 2000 , 0 , 1 ) ;:==:var f:==:gdr . offsetInDays _ ;
var Text = require ( ' Text ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var B = db . model ( name , sB ) ;:==:var J:==:db . model ( ' j ' + random ( ) , sJ ) ;
var node = tree . node ;:==:var children:==:tree . children ;
var uuid = require ( ' uuid ' ) ;:==:var vasync:==:require ( ' vasync ' ) ;
var co = $ ( o . containment ) . offset ( ) ;:==:var over:==:( $ ( ce ) . css ( ' overflow ' ) !   ' hidden ' ) ;
var legendObjectProperties = legend : data . legendObjectProperties ;:==:var show:==:powerbi . dataViewObjects . getValue ( legendObjectProperties , visuals . donutChartProps . legend . show , this . legend . isVisible ( ) ) ;
var cluster = d3 . selectAll ( ' . cluster ' ) ;:==:var te:==:cluster . append ( ' text ' ) ;
var isUnary = abbrUtils . isUnary ( item ) ;:==:var tagName:==:profile . tagName ( item . name ( ) ) ;
var verticies = this . vertices ;:==:var width:==:tilingSprite . width ;
var Switch = require ( ' Switch ' ) ;:==:var Text:==:require ( ' Text ' ) ;
var era = getOption ( options , ' era ' , ' string ' , [ ' narrow ' , ' short ' , ' long ' ] , undefined ) ;:==:var year:==:getOption ( options , ' year ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;
var material = variable . material ;:==:var uniforms:==:material . uniforms ;
var foo = new symbolNode ( ' foo ' ) ;:==:var b:==:new assignmentNode ( foo , b2 ) ;
var schemaError = helpers . schemaError ;:==:var schemaContext:==:helpers . schemaContext ;
var streamType = sharedUtil . streamType ;:==:var assert:==:sharedUtil . assert ;
var endDate = evt . get ( ' endDate ' ) ;:==:var startDate:==:evt . get ( ' startDate ' ) ;
var VALUE0 = ' VALUE0 ' ;:==:var LABEL1:==:' LABEL1 ' ;
var info = imports . info ;:==:var guide:==:imports . guide ;
var User = models . User ;:==:var utility:==:require ( ' utility ' ) ;
var background = options . background  |  |  ' # fff ' ;:==:var foreground:==:options . foreground  |  |  ' # 000 ' ;
var COMMA_KEYCODE = CONST . COMMA_KEYCODE ;:==:var ENTER_KEYCODE:==:CONST . ENTER_KEYCODE ;
var access_token = _ ref . access_token ;:==:var token_type:==:_ ref . token_type ;
var path = require ( ' path ' ) ;:==:var minimist:==:require ( ' minimist ' ) ;
var net = require ( ' net ' ) ;:==:var child:==:require ( ' child_process ' ) ;
var min = version & & version . min ;:==:var max:==:version & & version . max ;
var continuous = opts . continuous  |  |  opts . live  |  |  false ;:==:var batch_size:==:opts . batch_size  |  |  100 ;
var Transaction = require ( ' Transaction ' ) ;:==:var reactUpdateQueue:==:require ( ' reactUpdateQueue ' ) ;
var topic = subtopics [ args . subtopic ] ;:==:var subtopic:==:args . subtopic ;
var settings = document . getElementById ( ' settings ' ) ;:==:var instructions:==:document . getElementById ( ' instructions ' ) ;
var selectionId = powerbi . visuals . selectionId ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var file = args [ ' file ' ] ;:==:var resx:==:args [ ' resx ' ] ;
var n   = this . normal ;:==:var pDiff:==:this . pDiff ;
var eventTarget = scope . wrappers . eventTarget ;:==:var nodeList:==:scope . wrappers . nodeList ;
var anchor = this . editor . selection . anchor ;:==:var isEmpty:==:this . editor . selection . isEmpty ( ) ;
var tokenType = traceur . syntax . tokenType ;:==:var class_declaration:==:parseTreeType . class_declaration ;
var controls = this . _ reduceControls ( controlsConfig ) ;:==:var optionals:==:lang_1 . isPresent ( extra ) ? collection_1 . stringMapWrapper . get ( extra , ' optionals ' ) : null ;
var value = node . value ;:==:var isNew:==:node . isNew ;
var stackedOnCurrent = diff . stackedOnCurrent ;:==:var next:==:diff . next ;
var Animated = require ( ' Animated ' ) ;:==:var edgeInsetsPropType:==:require ( ' edgeInsetsPropType ' ) ;
var completed = app . todos . completed ( ) . length ;:==:var remaining:==:app . todos . remaining ( ) . length ;
var li = paragraph . li ;:==:var level:==:paragraph . level + ( li ? 1 : 0 ) ;
var scrollpane = ui . find ( ' > . scrollpane ' ) ;:==:var actions:==:scrollpane . find ( ' > . test - actions ' ) ;
var min = options . min ;:==:var max:==:options . max ;
var walk = require ( ' pug - walk ' ) ;:==:var error:==:require ( ' pug - error ' ) ;
var start = this . newBlock ( ' list gen start ' ) ;:==:var skip:==:this . newBlock ( ' list gen skip ' ) ;
var tryCatch1 = util . tryCatch1 ;:==:var errorObj:==:util . errorObj ;
var lime50 = exports . lime50 = ' # f9fbe7 ' ;:==:var lime100:==:exports . lime100    ' # f0f4c3 ' ;
var tangents   = opts & & opts . tangents ! = = undefined ? opts . tangents : null ;:==:var colors:==:opts & & opts . colors !    undefined ? opts . colors : null ;
var propertyNameAssignment = traceur . syntax . trees . propertyNameAssignment ;:==:var quasiLiteralExpression:==:traceur . syntax . trees . quasiLiteralExpression ;
var components = exports . components = oneOfType ( [ component , object ] ) ;:==:var route:==:exports . route    oneOfType ( [ object , element ] ) ;
var anchor   = options . anchor  |  |  source . position ;:==:var period:==:options . period ;
var tar = require ( ' gulp - tar ' ) ;:==:var gzip:==:require ( ' gulp - gzip ' ) ;
var columnNumber = this . profileNode . columnNumber ? this . profileNode . columnNumber - 1 : 0 ;:==:var target:==:this . tree . profileView . target ( ) ;
var knownUserProperties = system . knownUserProperties ;:==:var userPictureSize:==:system . userPictureSize ;
var pageNumber = params . pageNumber  |  |  0 ;:==:var dest:==:params . destArray  |  |  null ;
var items = headerCursor . messagesSlice . items ;:==:var len:==:items . length ;
var Track = require ( ' facade ' ) . Track ;:==:var defaults:==:require ( ' defaults ' ) ;
var bacon = new Food ( name : ' bacon ' ) ;:==:var eggs:==:new Food ( name : ' eggs ' ) ;
var lon = cesiumMath . toDegrees ( centerCartographic . longitude ) . toString ( ) ;:==:var lat:==:cesiumMath . toDegrees ( centerCartographic . latitude ) . toString ( ) ;
var createDisplayNameGetter = powerbi . data . createDisplayNameGetter ;:==:var selectionManager:==:powerbi . visuals . utility . selectionManager ;
var members = type . members ;:==:var ambientMembers:==:type . ambientMembers ;
var from = ref . segment . from ;:==:var to:==:ref . segment . to ;
var extent = ol . extent . createOrUpdate ( -100 , -100 , 100 , 100 ) ;:==:var grid:==:ol . tilegrid . createForExtent ( extent ) ;
var minify   = require ( ' gulp - minify - css ' ) ;:==:var plumber:==:require ( ' gulp - plumber ' ) ;
var amdClassName = contents . amdClassName ;:==:var builtinLookup:==:contents . builtinLookup ;
var processTransform = require ( ' processTransform ' ) ;:==:var sizesDiffer:==:require ( ' sizesDiffer ' ) ;
var r = 255 - Math . abs ( 255 - color2 . rgb [ 0 ] - color1 . rgb [ 0 ] ) ;:==:var g:==:255 - Math . abs ( 255 - color2 . rgb [ 1 ] - color1 . rgb [ 1 ] ) ;
var x = this . x , y = this . y , z = this . z , retVec = new cc . math . vec3 ( vec ) ;:==:var uv:==:new cc . math . vec3 ( x , y , z ) , uuv    new cc . math . vec3 ( x , y , z ) ;
var when = require ( ' when ' ) ;:==:var util:==:require ( ' util ' ) ;
var d16 = _ addDiv ( ' d16 ' ) , d17 = _ addDiv ( ' d17 ' ) , d18 = _ addDiv ( ' d18 ' ) ;:==:var c:==:_ jsPlumb . connect ( source : ' d16 ' , target : d17 , endpoint : ' rectangle ' ) ;
var a = JSON . parse ( ' ' b ' : 1,'c ' : 2,'d ' : 3,'e ' : 4 ' ) ;:==:var b:==:JSON . parse ( ' ' 12040200 ' : 1 , ' a ' : 2 , ' b ' : 2 ' ) ;
var Nightscout = window . Nightscout ;:==:var plugin:==:$ ( this ) . attr ( ' plugin ' ) ;
var api = scope . api . instance . events ;:==:var DELEGATES:==:api . DELEGATES ;
var child_process = require ( ' child_process ' ) ;:==:var util:==:require ( ' util ' ) ;
var request = bbPromise . promisify ( require ( ' request ' ) ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var rimraf = require ( ' gulp - rimraf ' ) ;:==:var sequence:==:require ( ' gulp - sequence ' ) ;
var name = error . name ? error . name . toString ( ) : ' error ' ;:==:var message:==:error . message ? error . message . toString ( ) : ' ' ;
var loadingPlaceholder = _ props2 . loadingPlaceholder ;:==:var noResultsText:==:_ props2 . noResultsText ;
var http = require ( ' http ' ) ;:==:var fresh:==:require ( ' fresh ' ) ;
var prop = obj . properties [ i ] ;:==:var val:==:prop . value ;
var wrappedRange = api . wrappedRange ;:==:var domException:==:api . domException ;
var importsToAdd = paths . importsToAdd . slice ( ) ;:==:var src:==:gulp . src ( paths . files ) ;
var propagating = require ( ' propagating - hammerjs ' ) ;:==:var Hammer:==:window [ ' Hammer ' ]  |  |  require ( ' hammerjs ' ) ;
var interval = options . interval  |  |  100 ;:==:var timeout:==:options . timeout  |  |  300000 ;
var fb = window . wrappedjsObject . fb ;:==:var contacts:==:window . wrappedjsObject . contacts ;
var setInterval = global . setInterval ;:==:var clearTimeout:==:global . clearTimeout ;
var base = this . texture . baseTexture ;:==:var crop:==:this . texture . crop ;
var Dummy2 = mongoose . model ( ' Dummy2 ' , dummy2Schema ) ;:==:var dummy3:==:mongoose . model ( ' dummy3 ' , dummy3Schema ) ;
var styleSheetHeader = target . cssModel . styleSheetHeaderForId ( styleSheetId ) ;:==:var sourceurl:==:styleSheetHeader . resourceurl ( ) ;
var booleanBarrier = state . booleanBarrier ;:==:var scale:==:state . scale  |  |  [ 0 , resolution ] ;
var applyEntityToContentState = require ( ' applyEntityToContentState ' ) ;:==:var getSampleStateForTesting:==:require ( ' getSampleStateForTesting ' ) ;
var cellToCellOffset = t . cellToCellOffset ;:==:var cellOffsetToDayOffset:==:t . cellOffsetToDayOffset ;
var end = this . newBlock ( ' end of if ' ) ;:==:var next:==:this . newBlock ( ' next branch of if ' ) ;
var HASH_ALGOS = utils . HASH_ALGOS ;:==:var PK_ALGOS:==:utils . PK_ALGOS ;
var column = this . column ( ) ;:==:var line:==:this . line ( ) ;
var ciphertext = cipherParams . ciphertext ;:==:var salt:==:cipherParams . salt ;
var forStatement = traceur . syntax . trees . forStatement ;:==:var formalParameterList:==:traceur . syntax . trees . formalParameterList ;
var el = this . $ element ;:==:var pos:==:Utils . $ position ( element , el ) ;
var iNumberOfCols = window . iNumberOfCols ;:==:var iNumberOfRows:==:window . iNumberOfRows ;
var positionedGlyph = positionedGlyphs [ k ] ;:==:var glyph:==:positionedGlyph . glyph ;
var fetchBuiltIncMap = params . fetchBuiltIncMap ;:==:var usecMap:==:params . usecMap ;
var className = _ props3 . className ;:==:var height:==:_ props3 . height ;
var ppo = this . indicators . ppo ;:==:var short:==:ppo . short . result ;
var Person = db . model ( ' gh2562_b0 ' , personSchema ) ;:==:var band:==:db . model ( ' gh2562_b1 ' , bandSchema ) ;
var assert = require ( ' assert ' ) ;:==:var faker:==:require ( ' faker ' ) ;
var test1 = docSet . getByLongname ( ' test1 ' ) [ 0 ] ;:==:var test2:==:docSet . getByLongname ( ' test2 ' ) [ 0 ] ;
var path = require ( ' path ' ) ;:==:var ipfilter:==:require ( ' express - ipfilter ' ) . ipFilter ;
var duration = args . duration  |  |  367 ;:==:var timing:==:args . timing  |  |  ' cubic - bezier ( 0 . 1 , 0 . 9 , 0 . 2 , 1 ) ' ;
var path = require ( ' path ' ) ;:==:var stylish:==:require ( ' jshint - stylish ' ) ;
var rowCount = _ props3 . rowCount ;:==:var scrollToAlignment:==:_ props3 . scrollToAlignment ;
var canvas = this . canvas = fabric . isLikelyNode ? fabric . createCanvasForNode ( ) : new fabric . canvas ( el ) ;:==:var upperCanvasEl:==:canvas . upperCanvasEl ;
var events = goog . require ( ' goog . events ' ) ;:==:var multiTestRunner:==:goog . require ( ' goog . testing . multiTestRunner ' ) ;
var testModel = models . testModel ;:==:var assert:==:require ( ' assert ' ) ;
var jpegStream = coreStream . jpegStream ;:==:var lexer:==:coreParser . lexer ;
var containerAttrs = options . _ containerAttrs ;:==:var replacerAttrs:==:options . _ replacerAttrs ;
var DOMSTRING_SIZE_ERR    = exceptionCode . domstring_size_err    = ( ( exceptionMessage [ 2 ] = ' domString size error ' ) , 2 ) ;:==:var hierarchy_request_err:==:exceptionCode . hierarchy_request_err     ( ( exceptionMessage [ 3 ]   ' hierarchy request error ' ) , 3 ) ;
var eventproxy = require ( ' eventproxy ' ) ;:==:var utility:==:require ( ' utility ' ) ;
var entityName = model . entityNames . session ;:==:var localSessionSort:==:breezeConfig . localSessionSort ;
var target = opts . target ;:==:var len:==:targetArray . length ;
var popup = that . popup ;:==:var options:==:that . options ;
var browsers = grunt . option ( ' browsers ' ) ;:==:var reporters:==:grunt . option ( ' reporters ' ) ;
var RACE = ' RACE ' ;:==:var CALL:==:' CALL ' ;
var highlights = result . highlights ;:==:var totalValue:==:result . totalValue ;
var temperature = params . temperature ;:==:var shadowsHue:==:params . shadowsHue ;
var oneOverRadiiSquared = defined ( ellipsoid ) ? ellipsoid . oneOverRadiiSquared : wgs84OneOverRadiiSquared ;:==:var centerToleranceSquared:==:defined ( ellipsoid ) ? ellipsoid . _ centerToleranceSquared : wgs84CenterToleranceSquared ;
var left = this . transformAny ( tree . left ) ;:==:var iterator:==:this . transformAny ( tree . iterator ) ;
var left = region . left + dest . x ;:==:var top:==:region . top + dest . y ;
var loneHighSurrogates = parts . loneHighSurrogates ;:==:var loneLowSurrogates:==:parts . loneLowSurrogates ;
var span = button . findElement ( ' span ' ) ;:==:var className:==:span . getAttribute ( ' className ' ) ;
var start = grid . getNodeAt ( startx , starty ) ;:==:var end:==:grid . getNodeAt ( endx , endy ) ;
var api = obj . apis [ i ] ;:==:var path:==:api . path ;
var barClassSuccess = options . barClassSuccess  |  |  ' ' ;:==:var barClassFailure:==:options . barClassFailure  |  |  ' bar - danger ' ;
var mongoose = start . mongoose ;:==:var assert:==:require ( ' power - assert ' ) ;
var useWebvr = scene . _ useWebvr & & scene . mode ! = = sceneMode . scene2d ;:==:var passes:==:scene . _ frameState . passes ;
var notebook = Notebook . cache [ notebookId ] ;:==:var len:==:cacheNotes ? cacheNotes . length : 0 ;
var uploadImg = editor . uploadImg ;:==:var config:==:editor . config ;
var rows = results . rows ;:==:var length:==:rows . length ;
var messageType = ( keyMessage . messageType ) ? keyMessage . messageType : ' license - request ' ;:==:var message:==:keyMessage . message ;
var width = options . colwidth  |  |  300 ;:==:var maxwidth:==:options . colmaxwidth  |  |  300 ;
var div = document . body . appendChild ( document . createElement ( ' div ' ) ) ;:==:var button:==:new te . obj [ 0 ] . button ( title : ' testButton ' , label : ' test',editor : te . obj [ 0 ] . editor ( ) ) ;
var yaml = require ( ' js - yaml ' ) ;:==:var marked:==:require ( ' marked ' ) ;
var EXTEND = ci . EXTEND ;:==:var FORMAT:==:ci . FORMAT ;
var endCount = endCountParser . parseuShort ( ) ;:==:var startCount:==:startCountParser . parseuShort ( ) ;
var body = angular . element ( $ document [ 0 ] . body ) ;:==:var head:==:angular . element ( $ document [ 0 ] . getElementsByTagName ( ' head ' ) [ 0 ] ) ;
var rimraf = require ( ' rimraf ' ) ;:==:var chmodr:==:require ( ' chmodr ' ) ;
var target = select ( evt . target ) ;:==:var relatedTarget:==:evt . relatedTarget ;
var index = _ dereq _ ( ' indexof ' ) ;:==:var parser:==:_ dereq _ ( ' engine . io - parser ' ) ;
var x = possibleCoordinates . x ;:==:var y:==:possibleCoordinates . y ;
var Types = keystone . Field . Types ;:==:var hiddenRelationship:==:new keystone . list ( ' hiddenRelationship ' ) ;
var purple600 = exports . purple600 = ' # 8e24aa ' ;:==:var purple700:==:exports . purple700    ' # 7b1fa2 ' ;
var monthNamesShort = ( settings ? settings . monthNamesShort : null )  |  |  this . _ defaults . monthNamesShort ;:==:var monthNames:==:( settings ? settings . monthNames : null )  |  |  this . _ defaults . monthNames ;
var unwrap = shadowdomPolyfill . unwrap ;:==:var wrap:==:shadowdomPolyfill . wrap ;
var a = mobx . observable ( 1 ) ;:==:var b:==:mobx . observable ( 2 ) ;
var scrollCtrl = infiniteScrollCtrl . scrollCtrl = ctrls [ 0 ] ;:==:var jsScrolling:==:infiniteScrollCtrl . jsScrolling    ! ! scrollCtrl ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var plat:==:require ( ' os ' ) . platform ( ) ;
var minBlack = exports . minBlack = ' rgba ( 0 , 0 , 0 , 0 . 26 ) ' ;:==:var faintBlack:==:exports . faintBlack    ' rgba ( 0 , 0 , 0 , 0 . 12 ) ' ;
var invalidAlgorithmError = utils . invalidAlgorithmError ;:==:var validateAlgorithm:==:utils . validateAlgorithm ;
var transform = context . transform ;:==:var origin:==:context . origin ;
var col = grid . columns [ 0 ] ;:==:var row:==:grid . rows [ 0 ] ;
var video = element . find ( ' video ' ) , video_obj = video [ 0 ] ;:==:var controls:==:element . find ( ' . controls ' ) , volume_button    controls . find ( ' . volume ' ) ;
var shapes = this . _ shapes ;:==:var itemSize:==:visualMapModel . itemSize ;
var reactCurrentOwner = require ( ' reactCurrentOwner ' ) ;:==:var reactElement:==:require ( ' reactElement ' ) ;
var bsearchForInsert = $ util . bsearchForInsert ;:==:var allbackMaker:==:$ allback . allbackMaker ;
var cancelable = defaultValue ( options . cancelable , true ) ;:==:var view:==:defaultValue ( options . view , window ) ;
var s = new mymath . expression . node . symbolNode ( ' myFunction ' ) ;:==:var a:==:new mymath . expression . node . constantNode ( 4 ) ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var json:==:require ( ' json ' ) ;
var col = grid . columns [ 2 ] ;:==:var row:==:grid . rows [ 0 ] ;
var spy = this . sinon . spy ( modeManager , ' start ' ) ;:==:var input:==:document . getElementById ( ' views - tiles - search - input ' ) ;
var formatString = visuals . valueFormatter . getFormatString ( valuesMetadata , formatStringProp ) ;:==:var pct:==:visuals . valueFormatter . format ( percentage , pctFormatString ) ;
var slots = this . data . slots ;:==:var playingBeforeDisable:==:this . data . playingBeforeDisable ;
var column = columns_2 [ _ i ] ;:==:var roles:==:column . roles ;
var r = processFeature ( dataSource , parent , groundOverlay , entityCollection , styleCollection , sourceUri , uriResolver , promises , context ) ;:==:var entity:==:r . entity ;
var child = action . children [ i ] ;:==:var node:==:child . node ;
var includes = require ( ' includes ' ) ;:==:var is:==:require ( ' is ' ) ;
var defaultViewport = options . defaultViewport ;:==:var renderingQueue:==:options . renderingQueue ;
var domain = require ( ' domain ' ) ;:==:var request:==:require ( ' request ' ) ;
var rel = link . rel ;:==:var href:==:link . href ;
var offset = file_ids [ file_id ] . offset-1 ;:==:var byteArray:==:file_ids [ file_id ] . byteArray ;
var tr = d . createElement ( ' tr ' ) ;:==:var th:==:d . createElement ( ' th ' ) ;
var texture = imagery . textureWebMercator  |  |  imagery . texture ;:==:var rectangle:==:imagery . rectangle ;
var reply_id = req . params . reply_id ;:==:var content:==:req . body . t_content ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var logger:==:require ( ' gulp - logger ' ) ;
var domain = y [ p . key ] . domain ( ) ;:==:var range:==:y [ p . key ] . range ( ) ;
var missingDataException = sharedUtil . missingDataException ;:==:var xRefParseException:==:sharedUtil . xRefParseException ;
var color = symbolMeta . color ;:==:var dataIndex:==:symbolMeta . dataIndex ;
var width = $ j ( this ) . css ( ' width ' ) ;:==:var height:==:$ j ( this ) . css ( ' height ' ) ;
var path = require ( ' path ' ) ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var a = observable ( 2 ) ;:==:var b:==:observable ( 3 ) ;
var transform = _ transform_element . call ( this , elem ) ;:==:var jQuery:==:this . jQuery ;
var titleText = powerbi . dataViewObjects . getValue ( legendObjectProperties , visuals . treemapProps . legend . titleText , this . data . legendData . title ) ;:==:var labelColor:==:powerbi . dataViewObject . getValue ( legendObjectProperties , visuals . legendProps . labelColor , this . data . legendData ? this . data . legendData . labelColor : visuals . legendData . defaultLegendLabelFillColor ) ;
var a1 = expected [ i ] . locals . a1 ;:==:var b1:==:expected [ i ] . locals . b1 ;
var minimumGreen = defaultValue ( options . minimumGreen , 0 ) ;:==:var maximumGreen:==:defaultValue ( options . maximumGreen , 1 . 0 ) ;
var uniq = require ( ' lodash . uniq ' ) ;:==:var flatten:==:require ( ' lodash . flatten ' ) ;
var Buffer = require ( ' buffer ' ) . Buffer ;:==:var fs:==:require ( ' fs ' ) ;
var history = _ props . history ;:==:var location:==:_ props . location ;
var granularity = rectangleGeometry . _ granularity ;:==:var ellipsoid:==:rectangleGeometry . _ ellipsoid ;
var files = ( evt . dataTransfer  |  |  evt . target ) . files ;:==:var file:==:_ . first ( files ) ;
var merge2 = require ( ' merge2 ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var cos = Math . cos ( this . aRotation ) ;:==:var sin:==:math . sin ( this . aRotation ) ;
var path = require ( ' path ' ) ;:==:var _ files:==:path . join ( _ _ dirname , ' _ files ' ) ;
var pos = this . pos ;:==:var inp:==:this . inp ;
var cache = isUndefined ( v [ ' cache ' ] ) ? 1 : v [ ' cache ' ] ;:==:var drag:==:isUndefined ( v [ ' drag ' ] ) ? '' : v [ ' drag ' ] ;
var h = ref . h ;:==:var s:==:ref . s ;
var tabBarios = require ( ' tabBarios ' ) ;:==:var tabBarItemios:==:require ( ' tabBarItemios ' ) ;
var esprima = require ( ' esprima ' ) ;:==:var escodegen:==:require ( ' escodegen ' ) ;
var defineSupportCode = exports . defineSupportCode = _ support_code_fns2 . default . add ;:==:var getSupportCodeFns:==:exports . getSupportCodeFns    _ support_code_fns2 . default . get ;
var path = require ( ' path ' ) ;:==:var existsSync:==:fs . existsSync  |  |  path . existsSync ;
var fill = ' local fill ' ;:==:var find:==:' local find ' ;
var frameObject = frameObjectList [ i ] ;:==:var frame:==:data3Parser . parseTransformFrame ( frameObject , null , frameRate ) ;
var lightGreena400 = exports . lightGreena400 = ' # 76ff03 ' ;:==:var lightGreena700:==:exports . lightGreena700    ' # 64dd17 ' ;
var contentBlock = require ( ' contentBlock ' ) ;:==:var contentState:==:require ( ' contentState ' ) ;
var    DISTEXT = 24 ;:==:var    MATCH:==:25 ;
var recorderProfiles = this . settings . recorderProfiles ;:==:var pictureSizes:==:this . settings . pictureSizes ;
var controller = directive . controller ;:==:var controllerAs:==:directive . controllerAs ;
var frameRateLogger = require ( ' frameRateLogger ' ) ;:==:var keyboard:==:require ( ' keyboard ' ) ;
var param = _ param ;:==:var len:==:_ len ;
var newPin = this . newPinInput . value ;:==:var confirmPin:==:this . confirmPinInput . value ;
var focusRippleColor = _ props3 . focusRippleColor ;:==:var focusRippleOpacity:==:_ props3 . focusRippleOpacity ;
var isTransparent = this . isTransparent ;:==:var isAlphaTest:==:this . isAlphaTest ;
var n = this . options . normal ;:==:var d:==:this . options . distance ;
var tokenizer = this . tokenizer ;:==:var token:==:tokenizer . readToken ( ) ;
var masterCallback = jasmine . createSpy ( ' masterCallback ' ) ;:==:var topOverlayCallback:==:jasmine . createSpy ( ' topOverlayCallback ' ) ;
var scrollLeft = this . _ codeMirror . doc . scrollLeft ;:==:var scrollTop:==:this . _ codeMirror . doc . scrollTop ;
var progressFn = jasmine . createSpy ( ' progressFn ' ) ;:==:var uploadProgressFn:==:jasmine . createSpy ( ' uploadProgressFn ' ) ;
var app = this . _ apps [ i d ] ;:==:var inScope:==:( scope & & app . inScope ( scope ) ) ;
var grey50 = exports . grey50 = ' # fafafa ' ;:==:var grey100:==:exports . grey100    ' # f5f5f5 ' ;
var postActivate = _ ref$postActivate = = = undefined ? false : _ ref$postActivate ;:==:var processData:==:_ ref . processData ;
var dataLabelUtils = powerbi . visuals . dataLabelUtils ;:==:var textMeasurementService:==:powerbi . textMeasurementService ;
var xAxisTitle = lineDotChart . defaultSettings . xAxisTitle ;:==:var yAxisTitle:==:lineDotChart . defaultSettings . yAxisTitle ;
var mongoClient = configuration . require . mongoClient ;:==:var long:==:configuration . require . long ;
var $ element = this . $ element = jqLite ( element ) ;:==:var scrollView:==:this . scrollView    new ionic . views . scroll ( scrollViewOptions ) ;
var moment = require ( ' moment - timezone ' ) ;:==:var schemaType:==:require ( ' warehouse ' ) . schemaType ;
var b = rejectSoon ( ' rejected - b ' , 30 ) ;:==:var c:==:rejectSoon ( ' rejected - c ' , 10 ) ;
var iframe = document . createElement ( ' iframe ' ) ;:==:var attrs:==:$ ( this ) . data ( ' cbox - iframe - attrs ' ) ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var reactMultiChild:==:require ( ' reactMultiChild ' ) ;
var layout = imports . layout ;:==:var clipboard:==:imports . clipboard ;
var bsonRegExp = typeof options [ ' bsonRegExp ' ] = = ' boolean ' ? options [ ' bsonRegExp ' ] : false ;:==:var promoteBuffers:==:options [ ' promoteBuffers ' ]     null ? false : options [ ' promoteBuffers ' ] ;
var rangeNode = math . expression . node . rangeNode ;:==:var indexNode:==:math . expression . node . indexNode ;
var awaitStatement = traceur . syntax . trees . awaitStatement ;:==:var binaryOperator:==:traceur . syntax . trees . binaryOperator ;
var attributeType = this . attribute ( ' attributeType ' ) . value ;:==:var attributeName:==:this . attribute ( ' attributeName ' ) . value ;
var c9 = imports . c9 ;:==:var language:==:imports . language ;
var Prism = require ( ' Prism ' ) ;:==:var React:==:require ( ' React ' ) ;
var options = this . options ;:==:var node:==:e . node ;
var Node = test . Node ;:==:var basename:==:require ( ' path ' ) . basename ;
var Image = require ( ' Image ' ) ;:==:var nativeMethodsMixin:==:require ( ' nativeMethodsMixin ' ) ;
var minervaAnimationDuration = powerbi . visuals . animatorCommon . minervaAnimationDuration ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var beforeAppear = ref . beforeAppear ;:==:var appear:==:ref . appear ;
var setDogName = docSet . getByLongname ( ' setDogName ' ) [ 0 ] ;:==:var setFirstName:==:docSet . getByLongname ( ' setFirstName ' ) [ 0 ] ;
var b = color . b ;:==:var max:==:Math . max ( Math . max ( r , g ) , b ) ;
var stackedOn = data . stackedOn ;:==:var val:==:data . get ( valueDim , idx ) ;
var user = Meteor . user ( ) ;:==:var post:==:Posts . findOne ( commentAttributes . postId ) ;
var cheerio = require ( ' cheerio ' ) ;:==:var superagent:==:require ( ' superagent ' ) ;
var options = this . _ options ;:==:var coordinates:==:Property . getValueOrUndefined ( rectangle . coordinates , time , options . rectangle ) ;
var viewFormat = defaultValue ( queryStringValue ( iconNode , ' viewFormat ' , namespaces . kml ) , defaultViewFormat ) ;:==:var httpQuery:==:queryStringValue ( iconNode , ' httpQuery ' , namespaces . kml ) ;
var dx2 = Math . max ( parseFloat ( mxUtils . getValue ( this . state . style , ' dy1 ' , this . dy1 ) ) + parseFloat ( mxUtils . getValue ( this . state . style , ' arrowHead ' , this . arrowHead ) ) , math . min ( bounds . width - parseFloat ( mxUtils . getValue ( this . state . style , ' dx1 ' , this . dx1 ) ) , parseFloat ( mxUtils . getValue ( this . state . style , ' dx2 ' , this . dx2 ) ) ) ) ;:==:var dy2:==:math . max ( parseFloat ( mxUtils . getValue ( this . state . style , ' dy1 ' , this . dy1 ) ) + parseFloat ( mxUtils . getValue ( this . state . style , ' arrowHead ' , this . arrowHead ) ) , math . min ( bounds . height - parseFloat ( mxUtils . getValue ( this . state . style , ' dy1 ' , this . dy1 ) ) , parseFloat ( mxUtils . getValue ( this . state . style , ' dy2 ' , this . dy2 ) ) ) ) ;
var enable = $ ! enable ;:==:var disableLog:==:$ ! disableLog ;
var nextTick = $ mdUtil . nextTick ;:==:var timeout:==:nextTick . timeout ;
var fs    = require ( ' fs ' ) ;:==:var nodemailer:==:require ( ' nodemailer ' ) ;
var method = ( form . getAttribute ( ' method ' )  |  |  ' get ' ) . toUpperCase ( ) ;:==:var action:==:form . getAttribute ( ' action ' )  |  |  ' unknown ' ;
var type = target . dataset . type ;:==:var selector:==:target . dataset . selector ;
var badgeUpdateManager = windows . ui . notifications . badgeUpdateManager ;:==:var badgeNotification:==:windows . ui . notifications . badgeNotification ;
var r = signature . r ;:==:var s:==:signature . s ;
var getView = t . getView ;:==:var reportEvents:==:t . reportEvents ;
var dispatch = ref . dispatch ;:==:var commit:==:ref . commit ;
var COMMENT_KEYS = exports . COMMENT_KEYS = [ ' leadingComments ' , ' trailingComments ' , ' innerComments ' ] ;:==:var logical_operators:==:exports . logical_operators    [ '  |  |  ' , ' & & ' ] ;
var coords = bot . action . prepareToInteractWith _ ( element , opt_coords ) ;:==:var touchscreen:==:opt_touchscreen  |  |  new bot . touchscreen ( ) ;
var ip      = zombie_array [ index ] [ ' ip ' ] ;:==:var session:==:zombie_array [ index ] [ ' session ' ] ;
var removedObjects = this . _ removedObjects ;:==:var removed:==:removedObjects . values ;
var dom = goog . require ( ' goog . dom ' ) ;:==:var events:==:goog . require ( ' goog . events ' ) ;
var Configuration = _ _ Configuration ( sails ) ;:==:var initializeHooks:==:_ _ initializeHooks ( sails ) ;
var rotation = typeof options . rotation ! = ' undefined ' ? options . rotation : 0 . 0 ;:==:var relatedTarget:==:typeof options . relatedTarget !   ' undefined ' ? options . relatedTarget : null ;
var vertexArraysToDestroy = this . _ vertexArraysToDestroy ;:==:var length:==:vertexArraysToDestroy . length ;
var reactNativeStackInjection = require ( ' reactNativeStackInjection ' ) ;:==:var reactUpdates:==:require ( ' reactUpdates ' ) ;
var backdrop = new Animation ( backdropEle ) ;:==:var wrapper:==:new animation ( ele . querySelector ( ' . modal - wrapper ' ) ) ;
var FLUSH = ' FLUSH ' ;:==:var GET_CONTEXT:==:' GET_CONTEXT ' ;
var createAssignmentStatement = parseTreeFactory . createAssignmentStatement ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var FOO = docSet . getByLongname ( ' foo ' ) [ 0 ] ;:==:var bar:==:docSet . getByLongname ( ' bar ' ) [ 0 ] ;
var message = event . data . message ;:==:var pos:==:event . data . pos ;
var fb = window . fb  |  |  ;:==:var config:==:window . config  |  |  ;
var y = ( vector . x * transformation . m [ 1 ] ) + ( vector . y * transformation . m [ 5 ] ) + ( vector . z * transformation . m [ 9 ] ) ;:==:var z:==:( vector . x * transformation . m [ 2 ] ) + ( vector . y * transformation . m [ 6 ] ) + ( vector . z * transformation . m [ 10 ] ) ;
var className = ( 0 , _ classnames3 . default ) ( _ this . props . className , _ defineProperty ( , outsideClickIgnoreClass , _ this . state . open ) ) ;:==:var customInput:==:_ this . props . customInput  |  |  _ react2 . default . createElement ( ' input ' , type : ' text ' ) ;
var internalformat = info . internalformat ;:==:var format:==:info . format ;
var sortOrder = userFieldsRes . sortOrder ;:==:var index:==:findBestMatchingIndex ( selector , userFields , sortOrder , indexes ) ;
var debug = require ( ' debug ' ) ( ' loopback : registry ' ) ;:==:var dataSource:==:juggler . dataSource ;
var title = tab . title  |  |  '' ;:==:var tpl:==:tab . tpl  |  |  '' ;
var Plugin = imports . Plugin ;:==:var info:==:imports . info ;
var apf = imports . apf ;:==:var ui:==:imports . ui ;
var title = option . title ? option . title : null ;:==:var value:==:option . value ;
var curStart = lastSelection . curStartMark . find ( ) ;:==:var curEnd:==:lastSelection . curEndMark . find ( ) ;
var saveToPhotoAlbum = ! ! options . saveToPhotoAlbum ;:==:var popoverOptions:==:getValue ( options . popoverOptions , null ) ;
var req = msg . req ;:==:var res:==:msg . res ;
var extname = pathFn . extname ( path ) ;:==:var dirname:==:pathFn . dirname ( path ) ;
var endDateLocale = this . _ findElement ( ' endDateLocale ' ) ;:==:var endTimeLocale:==:this . _ findElement ( ' endTimeLocale ' ) ;
var recordingModule = require ( ' nativeModules ' ) . datePickerDialogRecordingModule ;:==:var view:==:require ( ' view ' ) ;
var tearDownFn = testCase . tearDownFn ;:==:var tearDownPageFn:==:testCase . tearDownPageFn ;
var el = goog . dom . getElement ( ' test - visible - el ' ) ;:==:var dom:==:goog . dom . getDomHelper ( el ) ;
var proto = Object . create ( htmlElement . prototype ) ;:==:var innerhtml:==:object . getOwnPropertyDescriptor ( element . prototype , ' innerhtml ' ) ;
var n1 = helper . getNode ( ' n1 ' ) ;:==:var n2:==:helper . getNode ( ' n2 ' ) ;
var a = new constantNode ( 2 ) ;:==:var b:==:new symbolNode ( ' x ' ) ;
var events   = require ( ' events ' ) ;:==:var util:==:require ( ' util ' ) ;
var latitude = cartographic . latitude ;:==:var longitude:==:cartographic . longitude ;
var transaction = this . _ db . transaction ( [ DBOS_PLACES ] , ' readwrite ' ) ;:==:var objectStore:==:transaction . objectStore ( dbos_places ) ;
var vfs = imports . vfs ;:==:var c9:==:imports . c9 ;
var filterQueryOp = this . _ filterQueryOp ;:==:var value:==:this . _ value ;
var b = rejectSoon ( ' rejected - b ' , 30 ) ;:==:var c:==:' c ' ;
var x = trace . x ;:==:var y:==:trace . y ;
var title = config . titles [ i ] ;:==:var message:==:config . messages [ i ] ;
var Decorated = db . model ( ' gh2360 ' , decoratedSchema , ' gh2360 ' ) ;:==:var d:==:new decorated ( title : ' 1 ' ) ;
var title = req . body . title ;:==:var tab:==:req . body . tab ;
var FUNCTION_BODY = ' FUNCTION_BODY ' ;:==:var FUNCTION_DECLARATION:==:' FUNCTION_DECLARATION ' ;
var reactNativeViewAttributes = require ( ' reactNativeViewAttributes ' ) ;:==:var platform:==:require ( ' platform ' ) ;
var ikSolver = mesh . ikSolver ;:==:var grantSolver:==:mesh . grantSolver ;
var runtime = require ( ' pug - runtime ' ) ;:==:var stringify:==:require ( ' js - stringify ' ) ;
var blueA200 = exports . blueA200 = ' # 448aff ' ;:==:var blueA400:==:exports . blueA400    ' # 2979ff ' ;
var unset   = options . unset ;:==:var silent:==:options . silent ;
var payloadTooLargeError = errors . payloadTooLargeError ;:==:var unsupportedMediaTypeError:==:errors . unsupportedMediaTypeError ;
var operation = req . operation ;:==:var output:==:req . service . api . operations [ operation ] . output ;
var traceEvent = record . traceEvent ( ) ;:==:var title:==:webInspector . timelineuiUtils . eventStyle ( traceEvent ) . title ;
var email = opt . email  |  |  '' ;:==:var isContact:==:opt . isContact  |  |  false ;
var gulp = require ( ' gulp ' ) ;:==:var newer:==:require ( ' gulp - newer ' ) ;
var value2 = options . value2 ;:==:var format:==:options . format ;
var obj = options . obj  |  |  window ;:==:var path:==:options . path  |  |  ( ( obj     window ) ? ' window ' : '' ) ;
var winston = require ( ' winston ' ) ;:==:var path:==:require ( ' path ' ) ;
var graph = ui . editor . graph ;:==:var view:==:graph . view ;
var columnData = _ ref . columnData ;:==:var dataKey:==:_ ref . dataKey ;
var should = require ( ' should ' ) ;:==:var domain:==:require ( ' domain ' ) ;
var instanceID = measurement . instanceID ;:==:var timerType:==:measurement . timerType ;
var rows1st = Plane . rows1st ;:==:var rows2nd:==:Plane . rows2nd ;
var tx = worldTransform . tx ;:==:var ty:==:worldTransform . ty ;
var Optional = makeParamDecorator ( ' optional ' , [ ] ) ;:==:var injectable:==:makeDecorator ( ' injectable ' , [ ] ) ;
var w = Math . min ( 16 , ( this . _ FBU . x + this . _ FBU . width ) - x ) ;:==:var h:==:Math . min ( 16 , ( this . _ FBU . y + this . _ FBU . height ) - y ) ;
var dropDown = $ scope . dropDown ;:==:var multiSelect:==:$ scope . multiSelect ;
var ams = ' ams ' ;:==:var accent:==:' accent ' ;
var shader = self . shader ;:==:var buffers:==:self . buffers ;
var scrollX = this . workspace _ . scrollX ;:==:var scale:==:this . workspace _ . scale ;
var value = _ ref . value ;:==:var browser:==:_ ref . browserInfo . browser ;
var keys = entry . keys ;:==:var obj:==:entry . obj ;
var index = legendItem . index ;:==:var chart:==:this . chart ;
var y = point . y ;:==:var radius:==:point . radius ;
var prev = contact . prev ;:==:var next:==:contact . next ;
var Author = db . model ( ' Author ' , authorSchema ) ;:==:var book:==:db . model ( ' book ' , bookSchema ) ;
var each = options . each ;:==:var end:==:options . end ;
var debug = require ( ' debug ' ) ( ' pm2 : interface : daemon ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var debug = imports [ ' debugger ' ] ;:==:var c9:==:imports . c9 ;
var tessellation = options . tessellation  |  |  64 ;:==:var arc:==:( options . arc <   0  |  |  options . arc > 1 ) ? 1 . 0 : options . arc  |  |  1 . 0 ;
var min   = Math . min ( balance , trustL ) ;:==:var max:==:Math . max ( balance , trustR ) ;
var modelMatrix = collection . _ modelMatrix ;:==:var polylineBuckets:==:collection . _ polylineBuckets    ;
var Pattern = util . Pattern ;:==:var join:==:pathFn . join ;
var c = a . concat ( b ) ;:==:var d:==:a . slice ( 10 ) ;
var second = this . second ;:==:var minute:==:this . minute ;
var lport = splitlhostlport [ 1 ] ;:==:var redir:==:hash . substring ( hash . indexOf ( ' redir ' ) + 6 , hash . length ) ;
var title = req . fields . title ;:==:var content:==:req . fields . content ;
var markAsOriginatingFromRejection = errors . markAsOriginatingFromRejection ;:==:var canAttach:==:errors . canAttach ;
var element = this . _ elementFromHandle ( itemPromise . handle ) ;:==:var previous:==:this . _ elementFromHandle ( previousHandle ) ;
var alarm = icalEvent . component . getAllSubcomponents ( ' valarm ' ) [ 2 ] ;:==:var trigger:==:alarm . getFirstProperty ( ' trigger ' ) ;
var from = this . options . from + ( this . options . shift * i ) ;:==:var to:==:this . options . to + ( this . options . shift * i ) ;
var casper = require ( ' casper ' ) . create ( ) ;:==:var baz:==:require ( ' baz ' ) ;
var token = options . token ;:==:var lineNumber:==:options . lineNumber ;
var script = document . querySelector ( ' script [ src*= ' ' + thisFile + ' ' ] ' ) ;:==:var src:==:script . attributes . src . value ;
var main = params . main ;:==:var tagdict:==:main . tagdict ;
var isScrolling = _ ref2 . isScrolling ;:==:var rowIndex:==:_ ref2 . rowIndex ;
var maxFileSize = data . maxFileSizeBytes ;:==:var maxPixelSize:==:data . maxPixelSize ;
var start = new Date ( options . start ) ;:==:var end:==:new Date ( options . end ) ;
var moreinner = ' EvalDerivedClass_moreinner ' ;:==:var inner:==:' EvalDerivedClass_inner ' ;
var touches = nativeEvent . touches ;:==:var changedTouches:==:nativeEvent . changedTouches ;
var orange400 = exports . orange400 = ' # ffa726 ' ;:==:var orange500:==:exports . orange500    ' # ff9800 ' ;
var service = this . request . service ;:==:var operation:==:this . request . operation ;
var span = document . createElement ( ' span ' ) ;:==:var msisdn:==:iccInfo . msisdn  |  |  iccInfo . mdn ;
var MAYBE_PROPER = scopeAnalyzer . maybe_proper ;:==:var not_proper:==:scopeAnalyzer . not_proper ;
var health = this . health ;:==:var pluginManager:==:this . pluginManager ;
var map = mapXML . documentElement ;:==:var version:==:map . getAttribute ( ' version ' ) ;
var htmlShadowElement = scope . wrappers . htmlShadowElement ;:==:var htmlTemplateElement:==:scope . wrappers . htmlTemplateElement ;
var fullWidth = props . fullWidth ;:==:var icon:==:props . icon ;
var style = this . styleRule . style ( ) ;:==:var allProperties:==:style . allProperties ;
var direction = this . direction ;:==:var up:==:this . up ;
var listItems = options . listItems ;:==:var activeItemdom:==:options . activeItemdom ;
var startPos = self . select . startPos ;:==:var endPos:==:self . select . endPos ;
var util = require ( ' util ' ) ;:==:var doctrine:==:require ( ' doctrine ' ) ;
var opts = _ _ alloyId46 . opts  |  |  ;:==:var models:==:_ _ alloyId45 . models ;
var width = width  |  |  640 ;:==:var height:==:height  |  |  480 ;
var reactNativeViewAttributes = require ( ' reactNativeViewAttributes ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var yaml = require ( ' js - yaml ' ) . safeLoad ;:==:var yargs:==:require ( ' yargs ' ) ;
var def = goog . dom . getElement ( ' def ' ) ;:==:var jkl:==:goog . dom . getElement ( ' jkl ' ) ;
var fs   = require ( ' fs ' ) ;:==:var mockery:==:require ( ' mockery ' ) ;
var to = args . to ;:==:var check:==:args . check ;
var full = ! ! script . getAttribute ( ' data - full ' ) ;:==:var init:==:! ! script . getAttribute ( ' data - init ' ) ;
var highlightSlices = this . highlightSlices = options . highlightSlices ;:==:var clearCatcher:==:options . clearCatcher ;
var ACCESS_KEY = process . env . BROWSER_STACK_ACCESS_KEY ;:==:var READY_FILE:==:process . env . BROWSER_PROVIDER_READY_FILE ;
var backgroundColor = ecModel . get ( ' backgroundColor ' )  |  |  ' transparent ' ;:==:var painter:==:zr . painter ;
var subtitleStyle = _ props . subtitleStyle ;:==:var textStyle:==:_ props . textStyle ;
var pathPrefix = this . _ entries [ itemId ] . pathPrefix ;:==:var fileSystemPath:==:this . _ entries [ itemId ] . fileSystemPath ;
var context = options . context ;:==:var width:==:options . width ;
var yScale = axisOptions . yScale ;:==:var seriesOffsetScale:==:axisOptions . seriesOffsetScale ;
var b = numberOfVertices + ix + gridx1 * ( iy + 1 ) ;:==:var c:==:numberOfVertices + ( ix + 1 ) + gridx1 * ( iy + 1 ) ;
var chalk   = require ( ' chalk ' ) ;:==:var fclone:==:require ( ' fclone ' ) ;
var Scope = scopeAnalyzer . scope ;:==:var variable:==:scopeAnalyzer . variable ;
var getComponentProperty = entity . getComponentProperty ;:==:var setComponentProperty:==:entity . setComponentProperty ;
var s = Math . sin ( rad ) ;:==:var c:==:Math . cos ( rad ) ;
var axes = axesLayout . axes ;:==:var tickLabelMargins:==:axesLayout . tickLabelMargins ;
var reactdomOption = require ( ' reactdomOption ' ) ;:==:var reactdomSelect:==:require ( ' reactdomSelect ' ) ;
var completed = todosCollection . completed ( ) . length ;:==:var remaining:==:todosCollection . remaining ( ) . length ;
var month = parseInt ( cal . find ( ' . monthselect ' ) . val ( ) , 10 ) ;:==:var year:==:cal . find ( ' . yearselect ' ) . val ( ) ;
var nodemailer = require ( ' nodemailer ' ) ;:==:var moment:==:require ( ' moment - timezone ' ) ;
var rowSpan = cell . rowSpan  |  |  1 ;:==:var colSpan:==:cell . colSpan  |  |  1 ;
var query = options . query ;:==:var getName:==:options . getName ;
var positions = this . positions ;:==:var colors:==:this . colors ;
var predicate = this . predicate ;:==:var resultSelector:==:this . resultSelector ;
var previousNode = nodeWithId ( res . previousNodeId ) ;:==:var node:==:new domNode ( exports , res . node ) ;
var inline = line . inlines [ i ] ;:==:var decoration:==:inline . decoration ;
var to = this . to ;:==:var direction:==:this . _ direction ;
var semver = require ( ' semver ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var lineno = n . lineno ;:==:var col_offset:==:n . col_offset ;
var elementArray = group . elementArray ;:==:var layoutVertexArray:==:group . layoutVertexArray ;
var chalk = require ( ' chalk ' ) ;:==:var flaverr:==:require ( ' flaverr ' ) ;
var rotation = geometry . _ rotation ;:==:var stRotation:==:geometry . _ stRotation ;
var f = fulfillBuiltInSoon ( ' f ' , 30 ) ;:==:var g:==:rejectThenableSoon ( ' rejected - g ' , 10 ) ;
var eventPluginHub = require ( ' eventPluginHub ' ) ;:==:var eventPluginUtils:==:require ( ' eventPluginUtils ' ) ;
var slugize = util . slugize ;:==:var Pattern:==:util . Pattern ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var quoteAttributeValueForBrowser:==:require ( ' quoteAttributeValueForBrowser ' ) ;
var target = this . _ parentPane . _ target ;:==:var rule:==:this . rule ( ) ;
var subject = this . subject ;:==:var observers:==:subject . observers ;
var m = SIMD . Int8x16 . fromInt32x4Bits ( simd . int32x4 ( 0x3f800000 , 0x40000000 , 0x40400000 , 0x40800000 ) ) ;:==:var n:==:simd . int32x4 . fromInt8x16Bits ( m ) ;
var date = require ( ' load - date ' ) ;:==:var domify:==:require ( ' domify ' ) ;
var blue = ' blue ' ;:==:var green:==:' green ' ;
var draft = $ draft . last ( ) ;:==:var recent:==:$ recent . last ( ) ;
var boneInverses = this . boneInverses ;:==:var boneMatrices:==:this . boneMatrices ;
var tile = tilesToUpdateHeights [ 0 ] ;:==:var customData:==:tile . customData ;
var clientHeight = _ state . clientHeight ;:==:var clientWidth:==:_ state . clientWidth ;
var domain = require ( ' domain ' ) ;:==:var bunyan:==:require ( ' bunyan ' ) ;
var Data = ctx . model ( ' Data ' ) ;:==:var path:==:file . params . path ;
var budgets = this . _ budgets ;:==:var budget:==:budgets [ jobType ] ;
var keyword = request . keyword ;:==:var port:==:request . port ;
var proc = imports . proc ;:==:var vfs:==:imports . vfs ;
var endDate = this . arg ( ' endDate ' ) ;:==:var isAllDay:==:this . arg ( ' isAllDay ' ) ;
var createPromiseCapability = sharedUtil . createPromiseCapability ;:==:var combineUrl:==:sharedUtil . combineUrl ;
var moment = require ( ' moment ' ) ;:==:var cp:==:require ( dirs . core + ' cp ' ) ;
var foo = bar ( _ templateObject , 42 , _ . foobar ( ) ) ;:==:var bar:==:bar ( _ templateObject2 , 42 , _ . foobar ( ) ) ;
var hold = this . hold ;:==:var wind:==:this . wind  |  |  5 ;
var penetratedFaceNormal = convexparticle_penetratedfacenormal ;:==:var worldPenetrationVec:==:convexparticle_worldpenetrationvec ;
var _ exitPrediction = module [ ' _ exitPrediction ' ] = asm [ ' _ exitPrediction ' ] ;:==:var _ getPrediction:==:module [ ' _ getPrediction ' ]    asm [ ' _ getPrediction ' ] ;
var Emitter = require ( ' events ' ) . eventEmitter ;:==:var repl:==:require ( ' repl ' ) ;
var plupload = that . plupload ;:==:var $ status:==:that . $ status ;
var arc = this . arc ;:==:var radius:==:this . radius ;
var xor = stdlib . Atomics . xor ;:==:var fround:==:stdlib . Math . fround ;
var identifierGenerator = this . identifierGenerator _ ;:==:var reporter:==:this . reporter _ ;
var EVENT_END = gestureDetector . event_end = ' end ' ;:==:var event_release:==:gestureDetector . event_release    ' release ' ;
var events = require ( ' events ' ) ;:==:var chai:==:require ( ' chai - nightwatch ' ) ;
var handlebars = require ( ' gulp - handlebars ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var w = Math . max ( 0 , Math . min ( rect . width , parseFloat ( mxUtils . getValue ( this . style , ' width ' , this . width ) ) * this . scale ) ) ;:==:var h:==:math . max ( 0 , math . min ( rect . height , parseFloat ( mxUtils . getValue ( this . style , ' height ' , this . height ) ) * this . scale ) ) ;
var dynCall_iiiiiii = Module [ ' dynCall_iiiiiii ' ] = asm [ ' dynCall_iiiiiii ' ] ;:==:var dynCall_ii:==:Module [ ' dynCall_ii ' ]    asm [ ' dynCall_ii ' ] ;
var getHoverListener = t . getHoverListener ;:==:var getMaxMinute:==:t . getMaxMinute ;
var webdriver = require ( ' selenium - webdriver ' ) ;:==:var chromedriver:==:require ( ' chromedriver ' ) ;
var d = dec_point = = = undefined ? ' , ' : dec_point ;:==:var t:==:thousands_sep      undefined ? ' . ' : thousands_sep , s    n < 0 ? ' - ' : ' ' ;
var attributes = geometry . attributes ;:==:var position:==:attributes . position ;
var fontSize = getStyleProperty ( item , styleContextStack , ' fontSize ' , 12 ) ;:==:var bold:==:getStyleProperty ( item , styleContextStack , ' bold ' , false ) ;
var sync = state . sync ;:==:var cb:==:state . writecb ;
var hasSelection = this . interactivityService & & this . interactivityService . hasSelection ( ) ;:==:var shapeGraphicsContext:==:this . shapeGraphicsContext ;
var clear = ol . obj . clear ;:==:var isEmpty:==:ol . obj . isEmpty ;
var range = setup . pickers [ picker ] . range ;:==:var isPadded:==:setup . pickers [ picker ] . isPadded  |  |  false ;
var width = referenceCanvas . width ;:==:var height:==:referenceCanvas . height ;
var net = require ( ' net ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var reactdomSelect = require ( ' reactdomSelect ' ) ;:==:var reactdomTextarea:==:require ( ' reactdomTextarea ' ) ;
var   START_TO_END      = 1 ;:==:var   END_TO_END:==:2 ;
var s = split [ y ] ;:==:var x:==:s . search ( new regExp ( test . nameMatcher ) ) ;
var fontType = sharedUtil . fontType ;:==:var util:==:sharedUtil . util ;
var keys = this . keys ;:==:var bboxes:==:this . bboxes ;
var http = require ( ' http ' ) ;:==:var error:==:require ( ' http - error ' ) ;
var assert = require ( ' power - assert ' ) ;:==:var async:==:require ( ' async ' ) ;
var query = connection . query ( ' SELECT * FROM stream LIMIT 2 ' ) ;:==:var stream:==:query . stream ( ) ;
var geometry = object . geometry ;:==:var materials:==:object . materials ;
var cbs = this . _ cbs = this . _ cbs  |  |  ;:==:var name:==:options . name  |  |  options ;
var uiSourceCode = nodes [ i ] . uiSourceCode ( ) ;:==:var inspectedPageurl:==:webInspector . targetManager . inspectedPageurl ( ) ;
var audioRecvBitrate = options . audioRecvBitrate ;:==:var videoRecvBitrate:==:options . videoRecvBitrate ;
var View = require ( ' View ' ) ;:==:var Text:==:require ( ' Text ' ) ;
var con = modal . find ( ' . accounts - con ' ) ;:==:var inputer:==:modal . find ( ' . accounts - inputer ' ) ;
var uuid = require ( ' uuid ' ) ;:==:var restError:==:errors . restError ;
var multiplier = clockPacket . clock . multiplier ;:==:var range:==:clockRange [ clockPacket . clock . range ] ;
var snapsPerSlot = this . snapsPerSlot ;:==:var colCoordCache:==:this . colCoordCache ;
var dom = api . dom ;:==:var domPosition:==:dom . domPosition ;
var parentNodeInterface = scope . parentNodeInterface ;:==:var selection:==:scope . wrappers . selection ;
var BREAK_STATEMENT = ' BREAK_STATEMENT ' ;:==:var CALL_EXPRESSION:==:' CALL_EXPRESSION ' ;
var mappings = util . getArg ( sourceMap , ' mappings ' ) ;:==:var file:==:util . getArg ( sourceMap , ' file ' , null ) ;
var parentEntity = relationArray . parentEntity ;:==:var entityManager:==:parentEntity . entityAspect . entityManager ;
var all = imports [ ' test . all ' ] ;:==:var Node:==:test . Node ;
var transforms = this . transforms ;:==:var expr:==:replaceContextInVars ( this . expr ) ;
var React = require ( ' React ' ) ;:==:var f8Button:==:require ( ' f8Button ' ) ;
var tablixObjects = visuals . controls . internal . tablixObjects ;:==:var edgeSettings:==:tablixUtils . edgeSettings ;
var startState = tryMachine . startState ;:==:var fallThroughState:==:tryMachine . fallThroughState ;
var wrapData = this . $ wrapData ;:==:var wrapLimit:==:this . $ wrapLimit ;
var del = require ( ' del ' ) ;:==:var filter:==:require ( ' gulp - filter ' ) ;
var go = options . go ;:==:var getUserConfirmation:==:options . getUserConfirmation ;
var props = node . props ;:==:var value:==:props . value + '' ;
var gl = painter . gl ;:==:var transform:==:painter . transform ;
var Driver = require ( ' marionette - client ' ) . Drivers . Promises ;:==:var net:==:require ( ' net ' ) ;
var w = width*1 ;:==:var h:==:height*1 ;
var timeout = ( spec . timeout = = undefined ) ? TIMEOUT_SEARCH : spec . timeout ;:==:var waitFor:==:( spec . waitFor     undefined ) ? true : spec . waitFor ;
var width = options . width  |  |  10 . 0 ;:==:var height:==:options . height  |  |  10 . 0 ;
var MATERIAL_INDEX = Polyline . MATERIAL_INDEX ;:==:var POSITION_SIZE_INDEX:==:Polyline . POSITION_SIZE_INDEX ;
var iNumberOfRows = window . iNumberOfRows ;:==:var initRowActions:==:window . initRowActions ;
var serialport = require ( ' serialport ' ) ;:==:var serialPort:==:serialport . serialPort ;
var aspect = camera . _ aspect ;:==:var projection:==:camera . _ projection ;
var x = cmd . x , y = cmd . y ;:==:var radius:==:cmd . radius ;
var version = _ ref . version ;:==:var prefix:==:_ ref . prefix ;
var gridLines = options . gridLines ;:==:var scaleLabel:==:options . scaleLabel ;
var sqExprBuilder = powerbi . data . sqExprBuilder ;:==:var utility:==:jsCommon . utility ;
var shareSummaryView = _ appJsViewsShareSummaryView [ ' default ' ] ;:==:var listView:==:_ appJsViewsListView [ ' default ' ] ;
var colors = simplePolylineGeometry . _ colors ;:==:var colorsPerVertex:==:simplePolylineGeometry . _ colorsPerVertex ;
var mergePhaseNameLists = require ( ' loopback - phase ' ) . mergePhaseNameLists ;:==:var debug:==:require ( ' debug ' ) ( ' loopback : app ' ) ;
var elementCount = mergedParentViewProto . mergeInfo . elementCount ;:==:var viewCount:==:mergedParentViewProto . mergeInfo . viewCount ;
var month = app . month ;:==:var todaySquare:==:month . todaySquare ;
var socketMessageType = windows . networking . sockets . socketMessageType ;:==:var unicodeEncoding:==:windows . storage . streams . unicodeEncoding ;
var participants = document . getElementById ( ' participants ' )  |  |  document . body ;:==:var call:==:document . getElementById ( ' start - calling ' ) ;
var rctNativeAppEventEmitter = require ( ' rctNativeAppEventEmitter ' ) ;:==:var subscribable:==:require ( ' subscribable ' ) ;
var bind = require ( ' bind - component ' ) ;:==:var type:==:require ( ' type - component ' ) ;
var metadata = config . prose . metadata ;:==:var q:==:queue ( 1 ) ;
var routes = _ ref . routes ;:==:var location:==:_ ref . location ;
var subscriber = state . subscriber ;:==:var delay:==:state . delay ;
var wrap = element . find ( ' md - chips - wrap ' ) ;:==:var controller:==:element . controller ( ' mdChips ' ) ;
var oldValue = that . _ oldValue ;:==:var value:==:that . value ( ) ;
var surfaceHeight = rectangleGeometry . _ surfaceHeight ;:==:var extrudedHeight:==:rectangleGeometry . _ extrudedHeight ;
var   TYPEDO = 13 ;:==:var   STORED:==:14 ;
var Divider = imports . Divider ;:==:var panels:==:imports . panels ;
var size = this . _ size ;:==:var barGroup:==:this . _ displayables . barGroup ;
var rotation = defaultValue ( options . rotation , 0 ) ;:==:var tiltx:==:defaultValue ( options . tiltx , 0 ) ;
var days    = abs ( this . _ days ) ;:==:var months:==:abs ( this . _ months ) ;
var richTextCodeMirrorAdapter = firepad . richTextCodeMirrorAdapter ;:==:var richTextCodeMirror:==:firepad . richTextCodeMirror ;
var resolution = document . getElementById ( ' resolution ' ) . value ;:==:var dim:==:dims [ format ] ;
var BOOLEAN_UNARY_OPERATORS = exports . BOOLEAN_UNARY_OPERATORS = [ ' delete ' , ' ! ' ] ;:==:var NUMBER_UNARY_OPERATORS:==:exports . NUMBER_UNARY_OPERATORS    [ ' + ' , ' - ' , ' + + ' , ' -- ' , ' ~ ' ] ;
var kernel = iPython . notebook . kernel ;:==:var msg_id:==:cell . last_msg_id ;
var parseTreeType = traceur . syntax . parseTreeType ;:==:var parseTreeVisitor:==:traceur . syntax . parseTreeVisitor ;
var mag = ID ( ' mag ' ) ;:==:var r:==:document . createElementns ( svg_ns , ' rect ' ) ;
var symbolQuadsArray = tile . symbolQuadsArray . serialize ( ) ;:==:var transferables:==:[ rawTileData ] . concat ( featureIndex _ . transferables ) . concat ( collisionTile _ . transferables ) ;
var allowSwipeToPrev = s . params . allowSwipeToPrev ;:==:var allowSwipeToNext:==:s . params . allowSwipeToNext ;
var newNode = newNodes [ length ] ;:==:var originalNode:==:originalNodes [ length ] ;
var sock = stream . node . sock ;:==:var msg:==:sock . sock_ops . recvmsg ( sock , length ) ;
var stateAllocator = traceur . codegeneration . generator . stateAllocator ;:==:var stateMachine:==:traceur . syntax . trees . stateMachine ;
var casper = require ( ' casper ' ) . create ( ) ;:==:var foo:==:require ( ' foo ' ) ;
var layout = post . layout ;:==:var path:==:post . path ;
var startAngle = vm . startAngle ;:==:var endAngle:==:vm . endAngle ;
var commands = imports . commands ;:==:var navigate:==:imports . navigate ;
var upgradeDocumentTree = scope . upgradeDocumentTree ;:==:var upgradeDocument:==:scope . upgradeDocument ;
var a = Math . abs ( this [ ' re ' ] ) ;:==:var b:==:Math . abs ( this [ ' i m ' ] ) ;
var el = this . el ;:==:var testComponent:==:this . testComponent . prototype ;
var bottomRadius = cylinderGeometry . _ bottomRadius ;:==:var slices:==:cylinderGeometry . _ slices ;
var graph = this . editor . graph ;:==:var graph:==:this . editor . graph ;
var xfov = camera . perspective . xfov ;:==:var aspect_ratio:==:camera . perspective . aspect_ratio  |  |  1 ;
var lightBlue200 = exports . lightBlue200 = ' # 81d4fa ' ;:==:var lightBlue300:==:exports . lightBlue300    ' # 4fc3f7 ' ;
var target = event . target ;:==:var keyCode:==:event . keyCode ;
var element = that . element ;:==:var options:==:that . options ;
var handleLabels = displaybles . handleLabels ;:==:var orient:==:this . _ orient ;
var FONT_IDENTITY_MATRIX = sharedUtil . font_identity_matrix ;:==:var identity_matrix:==:sharedUtil . identity_matrix ;
var x = transform . x ;:==:var y:==:transform . y ;
var Strict = db . model ( ' embeddedStrict ' , new schema ( dox : [ strict ] , strict : false ) , ' embdoc ' + random ( ) ) ;:==:var l:==:new lax ( dox : [ content : ' sample ' , rouge : ' data ' ] ) ;
var batches = that . _ batches ;:==:var length:==:batches . length ;
var extname = path . extname ;:==:var mime:==:send . mime ;
var cs_permute = math . sparse . cs_permute ;:==:var cs_lu:==:math . sparse . cs_lu ;
var newline_between_rules = ( options . newline_between_rules = = = undefined ) ? true : options . newline_between_rules ;:==:var eol:==:options . eol ? options . eol : ' \n ' ;
var bindPathEvents = leafletPathEvents . bindPathEvents ;:==:var setPathOptions:==:leafletPathsHelpers . setPathOptions ;
var orderBy = rewriter . rewriteOrderBy ( this . orderByItems , from ) ;:==:var select:==:rewriter . rewriteSelect ( this . selectItems , from ) ;
var update_breadcrumbs = options . update_breadcrumbs  |  |  typeof options . update_breadcrumbs = = = ' undefined ' ;:==:var update_title:==:options . update_title  |  |  typeof options . update_title      ' undefined ' ;
var sequenceName = level . sequenceName ;:==:var sequence:==:levelSequences [ sequenceName ] ;
var pos = this . position ;:==:var l:==:labels . length ;
var component = counter . component ;:==:var perf:==:window . performance ;
var host = ! socket ? ( options . redis . host  |  |  ' 127 . 0 . 0 . 1 ' ) : null ;:==:var db:==:! socket ? ( options . redis . db  |  |  0 ) : null ;
var canDefineProperty = require ( ' canDefineProperty ' ) ;:==:var getComponentName:==:require ( ' getComponentName ' ) ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var snake:==:require ( ' to - snake - case ' ) ;
var polygonOffset = defaultValue ( statesFunctions . polygonOffset , [ 0 . 0 , 0 . 0 ] ) ;:==:var scissor:==:defaultValue ( statesFunctions . scissor , [ 0 . 0 , 0 . 0 , 0 . 0 , 0 . 0 ] ) ;
var dayNamesShort = ( settings ? settings . dayNamesShort : null )  |  |  this . _ defaults . dayNamesShort ;:==:var dayNames:==:( settings ? settings . dayNames : null )  |  |  this . _ defaults . dayNames ;
var uiManager = require ( ' uiManager ' ) ;:==:var viewPropTypes:==:require ( ' viewPropTypes ' ) ;
var w = this . canvas . width ;:==:var h:==:this . canvas . height ;
var internalError = errors . internalError ;:==:var invalidArgumentError:==:errors . invalidArgumentError ;
var error1 = new Error ( ' error1 ' ) ;:==:var error2:==:new Error ( ' error2 ' ) ;
var Promise = utils . Promise ;:==:var eventEmitter:==:_ dereq _ ( ' events ' ) . eventEmitter ;
var type = this . type ;:==:var layers:==:map . layers ;
var d = goog . dom . createDom ( goog . dom . tagName . p , null , ' a paragraph ' ) ;:==:var t:==:d . firstChild ;
var b = ref . b ;:==:var max:==:Math . max ( r , g , b ) ;
var i d = $ ( this ) . attr ( ' gs_id ' ) ;:==:var name:==:$ ( this ) . attr ( ' gs_name ' ) ;
var layout = this . layout ;:==:var flatCoordinates:==:this . flatCoordinates ;
var dx = Math . max ( 0 , Math . min ( bounds . width , parseFloat ( mxUtils . getValue ( this . state . style , ' dx ' , this . dx ) ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( bounds . height , parseFloat ( mxUtils . getValue ( this . state . style , ' dy ' , this . dy ) ) ) ) ;
var d = tree . d = sr . firstChild ;:==:var content:==:tree . content    d . firstChild ;
var closePath = options . closePath  |  |  false ;:==:var invertuv:==:options . invertuv  |  |  false ;
var dx = Math . max ( inset , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;:==:var dy:==:math . max ( inset , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' dy ' , this . dy ) ) ) ) ;
var preventDefault = isUndefined ( preventDefault ) ? 1 : preventDefault ;:==:var stopPropagation:==:isUndefined ( stopPropagation ) ? 1 : stopPropagation ;
var blueGrey100 = exports . blueGrey100 = ' # cfd8dc ' ;:==:var blueGrey200:==:exports . blueGrey200    ' # b0bec5 ' ;
var group = this . group ;:==:var data:==:this . _ data ;
var pathname = Url . parse ( req . url ) . pathname ;:==:var route:==:routes [ pathname ] ? pathname : ' * ' ;
var response_type = _ ref . response_type ;:==:var scope:==:_ ref . scope ;
var list = new fastList ( listContainer , source , scheduler ) ;:==:var dialog:==:document . querySelector ( ' gaia - dialog - alert ' ) ;
var AFTER_USER_ID = nconf . get ( ' AFTER_USER_ID ' ) ;:==:var BEFORE_USER_ID:==:nconf . get ( ' BEFORE_USER_ID ' ) ;
var attribution = attributionList [ attributionIndex ] ;:==:var coverageAreas:==:attribution . coverageAreas ;
var previousScrollToAlignment = _ ref . previousScrollToAlignment ;:==:var previousScrollToIndex:==:_ ref . previousScrollToIndex ;
var top = this . _ getPropertyValueAsPx ( computedStyle , componentName + ' -top ' + suffix ) ;:==:var right:==:this . _ getPropertyValueAsPx ( computedStyle , componentName + ' -right ' + suffix ) ;
var unit = math . unit ;:==:var not:==:math . not ;
var scrollLeft = _ ref3 . scrollLeft ;:==:var scrollTop:==:_ ref3 . scrollTop ;
var additional = settings . additional ;:==:var nonTerminated:==:settings . nonTerminated ;
var accumulateInto = require ( ' accumulateInto ' ) ;:==:var forEachAccumulated:==:require ( ' forEachAccumulated ' ) ;
var detail = defaultValue ( options . detail , 0 ) ;:==:var screenx:==:defaultValue ( options . screenx , 0 ) ;
var literalExpression = traceur . syntax . trees . literalExpression ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var anchor = goog . dom . getElement ( ' offscreen - anchor ' ) ;:==:var popup:==:goog . dom . getElement ( ' popup3 ' ) ;
var same = this . detailElement . find ( ' . togetherjs - same - url ' ) ;:==:var different:==:this . detailElement . find ( ' . togetherjs - different - url ' ) ;
var canvas = chart . canvas ;:==:var height:==:chart . height ;
var minBG = opts . minBG  |  |  40 ;:==:var minFreq:==:opts . minFreq  |  |  55 ;
var c = chars [ i ] ;:==:var index:==:lower . indexOf ( c , lastIndex+1 ) ;
var alwaysScope = options . alwaysScope ;:==:var home:==:options . home ;
var w = child . size . width * 2 ;:==:var h:==:child . size . height * 2 ;
var textNode = textNodeSnapshot . snapshotItem ( j ) ;:==:var text:==:textNode . textContent ;
var b = new String ( ' b ' ) ;:==:var c:==:new String ( ' c ' ) ;
var localAnchora = this . localAnchora ;:==:var localAnchorb:==:this . localAnchorb ;
var vertices = this . vertices = new float32Array ( maxVertices * meshBatcher . vertex_size ) ;:==:var indices:==:this . indices    new uint16Array ( maxVertices * 3 ) ;
var taskcluster = require ( ' taskcluster - client ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var banner = find ( ' . banner ' ) ;:==:var alert:==:find ( ' . alert ' ) ;
var req = resp . request ;:==:var httpResponse:==:resp . httpResponse ;
var accu = _ accu ;:==:var m:==:_ m ;
var self = this . self ;:==:var options:==:self . options ;
var willHidden = this . state . willHidden ;:==:var animation:==:this . props . animation ;
var roughness = this . roughness . buildCode ( builder , ' fv1 ' ) ;:==:var metalness:==:this . metalness . buildCode ( builder , ' fv1 ' ) ;
var directiveIndex = directiveRecord . directiveIndex ;:==:var t:==:new bindingTarget ( host_event , directiveIndex . elementIndex , eventName , null , ast . toString ( ) ) ;
var fs = require ( ' fs ' ) ;:==:var json:==:JSON . parse ( fs . readFileSync ( ' package . json ' , ' utf8 ' ) ) ;
var r = env . _ stderr  |  0 ;:==:var s:==:env . _ stdin  |  0 ;
var key = e . keyCode ;:==:var target:==:e . target ;
var daySelectionMousedown = t . daySelectionMousedown ;:==:var slotSegHtml:==:t . slotSegHtml ;
var fullscreenButton = this . _ fullscreenButton ;:==:var vrButton:==:this . _ vrButton ;
var cache1 = $ cacheFactory ( ' cache1 ' ) ;:==:var cache2:==:$ cacheFactory ( ' cache2 ' ) ;
var util = require ( ' util ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var cpsTransformer = traceur . codegeneration . generator . cpsTransformer ;:==:var stateMachine:==:traceur . syntax . trees . stateMachine ;
var calendarModel = finder . calendarModel ;:==:var seriesModel:==:finder . seriesModel ;
var y = start . y + ( ( end . y - start . y ) * amount ) ;:==:var z:==:start . z + ( ( end . z - start . z ) * amount ) ;
var configManager = window . parent . configManager ;:==:var costControl:==:window . parent . costControl ;
var granularity = ellipseGeometry . _ granularity ;:==:var ellipsoid:==:ellipseGeometry . _ ellipsoid ;
var tabs = this . tabs ;:==:var type:==:shape . type ;
var cos = Math . cos ( -alpha ) ;:==:var sin:==:Math . sin ( -alpha ) ;
var firstName = this . firstName ( ) ;:==:var lastName:==:this . lastName ( ) ;
var chunks = this . chunks ;:==:var actionId:==:el . getAttribute ( ' actionId ' ) ;
var lockType = options . lockType ;:==:var retryCount:==:error . retryCount ;
var b = fulfillBuiltInSoon ( ' b ' , 30 ) ;:==:var c:==:fulfillSoon ( ' c ' , 10 ) ;
var log = _ . partial ( print , ' log ' ) ;:==:var warn:==:_ . partial ( print , ' warn ' ) ;
var dynCall_viid = Module [ ' dynCall_viid ' ] = asm [ ' dynCall_viid ' ] ;:==:var dynCall_viiiiii:==:Module [ ' dynCall_viiiiii ' ]    asm [ ' dynCall_viiiiii ' ] ;
var transformSelects = options . transformSelects ;:==:var applicableDataViewMappings:==:options . applicableDataViewMappings ;
var path = makeg ( clip , ' path ' , ' carpetboundary ' ) ;:==:var segments:==:t . clipsegments ;
var prefixer = $ mdUtil . prefixer ( ) ;:==:var animator:==:$ mdUtil . dom . animator ;
var util = imports . util ;:==:var join:==:require ( ' path ' ) . join ;
var layoutInfo = data . getLayout ( ' layoutInfo ' ) ;:==:var rect:==:layoutInfo . rect ;
var geo = this . geometry ;:==:var template:==:this . _ template ;
var KIND_PACKAGE = module . exports . KIND_PACKAGE = ' package ' ;:==:var KIND_HIDDEN:==:module . exports . KIND_HIDDEN    ' hidden ' ;
var a = mobx . observable ( 3 ) ;:==:var b:==:mobx . observable ( 4 ) ;
var models = _ _ alloyId55 . models ;:==:var len:==:models . length ;
var children = node . children ;:==:var length:==:children . length ;
var r = shape . r ;:==:var width:==:shape . width ;
var r = start . r + ( ( end . r - start . r ) * amount ) ;:==:var g:==:start . g + ( ( end . g - start . g ) * amount ) ;
var t = title . cloneNode ( ) ;:==:var f:==:field . cloneNode ( ) ;
var dlnacasts = require ( ' dlnacasts ' ) ( ) ;:==:var xmlb:==:require ( ' xmlbuilder ' ) ;
var msg = payload : ' foo ' , _ msgid : ' 987654321 ' ;:==:var m:==:n . metric ( undefined , msg,'15 mb ' ) ;
var objectId = schema . types . objectId ;:==:var mongo:==:require ( ' mongodb ' ) ;
var diameterX = options . diameterX  |  |  options . diameter  |  |  1 ;:==:var diameterY:==:options . diameterY  |  |  options . diameter  |  |  1 ;
var collectionTransformer = traceur . codegeneration . collectionTransformer ;:==:var defaultParametersTransformer:==:traceur . codegeneration . defaultParametersTransformer ;
var vstore = cff . topDict . vstore & & cff . topDict . vstore . itemVariationStore ;:==:var vsindex:==:privateDict . vsindex ;
var stream = require ( ' event - stream ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var args = demoSequence [ step ] . args ;:==:var duration:==:demoSequence [ step ] . duration  |  |  3000 ;
var blueGrey200 = exports . blueGrey200 = ' # b0bec5 ' ;:==:var blueGrey300:==:exports . blueGrey300    ' # 90a4ae ' ;
var begin = opt . controls . find ( ' INPUT . begin - input ' ) . val ( ) ;:==:var end:==:opt . controls . find ( ' INPUT . end - input ' ) . val ( ) ;
var url = decodeuriComponent ( req . query . url ) ;:==:var hostname:==:urllib . parse ( url ) . hostname ;
var dataServiceVersion = context . dataServiceVersion  |  |  ' 1 . 0 ' ;:==:var useJsonLight:==:defined ( context . useJsonLight , handler . useJsonLight ) ;
var fragmentLoader = new _ fragmentLoader2 . default ( this ) ;:==:var keyLoader:==:new _ keyLoader2 . default ( this ) ;
var xhr = this . xhr = request . getXHR ( ) ;:==:var data:==:this . _ formData  |  |  this . _ data ;
var lineNumber = styleSheetHeader . lineNumberInSource ( ruleLocation . startLine ) ;:==:var columnNumber:==:styleSheetHeader . columnNumberInSource ( ruleLocation . startLine , ruleLocation . startColumn ) ;
var element = elements [ i ] ;:==:var template:==:element . querySelector ( ' template ' ) ;
var reactComponentEnvironment = require ( ' reactComponentEnvironment ' ) ;:==:var reactInstanceMap:==:require ( ' reactInstanceMap ' ) ;
var previous = child . previousSibling ;:==:var next:==:child . nextSibling ;
var blockDefCheck = document . getElementById ( ' blockDefCheck ' ) ;:==:var genStubCheck:==:document . getElementById ( ' genStubCheck ' ) ;
var size = utils . getInputIntValue ( ' # input - import - image - size ' , undefined , 0 )  |  |  0 ;:==:var title:==:utils . getInputTextValue ( ' # input - import - image - title ' ) ;
var options = context . options [ 0 ]  |  |  ;:==:var allowKeywords:==:options . allowKeywords      void 0  |  |  ! ! options . allowKeywords ;
var dispatchListener = event . _ dispatchListeners ;:==:var dispatchid:==:event . _ dispatchiDs ;
var protractor = require ( ' gulp - protractor ' ) . protractor ;:==:var del:==:require ( ' del ' ) ;
var x = vNode . getElementsByTagName ( ' x ' ) [ 0 ] . textContent ;:==:var y:==:vNode . getElementsByTagName ( ' y ' ) [ 0 ] . textContent ;
var security = securityDefinitions [ key ] ;:==:var type:==:security . type ;
var declareIdentInLocalScope = utils . declareIdentInLocalScope ;:==:var initScopeMetadata:==:utils . initScopeMetadata ;
var forInStatement = exports . forInStatement = buildForxStatement ( ' in ' ) ;:==:var forOfStatement:==:exports . forOfStatement    buildForxStatement ( ' of ' ) ;
var tealA100 = exports . tealA100 = ' # a7ffeb ' ;:==:var tealA200:==:exports . tealA200    ' # 64ffda ' ;
var outlineColor = property . getValueOrClonedDefault ( cylinder . outlineColor , time , color . black , scratchColor ) ;:==:var outlineWidth:==:property . getValueOrDefault ( cylinder . outlineWidth , time , 1 . 0 ) ;
var button1 = new Button ( ' button1 ' ) ;:==:var hLayout1:==:new horizontalLayout ( ' hLayout1 ' ) ;
var blocking = collisionBoxArray . get ( blockingBoxKeys [ i ] ) ;:==:var sourceLayer:==:blocking . sourceLayerIndex ;
var findTarget = scope . findTarget ;:==:var allShadows:==:scope . targetFinding . allShadows . bind ( scope . targetFinding ) ;
var c = rejectBuiltInSoon ( ' rejected - c ' , 10 ) ;:==:var d:==:fulfillBuiltInSoon ( ' d ' , 20 ) ;
var c = stream . read ( quantclass . bits ) ;:==:var nlevels:==:quantclass . nlevels ;
var top = rect . top + rect . height ;:==:var left:==:rect . left ;
var x = plotinfo . xaxis . _ i d ;:==:var y:==:plotinfo . yaxis . _ i d ;
var pixelRange = entityCluster . _ pixelRange ;:==:var minimumClusterSize:==:entityCluster . _ minimumClusterSize ;
var slide = s . slides . eq ( s . activeIndex ) ;:==:var hash:==:slide . attr ( ' data - hash ' )  |  |  slide . attr ( ' data - history ' ) ;
var replacer = opts . replacer  |  |  function ( key , value ) return value ; ;:==:var cmp:==:opts . cmp & & ( function ( f )
var principalId = context . principalId  |  |  undefined ;:==:var principalName:==:context . principalName  |  |  undefined ;
var bindingIdentifier = traceur . syntax . trees . bindingIdentifier ;:==:var parseTreeType:==:traceur . syntax . trees . parseTreeType ;
var auth = imports . auth ;:==:var api:==:imports . api ;
var css = ref . css ;:==:var type:==:ref . type ;
var pedding = require ( ' pedding ' ) ;:==:var utility:==:require ( ' utility ' ) ;
var reactNativeBridgeEventPlugin = require ( ' reactNativeBridgeEventPlugin ' ) ;:==:var reactNativeComponentTree:==:require ( ' reactNativeComponentTree ' ) ;
var models = _ _ alloyId11 . models ;:==:var len:==:models . length ;
var index = $ ( el ) . attr ( ' data - index ' ) ;:==:var type:==:$ ( el ) . attr ( ' data - type ' ) ;
var x = this . cx + coord * Math . cos ( angle ) ;:==:var y:==:this . cy - coord * Math . sin ( angle ) ;
var offset = bounds . offset ;:==:var size:==:bounds . size ;
var sensitivity = getOption ( options , ' sensitivity ' , ' string ' , [ ' base ' , ' accent ' , ' case ' , ' variant ' ] , undefined ) ;:==:var ignorePunctuation:==:getOption ( options , ' ignorePunctuation ' , ' boolean ' , undefined , false ) ;
var util = imports . util ;:==:var debugPanel:==:imports . debugPanel ;
var operatorNode = math . expression . node . operatorNode ;:==:var symbolNode:==:math . expression . node . symbolNode ;
var atLeast = verification . atLeast ;:==:var atMost:==:verification . atMost ;
var parentNode = render . parentNode ;:==:var selector:==:render . selector  |  |  parentNode ;
var button = this . mapping [ this . data . hand ] [ ' button ' + evt . detail . i d ] ;:==:var buttonMeshes:==:this . buttonMeshes ;
var reactServerBatchingStrategy = require ( ' reactServerBatchingStrategy ' ) ;:==:var reactServerRenderingTransaction:==:require ( ' reactServerRenderingTransaction ' ) ;
var getElementsByInterface = scope . getElementsByInterface ;:==:var parentNodeInterface:==:scope . parentNodeInterface ;
var Complex = math . type . Complex ;:==:var Matrix:==:math . type . Matrix ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var events:==:require ( ' events ' ) ;
var name = options . name ;:==:var left:==:options . left ;
var model = this . _ model ;:==:var ctx:==:this . _ chart . ctx ;
var i d = codeDiv . closest ( ' div . slide ' ) . attr ( ' i d ' ) ;:==:var index:==:$ ( ' div . slide#'+id+ ' code . execute ' ) . index ( codeDiv ) ;
var NO_JS_EXECUTION_TIMEOUT = process . env . NO_JS_EXECUTION_TIMEOUT  |  |  3000 ;:==:var EVALUATE_JAVASCRIPT_CHECK_TIMEOUT:==:process . env . EVALUATE_JAVASCRIPT_CHECK_TIMEOUT  |  |  300 ;
var diameterTop = ( options . diameterTop = = = 0 ) ? 0 : options . diameterTop  |  |  options . diameter  |  |  1 ;:==:var diameterBottom:==:options . diameterBottom  |  |  options . diameter  |  |  1 ;
var x = pointer . x = point . pageX ;:==:var y:==:pointer . y    point . pageY ;
var visualMapModel = this . visualMapModel ;:==:var itemSize:==:visualMapModel . itemSize ;
var datasets = data . datasets ;:==:var labels:==:data . labels ;
var toIndexableString = pouchCollate . toIndexableString ;:==:var parseIndexableString:==:pouchCollate . parseIndexableString ;
var sinon = require ( ' sinon ' ) ;:==:var url:==:require ( ' url ' ) ;
var parse = require ( ' url ' ) . parse ;:==:var format:==:require ( ' url ' ) . format ;
var ifStatement = traceur . syntax . trees . ifStatement ;:==:var importBinding:==:traceur . syntax . trees . importBinding ;
var viewState = frameState . viewState ;:==:var center:==:viewState . center ;
var roots = this . _ roots ;:==:var displayList:==:this . _ displayList ;
var deepPurplea400 = exports . deepPurplea400 = ' # 651fff ' ;:==:var deepPurplea700:==:exports . deepPurplea700    ' # 6200ea ' ;
var stringToBytes = sharedUtil . stringToBytes ;:==:var stringTopdfString:==:sharedUtil . stringTopdfString ;
var merge2 = require ( ' merge2 ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var layers = this . _ layers ;:==:var zlevelList:==:this . _ zlevelList ;
var l = positionBlock . anchor . left ;:==:var b:==:positionBlock . anchor . bottom ;
var resource = response . resourceSets [ 0 ] . resources [ 0 ] ;:==:var maxZoom:==:this . maxZoom _     -1 ? resource . zoomMax : this . maxZoom _ ;
var vertexFormat = defaultValue ( options . vertexFormat , vertexFormat . default ) ;:==:var granularity:==:defaultValue ( options . granularity , cesiumMath . radians_per_degree ) ;
var bubbles = typeof options . bubbles ! = ' undefined ' ? options . bubbles : true ;:==:var cancelable:==:typeof options . cancelable !   ' undefined ' ? options . cancelable : true ;
var xScale2 = chart . scales . xScale2 ;:==:var xScale3:==:chart . scales . xScale3 ;
var items = dragDropIns . items ;:==:var buckets:==:dragDropIns . buckets ;
var units = product . units , size = units . length ;:==:var index:==:+ ( d3 . select ( i d ) . attr ( ' data - index ' )  |  |  0 ) % size ;
var trigger = alarm . getFirstProperty ( ' trigger ' ) ;:==:var start:==:icalEvent . startDate . clone ( ) ;
var context = contextGetter ? contextGetter ( scope , locals ) : isDefined ( contextGetter ) ? undefined : scope ;:==:var fn:==:fnGetter ( scope , locals , context )  |  |  noop ;
var offset = renderSession . offset ;:==:var shader:==:renderSession . shaderManager . stripShader ;
var forwardMethodsToWrapper = scope . forwardMethodsToWrapper ;:==:var matchesNames:==:scope . matchesNames ;
var Capture = Windows . Media . Capture ;:==:var mediaProperties:==:windows . media . mediaProperties ;
var subscriptions = this . subscriptions  |  |  ( this . subscriptions = ) ;:==:var listeners:==:this . listeners  |  |  ( this . listeners    ) ;
var s = this . _ attachViewInContainerScope ( ) ;:==:var view:==:view_ref_1 . internalView ( viewRef ) ;
var async = require ( ' async ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var cellCache = _ ref . cellCache ;:==:var cellClassName:==:_ ref . cellClassName ;
var state = document . getElementById ( ' state ' ) ;:==:var address:==:document . getElementById ( ' address ' ) ;
var semver   = require ( ' semver ' ) ;:==:var cluster:==:require ( ' cluster ' ) ;
var i = aindex [ k ] ;:==:var v:==:inverse ? cf ( b , avalues [ k ] ) : cf ( avalues [ k ] , b ) ;
var defaultValue = props . defaultValue ;:==:var children:==:props . children ;
var center = chordSeries . get ( ' center ' ) ;:==:var radius:==:chordSeries . get ( ' radius ' ) ;
var attr = DS . attr ;:==:var belongsTo:==:ds . belongsTo ;
var div = testDiv . appendChild ( document . createElement ( ' div ' ) ) ;:==:var a:==:div . appendChild ( document . createTextNode ( ' a ' ) ) ;
var top = Math . ceil ( box . top ) ;:==:var bottom:==:Math . ceil ( box . bottom ) ;
var map = geoCreator . getMap ( mapName ) ;:==:var geoJson:==:map & & map . geoJson ;
var s = parse_css_float ( params [ 1 ] ) ;:==:var l:==:parse_css_float ( params [ 2 ] ) ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var reactNodeTypes:==:require ( ' reactNodeTypes ' ) ;
var state = this . stack [ this . stack . length - 1 ] . state ;:==:var node:==:this . stack [ this . stack . length - 1 ] . node ;
var followSurface = simplePolylineGeometry . _ followSurface ;:==:var granularity:==:simplePolylineGeometry . _ granularity ;
var width = current . owidth ;:==:var height:==:current . oheight ;
var ogvUrl = instance . get ( ' ogvUrl ' ) ;:==:var video:==:instance . _ video ;
var isChrome = browserVersion . isChrome  |  |  false ;:==:var ishta:==:browserVersion . ishta  |  |  false ;
var viz = this . viz ;:==:var options:==:$ . merge ( this . options , viz . controller , opt ) ;
var classPrefix   = this . classPrefix = editormd . classPrefix ;:==:var settings:==:this . settings     $ . extend ( true , editormd . defaults , options ) ;
var opensavefile = document . getElementById ( ' opensavefile ' ) ;:==:var opensaveblob:==:document . getElementById ( ' opensaveblob ' ) ;
var createStatementList = parseTreeFactory . createStatementList ;:==:var createBreakStatement:==:parseTreeFactory . createBreakStatement ;
var calendarIdentifiers = windows . globalization . calendarIdentifiers ;:==:var clockIdentifiers:==:windows . globalization . clockIdentifiers ;
var isInt = sharedUtil . isInt ;:==:var warn:==:sharedUtil . warn ;
var nativeModules = require ( ' nativeModules ' ) ;:==:var dimensions:==:require ( ' dimensions ' ) ;
var chai = require ( ' chai - nightwatch ' ) ;:==:var flag:==:chai . flag ;
var g = from . g + ( to . g - from . g ) * this . progress ( ) ;:==:var b:==:from . b + ( to . b - from . b ) * this . progress ( ) ;
var labelKey = _ ref . labelKey ;:==:var options:==:_ ref . options ;
var edges = this . edges ;:==:var len:==:edges . length ;
var offsetPF = this . _ offsetPF ;:==:var baseData:==:this . _ baseData ;
var values = catDv . values ;:==:var columns:==:dataView . metadata . columns ;
var GAIA_DIR = utils . getEnv ( ' gaia_dir ' ) ;:==:var gaia_distribution_dir:==:utils . getEnv ( ' gaia_distribution_dir ' ) ;
var width = videoBlockPlugin . width ;:==:var height:==:videoBlockPlugin . height ;
var options = prop . options ;:==:var type:==:options . type ;
var r = shape . r ;:==:var s0:==:shape . s0 ;
var enterLeaveEventPlugin = require ( ' enterLeaveEventPlugin ' ) ;:==:var eventPluginHub:==:require ( ' eventPluginHub ' ) ;
var sb = this . sb ;:==:var graph:==:sb . graph ;
var translucent = defaultValue ( options . translucent , true ) ;:==:var closed:==:defaultValue ( options . closed , false ) ;
var endState = traceur . codegeneration . generator . endState ;:==:var fallThroughState:==:traceur . codegeneration . generator . fallThroughState ;
var language = imports . language ;:==:var tooltip:==:imports [ ' language . tooltip ' ] ;
var prevCode = lzwState . prevCode ;:==:var currentSequence:==:lzwState . currentSequence ;
var maxblur = ( params . maxblur ! = = undefined ) ? params . maxblur : 1 . 0 ;:==:var width:==:params . width  |  |  window . innerWidth  |  |  1 ;
var index = b . _ index ;:==:var ptr:==:b . _ ptr ;
var el = e . target . querySelector ( ' . control ' )  |  |  e . target ;:==:var checked:==:el . checked ;
var a = Math . floor ( e [ g ] ) ;:==:var h:==:Math . floor ( e [ g + 1 ] ) ;
var successSpy = jasmine . createSpy ( ' successSpy ' ) ;:==:var failureSpy:==:jasmine . createSpy ( ' failureSpy ' ) ;
var appendClearCatcher = powerbi . visuals . appendClearCatcher ;:==:var createInteractivityService:==:powerbi . visuals . createInteractivityService ;
var samplingRatio = setting & & ( 0 , _ object . hasOwnProperty ) ( setting , ' samplingRatio ' ) ? this . hot . getSettings ( ) . autoRowSize . samplingRatio : void 0 ;:==:var allowSampleDuplicates:==:setting & & ( 0 , _ object . hasOwnProperty ) ( setting , ' allowSampleDuplicates ' ) ? this . hot . getSettings ( ) . autoRowSize . allowSampleDuplicates : void 0 ;
var showTitle = powerbi . dataViewObjects . getValue ( legendObjectProperties , visuals . donutChartProps . legend . showTitle , true ) ;:==:var titleText:==:powerbi . dataViewObjects . getValue ( legendObjectProperties , visuals . donutChartProps . legend . titleText , this . data . legendData . title ) ;
var req = this . req ;:==:var next:==:req . next ;
var cloudinary = require ( ' cloudinary ' ) ;:==:var max:==:req . query . max  |  |  10 ;
var response = lang_1 . isPresent ( xhr . response ) ? xhr . response : xhr . responseText ;:==:var status:==:xhr . status      1223 ? 204 : xhr . status ;
var a = trace . a ;:==:var b:==:trace . b ;
var width = block . width ;:==:var height:==:block . height ;
var x2 = this . x2 _ ;:==:var y1:==:this . y1 _ ;
var FLAGS = 2 ;:==:var TIME:==:3 ;
var options = this . $ options ;:==:var el:==:options . el ;
var crypto = require ( ' crypto ' ) ;:==:var path:==:require ( ' path ' ) ;
var worldDiff = orbitCameraInputMouse . worldDiff ;:==:var camera:==:this . entity . camera ;
var segment = segments [ i ] ;:==:var element:==:segment . element ;
var camelize = require ( ' camelize ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var bubble = imports [ ' notification . bubble ' ] ;:==:var timeslider:==:imports . timeslider ;
var group = this . group ;:==:var scale:==:group . scale ;
var supertest = require ( ' supertest ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var graph = sb . graph ;:==:var values:==:json . values ;
var fs = require ( ' fs ' ) ;:==:var sep:==:require ( ' path ' ) . sep ;
var createForStatement = parseTreeFactory . createForStatement ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var textures = model . gltf . textures ;:==:var texture:==:textures [ gltfTexture . i d ] ;
var env = CKEDITOR . env ;:==:var i d:==:' cke _ ' + this . i d ;
var actuals = rd . actuals ;:==:var exactCandidates:==:rd . exactCandidates ;
var util = require ( ' util ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var abs = Math . abs , floor = Math . floor , sqrt = Math . sqrt , atan2 = Math . atan2 ;:==:var PI:==:Math . PI ;
var locStartColor = this . _ startColor , locStartColorVar = this . _ startColorVar ;:==:var locEndColor:==:this . _ endColor , locEndColorVar    this . _ endColorVar ;
var groupDataOf = this . _ groupDataOf ;:==:var list:==:this . _ list ;
var Stream = require ( ' stream ' ) . Stream ;:==:var Transport:==:require ( ' . . ' ) . Transport ;
var profile = sbx . data . profile ;:==:var prop:==:sbx . properties . basal ;
var cloneNode = scope . cloneNode ;:==:var defineWrapGetter:==:scope . defineWrapGetter ;
var tooltipManager = powerbi . visuals . tooltipManager ;:==:var axisHelper:==:powerbi . visuals . axisHelper ;
var array = attribute . array ;:==:var itemSize:==:attribute . itemSize ;
var ENTITY_REFERENCE_NODE   = nodeType . entity_reference_node   = 5 ;:==:var entity_node:==:nodeType . entity_node        6 ;
var f8SegmentedControl = require ( ' f8SegmentedControl ' ) ;:==:var parallaxBackground:==:require ( ' parallaxBackground ' ) ;
var h = Math . max ( h , controlBarHeight ) ;:==:var w:==:math . max ( w , 3 . 5 * controlBarHeight ) ;
var title = $ slide . data ( ' title ' )  |  |  '' ;:==:var active:==:options . className . active ;
var height = _ props . height ;:==:var width:==:_ props . width ;
var Cipher = des . Cipher ;:==:var DES:==:des . DES ;
var nock = require ( ' nock ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var type = checkbox . attr ( ' data - forecast - type ' ) ;:==:var checked:==:checkbox . prop ( ' checked ' ) ;
var nodeFieldCount = this . _ nodeFieldCount ;:==:var edgeToNodeOffset:==:this . _ edgeToNodeOffset ;
var options = opt_options  |  |  ;:==:var button:==:document . createElement ( ' button ' ) ;
var sourceLocation = _ . sourceLocation ;:==:var lineBreak:==:_ . lineBreak ;
var bin = ' bin ' ;:==:var close:==:' close ' ;
var hmdEuler = this . hmdEuler ;:==:var pitchObject:==:this . pitchObject ;
var page3 = element ( by . i d ( ' page3 ' ) ) ;:==:var status:==:element ( by . i d ( ' status ' ) ) ;
var clearOverlays = t . clearOverlays ;:==:var daySelectionMousedown:==:t . daySelectionMousedown ;
var startWindowEvery = this . startWindowEvery > 0 ? this . startWindowEvery : this . windowSize ;:==:var windowSize:==:this . windowSize ;
var nameMap = dayLabel . get ( ' nameMap ' ) ;:==:var margin:==:dayLabel . get ( ' margin ' ) ;
var displayInformation = windows . graphics . display . displayInformation ;:==:var displayOrientations:==:windows . graphics . display . displayOrientations ;
var controllers = this . system . controllers ;:==:var data:==:this . data ;
var dates = require ( ' convert - dates ' ) ;:==:var del:==:require ( ' obj - case ' ) . del ;
var next = this . newBlock ( ' next of ifexp ' ) ;:==:var end:==:this . newBlock ( ' end of ifexp ' ) ;
var focusRippleOpacity = _ props2 . focusRippleOpacity ;:==:var touchRippleColor:==:_ props2 . touchRippleColor ;
var method = message . method ;:==:var url:==:message . url ;
var assert = require ( ' better - assert ' ) ;:==:var doc:==:window . document ;
var state   = this . state ;:==:var editor:==:this . editor ;
var t = this . temp ;:==:var v:==:this . values ;
var fs = require ( ' fs ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var http = require ( ' http ' ) ;:==:var stream:==:require ( ' stream ' ) ;
var scriptId = messageObject . params . scriptId ;:==:var url:==:messageObject . params . url ;
var sentences = queueData . sentences ;:==:var probabilities:==:queueData . probabilities ;
var text = changes . text ;:==:var next:==:changes . next ;
var group = this . _ group ;:==:var handle:==:this . _ handle ;
var exists = require ( ' fs ' ) . existsSync  |  |  require ( ' path ' ) . existsSync ;:==:var glob:==:require ( ' glob ' ) ;
var camera = scene . _ camera ;:==:var context:==:scene . context ;
var assertion = ' assertion ' ;:==:var keys:==:' keys ' ;
var isString = _ _ webpack_require _ _ ( 11 ) . isString ;:==:var format:==:_ _ webpack_require _ _ ( 11 ) . format ;
var quote = options . quotes = = ' double ' ? ' ' ' : ' \ '' ;:==:var compact:==:options . compact ;
var c9 = imports . c9 ;:==:var net:==:imports . net ;
var call = mockOptionMenu . calls [ 0 ] ;:==:var items:==:call . items ;
var special = $ ( ' div#special ' ) ;:==:var weapons:==:$ ( ' div#weapons ' ) ;
var key = element . key ;:==:var ref:==:element . ref ;
var pie = nv . models . pie ( ) ;:==:var legend:==:nv . models . legend ( ) ;
var defer = Vow . defer ( ) ;:==:var promise:==:defer . promise ( ) ;
var commander = require ( ' commander ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' pm2 : cli ' ) ;
var now = _ _ dependency2 _ _ . now ;:==:var all:==:_ _ dependency3 _ _ . all ;
var gulp = require ( ' gulp ' ) ;:==:var tools:==:require ( ' aurelia - tools ' ) ;
var entity = this . entity ;:==:var ellipsoid:==:this . ellipsoid ;
var prevState = logEntry . prevState ;:==:var error:==:logEntry . error ;
var comp2 = name : ' key2 ' , content : ' some thing in comp2 ' ;:==:var key3:==:' key3 ' ;
var backgroundColor = defaultValue ( options . backgroundColor , color . transparent ) ;:==:var padding:==:defaultValue ( options . padding , 0 ) ;
var util = require ( ' util ' ) ;:==:var mime:==:require ( ' mime ' ) ;
var t1 = Prim2DBase_1 . _ t1 ;:==:var t2:==:Prim2DBase_1 . _ t2 ;
var pink500 = exports . pink500 = ' # e91e63 ' ;:==:var pink600:==:exports . pink600    ' # d81b60 ' ;
var traverse = authorAttributes . traverse ;:==:var valueAtIndex:==:authorAttributes . valueAtIndex ;
var size = _ ref . size ;:==:var updateScrollIndexCallback:==:_ ref . updateScrollIndexCallback ;
var deepPurplea700 = exports . deepPurplea700 = ' # 6200ea ' ;:==:var indigo50:==:exports . indigo50    ' # e8eaf6 ' ;
var ws = require ( ' ws ' ) ;:==:var inspect:==:require ( ' util ' ) . inspect ;
var colorPropType = require ( ' colorPropType ' ) ;:==:var image:==:require ( ' image ' ) ;
var createExpressionStatement = parseTreeFactory . createExpressionStatement ;:==:var createFunctionExpression:==:parseTreeFactory . createFunctionExpression ;
var close = options . close  |  |  gettext ( ' Close ' ) ;:==:var onclose:==:options . onclose  |  |  undefined ;
var OS = 4 ;:==:var EXLEN:==:5 ;
var Note = db . model ( ' noteWithStringId ' , noteSchema , random ( ) ) ;:==:var alice:==:new user ( _ i d : ' alice ' , name : ' alice in wonderland ' ) ;
var fcol = fcols [ idx ] ;:==:var resizer:==:document . createElement ( ' gui - list - view - column - resizer ' ) ;
var skip = opts . skip  |  |  0 ;:==:var limit:==:typeof opts . limit      ' number ' ? opts . limit : -1 ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , sinewave ( 0 , 6 , 0 . 1 ) , opts ) ;
var file = require ( ' gulp - file ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var width = defaultValue ( screenSpaceRectangle . width , 1 . 0 ) ;:==:var height:==:defaultValue ( screenSpaceRectangle . height , 1 . 0 ) ;
var msecs = options . msecs ! = = undefined ? options . msecs : new Date ( ) . getTime ( ) ;:==:var nsecs:==:options . nsecs !    undefined ? options . nsecs : _ lastnSecs + 1 ;
var hintText = _ props2 . hintText ;:==:var hintStyle:==:_ props2 . hintStyle ;
var SHOW_INDEX = Billboard . SHOW_INDEX ;:==:var POSITION_INDEX:==:Billboard . POSITION_INDEX ;
var i = 4 * ( x * scale + imageData . width * y * scale ) ;:==:var d:==:imageData . data ;
var disabledStyle = props . disabledStyle ;:==:var error:==:props . error ;
var alpha = cascade . stage_classifier [ j ] . alpha ;:==:var feature:==:cascade . stage_classifier [ j ] . feature ;
var path = require ( ' path ' ) ;:==:var execFile:==:require ( ' child_process ' ) . execFile ;
var a = new operatorNode ( ' + ' , ' add ' , [ new symbolNode ( ' x ' ) , new constantNode ( 2 ) ] ) ;:==:var b:==:new operatorNode ( ' + ' , ' add ' , [ new symbolNode ( ' x ' ) , new constantNode ( 2 ) ] ) ;
var className = options . className  |  |  ' ' ;:==:var visible:==:options . visible     null  |  |  options . visible ;
var shadows = this . _ geometryUpdater . shadowsProperty . getValue ( time ) ;:==:var distanceDisplayConditionProperty:==:this . _ geometryUpdater . distanceDisplayConditionProperty ;
var GAIA_DISTRIBUTION_DIR = utils . getEnv ( ' gaia_distribution_dir ' ) ;:==:var gaia_app_srcdirs:==:utils . getEnv ( ' gaia_app_srcdirs ' ) ;
var y1 = layer . y1  |  |  layer . frame . y ;:==:var x2:==:layer . x2  |  |  layer . frame . x ;
var width = rrectData . width ;:==:var height:==:rrectData . height ;
var treeTransform = intersecttrimesh_treetransform ;:==:var minDistNormal:==:intersectconvex_mindistnormal ;
var boundary = this . boundary ;:==:var stream:==:this . stream ;
var leave = ' leave ' ;:==:var enter:==:' enter ' ;
var arr = this . array ( ) ;:==:var i:==:index ( arr , name ) ;
var p = this . progress ( ) ;:==:var from:==:svg . toNumberArray ( p . from . value ) ;
var label = chartinst . labelise ( multi ? labels [ j ] & & labels [ j ] [ i ] : labels [ i ] , multi ? values [ j ] [ i ] : values [ i ] , total ) ;:==:var bar:==:multi ? bars [ j ] [ i ] : bars [ i ] ;
var commands = imports . commands ;:==:var save:==:imports . save ;
var u = aabb . upperBound ;:==:var children:==:this . children ;
var Buffer = require ( ' buffer ' ) . Buffer ;:==:var os:==:require ( ' os ' ) ;
var apiKeyName = security . apiKeyName  |  |  ' api_key ' ;:==:var apiKey:==:security . apiKey  |  |  '' ;
var error = imports [ ' dialog . error ' ] ;:==:var nw:==:nativeRequire ( ' nw . gui ' ) ;
var sqExprBuilder = powerbi . data . sqExprBuilder ;:==:var semanticFilter:==:powerbi . data . semanticFilter ;
var task = payload . task ;:==:var code:==:task . code ;
var renderer = that . renderer ;:==:var gl:==:that . gl ;
var material = materials [ name ] ;:==:var instanceTechnique:==:material . instanceTechnique ;
var browser = ua . browser  |  |  ;:==:var engine:==:ua . engine  |  |  ;
var index = this . index++ ;:==:var innerSubscription:==:this . innerSubscription ;
var path = array . path + ' . ' ;:==:var keys:==:Object . keys ( fields ) ;
var run = test . runId ( ) ;:==:var coll:==:new mongo . collection ( ' livedata_update_result_'+run , collectionOptions ) ;
var renderer = this . _ renderer ;:==:var ele:==:this . _ elementRef . nativeElement ;
var preview = imports . preview ;:==:var postMessage:==:imports [ ' remote . postMessage ' ] ;
var optimist = require ( ' optimist ' ) ;:==:var util:==:require ( ' util ' ) ;
var a = this . find ( _ a ) ;:==:var b:==:this . find ( _ b ) ;
var href = window . location . href ;:==:var body:==:_ jQuery ( window . document . body ) ;
var list = self . data ( ' timepicker - list ' ) ;:==:var settings:==:self . data ( ' timepicker - settings ' ) ;
var purple800 = exports . purple800 = ' # 6a1b9a ' ;:==:var purple900:==:exports . purple900    ' # 4a148c ' ;
var startLine = this . _ ruleLocation . startLine ;:==:var startColumn:==:this . _ ruleLocation . startColumn ;
var left = ( this . left - origx ) * ratio + origx ;:==:var bottom:==:( this . bottom - origy ) * ratio + origy ;
var uid = params . uid ;:==:var roomId:==:params . roomId ;
var operand = this . transformAny ( tree . operand ) ;:==:var elements:==:tree . elements ;
var url = options . url ;:==:var cacheKey:==:defaultValue ( options . cacheKey , getAbsoluteUri ( url ) ) ;
var MurmurHash3_64 = coreMurmurHash3 . murmurhash3_64 ;:==:var errorFont:==:coreFonts . errorFont ;
var cp = s . cp ;:==:var pinv:==:s . pinv ;
var remote = new PouchDB ( dbs . remote ) ;:==:var sync:==:local . sync ( remote , live : true ) ;
var startLoc = this . state . startLoc ;:==:var potentialArrowAt:==:this . state . potentialArrowAt ;
var b2 = $ ( ' b2 ' ) ;:==:var p2:==:$ ( ' p2 ' ) ;
var splitUnit = math . splitUnit ;:==:var unit:==:math . type . unit ;
var host = node . server  |  |  msg . host ;:==:var port:==:node . port  |  |  msg . port ;
var reactNativeViewAttributes = require ( ' reactNativeViewAttributes ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var collection = db . collection ( ' cursor_limit_skip_correctly ' ) ;:==:var ordered:==:collection . initializeUnorderedBulkOp ( ) ;
var title = utils . getInputTextValue ( ' # input - import - image - title ' ) ;:==:var image:==:getThumbnailUrl ( imageDoc , size ) ;
var parser = require ( ' engine . io - parser ' ) ;:==:var parseqs:==:require ( ' parseqs ' ) ;
var after = require ( ' after ' ) ;:==:var should:==:require ( ' should ' ) ;
var editor = this . editor ;:==:var $ textContainer:==:editor . $ textContainerElem ;
var image = set . tiles [ i ] . image ;:==:var gid:==:set . firstgid + parseInt ( i , 10 ) ;
var callbackName = data . callbackName  |  |  ' callback ' ;:==:var callback:==:data . callback  |  |  ' jsonp ' + ( + + scriptLoader . _ count ) ;
var selectValue = _ ref . selectValue ;:==:var valueArray:==:_ ref . valueArray ;
var radialSegments = options . radialSegments  |  |  32 ;:==:var tubularSegments:==:options . tubularSegments  |  |  32 ;
var body = resp . httpResponse . body ;:==:var operation:==:req . service . api . operations [ req . operation ] ;
var fs = require ( ' fs ' ) ;:==:var util:==:require ( ' util ' ) ;
var models = _ _ alloyId24 . models ;:==:var len:==:models . length ;
var emails = dom . querySelector ( ' # contacts - form - emails ' ) ;:==:var addresses:==:dom . querySelector ( ' # contacts - form - addresses ' ) ;
var validator = vdom . validator ;:==:var dom:==:vdom . dom ;
var display = cm . display , measure = emptyArray ( line . text . length ) ;:==:var pre:==:buildLineContent ( cm , line , measure , true ) . pre ;
var first_currency = $ scope . order . first_currency ;:==:var first_issuer:==:$ scope . order . first_issuer ;
var timeBar = this . _ timeBarEle ;:==:var seconds:==:julianDate . secondsDifference ( this . _ scrubJulian , this . _ startJulian ) ;
var createPropertyNameAssignment = parseTreeFactory . createPropertyNameAssignment ;:==:var createReturnStatement:==:parseTreeFactory . createReturnStatement ;
var mkdirp    = require ( ' mkdirp ' ) ;:==:var jas:==:require ( ' jasmine - node ' ) ;
var dynCall_vidii = Module [ ' dynCall_vidii ' ] = asm [ ' dynCall_vidii ' ] ;:==:var dynCall_iiiii:==:Module [ ' dynCall_iiiii ' ]    asm [ ' dynCall_iiiii ' ] ;
var defaults = this . collection . defaults  |  |  ;:==:var metadata:==:this . model . get ( ' metadata ' )  |  |  ;
var csurf = require ( ' csurf ' ) ;:==:var compress:==:require ( ' compression ' ) ;
var paired = device . paired ;:==:var button:==:document . createElement ( ' smart - button ' ) ;
var async = require ( ' async ' ) ;:==:var accessToken:==:twilio . accessToken ;
var n = conf . n  |  0 ;:==:var input:==:inputs [ type ] ;
var settings = imports . settings ;:==:var Form:==:imports . Form ;
var express = require ( ' express ' ) ;:==:var log4js:==:require ( ' log4js ' ) ;
var circle = s . circle ( 10 , 20 , 30 ) ;:==:var group:==:s . group ( ) ;
var attr = DS . attr ;:==:var run:==:Ember . run ;
var saveA = b2Distance . s_savea ;:==:var saveb:==:b2Distance . s_saveb ;
var r = this . _ rgba [ 0 ] ;:==:var g:==:this . _ rgba [ 1 ] ;
var hasZ = context [ ' hasZ ' ] ;:==:var srsName:==:context [ ' srsName ' ] ;
var shadowOffsetx = this . ctx . shadowOffsetx ;:==:var shadowOffsety:==:this . ctx . shadowOffsety ;
var boxNode = boxNodes [ i ] ;:==:var box:==:this . parseGeometry [ ' box ' ] . apply ( this , [ boxNode ] ) ;
var pathPosition = symbolMeta . pathPosition ;:==:var valueDim:==:opt . valueDim ;
var wrapT = defaultValue ( options . wrapt , textureWrap . clamp_to_edge ) ;:==:var minificationFilter:==:defaultValue ( options . minificationFilter , textureMinificationFilter . linear ) ;
var x = currentPos . x ;:==:var y:==:currentPos . y ;
var merge    = require ( ' broccoli - merge - trees ' ) ;:==:var concat:==:require ( ' broccoli - concat ' ) ;
var options = $ . merge ( this . options , viz . controller , opt ) ;:==:var v:==:( $ . type ( vertex [ 0 ] )     ' string ' ) ? [ vertex ] : vertex ;
var createMemberExpression = parseTreeFactory . createMemberExpression ;:==:var createMemberLookupExpression:==:parseTreeFactory . createMemberLookupExpression ;
var prefix = $ l . prefixAgo ;:==:var suffix:==:$ l . suffixAgo ;
var pack = _ _ webpack_require _ _ ( 13 ) . pack ;:==:var offsetVector:==:_ _ webpack_require _ _ ( 13 ) . offsetVector ;
var target = controllerHost . target ;:==:var zoomLimit:==:controllerHost . zoomLimit ;
var jpegStream = coreStream . jpegStream ;:==:var jpxImage:==:coreJpx . jpxImage ;
var htmlTemplateElement = scope . wrappers . htmlTemplateElement ;:==:var mixin:==:scope . mixin ;
var Catch = traceur . syntax . trees . Catch ;:==:var cascadeExpression:==:traceur . syntax . trees . cascadeExpression ;
var l = Ext . dd . scrollManager ;:==:var m:==:i . el . ddScrollConfig ? i . el . ddScrollConfig . increment : l . increment ;
var sinon = require ( ' sinon ' ) ;:==:var unexpected:==:require ( ' unexpected ' ) ;
var data = request . source . data ;:==:var blob:==:request . source . data . blob ;
var requirejs = require ( ' requirejs ' ) ;:==:var expect:==:require ( ' expect . js ' ) ;
var type = attribute . type ;:==:var bytesPerElement:==:attribute . bytesPerElement ;
var vertices = model . vertices ;:==:var skins:==:model . skins ;
var color = this . colors [ setName ] ;:==:var strokeWidth:==:this . dygraph _ . getOption ( ' strokeWidth ' , setName ) ;
var fs = require ( ' fs ' ) ;:==:var mkpath:==:require ( ' mkpath ' ) ;
var path = require ( ' path ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var React = require ( ' React ' ) ;:==:var recordingModule:==:require ( ' nativeModules ' ) . swipeRefreshLayoutRecordingModule ;
var top = pos . top ;:==:var scrollTop:==:this . $ scrollAnimation ? this . session . getScrollTop ( ) : this . scrollTop ;
var React = require ( ' React ' ) ;:==:var ReactDOM:==:require ( ' ReactDOM ' ) ;
var textureUnitIndex = gl . texture0 + this . textureUnitIndex ;:==:var value:==:this . value ;
var bmap = bmapModel . _ _ bmap ;:==:var center:==:bmapModel . get ( ' center ' ) ;
var settings = imports . settings ;:==:var layout:==:imports . layout ;
var conditionalExpression = traceur . syntax . trees . conditionalExpression ;:==:var defaultClause:==:traceur . syntax . trees . defaultClause ;
var contract = data . contract ;:==:var service:==:data . service ;
var pdfPage = this . pdfPage ;:==:var viewport:==:this . viewport ;
var y = e . heading . y ;:==:var z:==:e . heading . z ;
var isString = zrUtil . isString ;:==:var defaults:==:zrUtil . defaults ;
var sparse = math . sparse ;:==:var round:==:math . round ;
var canvas = document . createElement ( ' canvas ' ) ;:==:var size:==:this . size * window . devicePixelRatio ;
var c = wt . c ;:==:var d:==:wt . d ;
var originalMaterial = _ originalMaterialsTable [ material . uuid ] ;:==:var uniforms:==:material . uniforms ;
var points = this . points ;:==:var times:==:this . times ;
var height = _ props5 . height ;:==:var onScroll:==:_ props5 . onScroll ;
var first = config . firstRow ;:==:var last:==:config . lastRow ;
var startWindowEvery = ( this . startWindowEvery > 0 ) ? this . startWindowEvery : this . windowSize ;:==:var destination:==:this . destination ;
var group = req . query . group  |  |  ' default ' ;:==:var time:==:req . query . time & & Number ( req . query . time ) ;
var frame = this . state . frames [ i ] ;:==:var cache:==:this . _ cachedFrame ( frame , i ) ;
var coefficentsSign = this . coefficentsSign ;:==:var contextLabels:==:this . contextLabels ;
var browserify = require ( ' browserify ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var image = this . _ image ;:==:var imageSubRegion:==:this . _ imageSubRegion ;
var center = Property . getValueOrUndefined ( entity . position , time , options . center ) ;:==:var semiMajorAxis:==:property . getValueOrUndefined ( ellipse . semiMajorAxis , time ) ;
var images = DOM . getNodeArray ( options . images ) ;:==:var bgnodes:==:dom . getNodeArray ( options . bgnodes ) ;
var a = Ti . UI . createView ( borderColor : ' # 133899',borderWidth : 6,borderRadius : 2,backgroundColor : ' orange',width : 100,height : 100,top : 10,name : ' view a ' ) ;:==:var b:==:ti . ui . createView ( borderColor : ' # 133899',borderWidth : 6,borderRadius : 2,backgroundColor : ' purple',width : 100,height : 100,top : 115,right : 40,name : ' view b ' ) ;
var numDividers = home . numDividers ;:==:var url:==:server . url ( ' sample . html ' ) ;
var tt = p * p , ttt = tt * p , u = 1 - p , uu = u * u , uuu = uu * u ;:==:var ut:==:u * p , ut3    ut * 3 , uut3    u * ut3 , utt3    ut3 * p ;
var banner = container . querySelector ( ' . banner ' ) ;:==:var title:==:banner . querySelector ( ' a . title ' ) ;
var p = path . posix ;:==:var props:==:String ( conf . props ) . split ( '  |  ' ) ;
var lockType = passedArguments [ 0 ] . lockType ;:==:var enabled:==:passedArguments [ 0 ] . enabled ;
var iccId = messagedom . dataset . iccId ;:==:var button:==:messagedom . querySelector ( ' button ' ) ;
var current = this . current ;:==:var rect:==:document . createElementns ( ns , ' svg : rect ' ) ;
var filenames = this . _ index . filenames ;:==:var titles:==:this . _ index . titles ;
var path = d3 . geo . path ( ) . projection ( globe . projection ) . pointRadius ( 7 ) ;:==:var coastline:==:d3 . select ( ' . coastline ' ) ;
var start = _ item . data . start ;:==:var end:==:_ item . data . end !    undefined ? _ item . data . end : start ;
var scope = _ ref$scope = = = undefined ? defaultScope : _ ref$scope ;:==:var redirect_uri:==:_ ref . redirect_uri ;
var caseClause = traceur . syntax . trees . caseClause ;:==:var catch:==:traceur . syntax . trees . catch ;
var latitude = position . coords . latitude ;:==:var longitude:==:position . coords . longitude ;
var Binary = mongooseBuffer . binary ;:==:var castError:==:schemaType . castError ;
var View = require ( ' View ' ) ;:==:var Heading1 , Paragraph:==:require ( ' f8Text ' ) ;
var timer_counters = metrics . timer_counters ;:==:var pctThreshold:==:metrics . pctThreshold ;
var debug   = require ( ' debug ' ) ( ' axm : profiling ' ) ;:==:var os:==:require ( ' os ' ) ;
var options = this . _ options ;:==:var positions:==:positionsProperty . getValue ( iso8601 . minimum_value , options . positions ) ;
var pi = math . pi ;:==:var asech:==:math . asech ;
var tools = toolbarOptions . tools  |  |  [ ] ;:==:var messages:==:that . options . messages ;
var is = require ( ' is ' ) ;:==:var has:==:Object . prototype . hasOwnProperty ;
var deviceInformation = windows . devices . enumeration . deviceInformation ;:==:var posConnectionTypes:==:windows . devices . pointOfService . posConnectionTypes ;
var scope = _ ref . scope ;:==:var profile:==:_ ref . profile ;
var evt = this . _ evt ;:==:var type:==:e . type ;
var contained1_1 = document . getElementById ( ' contained1_1 ' ) ;:==:var contained1_2:==:document . getElementById ( ' contained1_2 ' ) ;
var WHILE_STATEMENT = ' WHILE_STATEMENT ' ;:==:var WITH_STATEMENT:==:' WITH_STATEMENT ' ;
var zoomLimit = controllerHost . zoomLimit ;:==:var pos:==:target . position ;
var tabs = $ ( this . box ) . find ( ' > div . w2ui - form - tabs ' ) ;:==:var page:==:$ ( this . box ) . find ( ' > div . w2ui - page ' ) ;
var route = ref . route ;:==:var href:==:ref . href ;
var callButton = document . getElementById ( ' callButton ' ) ;:==:var hangupButton:==:document . getElementById ( ' hangupButton ' ) ;
var message = options . message  |  |  ' ' ;:==:var question:==:options . question  |  |  gettext ( ' Are you sure you want to proceed ? ' ) ;
var nodeFieldCount = this . _ nodeFieldCount ;:==:var nodeTypeOffset:==:this . _ nodeTypeOffset ;
var tabManager = imports . tabManager ;:==:var panels:==:imports . panels ;
var x = this . x , y = this . y ;:==:var radius:==:this . radius ;
var reactDebugTool = require ( ' reactDebugTool ' ) ;:==:var lowPriorityWarning:==:require ( ' lowPriorityWarning ' ) ;
var redirect_uri = _ ref . redirect_uri ;:==:var response_type:==:_ ref . response_type ;
var scrollValue = this . scrollValue ( ) ;:==:var scrollSize:==:this . scrollSize ( ) ;
var mout = require ( ' mout ' ) ;:==:var path:==:require ( ' path ' ) ;
var maybeRename = this . maybeRename _ ;:==:var lvalue:==:this . transformAny ( tree . lvalue ) ;
var i d = ids [ i ] ;:==:var node:==:nodes [ i d ] ;
var TRAVIS = process . env . TRAVIS ;:==:var lie:==:require ( ' lie ' ) ;
var hasMany = ds . hasMany ;:==:var belongsTo:==:ds . belongsTo ;
var left = this . transformAny ( item . left ) ;:==:var iterator:==:this . transformAny ( item . iterator ) ;
var $ pageContent = this . $ pageContent ;:==:var shadow:==:this . options . shadow ;
var dirname = require ( ' path ' ) . dirname ;:==:var basename:==:require ( ' path ' ) . basename ;
var minLines = this . _ minLines ;:==:var includeComments:==:this . _ includeComments ;
var appId = ob . appId ;:==:var ids:==:ob . ids ;
var reactReconcileTransaction = require ( ' reactReconcileTransaction ' ) ;:==:var reactUpdates:==:require ( ' reactUpdates ' ) ;
var roll = camera . roll ;:==:var positionCartographic:==:camera . positionCartographic ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var op = $ . extend ( , _ op , $ helper . data ( ' op ' ) ) ;:==:var position:==:$ placeholder . position ( ) ;
var colors = this . colors ;:==:var width:==:sprite . width ;
var times = this . _ times ;:==:var energies:==:this . _ energies ;
var jstransformer = require ( ' jstransformer ' ) ;:==:var uglify:==:require ( ' uglify - js ' ) ;
var dynCall_viddii = Module [ ' dynCall_viddii ' ] = asm [ ' dynCall_viddii ' ] ;:==:var dynCall_viiddddddiiii:==:Module [ ' dynCall_viiddddddiiii ' ]    asm [ ' dynCall_viiddddddiiii ' ] ;
var MUST_USE_ATTRIBUTE = domProperty . injection . must_use_attribute ;:==:var must_use_property:==:domProperty . injection . must_use_property ;
var voice = conn . voice ;:==:var data:==:conn . data ;
var rowsMax = _ props2 . rowsMax ;:==:var textareaStyle:==:_ props2 . textareaStyle ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var syntheticMouseEvent:==:require ( ' syntheticMouseEvent ' ) ;
var selectionStart = math . min ( selectionMgr . selectionStart , selectionMgr . selectionEnd ) ;:==:var selectionEnd:==:math . max ( selectionMgr . selectionStart , selectionMgr . selectionEnd ) ;
var keys = es5 . keys ( obj ) ;:==:var len:==:keys . length ;
var shadowColor = this . ctx . shadowColor ;:==:var shadowOffsetx:==:this . ctx . shadowOffsetx ;
var style = options . hasOwnProperty ( ' style ' ) ? options . style : ' list ' ;:==:var orderby:==:options . orderby  |  |  ' date ' ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var text:==:require ( ' f8Text ' ) ;
var mergeHelpers = require ( ' mergeHelpers ' ) ;:==:var checkMergeObjectArg:==:mergeHelpers . checkMergeObjectArg ;
var completed = Todos . completed ( ) . length ;:==:var remaining:==:Todos . remaining ( ) . length ;
var o = graphObj . pointOffset ( x : keyEvents [ k ] [ l ] [ ' data ' ] [ 0 ] , y : keyEvents [ k ] [ l ] [ ' data ' ] [ 1 ] ) ;:==:var p:==:graphObj . pointOffset ( x : keyEvents [ k ] [ l ] [ ' data ' ] [ 0 ] , y : keyEvents [ k ] [ l ] [ ' data ' ] [ 1 ] ) ;
var _ memset = Module [ ' _ memset ' ] = asm [ ' _ memset ' ] ;:==:var _ im_search:==:Module [ ' _ im_search ' ]    asm [ ' _ im_search ' ] ;
var updatable = options . updatable ;:==:var onReady:==:options . onReady ;
var equal    = require ( ' assert ' ) . equal ;:==:var deepEqual:==:require ( ' assert ' ) . deepEqual ;
var debug = utils . debug ;:==:var isValidDefaultValue:==:propertyTypes . isValidDefaultValue ;
var iterator1 = el . iterator1 ? ( ' , ' + ( el . iterator1 ) ) : '' ;:==:var iterator2:==:el . iterator2 ? ( ' , ' + ( el . iterator2 ) ) : '' ;
var refLine = this . refLine ;:==:var codingLine:==:this . codingLine ;
var otherForm = scope . otherForm ;:==:var childForm:==:form . childForm ;
var depth = defaultValue ( options . depth , 0 . 0 ) ;:==:var clear:==:defaultValue ( options . clear , true ) ;
var rimraf = require ( ' rimraf ' ) ;:==:var panini:==:require ( ' panini ' ) ;
var Wizard = imports . Wizard ;:==:var wizardPage:==:imports . wizardPage ;
var basename = require ( ' path ' ) . basename ;:==:var Stream:==:require ( ' stream ' ) . Stream ;
var delim = config . delimiter ;:==:var newline:==:config . newline ;
var a12 = this . a12 ;:==:var a13:==:this . a13 ;
var browser_icon   = zombie_array [ index ] [ ' browser_icon ' ] ;:==:var os_icon:==:zombie_array [ index ] [ ' os_icon ' ] ;
var response = result . response ;:==:var body:==:result . body ;
var splitIntoLines = _ require . splitIntoLines ;:==:var splitLongWords:==:_ require . splitLongWords ;
var doc = document ;:==:var head:==:doc . getElementsByTagName ( ' head ' ) . item ( 0 ) ;
var Wil = Wil + gamma1l ;:==:var Wih:==:Wih + gamma1h + ( ( Wil > > > 0 ) < ( gamma1l > > > 0 ) ? 1 : 0 ) ;
var s = String ( string ) ;:==:var n:==:s . length ;
var query = url . parse ( req . url , true ) . query ;:==:var referer:==:req . headers . referer ;
var describe = test . describe ;:==:var it:==:test . it ;
var multiplier = attribute . multiplier  |  |  1 ;:==:var components:==:attribute . components  |  |  1 ;
var gulp = require ( ' gulp ' ) ;:==:var assets:==:require ( ' gulp - bower - assets ' ) ;
var r = data . rotation ;:==:var s:==:data . scale ;
var image = this . image ;:==:var rotate:==:image . rotate  |  |  0 ;
var createArgumentList = parseTreeFactory . createArgumentList ;:==:var createArrayLiteralExpression:==:parseTreeFactory . createArrayLiteralExpression ;
var date = this . _ validate ( year , month , day , main . local . invalidDate ) ;:==:var year:==:this . _ t2gYear ( date . year ( ) ) ;
var force = this . force ;:==:var options:==:this . options ;
var operationId = anchor [ this . _ operationIdSymbol ] ;:==:var operation:==:operationId & & asyncOperations . get ( operationId ) ;
var ctrlKey = defaultValue ( options . ctrlKey , false ) ;:==:var altKey:==:defaultValue ( options . altKey , false ) ;
var keys = Object . keys ( m ) ;:==:var length:==:keys . length ;
var se = w2utils . settings ;:==:var re:==:new regExp ( ' ^'+ ( se . currencyPrefix ? ' \\ ' + se . currencyPrefix + ' ? ' : '' ) + ' [ -+ ] ? [ 0 - 9 ] * [ \\'+ w2utils . settings . decimalSymbol + ' ] ? [ 0 - 9 ] + ' + ( se . currencySuffix ? ' \\ ' + se . currencySuffix + ' ? ' : '' ) + ' $ ' , ' i ' ) ;
var omittedCloseTags = require ( ' omittedCloseTags ' ) ;:==:var traverseStackChildren:==:require ( ' traverseStackChildren ' ) ;
var viz = this . viz ;:==:var nStyles:==:this . nStyles ;
var y = y _  |  0 ;:==:var level:==:level _  |  0 ;
var project = this . project ;:==:var thisArg:==:this . thisArg ;
var FIELD_NAME = ' FIELD_NAME ' ;:==:var LABEL0:==:' LABEL0 ' ;
var toolbar1 = name : ' test - toolbar1 ' ;:==:var toolbar2:==:name : ' test - toolbar2 ' ;
var fullscreenButton = viewer . _ fullscreenButton ;:==:var infoBox:==:viewer . _ infoBox ;
var htmlTag = util . htmlTag ;:==:var striphtml:==:util . striphtml ;
var log2 = sharedUtil . log2 ;:==:var readInt8:==:sharedUtil . readInt8 ;
var roleMapping = loopback . roleMapping ;:==:var user:==:loopback . user ;
var bones = this . mesh . skeleton . bones ;:==:var iks:==:this . mesh . geometry . iks ;
var loadJpegStream = sharedUtil . loadJpegStream ;:==:var stringToBytes:==:sharedUtil . stringToBytes ;
var module = modules [ i ] ;:==:var m:==:module ( ) ;
var Token = traceur . syntax . Token ;:==:var tokenType:==:traceur . syntax . tokenType ;
var async    = require ( ' async ' ) ;:==:var os:==:require ( ' os ' ) ;
var user = db . users [ i d ] ;:==:var body:==:req . body ;
var clockRange = this . clockRange ;:==:var startTime:==:this . startTime ;
var traits = identify . traits ( ) ;:==:var i d:==:identify . userId ( ) ;
var rotateMix = this . rotateMix , translateMix = this . translateMix , scaleMix = this . scaleMix , shearMix = this . shearMix ;:==:var target:==:this . target ;
var width = dimensions . width * ratio , height = dimensions . height * ratio ;:==:var font:==:template . font ? template . font : ' sans - serif ' ;
var $ rowsSpans = that . $ rowsSpans = $ datatable . children ( ' . datatable - rows ' ) . children ( ' . datatable - rows - span ' ) ;:==:var $ headSpans:==:that . $ headSpans    $ datatable . children ( ' . datatable - head ' ) . children ( ' . datatable - head - span ' ) ;
var src = xmlAttributeValue ( domElement , ' src ' ) ;:==:var type:==:xmlAttributeValue ( domElement , ' type ' ) ;
var settings = this . settings ;:==:var codeMirror:==:this . codeMirror ;
var invsBox = this . invsBox ;:==:var subMix:==:this . subMix ;
var e = [ foo , null , undefined , bar ] . join ( ' - ' ) ;:==:var f:==:[ foo , bar ] . join ( ' ' ) ;
var strokeColor = c . state . strokeColor ;:==:var fillColor:==:c . state . fillColor ;
var high = result . high ;:==:var low:==:result . low ;
var fs = require ( ' fs ' ) ;:==:var wd:==:require ( ' wd ' ) ;
var t1 = game . add . text ( 100 , 210 , text1 , style ) ;:==:var t2:==:game . add . text ( 100 , 410 , text2 , style ) ;
var hour = calendar . month . hour ( ) ;:==:var minute:==:calendar . month . minute ( ) ;
var sinon = require ( ' sinon ' ) ;:==:var assert:==:require ( ' chai ' ) . assert ;
var cos = stdlib . Math . cos ;:==:var sin:==:stdlib . Math . sin ;
var nodes = view . nodes ;:==:var inner:==:view . inner ;
var a2 = expected [ i ] . locals . a2 ;:==:var b2:==:expected [ i ] . locals . b2 ;
var Parent = Parse . Object . extend ( ' Parent ' ) ;:==:var Grandparent:==:Parse . Object . extend ( ' Grandparent ' ) ;
var customSite = jQuery . cookie ( ' customSite ' ) ;:==:var showContent:==:conf . customSite . showContent ;
var caption = options . caption ;:==:var onclick:==:options . onclick ;
var manifest = app . manifest ;:==:var name:==:new manifestHelper ( manifest ) . name ;
var glyphs = label . _ glyphs ;:==:var length:==:glyphs . length ;
var lat = utils . number ( values [ valuePaths . geo_lat ] ) ;:==:var lng:==:utils . number ( values [ valuePaths . geo_lng ] ) ;
var node = nodes [ meshInstanceData . node ] ;:==:var mesh:==:meshes [ meshInstanceData . mesh ] ;
var blameData = this . blameColumn . blameData ;:==:var selectedText:==:this . selectedText ;
var camera = frameState . camera ;:==:var frustum:==:camera . frustum ;
var semver = require ( ' semver ' ) ;:==:var session:==:require ( ' express - session ' ) ;
var tbody = goog . bind ( this . dom _ . createDom , this . dom _ , ' tbody ' ) ;:==:var thead:==:goog . bind ( this . dom _ . createDom , this . dom _ , ' thead ' ) ;
var dominatorsTree = this . _ dominatorsTree ;:==:var retainedSizes:==:this . _ retainedSizes ;
var React = require ( ' React ' ) ;:==:var fixedDataTableColumnGroup:==:require ( ' fixedDataTableColumnGroup . react ' ) ;
var sharp = _ sharp ;:==:var plus:==:_ plus ;
var sequence   = require ( ' run - sequence ' ) ;:==:var insert:==:require ( ' gulp - insert ' ) ;
var a = goog . crypt . hash32 . toSigned _ ( bytes [ offset + 0 ] ) ;:==:var b:==:goog . crypt . hash32 . toSigned _ ( bytes [ offset + 1 ] ) ;
var def = goog . dom . getElement ( ' def-3 ' ) ;:==:var jkl:==:goog . dom . getElement ( ' jkl-3 ' ) ;
var x = this . x + 1 ;:==:var y:==:this . y ;
var afterAppear = ref . afterAppear ;:==:var appearCancelled:==:ref . appearCancelled ;
var t = source . getItem ( node . i d ) ;:==:var n:==:node . cloneNode ( true ) ;
var REVISION_CHANGES = _ _ dependency1 _ _ . REVISION_CHANGES ;:==:var log:==:_ _ dependency1 _ _ . log ;
var reactServerRenderer = require ( ' reactServerRenderer ' ) ;:==:var reactVersion:==:require ( ' reactVersion ' ) ;
var toRadians = cesiumMath . toRadians ;:==:var heightmap:==:options . heightmap ;
var isFull = self . isFull ( ) ;:==:var isLocked:==:self . isLocked ;
var deltaY = event . wheelDeltay  |  |  -1 * event . deltay ;:==:var deltax:==:event . wheelDeltax  |  |  -1 * event . deltax ;
var fs = require ( ' fs ' ) ;:==:var changelog:==:require ( ' conventional - changelog ' ) ;
var suc = options . success  |  |  emptyFn ;:==:var err:==:options . error  |  |  emptyFn ;
var models = _ _ alloyId5 . models ;:==:var len:==:models . length ;
var s = % createPrivateSymbol ( ' s ' ) ;:==:var s1:==:% createPrivateSymbol ( ' s1 ' ) ;
var node = nodeStack . pop ( ) ;:==:var text:==:node . textContent  |  |  node . innerText ;
var oldIndex = event . detail . oldIndex ;:==:var newIndex:==:event . detail . newIndex ;
var dynCall_iiiii = Module [ ' dynCall_iiiii ' ] = asm [ ' dynCall_iiiii ' ] ;:==:var dynCall_iii:==:Module [ ' dynCall_iii ' ]    asm [ ' dynCall_iii ' ] ;
var User = mongoose . model ( ' User ' , userSchema ) ;:==:var user:==:db . collection ( ' user ' ) ;
var reactNativePropRegistry = require ( ' reactNativePropRegistry ' ) ;:==:var diff:==:reactNativeAttributePayload . diff ;
var link = links [ i ] ;:==:var rel:==:link . getAttribute ( ' rel ' ) ;
var o = opts ! = null ? opts : ;:==:var raw:==:o . raw ;
var queue = this . _ queue ;:==:var i:==:this . _ index++ ;
var nodeWidth = seriesModel . get ( ' nodeWidth ' ) ;:==:var nodeGap:==:seriesModel . get ( ' nodeGap ' ) ;
var async = require ( ' async ' ) ;:==:var util:==:require ( ' util ' ) ;
var state = cm . getTokenAt ( cm . getCursor ( ) ) . state ;:==:var inner:==:codeMirror . innerMode ( cm . getMode ( ) , state ) ;
var listener = this . _ listeners [ l ] ;:==:var cb:==:listener . cb ;
var jqwerty = _ interopRequire ( _ jqwerty ) ;:==:var jqwertyui:==:_ interopRequire ( _ jqwertyui ) ;
var editorState = require ( ' editorState ' ) ;:==:var reactdom:==:require ( ' reactdom ' ) ;
var interval = piece . interval ;:==:var close:==:piece . close ;
var g = f . getGeometry ( ) ;:==:var flatCoordinates:==:g . flatCoordinates ;
var visualMapModel = this . visualMapModel ;:==:var handleEnds:==:this . _ handleEnds ;
var implicit = ( options & & options . implicit ) ? options . implicit : ' hide ' ;:==:var args:==:this . args ;
var attrs = this . attrs ;:==:var inputs:==:this . info . inputs ;
var base    = desc . stat_desc . extra_base ;:==:var max_length:==:desc . stat_desc . max_length ;
var dest = options . dest & & convertPath ( options . dest ) ;:==:var root:==:convertPath ( options . root ) ;
var ctrlKey = typeof options . ctrlKey ! = ' undefined ' ? options . ctrlKey : false ;:==:var altKey:==:typeof options . altKey !   ' undefined ' ? options . altKey : false ;
var touchRippleColor = _ props2 . touchRippleColor ;:==:var touchRippleOpacity:==:_ props2 . touchRippleOpacity ;
var cbrt = math . cbrt ;:==:var bignumber:==:math . bignumber ;
var sgv = sgvs [ sgvsLength - i ] ;:==:var sensor:==:sensors [ sensorsLength - i ] ;
var editor = this . editor ;:==:var settings:==:this . settings  |  |  dialogShowMask : true ;
var settings = this . settings ;:==:var infoDialog:==:this . infoDialog    editor . children ( ' . ' + this . classPrefix + ' dialog - info ' ) ;
var BUILDER_KEYS = exports . BUILDER_KEYS = ;:==:var DEPRECATED_KEYS:==:exports . DEPRECATED_KEYS    ;
var axisHelper = powerbi . visuals . axisHelper ;:==:var valueFormatter:==:powerbi . visuals . valueFormatter ;
var hour=-1 ;:==:var minute:==:-1 ;
var Shape = ReactART . Shape ;:==:var Surface:==:ReactART . Surface ;
var onsuccess = opts . onsuccess ;:==:var onerror:==:opts . onerror ;
var slice = Array . prototype . slice ;:==:var filter:==:Array . prototype . filter ;
var colRight = t . colRight ;:==:var colContentLeft:==:t . colContentLeft ;
var green600 = exports . green600 = ' # 43a047 ' ;:==:var green700:==:exports . green700    ' # 388e3c ' ;
var group = $ ( this ) . data ( ' group ' ) ;:==:var name:==:$ ( this ) . data ( ' name ' ) ;
var v = verts [ i ] ;:==:var worldCorner:==:sphereconvex_worldcorner ;
var height = options . height  |  |  ' ' ;:==:var style:==:options . style  |  |  ' ' ;
var createStringLiteral = parseTreeFactory . createStringLiteral ;:==:var createThisExpression:==:parseTreeFactory . createThisExpression ;
var m = Object . create ( matcher ) ;:==:var type:==:typeOf ( expectation ) ;
var assert = require ( ' assert ' ) ;:==:var client:==:marionette . client ( Dialer . config ) ;
var extname = path . extname ( fileObj . path ) ;:==:var basename:==:path . basename ( fileObj . path , extname ) ;
var keys = Object . keys ( router ) ;:==:var index:==:keys . indexOf ( path ) ;
var linesAbove = opts . linesAbove  |  |  2 ;:==:var linesBelow:==:opts . linesBelow  |  |  3 ;
var selector = this . selector ;:==:var subject:==:this . subjectFactory ( ) ;
var ctor = typedArrayConstructors [ i ] ;:==:var a:==:makeSharedTypedArray ( ctor , 10 ) ;
var isStartIncluded = defaultValue ( options . isStartIncluded , true ) ;:==:var isStopIncluded:==:defaultValue ( options . isStopIncluded , true ) ;
var referer = headers . referer  |  |  '' ;:==:var data:==:( ( payload  |  |  ) . data  |  |  [ ] ) ;
var disabled = parseInt ( results . disabled , 10 ) = = = 1 ;:==:var locked:==:parseInt ( topic . locked , 10 )      1 ;
var col = this . columns [ col_ind ] ;:==:var span:==:( tmp & & tmp . colspan & & col !   null & & ! isNan ( tmp . colspan [ col . field ] ) ? parseInt ( tmp . colspan [ col . field ] ) : 1 ) ;
var start = _ item . data . start ;:==:var end:==:( _ item . data . end !    undefined ) ? _ item . data . end : start ;
var collisionBoxArray = tile . collisionBoxArray . serialize ( ) ;:==:var symbolInstancesArray:==:tile . symbolInstancesArray . serialize ( ) ;
var src = scripts [ i ] . src ;:==:var l:==:src . length ;
var Prototype = powerbi . Prototype ;:==:var getAnimationDuration:==:powerbi . visuals . animatorCommon . getAnimationDuration ;
var transformOrigin = kendo . effects . transformOrigin ;:==:var fillScale:==:kendo . effects . fillScale ;
var that = $ ( that ) ;:==:var cell:==:that . closest ( ' . cal - cell ' ) ;
var Promise = goog . require ( ' goog . Promise ' ) ;:==:var Timer:==:goog . require ( ' goog . Timer ' ) ;
var express = require ( ' express ' ) ;:==:var nconf:==:require ( ' nconf ' ) ;
var isRowLoaded = _ props . isRowLoaded ;:==:var minimumBatchSize:==:_ props . minimumBatchSize ;
var module = entry . module = getOrCreateModuleRecord ( entry . name ) ;:==:var exports:==:entry . module . exports ;
var iframeLoadMonitor = goog . require ( ' goog . net . iframeLoadMonitor ' ) ;:==:var promise:==:goog . require ( ' goog . promise ' ) ;
var Table = require ( ' fixedDataTableNew . react ' ) ;:==:var column:==:require ( ' fixedDataTableColumnNew . react ' ) ;
var data = size . data ;:==:var mp:==:data . mp ? data . mp + value + ' ' : '' ;
var t = percentage ;:==:var x:==:Math . pow ( 1 - t , 2 ) * this . fromPoint . x + ( 2 * t * ( 1 - t ) ) * viaNode . x + math . pow ( t , 2 ) * this . toPoint . x ;
var restify = require ( ' restify ' ) ;:==:var errors:==:require ( ' restify - errors ' ) ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var engine = require ( ' engine . io ' ) ;:==:var client:==:require ( ' socket . io - client ' ) ;
var root = goog . dom . getElement ( ' root ' ) ;:==:var graphics:==:goog . graphics . createGraphics ( 800 , 600 ) ;
var element = this . element , o = this . options ;:==:var bar:==:element . children ( ' . bar : last - child ' ) ;
var selectionId = powerbi . visuals . selectionId ;:==:var axisStyle:==:powerbi . visuals . axisStyle ;
var totalRows = this . wtSettings . getSetting ( ' totalRows ' ) ;:==:var fixedRowsTop:==:this . wtSettings . getSetting ( ' fixedRowsTop ' ) ;
var label = _ props . label ;:==:var labelColor:==:_ props . labelColor ;
var util = require ( ' util ' ) ;:==:var through:==:require ( ' through ' ) ;
var worldNormal = intersecttrimesh_worldnormal ;:==:var faceList:==:( options & & options . faceList )  |  |  null ;
var close = options . close  |  |  false ;:==:var output:==:options . output  |  |  false ;
var insert = require ( ' gulp - insert ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var val = parseInt ( this . $ input . val ( ) ) ;:==:var options:==:$ . extend ( value : val , this . options . spinner ) ;
var clientY = defaultValue ( options . clienty , 0 ) ;:==:var ctrlKey:==:defaultValue ( options . ctrlKey , false ) ;
var parse = propertyTypes . boolean . parse ;:==:var stringify:==:propertyTypes . boolean . stringify ;
var a = a : ' a ' ;:==:var b:==:b : ' b ' ;
var Name = corePrimitives . name ;:==:var ref:==:corePrimitives . ref ;
var count = element . count ;:==:var node:==:element . node ;
var where = rewriter . rewriteWhere ( this . whereItems , from ) ;:==:var orderBy:==:rewriter . rewriteOrderBy ( this . orderByItems , from ) ;
var elements = this . elements ;:==:var type:==:evt . detail . promptType  |  |  evt . detail . type ;
var convert = require ( ' convert - dates ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var pos = data . pos ;:==:var ace:==:tab . document . editor . ace ;
var isStream = corePrimitives . isStream ;:==:var stringStream:==:coreStream . stringStream ;
var entities = dataSource . entities . values ;:==:var billboard:==:entities [ 0 ] . billboard ;
var left = offset . left + getCssFloat ( el , ' border - left - width ' ) + scrollbarWidths . left - ( origin ? origin . left : 0 ) ;:==:var top:==:offset . top + getCssFloat ( el , ' border - top - width ' ) + scrollbarWidths . top - ( origin ? origin . top : 0 ) ;
var x = Math . round ( ( record . endTime ( ) - minTime ) * xFactor ) ;:==:var y:==:math . round ( ( counters . jsHeapSizeUsed - minUsedHeapSize ) * yFactor ) ;
var surfaceHeight = rectangleGeometry . _ surfaceHeight ;:==:var extrude:==:rectangleGeometry . _ extrude ;
var Person = db . model ( ' gh4264 ' , personSchema ) ;:==:var blogPost:==:db . model ( ' gh4264_0 ' , blogPostSchema ) ;
var tty = require ( ' tty ' ) ;:==:var object:==:require ( ' mout ' ) . object ;
var a = fulfillSoon ( ' a ' , 40 ) ;:==:var b:==:' b ' ;
var progressDialogController = _ appJsControllersProgressDialogController [ ' default ' ] ;:==:var proximityAppsController:==:_ appJsControllersProximityAppsController [ ' default ' ] ;
var error = _ ref . error ;:==:var subscriber:==:_ ref . subscriber ;
var isCompleterOpen = helpers . isCompleterOpen ;:==:var getCompletionCalls:==:helpers . getCompletionCalls ;
var forEach   = angular . forEach ;:==:var isArray:==:angular . isArray ;
var getAccessor = traceur . syntax . trees . getAccessor ;:==:var setAccessor:==:traceur . syntax . trees . setAccessor ;
var intervalPrecision = result . intervalPrecision ;:==:var interval:==:result . interval ;
var FUNCTION_EXPRESSION = ' FUNCTION_EXPRESSION ' ;:==:var FUNCTION_TYPE:==:' FUNCTION_TYPE ' ;
var i d = options . i d ;:==:var defaultViewport:==:options . defaultViewport ;
var processVersion = this . getAttributens ( node , this . namespaces . wps , ' processVersion ' ) ;:==:var process:==:processVersion : processVersion ;
var Size = goog . math . Size ;:==:var getPaddingBox:==:goog . style . getPaddingBox ;
var path = angular . element ( node . querySelector ( ' path ' ) ) ;:==:var startIndeterminate:==:$ mdProgressCircular . startIndeterminate ;
var edges = triangulation . edges ;:==:var triangles:==:triangulation . triangles ;
var $ injector = hooks . $ injector ;:==:var $ location:==:$ injector . get ( ' $ location ' ) ;
var View = require ( ' View ' ) ;:==:var connect:==:require ( ' react - redux ' ) ;
var _ realloc = Module [ ' _ realloc ' ] = asm [ ' _ realloc ' ] ;:==:var _ im_get_spl_start:==:Module [ ' _ im_get_spl_start ' ]    asm [ ' _ im_get_spl_start ' ] ;
var path = require ( ' path ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var path = require ( ' path ' ) ;:==:var which:==:require ( ' which ' ) ;
var pos = array [ j ] . position ;:==:var rot:==:array [ j ] . rotation ;
var commandProcessError = errors . commandProcessError ;:==:var commandResult:==:errors . commandResult ;
var width = + root . attr ( ' width ' ) ;:==:var height:==:+ root . attr ( ' height ' ) ;
var loc = moznode . loc , end = loc & & loc . end ;:==:var range:==:moznode . range ;
var environment = this . environment ? this . environment . buildCode ( builder , ' c ' , slot : ' environment ' ) : undefined ;:==:var environmentAlpha:==:this . environmentAlpha & & this . environment ? this . environmentAlpha . buildCode ( builder , ' fv1 ' ) : undefined ;
var Program = traceur . syntax . trees . Program ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var concat = require ( ' gulp - concat ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var reactNativeEventEmitter = require ( ' reactNativeEventEmitter ' ) ;:==:var reactNativeEventPluginOrder:==:require ( ' reactNativeEventPluginOrder ' ) ;
var assert = require ( ' assert - plus ' ) ;:==:var bunyan:==:require ( ' bunyan ' ) ;
var bcrypt = require ( ' bcryptjs ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var axis = axisSpecifier ( stream , a ) ;:==:var nodeType:==:nodeTypeTest ( stream , a ) ;
var winston = require ( ' winston ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var createMemberExpression = parseTreeFactory . createMemberExpression ;:==:var createObjectLiteralExpression:==:parseTreeFactory . createObjectLiteralExpression ;
var UNION_TYPE = ' UNION_TYPE ' ;:==:var VARIABLE_DECLARATION:==:' VARIABLE_DECLARATION ' ;
var props = ref . props ;:==:var children:==:ref . children ;
var header = this . refs . header . getHeaderColGrouop ( ) ;:==:var tbody:==:this . refs . body . refs . tbody ;
var ctime = new Date ( stats . ctime ) . getTime ( ) ;:==:var watcher:==:watchers [ docId ] ;
var polygonHierarchy = options . polygonHierarchy ;:==:var vertexFormat:==:defaultValue ( options . vertexFormat , vertexFormat . default ) ;
var b = bProp : 1 ;:==:var aSymbol:==:symbol ( ' aSymbol ' ) ;
var reactWheelHandler = require ( ' reactWheelHandler ' ) ;:==:var scrollbar:==:require ( ' scrollbar . react ' ) ;
var createParenExpression = parseTreeFactory . createParenExpression ;:==:var runtime:==:traceur . syntax . predefinedName . runtime ;
var self = element . _ self ;:==:var source:==:element . _ source ;
var getopt = global . getopt ;:==:var arrUnique:==:global . arrUnique ;
var p = dimension . parent ;:==:var extent:==:dimension . brush . extent ( ) ;
var script = tplToken . script ;:==:var output:==:script . output ;
var target = targetSettings . target ;:==:var tRatio:==:this . getTargetRatio ( ) ;
var reactFiberTreeReflection = require ( ' reactFiberTreeReflection ' ) ;:==:var reactInstanceMap:==:require ( ' reactInstanceMap ' ) ;
var bunyan = require ( ' bunyan ' ) ;:==:var restify:==:require ( ' restify ' ) ;
var lat = parseFloat ( current_center . lat ( ) . toFixed ( 4 ) ) ;:==:var lng:==:parseFloat ( current_center . lng ( ) . toFixed ( 4 ) ) ;
var chai = require ( ' chai ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var w = this . words [ this . length - 1 ] ;:==:var hi:==:this . _ countBits ( w ) ;
var createFalseLiteral = parseTreeFactory . createFalseLiteral ;:==:var createFunctionExpression:==:parseTreeFactory . createFunctionExpression ;
var zipstream = require ( ' zipstream ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var minDistIntersect = intersectconvex_mindistintersect ;:==:var faceList:==:( options & & options . faceList )  |  |  null ;
var exec = require ( ' child_process ' ) . exec ;:==:var path:==:require ( ' path ' ) ;
var DO_WHILE_STATEMENT = ' DO_WHILE_STATEMENT ' ;:==:var EMPTY_STATEMENT:==:' EMPTY_STATEMENT ' ;
var maxLength = options . maxLength ;:==:var anchor:==:options . anchor  |  |  source . position ;
var entityManager = saveContext . entityManager ;:==:var metadataStore:==:entityManager . metadataStore ;
var getAnimationDuration = powerbi . visuals . animatorCommon . getAnimationDuration ;:==:var labelLayout:==:powerbi . labelLayout ;
var stride = data . stride ;:==:var offset:==:geometryAttribute . offset ;
var buttons = buttonsDefaults ( selectorIn , selectorOut , calendar ) ;:==:var visible:==:coerce ( ' visible ' , buttons . length > 0 ) ;
var language = imports . language ;:==:var c9:==:imports . c9 ;
var view = this . view ;:==:var projectionView:==:this . projectionView ;
var href = link . href ;:==:var type:==:link . type ;
var file = r . file ;:==:var err:==:r . error ;
var deltaX = last . deltaX - touch . deltaX ;:==:var deltaY:==:last . deltaY - touch . deltaY ;
var del = require ( ' del ' ) ;:==:var debug:==:require ( ' gulp - debug ' ) ;
var vDiff = this . vDiff ;:==:var impulse1:==:this . impulse1 ;
var leftBounds = incomingLayer . leftBounds  |  |  defaultLeftBounds ;:==:var rightBounds:==:incomingLayer . rightBounds  |  |  defaultRightBounds ;
var bufferView = bufferViews [ accessor . bufferView ] ;:==:var buffer:==:buffers [ bufferView . buffer ] ;
var name = this . name ;:==:var descriptor:==:this . descriptor ;
var alt = ! ! mods . alt ;:==:var shift:==:! ! mods . shift ;
var g = pg . grads ;:==:var l2_decay_mul:==:typeof pg . l2_decay_mul !    ' undefined ' ? pg . l2_decay_mul : 1 . 0 ;
var ui = imports . ui ;:==:var Menu:==:imports . Menu ;
var Readable = require ( ' readable - stream ' ) . Readable ;:==:var xtend:==:require ( ' xtend ' ) ;
var n = Math . min ( rows , columns ) ;:==:var values:==:m . _ values ;
var top = parseFloat ( element . style . top  |  |  0 ) - ( element . _ originalTop  |  |  0 ) ;:==:var left:==:parseFloat ( element . style . left  |  |  0 ) - ( element . _ originalLeft  |  |  0 ) ;
var fastMode = config . fastMode ;:==:var quoteChar:==:config . quoteChar  |  |  ' ' ' ;
var preview = imports . preview ;:==:var terminal:==:imports . terminal ;
var selectable = this . viewOptions . thumbnail_selectable ;:==:var selected:==:' selected ' ;
var renderer = this . renderer ;:==:var canvas:==:renderer . canvas ;
var maxW = settings . maxWidth  |  |  0xffff ;:==:var maxh:==:settings . maxHeight  |  |  0xffff ;
var setting1 = this . settings . setting1 ;:==:var setting2:==:this . settings . setting2 ;
var amber200 = exports . amber200 = ' # ffe082 ' ;:==:var amber300:==:exports . amber300    ' # ffd54f ' ;
var waiter = waiters [ waitersKey ] ;:==:var operation:==:modelOperations [ waiter . operation ] ;
var Service = _ fxosMvcDistMvc . service ;:==:var peer:==:_ appJsModelsPeer [ ' default ' ] ;
var op = $ . extend ( , this . _ op , options ) ;:==:var height:==:op . height > op . minH?op . height : op . minH ;
var iconStyleLeft = _ props . iconStyleLeft ;:==:var iconStyleRight:==:_ props . iconStyleRight ;
var camera = scene . _ camera ;:==:var frameState:==:scene . _ frameState ;
var data = this . data ;:==:var type:==:this . _ getNodeType ( data . type ) ;
var leftOverlay = this . leftOverlay . clone . wtTable . holder ;:==:var topLeftCornerOverlay:==:this . topLeftCornerOverlay & & this . topLeftCornerOverlay . clone ? this . topLeftCornerOverlay . clone . wtTable . holder : null ;
var toggle = document . getElementById ( ' toggle ' ) ;:==:var progress2:==:document . getElementById ( ' progress2 ' ) ;
var toString = emptyObject . toString ;:==:var hasOwn:==:emptyObject . hasOwnProperty ;
var el = this . el ;:==:var mesh:==:el . getObject3d ( ' mesh ' ) ;
var lexer = Narcissus . lexer ;:==:var definitions:==:Narcissus . definitions ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var schemaType:==:mongoose . schemaType ;
var i d = _ ref . i d ;:==:var data:==:_ ref . data ;
var w = $ ( document ) . width ( ) - 10 ;:==:var h:==:$ ( document ) . height ( ) - 100 ;
var idName = this . dataSource . idName ( this . modelName ) ;:==:var change:==:this . getChangeModel ( ) ;
var slash = require ( ' gulp - slash ' ) ;:==:var rename:==:require ( ' gulp - rename ' ) ;
var binding = this . transformAny ( tree . binding ) ;:==:var catchBody:==:this . transformAny ( tree . catchBody ) ;
var ignoreNoEdit = ! ! ( options . fields  |  |  options . ignoreNoEdit ) ;:==:var fields:==:options . fields  |  |  this . fieldsArray ;
var waitFor = ( spec . waitFor = = undefined ) ? true : spec . waitFor ;:==:var button:==:this . getAddonButton ( addon : addon , button : button ) ;
var billboardCollection = this . _ billboardCollection ;:==:var backgroundBillboardCollection:==:this . _ backgroundBillboardCollection ;
var chalk = require ( ' chalk ' ) ;:==:var webpack:==:require ( ' webpack ' ) ;
var verticies = this . verticies ;:==:var uvs:==:this . uvs ;
var includeWebMercatort = defaultValue ( options . includeWebMercatort , false ) ;:==:var structure:==:defaultValue ( options . structure , heightmapTessellator . default_structure ) ;
var stream = require ( ' stream ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var scale = label . scale ;:==:var resolutionScale:==:label . _ labelCollection . _ resolutionScale ;
var error = jQuery . sap . log . error ;:==:var warning:==:jQuery . sap . log . warning ;
var stringTopdfString = sharedUtil . stringTopdfString ;:==:var warn:==:sharedUtil . warn ;
var el = helpers . entityFactory ( ) ;:==:var sceneEl:==:this . sceneEl    el . parentNode ;
var _ i64Add = module [ ' _ i64Add ' ] = asm [ ' _ i64Add ' ] ;:==:var _ tolower:==:module [ ' _ tolower ' ]    asm [ ' _ tolower ' ] ;
var onRowMouseOut = _ ref . onRowMouseOut ;:==:var rowData:==:_ ref . rowData ;
var value = fixture . value ;:==:var expected:==:fixture . expected ;
var canvas = self . canvas ;:==:var cropBox:==:self . cropBox ;
var fs = require ( ' fs - extra ' ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var x = Math . max ( Math . abs ( a . x ) , Math . abs ( b . x ) ) ;:==:var y:==:Math . max ( Math . abs ( a . y ) , Math . abs ( b . y ) ) ;
var hours = now . getHours ( ) + hours_offset ;:==:var minutes:==:now . getMinutes ( ) + minutes_offset ;
var zoom = document . querySelector ( ' # zoom ' ) ;:==:var find:==:document . querySelector ( ' # find ' ) ;
var viewPropTypes = require ( ' viewPropTypes ' ) ;:==:var dismissKeyboard:==:require ( ' dismissKeyboard ' ) ;
var container = document . getElementById ( ' container ' ) ;:==:var contained1:==:document . getElementById ( ' contained1 ' ) ;
var conditionalState = traceur . codegeneration . generator . conditionalState ;:==:var continueState:==:traceur . codegeneration . generator . continueState ;
var r = pixel . r ;:==:var g:==:pixel . g ;
var formatDates = t . calendar . formatDates ;:==:var renderDayOverlay:==:t . renderDayOverlay ;
var languages = ref . languages ;:==:var namespaces:==:ref . namespaces ;
var createVariableStatement = parseTreeFactory . createVariableStatement ;:==:var createWhileStatement:==:parseTreeFactory . createWhileStatement ;
var attributes = attr . attributes ;:==:var indices:==:attr . indices ;
var tryCatch2 = util . tryCatch2 ;:==:var tryCatchApply:==:util . tryCatchApply ;
var vertexArrays = polylineCollection . _ vertexArrays ;:==:var debugShowBoundingVolume:==:polylineCollection . debugShowBoundingVolume ;
var settings = imports . settings ;:==:var menus:==:imports . menus ;
var stack = err . stack  |  |  message ;:==:var index:==:stack . indexOf ( message ) ;
var cache = options . cached ;:==:var request:==:this . _ requestEvents ( connection , calendar , options ) ;
var chokidar = require ( ' chokidar ' ) ;:==:var undefsafe:==:require ( ' undefsafe ' ) ;
var commands = imports . commands ;:==:var ace:==:imports . ace ;
var base = asn1 . base ;:==:var bignum:==:asn1 . bignum ;
var path = e . path ;:==:var tab:==:tabManager . findTab ( path ) ;
var http = require ( ' http ' ) ;:==:var connect:==:require ( ' connect ' ) ;
var maximumHeight = options . maximumHeight ;:==:var flyOverLongitude:==:options . flyOverLongitude ;
var failTaskOnError = argv . failTaskOnError ? argv . failTaskOnError : false ;:==:var suppressPassed:==:argv . suppressPassed ? argv . suppressPassed : false ;
var children = bone . children ;:==:var len:==:children . length ;
var wrap = shadowdomPolyfill . wrap ;:==:var knownElements:==:shadowdomPolyfill . knownElements ;
var async = require ( ' async ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var iterator = state . iterator ;:==:var subscriber:==:state . subscriber ;
var path = require ( ' canonical - path ' ) ;:==:var foreach:==:require ( ' gulp - foreach ' ) ;
var moduleDeclarationVisitor = traceur . codegeneration . module . moduleDeclarationVisitor ;:==:var moduleDefinitionVisitor:==:traceur . codegeneration . module . moduleDefinitionVisitor ;
var arrayExtensions = jsCommon . arrayExtensions ;:==:var wordBreaker:==:jsCommon . wordBreaker ;
var handler = this . handler ;:==:var uniquePrefix:==:this . uniquePrefix  |  |  '' ;
var tab = plugin . activeDocument . tab ;:==:var iframe:==:plugin . activeSession . iframe ;
var tilePosition = this . tilePosition ;:==:var tileScale:==:this . tileScale ;
var postProcesses = this . _ scene . activeCamera . _ postProcesses ;:==:var postProcessesTakenIndices:==:this . _ scene . activeCamera . _ postProcessesTakenIndices ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var interpreter:==:pm2_env . exec_interpreter  |  |  ' node ' ;
var body = ( mathJax . message . quirks ? document . body : document . documentElement ) ;:==:var frame:==:mathJax . message . frame ;
var reactTestTextComponent = require ( ' reactTestTextComponent ' ) ;:==:var reactTestEmptyComponent:==:require ( ' reactTestEmptyComponent ' ) ;
var name = method . name ;:==:var args:==:method . args ;
var modals = this . _ modals ( ) ;:==:var options:==:this . options ;
var useSeleniumJar = grunt . option ( ' useSeleniumJar ' ) ;:==:var seleniumAddressProxy:==:grunt . option ( ' seleniumAddressProxy ' ) ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var tryState:==:traceur . codegeneration . generator . tryState ;
var diff = flowUtils . diffConfigs ( config , newConfig ) ;:==:var flow:==:flow . create ( config , config . flows [ ' t1 ' ] ) ;
var zfail = value . zfail  |  |  ' keep ' ;:==:var zpass:==:value . zpass  |  |  ' keep ' ;
var disp = this . disp ;:==:var stiffness:==:options . stiffness ;
var coffeelint = require ( ' gulp - coffeelint ' ) ;:==:var plumber:==:require ( ' gulp - plumber ' ) ;
var locations = _ . isString ( opts . locations ) ? [ opts . locations ] : opts . locations ;:==:var runtimePath:==:opts . runtimePath ;
var promise = this . _ promise ;:==:var callback:==:this . _ callback ;
var apiKeyVehicle = security . apiKeyVehicle  |  |  ' query ' ;:==:var apiKeyName:==:security . apiKeyName  |  |  ' api_key ' ;
var el = this . el = document . createElement ( ' a - assets ' ) ;:==:var scene:==:this . scene    document . createElement ( ' a - scene ' ) ;
var accuracy = e . coords . accuracy ;:==:var speed:==:e . coords . speed ;
var models = _ _ alloyId64 . models ;:==:var len:==:models . length ;
var data = this . data ;:==:var series:==:this . clippedData ? this . clippedData . series : data . series ;
var dx = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' dy ' , this . dy ) ) ) ) ;
var bufferController = new config . bufferController ( this ) ;:==:var capLevelController:==:new config . capLevelController ( this ) ;
var event = day . events [ 0 ] ;:==:var body:==:client . findElement ( ' body ' ) ;
var portal = window . portals [ guid ] ;:==:var data:==:portal . options . data ;
var tags = contactsTag . filterTags ( type , null , config . tags ) ;:==:var container:==:config . container ;
var start = params . hasOwnProperty ( ' start ' ) ? params . start : 0 ;:==:var stop:==:params . hasOwnProperty ( ' stop ' ) ? params . stop : -1 ;
var literalToken = traceur . syntax . literalToken ;:==:var parseTreeType:==:traceur . syntax . parseTreeType ;
var projectionMatrix = frustum . projectionMatrix ;:==:var top:==:frustum . top ;
var fontRendererFactory = coreFontRenderer . fontRendererFactory ;:==:var winAnsiEncoding:==:coreEncodings . winAnsiEncoding ;
var dataPoint = dataPoints [ categoryIndex ] ;:==:var subDataPoint:==:dataPoint . subDataPoints [ 0 ] ;
var path    = require ( ' path ' ) ;:==:var eventEmitter2:==:require ( ' eventemitter2 ' ) . eventEmitter2 ;
var filter = require ( ' gulp - filter ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var Editor = imports . Editor ;:==:var scm:==:imports . scm ;
var mode = frameState . mode ;:==:var billboards:==:billboardCollection . _ billboards ;
var lightBluea400 = exports . lightBluea400 = ' # 00b0ff ' ;:==:var lightBluea700:==:exports . lightBluea700    ' # 0091ea ' ;
var min = this . _ min ;:==:var value:==:dataPoint [ this . _ valueField ]  |  |  1 ;
var Keys = require ( ' Keys ' ) ;:==:var userAgent:==:require ( ' userAgent ' ) ;
var selection = this . _ selectionFromEventPoint ( event ) ;:==:var node:==:selection & & selection . layer & & selection . layer . nodeForSelfOrAncestor ( ) ;
var p = propertyArray [ i ] ;:==:var v:==:p . value ;
var unsafeUnwrap = scope . unsafeUnwrap ;:==:var enqueueMutation:==:scope . enqueueMutation ;
var reactElement = require ( ' reactElement ' ) ;:==:var canDefineProperty:==:require ( ' canDefineProperty ' ) ;
var entries = ' local entries ' ;:==:var fill:==:' local fill ' ;
var p = tip ( e ) ;:==:var c:==:p . find ( ' . editable - clear - x ' ) ;
var ejectBanner = require ( ' ejectBanner ' ) ;:==:var footer:==:require ( ' footer ' ) ;
var start = stats . startQueryIndex ;:==:var end:==:stats . endQueryIndex ;
var observable = ko . observable ( ) . extend ( rateLimit : 500 ) ;:==:var computed:==:ko . computed ( observable ) ;
var cubeMap = options . cubeMap ;:==:var expectedColors:==:options . expectedColors ;
var scale = touch . scale ;:==:var rotation:==:touch . rotation ;
var item = event . detail . item ;:==:var sortedKeys:==:this . _ sortedKeys ;
var rowStartIndex = _ ref6 . rowStartIndex ;:==:var rowStopIndex:==:_ ref6 . rowStopIndex ;
var icon = getIconHref ( iconNode , dataSource , sourceUri , uriResolver , false ) ;:==:var x:==:queryNumericValue ( iconNode , ' x ' , namespaces . gx ) ;
var legendIcon = powerbi . visuals . legendIcon ;:==:var selectionIdBuilder:==:powerbi . visuals . selectionIdBuilder ;
var pathname = this . pathname  |  |  '' ;:==:var hash:==:this . hash  |  |  '' ;
var map = fileCoverage [ keys . mapKey ] [ key ] ;:==:var hits:==:fileCoverage [ keys . hitsKey ] ;
var isInteger = logic . _ isInteger ;:==:var isFunction:==:logic . _ isFunction ;
var pointPrimitive = pointPrimitives [ i ] ;:==:var position:==:pointPrimitive . position ;
var getUnicodeRangeFor = coreUnicode . getUnicodeRangeFor ;:==:var mapSpecialUnicodeValues:==:coreUnicode . mapSpecialUnicodeValues ;
var b = new stdlib . float32Array ( heap ) ;:==:var fround:==:stdlib . math . fround ;
var schemaType = mongoose . schemaType ;:==:var validatorError:==:schemaType . validatorError ;
var el = this . el ;:==:var sceneEl:==:el . sceneEl ;
var observable = ko . observable ( ) . extend ( deferred : true ) ;:==:var notifySpy:==:jasmine . createSpy ( ' notifySpy ' ) ;
var internal = this . internal ;:==:var dependencies:==:this . dependencies ;
var blueA700 = exports . blueA700 = ' # 2962ff ' ;:==:var lightBlue50:==:exports . lightBlue50    ' # e1f5fe ' ;
var oPopup1 = new sap . ui . core . popup ( oPopup1DomRef ) ;:==:var oPopup2:==:new sap . ui . core . popup ( oPopup2DomRef ) ;
var viewState = frameState . viewState ;:==:var projection:==:viewState . projection ;
var api = this . _ api ;:==:var coordSysMgr:==:this . _ coordSysMgr ;
var red50 = exports . red50 = ' # ffebee ' ;:==:var red100:==:exports . red100    ' # ffcdd2 ' ;
var MODULE_SPECIFIER = ' MODULE_SPECIFIER ' ;:==:var NAME_SPACE_EXPORT:==:' NAME_SPACE_EXPORT ' ;
var doc = e . doc ;:==:var path:==:doc . tab . path ;
var fov = m . fov ;:==:var interpolation:==:m . interpolation ;
var a = fulfillSoon ( ' a ' , 40 ) ;:==:var b:==:goog . promise . resolve ( ' b ' ) ;
var east = Math . min ( rectangle . east , otherRectangle . east ) ;:==:var north:==:math . min ( rectangle . north , otherRectangle . north ) ;
var el = this . el _ = vjs . Component . prototype . createEl . call ( this , ' div ' ) ;:==:var tag:==:this . tag ;
var i d = $ ( this ) . attr ( ' i d ' ) ;:==:var text:==:$ ( this ) . text ( ) ;
var wallIndices = attr . wallIndices ;:==:var height:==:params . height ;
var valueLineWidth = symbolMeta . valueLineWidth ;:==:var pathPosition:==:symbolMeta . pathPosition ;
var isString = string . isString ;:==:var validateIndex:==:array . validateIndex ;
var before = this . getPseudoElement ( container , ' : before ' ) ;:==:var after:==:this . getPseudoElement ( container , ' : after ' ) ;
var featureType = context [ ' featureType ' ] ;:==:var featurePrefix:==:context [ ' featurePrefix ' ] ;
var size = options . size ;:==:var sizeX:==:options . sizeX  |  |  size  |  |  1 ;
var settings = $ ( this ) . data ( ' settings ' ) ;:==:var items:==:settings . items ;
var source = track . source ;:==:var metadata:==:timeEvent . metadata ;
var atMost = verification . atMost ;:==:var never:==:verification . never ;
var isSkipPaddingBlankhtml = options & & options . isSkipPaddingBlankhtml ;:==:var isNotSplitEdgePoint:==:options & & options . isNotSplitEdgePoint ;
var view = this . viewMatrix ;:==:var projection:==:this . frustum . projectionMatrix ;
var createEmptyParameterList = parseTreeFactory . createEmptyParameterList ;:==:var createFunctionExpression:==:parseTreeFactory . createFunctionExpression ;
var nativeMethodsMixin = require ( ' nativeMethodsMixin ' ) ;:==:var nativeModules:==:require ( ' nativeModules ' ) ;
var proceedClass = options . proceedClass  |  |  ' danger ' ;:==:var onproceed:==:options . onproceed  |  |  undefined ;
var uint16 = Fn . uint16 ;:==:var uint24:==:Fn . uint24 ;
var appId = this . params _ . callstatsParams . appId ;:==:var appSecret:==:this . params _ . callstatsParams . appSecret ;
var lastRenderedStartIndex = _ ref2 . lastRenderedStartIndex ;:==:var lastRenderedStopIndex:==:_ ref2 . lastRenderedStopIndex ;
var recordingModule = require ( ' nativeModules ' ) . swipeRefreshLayoutRecordingModule ;:==:var scrollView:==:require ( ' scrollView ' ) ;
var debug = imports . debugger ;:==:var tabManager:==:imports . tabManager ;
var i d = detail . i d ;:==:var TYPES:==:appInstallDialogs . types ;
var breakpointItems = this . _ storage . breakpointItems ( uiSourceCode ) ;:==:var provisionalBreakpoints:==:this . _ provisionalBreakpointsForSourceFileId ( sourceFileId ) ;
var offset = $ ( c ) . offset ( ) ;:==:var w:==:$ ( c ) . width ( ) ;
var KIND_EVENT = module . exports . KIND_EVENT = ' event ' ;:==:var KIND_PACKAGE:==:module . exports . KIND_PACKAGE    ' package ' ;
var touchableWithoutFeedback = require ( ' touchableWithoutFeedback ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var buffer = lastState . buffer ;:==:var bufferIndex:==:lastState . bufferIndex ;
var Share = require ( ' Share ' ) ;:==:var View:==:require ( ' View ' ) ;
var r = r1 . session . getLength ( ) > r2 . session . getLength ( ) ? r1 : r2 ;:==:var layerConfig:==:r . layerConfig ;
var aperture = ( params . aperture ! = = undefined ) ? params . aperture : 0 . 025 ;:==:var maxblur:==:( params . maxblur !    undefined ) ? params . maxblur : 1 . 0 ;
var series = args . series  |  |  graph . series ;:==:var vis:==:args . vis  |  |  graph . vis ;
var FALSE    = C . FALSE    = 0x8 ;:==:var NULL:==:C . NULL      0x9 ;
var accessor = gltf . accessors [ accessorId ] ;:==:var extensions:==:accessor . extensions ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var width = getcssProperty ( element , container , ' width ' )  |  |  ( element . clientWidth + ' px ' ) ;:==:var height:==:getcssProperty ( element , container , ' height ' )  |  |  ( element . clientHeight + ' px ' ) ;
var maxHeight = options . maxHeight  |  |  10 ;:==:var updatable:==:options . updatable ;
var x = ( lon * xfactor ) + xoffset ;:==:var y:==:( lat * yfactor ) + yoffset ;
var recipient = send . recipient_actual  |  |  send . recipient_address ;:==:var currency:==:send . currency ;
var location = _ state . location ;:==:var routes:==:_ state . routes ;
var inclination = inclinationConstant + inclinationSecPart * radiansPerArcSecond ;:==:var longitudeOfPerigee:==:longitudeOfPerigeeConstant + longitudeOfPerigeeSecPart * radiansPerArcSecond ;
var async = require ( ' async ' ) ;:==:var vizion:==:require ( ' vizion ' ) ;
var editor = plugin . activeSession . editor ;:==:var session:==:e . session ;
var event = new webInspector . event ( this , eventType , eventData ) ;:==:var listeners:==:this . _ listeners . get ( eventType ) . slice ( 0 ) ;
var a = new constantNode ( 2 ) ;:==:var x:==:new symbolNode ( ' x ' ) ;
var userAgent = ( navigator & & navigator . userAgent  |  |  '' ) . toLowerCase ( ) ;:==:var vendor:==:( navigator & & navigator . vendor  |  |  '' ) . toLowerCase ( ) ;
var w , h , win = window , doc = document ;:==:var body:==:doc . body ;
var reactControlledValuePropTypes = require ( ' reactControlledValuePropTypes ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var ssaoRatio = ratio . ssaoRatio  |  |  ratio ;:==:var combineRatio:==:ratio . combineRatio  |  |  ratio ;
var entry = this . getAnchor ( nextRecord . entryAnchor ) ;:==:var exit:==:this . getAnchor ( curRecord . exitAnchor ) ;
var editorButton = document . getElementById ( ' editorButton1600 ' ) ;:==:var scene:==:engine . scenes [ 0 ] ;
var commaExpression = traceur . syntax . trees . commaExpression ;:==:var comprehensionFor:==:traceur . syntax . trees . comprehensionFor ;
var input = element . find ( ' input ' ) [ 0 ] ;:==:var attributes:==:field . attributes ( ) ;
var readFile = promise . promisify ( require ( ' fs ' ) . readFile ) ;:==:var writeFile:==:promise . promisify ( require ( ' fs ' ) . writeFile ) ;
var resolve = Promise . resolve ;:==:var reject:==:Promise . reject ;
var level = obj . level  |  |  ' info ' ;:==:var file:==:obj . file ;
var props = this . props ;:==:var rowClassNameGetter:==:props . rowClassNameGetter  |  |  emptyFunction ;
var keys = ' local keys ' ;:==:var values:==:' local values ' ;
var old = that . _ old ;:==:var element:==:that . element [ 0 ] ;
var canvas = document . createElement ( ' canvas ' ) ;:==:var img:==:document . createElement ( ' img ' ) ;
var width = $ ( ' . fc - view - container ' ) . width ( ) ;:==:var height:==:$ ( ' . fc - view - container ' ) . height ( ) ;
var ops = unpacked . ops ;:==:var charBank:==:unpacked . charBank ;
var utils = require ( ' keystone - utils ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' keystone : fields : file ' ) ;
var params = ob . params ;:==:var user:==:ob . user ;
var max = waveSurfer . util . max ( peaks ) ;:==:var min:==:waveSurfer . util . min ( peaks ) ;
var nconf = require ( ' nconf ' ) ;:==:var session:==:require ( ' express - session ' ) ;
var packageMap = options . packageMap ;:==:var isopackCache:==:options . isopackCache ;
var parent = ref . parent ;:==:var data:==:ref . data ;
var opts   = current . opts ;:==:var caption:==:opts . caption ;
var JSX_ATTRIBUTE = ' JSX_ATTRIBUTE ' ;:==:var JSX_ELEMENT:==:' JSX_ELEMENT ' ;
var path = require ( ' path ' ) ;:==:var d3:==:require ( ' d3 ' ) ;
var ext = path . extname ( name ) ;:==:var base:==:path . basename ( name , ext ) ;
var Plugin = imports . Plugin ;:==:var menus:==:imports . menus ;
var key = keys [ i ] ;:==:var actionCreator:==:actionCreators [ key ] ;
var target = e . target ;:==:var tagName:==:target . tagName . toLowerCase ( ) ;
var path = require ( ' path ' ) ;:==:var resolve:==:require ( ' resolve ' ) ;
var is = require ( ' is ' ) ;:==:var when:==:require ( ' when ' ) ;
var f8Touchable = require ( ' f8Touchable ' ) ;:==:var text:==:require ( ' f8Text ' ) ;
var decoder = decodingContext . decoder ;:==:var contextCache:==:decodingContext . contextCache ;
var w = Titanium . UI . createWindow ( options ) ;:==:var a:==:titanium . ui . createAnimation ( ) ;
var d = ( b . width + 15 ) > > 4 ;:==:var e:==:( b . height + 15 ) > > 4 ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , data2 , opts ) ;
var defineParameterType = exports . defineParameterType = proxySupportCode ( ' defineParameterType ' ) ;:==:var after:==:exports . after    proxySupportCode ( ' after ' ) ;
var status = $ ( ' # status ' ) ;:==:var okness:==:$ ( ' # okness ' ) ;
var store = this . context [ storeKey ] ;:==:var props:==:store & & options . props ( store , this . props ) ;
var $ toolbarElem = editor . $ toolbarElem ;:==:var menus:==:this . menus ;
var each = zrUtil . each ;:==:var clone:==:zrUtil . clone ;
var v2 = triangleNode . getAttribute ( ' v2 ' ) ;:==:var v3:==:triangleNode . getAttribute ( ' v3 ' ) ;
var email = identify . email ( ) ;:==:var i d:==:identify . userId ( ) ;
var key = relationship . key ;:==:var shouldSerialize:==:env . store . serializerFor ( ' post ' ) . shouldSerializeHasMany ( snapshot , relationship , key ) ;
var fma = Fn . fma ;:==:var int16:==:Fn . int16 ;
var transaction = this . db . transaction ( placesHelper . sites_store ) ;:==:var objectStore:==:transaction . objectStore ( placesHelper . sites_store ) ;
var RIGHT_BRACKET = C . RIGHT_BRACKET = 0x4 ;:==:var COLON:==:C . COLON      0x5 ;
var Pattern = corePattern . pattern ;:==:var getTilingPatternir:==:corePattern . getTilingPatternir ;
var prop = this . properties [ propChanged . key ] ;:==:var property:==:this . getStencil ( ) . property ( propChanged . key ) ;
var assert = require ( ' chai ' ) . assert ;:==:var sinon:==:require ( ' sinon ' ) ;
var right = parsePercent ( positionInfo . right , containerWidth ) ;:==:var bottom:==:parsePercent ( positionInfo . bottom , containerHeight ) ;
var origin = new URL ( url ) . origin ;:==:var scopes:==:this . _ scopes [ origin ] ;
var path = require ( ' path ' ) ;:==:var test:==:require ( ' utest ' ) ;
var timeStamp = aEvent . timeStamp ;:==:var expectedEvent:==:this . expectedEvent ;
var filters = filterChoice . filters ;:==:var filter:==:filters [ slot ] ;
var debug = require ( ' debug ' ) ( ' mocha : watch ' ) ;:==:var exists:==:require ( ' fs ' ) . existsSync  |  |  require ( ' path ' ) . existsSync ;
var encoding = surfaceTile . pickTerrain . mesh . encoding ;:==:var tileRectangle:==:tileRectangleScratch ;
var rows = parseInt ( this . find ( ' [ data - rows ] ' ) . val ( ) ) ;:==:var cols:==:parseInt ( this . find ( ' [ data - cols ] ' ) . val ( ) ) ;
var oggUrl = instance . get ( ' oggUrl ' ) ;:==:var audio:==:instance . _ audio ;
var paper = this . _ paper ;:==:var f:==:font  |  |  ;
var from = cfg . from  |  |  [ ] ;:==:var count:==:cfg . count  |  |  8 ;
var stack = parser . stack _ ;:==:var result:==:parser . result _ ;
var granularity = polylineGeometry . _ granularity ;:==:var ellipsoid:==:polylineGeometry . _ ellipsoid ;
var assert = require ( ' chai ' ) . assert ;:==:var fs:==:require ( ' fs ' ) ;
var batches = this . _ batches ;:==:var length:==:batches . length ;
var object = this . _ object ;:==:var keys:==:this . _ keys ;
var originalData = mapModel . originalData ;:==:var group:==:this . group ;
var matchesQuery = queryTools . matchesQuery ;:==:var item:==:parse . object . extend ( ' item ' ) ;
var purpleA700 = exports . purpleA700 = ' # aa00ff ' ;:==:var deepPurple50:==:exports . deepPurple50    ' # ede7f6 ' ;
var dataBound = this . dataBound ;:==:var formatter:==:option . formatter ;
var longitude = document . getElementById ( ' longitude ' ) ;:==:var radius:==:document . getElementById ( ' radius ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var less:==:require ( ' gulp - less ' ) ;
var lineHeight = config . lineHeight ;:==:var blameData:==:this . blameColumn . blameData ;
var top = frustum . top ;:==:var bottom:==:frustum . bottom ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var numberFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' numberFieldTestObject ' ) ) ;
var inherit = require ( ' component - inherit ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' engine . io - client : polling - xhr ' ) ;
var HAS_NUMERIC_VALUE = domProperty . injection . has_numeric_value ;:==:var has_positive_numeric_value:==:domProperty . injection . has_positive_numeric_value ;
var domPosition = dom . domPosition ;:==:var domException:==:api . domException ;
var methods = require ( ' methods ' ) ;:==:var slice:==:Array . prototype . slice ;
var dataGrid = this . _ dataGrid ;:==:var rootNode:==:dataGrid . rootNode ( ) ;
var n = timelines . length ;:==:var usage:==:spine . Utils . setArraySize ( usageArray , n ) ;
var body = this . _ registeredMeshes [ i ] . body . body ;:==:var mesh:==:this . _ registeredMeshes [ i ] . mesh ;
var shell = require ( ' gulp - shell ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var co = require ( ' co ' ) ;:==:var ucs2length:==:util . ucs2length ;
var p   = path ;:==:var readline:==:require ( ' readline ' ) ;
var projectId = $ route . current . params . projectId ;:==:var sprintId:==:$ route . current . params . sprintId ;
var interactivityService = options . interactivityService ;:==:var categoryAxisProperties:==:options . categoryAxisProperties ;
var rowIndex = _ ref2 . rowIndex ;:==:var rowRenderer:==:this . props . rowRenderer ;
var request = this . request ;:==:var content:==:request . content ;
var faces = data . faces ;:==:var vertices:==:data . vertices ;
var editor = this . editor ;:==:var $ elem:==:this . $ elem ;
var height = $ ( this ) . height ( ) ;:==:var scrollTop:==:$ ( this ) . scrollTop ( ) ;
var twoArgumentPooler = pooledClass . twoArgumentPooler ;:==:var threeArgumentPooler:==:pooledClass . threeArgumentPooler ;
var alpha = new testObject ( letter : ' alpha ' ) ;:==:var beta:==:new testObject ( letter : ' beta ' ) ;
var topRadius = options . topRadius ;:==:var bottomRadius:==:options . bottomRadius ;
var def = exp . definition ( ) ;:==:var fixed:==:exp . fixed_value ( ) ;
var bind = require ( ' bind ' ) ;:==:var when:==:require ( ' when ' ) ;
var symbolSetEncoding = coreEncodings . symbolSetEncoding ;:==:var zapfDingbatsEncoding:==:coreEncodings . zapfDingbatsEncoding ;
var data = app . ns ( ' data ' ) ;:==:var ux:==:app . ns ( ' ux ' ) ;
var socketId = receiveInfo . socketId ;:==:var data:==:arrayBufferToString ( receiveInfo . data ) ;
var frags = this . frags = new Array ( data . length ) ;:==:var alias:==:this . alias ;
var parent = goog . dom . getElement ( ' offset - parent - overflow ' ) ;:==:var child:==:goog . dom . getElement ( ' offset - child - overflow ' ) ;
var Metadata = displayMetadata . metadata ;:==:var pdfjs:==:sharedGlobal . pdfjs ;
var x = spot . x ;:==:var y:==:spot . y ;
var debug   = require ( ' debug ' ) ( ' axm : transport ' ) ;:==:var stringify:==:require ( ' json - stringify - safe ' ) ;
var rtl = ! ! options [ ' rtl ' ] ;:==:var horizontalLayout:==:options [ ' horizontalLayout ' ] ;
var trigger = t . trigger ;:==:var getView:==:t . getView ;
var invalidAlgorithmError = errs . invalidAlgorithmError ;:==:var signatureParseError:==:errs . signatureParseError ;
var dimensions = parallelModel . dimensions ;:==:var parallelAxisIndex:==:parallelModel . parallelAxisIndex ;
var attr = DS . attr ;:==:var hasMany:==:ds . hasMany ;
var menus = imports . menus ;:==:var workspace:==:imports [ ' collab . workspace ' ] ;
var express = require ( ' express ' ) ;:==:var utility:==:require ( ' utility ' ) ;
var O = Object ( this ) ;:==:var len:==:O . length > > > 0 ;
var match = matches [ i ] ;:==:var begin:==:match . begin ;
var axon   = require ( ' pm2-axon ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' pm2 : satan ' ) ;
var line = tree . location . start . line + 1 ;:==:var column:==:tree . location . start . column ;
var out = commandLine . out ;:==:var dir:==:commandLine . dir ;
var o = Object . create ( Object . prototype ) ;:==:var w:==:new weakMap ( ) ;
var _ strlen = Module [ ' _ strlen ' ] = asm [ ' _ strlen ' ] ;:==:var _ im_reset_search:==:Module [ ' _ im_reset_search ' ]    asm [ ' _ im_reset_search ' ] ;
var width = qrcode . width ;:==:var height:==:qrcode . height ;
var _ = window . _ ;:==:var moment:==:window . moment ;
var classDeclaration = traceur . syntax . trees . classDeclaration ;:==:var classExpression:==:traceur . syntax . trees . classExpression ;
var row = tr . createChild ( ' td ' ) . createChild ( ' div ' , ' network - timing - row ' ) ;:==:var bar:==:row . createChild ( ' span ' , ' network - timing - bar ' + className ) ;
var c = new functionNode ( new symbolNode ( ' subtract ' ) , [ new constantNode ( 2 ) , new constantNode ( 3 ) ] ) ;:==:var d:==:new functionNode ( new symbolNode ( ' add ' ) , [ new constantNode ( 4 ) , new constantNode ( 3 ) ] ) ;
var media = base . media ;:==:var mediaRange:==:s . mediaRange ;
var coordinates = geometry . coordinates ;:==:var encodeOffsets:==:geometry . encodeOffsets ;
var x = ofsX + pointerAbs . x - jsc . _ pointerOrigin . x - thisObj . padding - thisObj . insetWidth ;:==:var y:==:ofsy + pointerAbs . y - jsc . _ pointerOrigin . y - thisObj . padding - thisObj . insetWidth ;
var tabIds = response . tabIds ;:==:var n:==:entries . length ;
var metadata = this . metadata ;:==:var versions:==:metadata [ serviceIdentifier ] . versions  |  |  [ ] ;
var a0 = expected [ i ] . locals . a0 ;:==:var b0:==:expected [ i ] . locals . b0 ;
var repeat = motionArgs . repeat ;:==:var ch:==:motionArgs . forward ? cur . ch + repeat : cur . ch - repeat ;
var flyOverLongitudeWeight = options . flyOverLongitudeWeight ;:==:var pitchAdjustHeight:==:options . pitchAdjustHeight ;
var instance = interceptorOptions . instance ;:==:var property:==:interceptorOptions . property ;
var e = Expression . add ( Expression . constant ( 1 ) , Expression . constant ( 2 ) ) ;:==:var l:==:Expression . lambda ( e ) ;
var user = this . analytics . user ( ) ;:==:var traits:==:user . traits ( ) ;
var Text = require ( ' f8Text ' ) ;:==:var f8Touchable:==:require ( ' f8Touchable ' ) ;
var oneOf = scope . oneOf ;:==:var unsafeUnwrap:==:scope . unsafeUnwrap ;
var ellipsoid = rectangleGeometry . _ ellipsoid ;:==:var minHeight:==:minHeightFunc ( granularity , ellipsoid ) ;
var left = parsePercent ( positionInfo . left , containerWidth ) ;:==:var top:==:parsePercent ( positionInfo . top , containerHeight ) ;
var benv = require ( ' benv ' ) ;:==:var read:==:require ( ' fs ' ) . readFileSync ;
var metadataService = exports . metadataService = _ _ webpack_require _ _ ( 306 ) ;:==:var cordovaPopupNavigator:==:exports . cordovaPopupNavigator    _ _ webpack_require _ _ ( 341 ) ;
var extname = path . extname ;:==:var join:==:path . join ;
var targets = ptargets ;:==:var matchingOptions:==:pmatchingOptions ;
var alt = this . find ( ' [ data - alt ] ' ) . val ( ) ;:==:var link:==:this . find ( ' [ data - link ] ' ) . val ( ) ;
var legendData = powerbi . visuals . legendData ;:==:var objectEnumerationBuilder:==:powerbi . visuals . objectEnumerationBuilder ;
var isContact = opt . isContact  |  |  false ;:==:var inMessage:==:opt . inMessage  |  |  false ;
var chart = tooltip . _ chart ;:==:var chartArea:==:tooltip . _ chartInstance . chartArea ;
var cellLayoutManager = _ props3 . cellLayoutManager ;:==:var className:==:_ props3 . className ;
var height = drawOptions . height ;:==:var targetSettings:==:this . targetSettings ;
var max   = $ ( this ) . attr ( ' maxvalue ' ) ;:==:var ajax_branch:==:$ ( this ) . attr ( ' ajax_branch_textarea ' ) ;
var util = require ( ' util ' ) ;:==:var Stream:==:require ( ' stream ' ) . Stream ;
var executeDirectDispatch = eventPluginUtils . executeDirectDispatch ;:==:var hasDispatches:==:eventPluginUtils . hasDispatches ;
var inner = el . querySelector ( ' gui - list - view - inner ' ) ;:==:var head:==:el . querySelector ( ' gui - list - view - head ' ) ;
var api = imports . api ;:==:var panels:==:imports . panels ;
var st = this . styles , allText = this . text , marked = this . markedSpans ; \n\var le:==:n:==:allText . length ; \n\
var test = refs . add ( getTypeTest ( allTypes [ i ] ) , ' test ' ) ;:==:var convert:==:refs . add ( conversion_i . convert , ' convert ' ) ;
var run = Ember . run ;:==:var Store:==:DS . Store ;
var dynCall_iii = Module [ ' dynCall_iii ' ] = asm [ ' dynCall_iii ' ] ;:==:var dynCall_iiiiii:==:Module [ ' dynCall_iiiiii ' ]    asm [ ' dynCall_iiiiii ' ] ;
var nameFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' nameFieldTestObject ' ) ) ;:==:var textFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;
var h = image . height ;:==:var w:==:image . width ;
var exec = require ( ' child_process ' ) . exec ;:==:var config:==:common . config ;
var expected = ret . value . expected ;:==:var rendered:==:ret . value . rendered ;
var move = obj . move  |  |  false ;:==:var noSleep:==:obj . noSleep  |  |  false ;
var end = location . pos_end ;:==:var i d:==:location . node_id ;
var p1 = Cartesian3 . fromArray ( positions , i1 * 3 , p1Scratch ) ;:==:var p2:==:cartesian3 . fromArray ( positions , i2 * 3 , p2Scratch ) ;
var dest = opt_dest ? opt_dest : [ ] ;:==:var cos:==:Math . cos ( angle ) ;
var crossPageChannelRole = goog . net . xpc . crossPageChannelRole ;:==:var deferred:==:goog . async . deferred ;
var xMax = this . xMax  |  |  0 ;:==:var yMax:==:this . yMax  |  |  0 ;
var fs = require ( ' hexo - fs ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var archimate3 = this . archimate3 ;:==:var electrical:==:this . electrical ;
var inspector = require ( ' node - inspector ' ) ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var title = options . title ;:==:var body:==:options . body ;
var analyse = exports . analyse = pipeline . analyse . bind ( pipeline ) ;:==:var transform:==:exports . transform    pipeline . transform . bind ( pipeline ) ;
var isFunction = leafletHelpers . isFunction ;:==:var isDefined:==:leafletHelpers . isDefined ;
var gltf = model . gltf ;:==:var nodes:==:gltf . nodes ;
var a = fulfillSoon ( ' a ' , 40 ) ;:==:var b:==:rejectSoon ( ' rejected - b ' , 30 ) ;
var lightScene = lightSceneData . scene ;:==:var lightFullscreenScene:==:lightFullscreenSceneData . scene ;
var deepOrange600 = exports . deepOrange600 = ' # f4511e ' ;:==:var deepOrange700:==:exports . deepOrange700    ' # e64a19 ' ;
var anims = imports . anims ;:==:var commands:==:imports . commands ;
var nodeCommand = nodeCommands [ i ] ;:==:var command:==:nodeCommand . command ;
var label = _ ref . label ;:==:var sortBy:==:_ ref . sortBy ;
var config = _ _ dependency10 _ _ . config ;:==:var configure:==:_ _ dependency10 _ _ . configure ;
var question = imports [ ' dialog . question ' ] ;:==:var filechange:==:imports [ ' dialog . filechange ' ] ;
var useSend = ! options . useCollab & & options . useSend ;:==:var maxTrySeriesLength:==:options . maxTrySeriesLength  |  |  3 ;
var pageX = touch & & touch . pageX ;:==:var pageY:==:touch & & touch . pageY ;
var sock = new Websock ( ) ;:==:var _ sQ:==:new uint8Array ( sock . _ sQbufferSize ) ;
var lightBlue400 = exports . lightBlue400 = ' # 29b6f6 ' ;:==:var lightBlue500:==:exports . lightBlue500    ' # 03a9f4 ' ;
var isStream = corePrimitives . isStream ;:==:var cipherTransformFactory:==:coreCrypto . cipherTransformFactory ;
var a = new symbolNode ( ' a ' ) ;:==:var foo:==:new accessorNode ( a , new indexNode ( [ new constantNode ( ' foo ' ) ] ) ) ;
var height = controller . _ ellipsoid . cartesianToCartographic ( camera . positionwc , scratchCartographic ) . height ;:==:var globe:==:controller . _ globe ;
var shiftKey = defaultValue ( options . shiftKey , false ) ;:==:var metaKey:==:defaultValue ( options . metaKey , false ) ;
var split2 = require ( ' split2 ' ) ;:==:var defaults:==:require ( ' defaults ' ) ;
var mid = data . mid ;:==:var checked:==:! ! this . checkedMissions [ mid ] ;
var arrowHead = math . max ( 0 , math . min ( bounds . height , parseFloat ( mxUtils . getValue ( this . state . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;:==:var dx:==:math . max ( 0 , math . min ( bounds . width , parseFloat ( mxUtils . getValue ( this . state . style , ' dx ' , this . dx ) ) ) ) ;
var day = getOption ( options , ' day ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;:==:var hour:==:getOption ( options , ' hour ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;
var Observable = utils . Observable ;:==:var passport:==:require ( ' passport ' ) ;
var refSet = corePrimitives . refSet ;:==:var refSetCache:==:corePrimitives . refSetCache ;
var _ calloc = Module [ ' _ calloc ' ] = asm [ ' _ calloc ' ] ;:==:var _ im_choose:==:Module [ ' _ im_choose ' ]    asm [ ' _ im_choose ' ] ;
var util = require ( ' util ' ) ;:==:var url:==:require ( ' url ' ) ;
var range = clockRange [ clockPacket . clock . range ] ;:==:var step:==:clockStep [ clockPacket . clock . step ] ;
var isEventDraggable = t . isEventDraggable ;:==:var isEventResizable:==:t . isEventResizable ;
var webpack = require ( ' webpack ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var hash = location . hash ;:==:var state:==:location . state ;
var off = $ sub . offset ( ) ;:==:var scroll:==:ace . helper . scrollTop ( ) ;
var description = item . fields . description  |  |  item . fields [ ' abstract . analyzed ' ] ;:==:var version:==:item . _ source . module [ 0 ] . version ;
var firstEdgeIndexes = this . _ firstEdgeIndexes ;:==:var nodeFieldCount:==:this . _ nodeFieldCount ;
var subTableDiv = $ ( ' div . subTableDiv ' ) ;:==:var toggleCheck:==:$ ( ' input . toggleCheck ' ) ;
var Person = db . model ( ' gh4631 ' , personSchema ) ;:==:var blogPost:==:db . model ( ' gh4631_0 ' , blogPostSchema ) ;
var document = documentElement . localName = = = ' document ' ? documentElement : queryFirstNode ( documentElement , ' document ' , namespaces . kml ) ;:==:var name:==:queryStringValue ( document , ' name ' , namespaces . kml ) ;
var e = Crafty . e ( ' Text ' ) ;:==:var h:==:e . _ getFontHeight ( ' 10px ' ) ;
var user = data . user ;:==:var pass:==:data . pass1 ;
var width = hl_lh_hh . width ;:==:var height:==:hl_lh_hh . height ;
var horizonDistance = math . sqrt ( horizonDistanceSquared ) ;:==:var occluderToPositionDistance:==:math . sqrt ( occluderToPositionDistanceSquared ) ;
var camera = scene . camera ;:==:var mode:==:scene . mode ;
var passport = require ( ' passport ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var r = new baidu . editor . dom . Range ( document ) ;:==:var em:==:document . getElementById ( 'em ' ) ;
var yaml = require ( ' js - yaml ' ) ;:==:var htmlparser:==:require ( ' htmlparser2 ' ) ;
var util = require ( ' gulp - util ' ) ;:==:var mocha:==:require ( ' gulp - mocha ' ) ;
var boost = $ ( ' # boost ' , documents_form ) . val ( ) ;:==:var overwrite:==:$ ( ' # overwrite ' , documents_form ) . val ( ) ;
var dynCall_vifiii = Module [ ' dynCall_vifiii ' ] = asm [ ' dynCall_vifiii ' ] ;:==:var dynCall_iiiii:==:Module [ ' dynCall_iiiii ' ]    asm [ ' dynCall_iiiii ' ] ;
var getMetrics = coreMetrics . getMetrics ;:==:var bidi:==:coreBidi . bidi ;
var test = require ( ' tap ' ) . test ;:==:var vm:==:require ( ' vm ' ) ;
var head = document . head  |  |  document . getElementsByTagName ( ' head ' ) [ 0 ]  |  |  document . documentElement ;:==:var base:==:head . getElementsByTagName ( ' base ' ) [ 0 ]  |  |  null ;
var parseProperties = schema . parseProperties ;:==:var parseProperty:==:schema . parseProperty ;
var a = Y . Cookie . getSub ( ' data ' , ' a ' ) ;:==:var c:==:y . cookie . getSub ( ' data ' , ' c ' ) ;
var login = element ( by . i d ( ' login ' ) ) ;:==:var logout:==:element ( by . i d ( ' logout ' ) ) ;
var acc = _ acc ;:==:var str_ind:==:_ str_ind ;
var debug = require ( ' debug ' ) ( ' pm2 : worker ' ) ;:==:var domain:==:require ( ' domain ' ) ;
var r = positionBlock . anchor . right ;:==:var t:==:positionBlock . anchor . top ;
var unyield = require ( ' unyield ' ) ;:==:var utf8:==:require ( ' is - utf8 ' ) ;
var path = _ dereq _ ( ' path ' ) ;:==:var constantinople:==:_ dereq _ ( ' constantinople ' ) ;
var amber50 = exports . amber50 = ' # fff8e1 ' ;:==:var amber100:==:exports . amber100    ' # ffecb3 ' ;
var missingDataException = sharedUtil . missingDataException ;:==:var streamType:==:sharedUtil . streamType ;
var observableObject = kendo . data . observableObject ;:==:var model:==:kendo . data . model . define ( i d : ' foo ' ) ;
var attr = xmlNode . attributes [ i ] ;:==:var value:==:attr . value ;
var yellow700 = exports . yellow700 = ' # fbc02d ' ;:==:var yellow800:==:exports . yellow800    ' # f9a825 ' ;
var hidden = currentCrumb . classList . contains ( ' hidden ' ) ;:==:var collapsed:==:currentCrumb . classList . contains ( ' collapsed ' ) ;
var body = m . body ;:==:var post:==:m . post ;
var height = _ cache . height ;:==:var width:==:_ cache . width ;
var preHash = records . preHash  |  |  ' x ' ;:==:var prepreHash:==:records . prepreHash  |  |  ' x ' ;
var sdp = msgData . sdp ;:==:var pc:==:peerConns [ easyrtcid ] . pc ;
var React = require ( ' React ' ) ;:==:var headerLinks:==:require ( ' headerLinks ' ) ;
var ReactDOM = require ( ' ReactDOM ' ) ;:==:var reactComponentWithPureRenderMixin:==:require ( ' reactComponentWithPureRenderMixin ' ) ;
var timelineObject = timelineObjectList [ i ] ;:==:var timeline:==:data3Parser . parseTransformTimeline ( timelineObject , animationData . duration , frameRate ) ;
var save = imports . save ;:==:var panels:==:imports . panels ;
var coord = this . coord . build ( builder , this . project ? ' v4 ' : ' v2 ' ) ;:==:var bias:==:this . bias ? this . bias . build ( builder , ' fv1 ' ) : undefined ;
var confirm = require ( ' gulp - prompt ' ) . confirm ;:==:var rsync:==:require ( ' gulp - rsync ' ) ;
var points = this . points ;:==:var l:==:points . length ;
var Actions = require ( ' marionette - client ' ) . Actions ;:==:var assert:==:require ( ' assert ' ) ;
var format = node . getAttribute ( ' format ' ) ;:==:var template:==:node . getAttribute ( ' template ' ) ;
var linearization = this . linearization ;:==:var num:==:linearization ? linearization . numPages : this . catalog . numPages ;
var layout = data . layout ;:==:var slug:==:data . slug ;
var primary = props . primary ;:==:var secondary:==:props . secondary ;
var caseSensitive = this . state . caseSensitive ;:==:var phraseSearch:==:this . state . phraseSearch ;
var req   = $ ( this ) . attr ( ' required ' ) ;:==:var type:==:$ ( this ) . attr ( ' datatype ' ) ;
var LEFT_BRACE = C . LEFT_BRACE = 0x1 ;:==:var RIGHT_BRACE:==:C . RIGHT_BRACE    0x2 ;
var selected = $ ( obj . el ) . data ( ' selected ' ) ;:==:var focus:==:$ ( obj . helpers . focus ) . find ( ' input ' ) ;
var stripBuffered = options . stripBuffered = = = true ;:==:var filename:==:options . filename ;
var iccId = evt . iccId ;:==:var icc:==:this . iccManager . getIccById ( iccId ) ;
var w = $ elem . width ( ) ;:==:var h:==:$ elem . height ( ) ;
var t = g . nodeMap [ e . target ] ;:==:var s:==:g . nodeMap [ e . source ] ;
var scheduler = instance . get ( ' scheduler ' ) ;:==:var filterFn:==:instance . get ( ' filterFn ' ) ;
var scrollTop = window . pageyOffset  |  |  element . scrollTop  |  |  document . body . scrollTop ;:==:var scrollLeft:==:window . pagexOffset  |  |  element . scrollLeft  |  |  document . body . scrollLeft ;
var createAssignmentStatement = parseTreeFactory . createAssignmentStatement ;:==:var createBinaryOperator:==:parseTreeFactory . createBinaryOperator ;
var fixedRowsBottom = this . wtSettings . getSetting ( ' fixedRowsBottom ' ) ;:==:var fixedColumns:==:this . wtSettings . getSetting ( ' fixedColumnsLeft ' ) ;
var width = corridor . width ;:==:var outlineWidth:==:corridor . outlineWidth ;
var rowIndex = _ ref2 . rowIndex ;:==:var rowWrapperClassName:==:this . props . rowWrapperClassName ;
var nconf = require ( ' nconf ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var getSlotContainer = t . getSlotContainer ;:==:var reportEventElement:==:t . reportEventElement ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var viewPropTypes:==:require ( ' viewPropTypes ' ) ;
var maxmin = cnnutil . maxmin ;:==:var f2 t:==:cnnutil . f2 t ;
var width = mockModel . get ( ' width ' ) ;:==:var height:==:mockModel . get ( ' height ' ) ;
var axisScale = powerbi . visuals . axisScale ;:==:var axisStyle:==:powerbi . visuals . axisStyle ;
var wrapper = this . wrapper ;:==:var filterInput:==:this . filterInput ;
var passwordResponses = sharedUtil . passwordResponses ;:==:var unknownErrorException:==:sharedUtil . unknownErrorException ;
var kill_timeout = ( pm2_env & & pm2_env . kill_timeout ) ? pm2_env . kill_timeout : cst . KILL_TIMEOUT ;:==:var mode:==:pm2_env . exec_mode ;
var groupID = proID2groupID [ proID ] ;:==:var subdomain:==:proID2subdomain [ proID ] ;
var children = _ props . children ;:==:var circle:==:_ props . circle ;
var rotation = this . el . getAttribute ( ' rotation ' ) ;:==:var velocity:==:this . velocity ;
var fs = require ( ' fs ' ) ;:==:var events:==:require ( ' events ' ) ;
var stop = document . getElementById ( ' stop ' ) ;:==:var hosts:==:document . getElementById ( ' hosts ' ) ;
var numCorners = pos . numCorners ;:==:var length:==:topPositions . length ;
var net = require ( ' net ' ) ;:==:var url:==:require ( ' url ' ) ;
var g = p . get ( ' global ' ) ;:==:var lastIndex:==:p . get ( ' lastIndex ' ) ;
var err = ref . err ;:==:var code:==:ref . code ;
var RESOURCE_DOWNLOAD_TIMEOUT = process . env . RESOURCE_DOWNLOAD_TIMEOUT  |  |  10 * 1000 ;:==:var WAIT_AFTER_LAST_REQUEST:==:process . env . WAIT_AFTER_LAST_REQUEST  |  |  500 ;
var http    = require ( ' http ' ) ;:==:var https:==:require ( ' https ' ) ;
var t = symbol . _ _ t ;:==:var points:==:this . _ points ;
var start = this . newBlock ( type + ' comp start ' ) ;:==:var skip:==:this . newBlock ( type + ' comp skip ' ) ;
var _ getPrediction = module [ ' _ getPrediction ' ] = asm [ ' _ getPrediction ' ] ;:==:var _ memcpy:==:module [ ' _ memcpy ' ]    asm [ ' _ memcpy ' ] ;
var captionStart = description . indexOf ( captionStartTag ) ;:==:var captionEnd:==:description . indexOf ( captionEndTag ) ;
var noSubst = this . noSubst ;:==:var depth:==:this . depth ;
var subdivisions = options . subdivisions  |  |  1 ;:==:var hasRings:==:options . hasRings ;
var cancel = panel . nodes . cancel ;:==:var timer:==:panel . timer ;
var granularity = wallGeometry . _ granularity ;:==:var ellipsoid:==:wallGeometry . _ ellipsoid ;
var push = array . push ;:==:var slice:==:array . slice ;
var daterange = config . importer . daterange ;:==:var from:==:moment . utc ( daterange . from ) ;
var htmlMatcher = emmet . htmlMatcher ;:==:var resources:==:emmet . resources ;
var createNullLiteral = parseTreeFactory . createNullLiteral ;:==:var createObjectFreeze:==:parseTreeFactory . createObjectFreeze ;
var bgFill = bgFill  |  |  ' rgba ( 68,68,68,0 . 5 ) ' ;:==:var fontSizeFreq:==:fontSizeFreq  |  |  ' 12px ' ;
var models = _ _ alloyId10 . models ;:==:var len:==:models . length ;
var polygons = this . polygons ;:==:var polygonPool:==:this . polygonPool ;
var colorizer = require ( ' colorizer ' ) . create ( ' Colorizer ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var test = require ( ' tap ' ) . test ;:==:var isReadable:==:require ( ' isstream ' ) . isReadable ;
var margin = monthLabel . get ( ' margin ' ) ;:==:var pos:==:monthLabel . get ( ' position ' ) ;
var encoding = mesh . encoding ;:==:var length:==:indices . length ;
var f8DrawerLayout = require ( ' f8DrawerLayout ' ) ;:==:var view:==:require ( ' view ' ) ;
var layout = imports . layout ;:==:var panels:==:imports . panels ;
var duration = this . enqueue . lastCall . args [ 0 ] . duration ;:==:var onloop:==:this . enqueue . lastCall . args [ 0 ] . onloop ;
var extend = require ( ' extend ' ) ;:==:var mime:==:require ( ' mime ' ) ;
var clockwise = shape . clockwise  |  |  false ;:==:var cx:==:shape . cx ;
var val = el . val ( ) ;:==:var type:==:$ ( ' # element - type ' ) . val ( ) ;
var cancel = element . querySelector ( ' . cancel ' ) ;:==:var confirm:==:element . querySelector ( ' . confirm ' ) ;
var latch = allback . latch ( ) ;:==:var storage:==:this . storage ;
var neighborsSignificance = this . neighborsSignificance ;:==:var contexts:==:this . contexts ;
var mixin = scope . mixin ;:==:var unwrap:==:scope . unwrap ;
var getSelectAll = window . getSelectAll ;:==:var iNumberOfCols:==:window . iNumberOfCols ;
var leftBuffers = config . leftBuffers . slice ( 0 ) ;:==:var rightBuffers:==:config . rightBuffers . slice ( 0 ) ;
var dy = Math . max ( 0 , Math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' dy ' , this . dy ) ) ) ) ;:==:var dx:==:math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;
var fs   = require ( ' fs - extra ' ) ;:==:var path:==:require ( ' path ' ) ;
var _ malloc = Module [ ' _ malloc ' ] = asm [ ' _ malloc ' ] ;:==:var _ free:==:Module [ ' _ free ' ]    asm [ ' _ free ' ] ;
var symbolOffset = seriesScope & & seriesScope . symbolOffset ;:==:var labelModel:==:seriesScope & & seriesScope . labelModel ;
var form = event . data . formElem ;:==:var noAnimation:==:event . data . noAnimation ;
var reactErrorUtils = require ( ' reactErrorUtils ' ) ;:==:var reactFeatureFlags:==:require ( ' reactFeatureFlags ' ) ;
var sails = this . sails ;:==:var _ privateRouter:==:this . _ privateRouter ;
var rename = require ( ' gulp - rename ' ) ;:==:var eslint:==:require ( ' gulp - eslint ' ) ;
var stack = obj . stack ;:==:var message:==:obj . message & & obj . message . length ? ' : ' + obj . message : ' ' ;
var d = new constantNode ( 4 ) ;:==:var n:==:new arrayNode ( [ a , b , c , d ] ) ;
var parseTreeVisitor = traceur . syntax . parseTreeVisitor ;:==:var symbol:==:traceur . semantics . symbols . symbol ;
var request = require ( ' request ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var mom = $ . fullCalendar . moment . utc ( ' 2014 - 06 - 08t00 : 00 : 00 ' ) ;:==:var dur:==:moment . duration ( ' 13 : 25 ' ) ;
var originalProps = element . _ store . originalProps ;:==:var props:==:element . props ;
var rightCurlyCount = this . rightCurlyCount ;:==:var seenUnicodeChar:==:this . seenUnicodeChar ;
var row = widget . row ;:==:var colspan:==:widget . colspan ;
var editors = imports . editors ;:==:var settings:==:imports . settings ;
var big = math . bignumber ;:==:var complex:==:math . complex ;
var b = tree . b = sr2 . firstChild ;:==:var content2:==:tree . content2    b . firstChild ;
var postcss = require ( ' gulp - postcss ' ) ;:==:var autoprefixer:==:require ( ' autoprefixer ' ) ;
var size = gd . _ fullLayout . _ size ;:==:var domain:==:gd . _ fullData [ d . model . key ] . domain ;
var fill = params . fill ;:==:var temperature:==:params . temperature ;
var debug = require ( ' debug ' ) ( ' keystone : core : initExpressSession ' ) ;:==:var promise:==:require ( ' es6-promise ' ) . promise ;
var sideOrientation = options . sideOrientation  |  |  babylon . mesh . defaultside ;:==:var instance:==:options . instance ;
var heightScale = defaultValue ( structure . heightScale , heightmapTessellator . default_structure . heightScale ) ;:==:var heightOffset:==:defaultValue ( structure . heightOffset , heightmapTessellator . default_structure . heightOffset ) ;
var tx = m . tx ;:==:var ty:==:m . ty ;
var nodes = graph . nodes ;:==:var edges:==:graph . edges ;
var commands = imports . commands ;:==:var language:==:imports . language ;
var path = require ( ' path ' ) ;:==:var selectFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' selectFieldTestObject ' ) ) ;
var zip = require ( ' gulp - zip ' ) ;:==:var prompt:==:require ( ' gulp - prompt ' ) ;
var space = config . space - BUFFER ;:==:var min:==:config . min  |  |  MIN ;
var promise = follower . _ promiseAt ( index ) ;:==:var receiver:==:follower . _ receiverAt ( index ) ;
var api = this . api ( true ) ;:==:var rows:==:api . rows ( target ) ;
var x = offsetX - xOffset ;:==:var y:==:offsety - yOffset ;
var mout = require ( ' mout ' ) ;:==:var retry:==:require ( ' retry ' ) ;
var start = camera . getPickRay ( movement . startPosition , translate2dStart ) . origin ;:==:var end:==:camera . getPickRay ( movement . endPosition , translate2dEnd ) . origin ;
var a = aObj . start . utc ;:==:var b:==:bObj . start . utc ;
var sampleRate = context . sampleRate ;:==:var gain:==:this . _ gainNode . gain ;
var SUPER_EXPRESSION = ' SUPER_EXPRESSION ' ;:==:var SWITCH_STATEMENT:==:' SWITCH_STATEMENT ' ;
var height = parseInt ( $ ( this . box ) . height ( ) ) ;:==:var width:==:parseInt ( $ ( this . box ) . width ( ) ) ;
var pageInfo = data . pageInfo ;:==:var page:==:new pdfPageProxy ( pageInfo , this ) ;
var t = this . graph . view . translate ;:==:var s:==:this . graph . view . scale ;
var gridClassName = _ props . gridClassName ;:==:var gridStyle:==:_ props . gridStyle ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var tokenType:==:traceur . syntax . tokenType ;
var NODE = setup . NODE ;:==:var uri:==:setup . uri ;
var m = SIMD . Int16x8 . fromInt32x4Bits ( simd . int32x4 ( 0x3f800000 , 0x40000000 , 0x40400000 , 0x40800000 ) ) ;:==:var n:==:simd . int32x4 . fromInt16x8Bits ( m ) ;
var c = cells [ j ] ;:==:var rowIndex:==:c . parentNode . rowIndex ;
var list = this . list ;:==:var source:==:this . source ;
var h = this . _ hsv [ 0 ] ;:==:var s:==:this . _ hsv [ 1 ] ;
var path = require ( ' path ' ) ;:==:var parse:==:path . parse  |  |  require ( ' path - parse ' ) ;
var _ shouldPolyfilles6Collection = require ( ' _ shouldPolyfilles6Collection ' ) ;:==:var guid:==:require ( ' guid ' ) ;
var positions = polyline . _ segments . positions ;:==:var lengths:==:polyline . _ segments . lengths ;
var includes = require ( ' includes ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var rimraf = require ( ' rimraf ' ) ;:==:var tsb:==:require ( ' gulp - tsb ' ) ;
var dataLabelUtils = powerbi . visuals . dataLabelUtils ;:==:var willLabelsFit:==:powerbi . visuals . axisHelper . labelLayoutStrategy . willLabelsFit ;
var bluebird = require ( ' bluebird ' ) ;:==:var path:==:require ( ' path ' ) ;
var height = positionCartographic . height ;:==:var i:==:findInterval ( height ) ;
var currentIndex = previousState . currentIndex + offset ;:==:var n:==:previousState . items . length ;
var range = math . range ;:==:var floor:==:math . floor ;
var props = internalInstance . props ;:==:var state:==:internalInstance . state ;
var defaultParametersTransformer = traceur . codegeneration . defaultParametersTransformer ;:==:var destructuringTransformer:==:traceur . codegeneration . destructuringTransformer ;
var getCanvasPattern = pattern . prototype . getCanvasPattern ;:==:var abs:==:math . abs ;
var eventEnd = t . eventEnd ;:==:var eventElementHandlers:==:t . eventElementHandlers ;
var max = Math . max ( x0 , x1 , x2 ) ;:==:var min:==:Math . min ( x0 , x1 , x2 ) ;
var getBounds = _ tetherBase$Utils . getBounds ;:==:var getOffsetParent:==:_ tetherBase$Utils . getOffsetParent ;
var args = _ args ;:==:var f:==:_ f ;
var arg = rule . args [ i ] ;:==:var exampleValues:==:arg . exampleValues  |  |  [ ] ;
var arrayContains = dom . arrayContains ;:==:var getRootContainer:==:dom . getRootContainer ;
var backdrop = new Animation ( ele . querySelector ( ' ion - backdrop ' ) ) ;:==:var wrapper:==:new animation ( ele . querySelector ( ' . modal - wrapper ' ) ) ;
var wrap = options . wrap ;:==:var range:==:options . range ;
var Legend = powerbi . visuals . Legend ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var dynCall_v = Module [ ' dynCall_v ' ] = asm [ ' dynCall_v ' ] ;:==:var dynCall_viid:==:Module [ ' dynCall_viid ' ]    asm [ ' dynCall_viid ' ] ;
var plus = panel . nodes . plus ;:==:var timer:==:panel . timer ;
var assert   = require ( ' assert ' ) ;:==:var Connection:==:common . Connection ;
var outputEncodings = this . outputEncodings ;:==:var outputCallbacks:==:this . outputCallbacks ;
var denseMatrix = math . type . denseMatrix ;:==:var mad:==:math . mad ;
var ONEHOUR = constants . ONEHOUR ;:==:var ONEMIN:==:constants . ONEMIN ;
var reactFiberReconciler = require ( ' reactFiberReconciler ' ) ;:==:var reactGenericBatching:==:require ( ' reactGenericBatching ' ) ;
var textNode = textNodes [ j ] ;:==:var text:==:textNode . textContent ;
var event = seg . event ;:==:var source:==:event . source  |  |  ;
var token = tokens [ idx ] ;:==:var language:==:token . info & & ( ' language- ' + token . info )  |  |  '' ;
var atan = Math . atan ;:==:var exp:==:Math . exp ;
var imageryBounds = rectangle . intersection ( imageryProvider . rectangle , this . _ rectangle , imageryBoundsScratch ) ;:==:var rectangle:==:rectangle . intersection ( tile . rectangle , imageryBounds , tileImageryBoundsScratch ) ;
var inverseProjectionView = this . inverseProjectionView ;:==:var zoom:==:this . zoom , viewportWidth    this . viewportWidth , viewportHeight    this . viewportHeight ;
var pmx = require ( ' pmx ' ) . init ( http : true ) ;:==:var probe:==:pmx . probe ( ) ;
var STOP = C . STOP = 0x12 ;:==:var TRUE1:==:C . TRUE1    0x21 ;
var parent = $ ( el ) . parent ( ) , o = this . options ;:==:var toggle:==:o . toggleElement ? $ ( o . toggleElement ) : parent . children ( ' . dropdown - toggle ' ) . length > 0 ? parent . children ( ' . dropdown - toggle ' ) : parent . children ( ' a : nth - child ( 1 ) ' ) ;
var el = element [ 0 ] ;:==:var input:==:el . querySelector ( ' input , textarea ' ) ;
var isNumber = leafletHelpers . isNumber ;:==:var isValidPoint:==:leafletHelpers . isValidPoint ;
var extension = options . extensions . length > 0 ? ' . ' + this . pick ( options . extensions ) : ' ' ;:==:var domain:==:options . domain_prefix ? options . domain_prefix + ' . ' + options . domain : options . domain ;
var setAccessor = traceur . syntax . trees . setAccessor ;:==:var tempVarTransformer:==:traceur . codegeneration . tempVarTransformer ;
var dom = goog . require ( ' goog . dom ' ) ;:==:var testSuite:==:goog . require ( ' goog . testing . testSuite ' ) ;
var shapeIcon = shaping . shapeIcon ;:==:var getGlyphQuads:==:quads . getGlyphQuads ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var sourcePosition:==:traceur . syntax . sourcePosition ;
var children = this . _ element . children ;:==:var transform:==:CSS . transform ;
var e = items_schema [ ' enum ' ]  |  |  [ ] ;:==:var t:==:items_schema . options ? items_schema . options . enum_titles  |  |  [ ] : [ ] ;
var main = ' main ' ;:==:var ams:==:' ams ' ;
var form = document . createElement ( ' form ' ) ;:==:var area:==:document . createElement ( ' textarea ' ) ;
var nodesWereAdded = scope . nodesWereAdded ;:==:var nodesWereRemoved:==:scope . nodesWereRemoved ;
var UPDATE_OPERATORS = exports . UPDATE_OPERATORS = [ ' + + ' , ' -- ' ] ;:==:var BOOLEAN_NUMBER_BINARY_OPERATORS:==:exports . BOOLEAN_NUMBER_BINARY_OPERATORS    [ ' > ' , ' < ' , ' > ' , ' < ' ] ;
var retrieve = zrUtil . retrieve ;:==:var pi:==:math . pi ;
var mongodb = require ( ' mongodb ' ) ;:==:var readPref:==:mongodb . readPreference ;
var cookie = cookies [ i ] ;:==:var expires:==:cookie . expires ;
var bufferSize = this . bufferSize ;:==:var startBufferEvery:==:this . startBufferEvery     null ? bufferSize : this . startBufferEvery ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var pgp:==:require ( ' openpgp ' ) ;
var knox = require ( ' knox ' ) ;:==:var keystone:==:req . keystone ;
var btnTreeSettings = plugin . getElement ( ' btnTreeSettings ' ) ;:==:var mnuFilesSettings:==:plugin . getElement ( ' mnuFilesSettings ' ) ;
var command = commandList [ i ] ;:==:var method:==:command . method ;
var caller = jsonx . caller & & jsonx . caller . name ;:==:var sails:==:req . _ sails ;
var previousScrollToIndex = _ ref . previousScrollToIndex ;:==:var previousSize:==:_ ref . previousSize ;
var feature = segmentData . feature ;:==:var geometry:==:segmentData . geometry ;
var Pins = Board . Pins ;:==:var toFixed:==:fn . toFixed ;
var emissive = this . emissive ? this . emissive . buildCode ( builder , ' c ' , slot : ' emissive ' ) : undefined ;:==:var environment:==:this . environment ? this . environment . buildCode ( builder , ' c ' , cache : ' env ' , requires : requires , slot : ' environment ' ) : undefined ;
var connection = options . connection ;:==:var mediaConstraints:==:options . mediaConstraints  |  |  ;
var lightGreen800 = exports . lightGreen800 = ' # 558b2f ' ;:==:var lightGreen900:==:exports . lightGreen900    ' # 33691e ' ;
var index = e . index ;:==:var section:==:e . section ;
var isArray = sharedUtil . isArray ;:==:var shadow:==:sharedUtil . shadow ;
var item = items [ i ] ;:==:var section:==:sectioned & & this . getSectionName ( item ) ;
var cellLayoutManager = _ props6 . cellLayoutManager ;:==:var height:==:_ props6 . height ;
var Dict = corePrimitives . dict ;:==:var jbig2Image:==:coreJbig2 . jbig2Image ;
var entityManager = entityAspect . entityManager ;:==:var entity:==:entityAspect . entity ;
var name = ref . name ;:==:var value:==:ref . value ;
var getSupportCodeFns = exports . getSupportCodeFns = _ support_code_fns2 . default . get ;:==:var clearSupportCodeFns:==:exports . clearSupportCodeFns    _ support_code_fns2 . default . reset ;
var network = _ mobileConnections [ 0 ] . voice . network ;:==:var iccInfo:==:iccCard . iccInfo ;
var vertexFormat = polylineGeometry . _ vertexFormat ;:==:var colors:==:polylineGeometry . _ colors ;
var teal700 = exports . teal700 = ' # 00796b ' ;:==:var teal800:==:exports . teal800    ' # 00695c ' ;
var dx = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;:==:var notch:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' notch ' , this . notch ) ) ) ) ;
var PIXEL_OFFSET_INDEX = Billboard . PIXEL_OFFSET_INDEX = 2 ;:==:var EYE_OFFSET_INDEX:==:Billboard . EYE_OFFSET_INDEX    3 ;
var oClasses = oSettings . oClasses ;:==:var an:==:oSettings . aanFeatures . p ;
var category = ' category ' ;:==:var randomId:==:' randomId ' ;
var magnitude = Math . sqrt ( magnitudeSquared ) ;:==:var direction:==:cartesian3 . divideByScalar ( scaledSpacePosition , magnitude , directionScratch ) ;
var points = shape . points ;:==:var sizes:==:shape . sizes ;
var ddoc = indexDef . ddoc ;:==:var type:==:indexDef . type  |  |  ' json ' ;
var argv = require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var $ element = this . $ element ;:==:var $ dropdown:==:this . $ dropdown ;
var tooltip = imports [ ' language . tooltip ' ] ;:==:var settings:==:imports . settings ;
var missingpdfException = sharedUtil . missingpdfException ;:==:var passwordResponses:==:sharedUtil . passwordResponses ;
var startLine = this . startLine ;:==:var ch:==:this . ch ;
var rigidBodies = mesh . geometry . rigidBodies ;:==:var bodies:==:mesh . physics . bodies ;
var speed = this . speed ;:==:var o:==:this . options ;
var reactInputSelection = require ( ' reactInputSelection ' ) ;:==:var reactInstrumentation:==:require ( ' reactInstrumentation ' ) ;
var text = this . _ text  |  |  ( percent  |  0 ) + ' % ' ;:==:var w:==:ctx . measureText ( text ) . width ;
var dirname = p . dirname ;:==:var basename:==:p . basename ;
var scale = node . image . scale  |  |  1 ;:==:var clip:==:node . image . clip  |  |  1 ;
var proc = imports . proc ;:==:var bridge:==:imports [ ' bridge . client ' ] ;
var spies = settings . spies  |  |  [ ] ;:==:var mode:==:settings . mode ;
var isDefined = leafletHelpers . isDefined ;:==:var defaults:==:leafletMapDefaults . setDefaults ( scope . defaults , attrs . i d ) ;
var m = mobx ;:==:var o:==:mobx . observable ;
var clientWidth = this . img . clientWidth ;:==:var clientHeight:==:this . img . clientHeight ;
var editor = tabs . focussedTab . editor ;:==:var changes:==:editor . ace . renderer . $ loop . changes ;
var frame = args . frame ;:==:var fileName:==:context . fileName . replace ( ' . jpg ' , ' _ reference . jpg ' ) ;
var editingNode = instance . editingNode ;:==:var tabView:==:instance . tabView ;
var min = cfg . min  |  |  0 ;:==:var max:==:cfg . max  |  |  100 ;
var Text = require ( ' Text ' ) ;:==:var View:==:require ( ' View ' ) ;
var mongoClient = require ( ' mongodb ' ) . mongoClient ;:==:var gridStore:==:require ( ' mongodb ' ) . gridStore ;
var rotate = data . rotate ;:==:var scaleX:==:data . scaleX ;
var skip = requestDef . skip  |  |  0 ;:==:var limit:==:( ' limit ' in requestDef ? requestDef . limit : rows . length ) + skip ;
var denseMatrix = math . type . denseMatrix ;:==:var det:==:math . det ;
var name = attribute . name ;:==:var arg:==:args . attributes [ name ] ;
var fs = require ( ' fs - extra ' ) ;:==:var argv:==:require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;
var topo = this . topos [ wrapper ] ;:==:var d:==:topo . data [ ' conn ' ] [ i d ] ;
var b = parseInt ( hex . substring ( 5 , 7 ) , 16 ) ;:==:var a:==:parseInt ( hex . substring ( 7 , 9 ) , 16 ) ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , zero_to_fifty , opts ) ;
var port = options . port  |  |  27017 ;:==:var db:==:options . db  |  |  ' integration_tests ' ;
var text = element . textContent ;:==:var ranges:==:rangesForMatch ( text , query ) ;
var peakRadius = opts & & opts . peakRadius ! = = undefined ? opts . peakRadius : 0 . 0 ;:==:var height:==:opts & & opts . height !    undefined ? opts . height : 1 . 0 ;
var children = this . appBarEl . children ;:==:var length:==:children . length ;
var items = listbox . items ( ) ;:==:var dataItem:==:listbox . dataItem ( item ) ;
var x = this . bounds . upperLeft ( ) . x ;:==:var y:==:this . bounds . upperLeft ( ) . y ;
var setInnerhtml = scope . setInnerhtml ;:==:var unsafeUnwrap:==:scope . unsafeUnwrap ;
var hashLength = cellProperties . hashLength  |  |  value . length ;:==:var hashSymbol:==:cellProperties . hashSymbol  |  |  ' * ' ;
var gulp = require ( ' gulp ' ) ;:==:var markdown:==:require ( ' gulp - markdown ' ) ;
var s = this . _ destroyViewInContainerScope ( ) ;:==:var parentView:==:view_ref_1 . internalView ( viewContainerLocation . parentView ) ;
var itemStyle = seriesScope & & seriesScope . itemStyle ;:==:var hoverItemStyle:==:seriesScope & & seriesScope . hoverItemStyle ;
var CONST = $ . fn . utilities . CONST ;:==:var COMMA_KEYCODE:==:CONST . COMMA_KEYCODE ;
var west = Math . max ( rectangle . west , otherRectangle . west ) ;:==:var south:==:math . max ( rectangle . south , otherRectangle . south ) ;
var plugin = callback_plugin_pairs [ i ] [ 0 ] ;:==:var callback:==:callback_plugin_pairs [ i ] [ 1 ] ;
var dirs = util . dirs ( ) ;:==:var moment:==:require ( ' moment ' ) ;
var group = _ ref2 . group ;:==:var force:==:_ ref2 . force ;
var _ main = Module [ ' _ main ' ] = asm [ ' _ main ' ] ;:==:var _ memset:==:Module [ ' _ memset ' ]    asm [ ' _ memset ' ] ;
var lexer = this . lexer ;:==:var stream:==:lexer . stream ;
var stringToutf8String = sharedUtil . stringToutf8String ;:==:var warn:==:sharedUtil . warn ;
var service = req . service ;:==:var operations:==:req . service . api . operations  |  |  ;
var command = this . curOp . command ;:==:var scrollIntoView:==:command & & command . scrollIntoView ;
var resolutionScale = label . _ labelCollection . _ resolutionScale ;:==:var backgroundBillboard:==:label . _ backgroundBillboard ;
var currentReel = this . _ currentReel ;:==:var frame:==:currentReel . frames [ currentReel . currentFrame ] ;
var callstack = imports . callstack ;:==:var ui:==:imports . ui ;
var util = require ( ' hexo - util ' ) ;:==:var join:==:pathFn . join ;
var b = new stepExpr ( ' attribute ' , a ) ;:==:var c:==:new locationExpr ( ) ;
var element = error . element ;:==:var offset:==:error . offset ;
var hour = parseInt ( $ ( ' . edit . ' + i d + ' . edit - alarm - hour ' ) . val ( ) ) ;:==:var minute:==:parseInt ( $ ( ' . edit . ' + i d + ' . edit - alarm - minute ' ) . val ( ) ) ;
var _ tolower = Module [ ' _ tolower ' ] = asm [ ' _ tolower ' ] ;:==:var _ strlen:==:Module [ ' _ strlen ' ]    asm [ ' _ strlen ' ] ;
var emulateTouch = this . emulationEnabled ( ) & & this . settings . emulateTouch . get ( ) & & ! this . _ touchEmulationSuspended ;:==:var targets:==:webInspector . targetManager . targets ( ) ;
var srcPath = ref . srcPath ;:==:var destPath:==:ref . destPath ;
var backwards = options . backwards = = true ;:==:var skipCurrent:==:options . skipCurrent !   false ;
var nativeMethodsMixin = require ( ' nativeMethodsMixin ' ) ;:==:var reactNativeViewAttributes:==:require ( ' reactNativeViewAttributes ' ) ;
var autoPlay = ( opts . autoPlay=='false' |  | opts . autoPlay==false ) ? false : true ;:==:var opp:==:( opts . opp   ' false' |  | opts . opp   false ) ? false : true ;
var j = this . ij [ 1 ] ;:==:var level:==:this . level ;
var tls = require ( ' tls ' ) ;:==:var url:==:require ( ' url ' ) ;
var Dot = reporters . Dot ;:==:var Base:==:reporters . Base ;
var to = docSet . getByLongname ( ' message~headers . to ' ) ;:==:var from:==:docSet . getByLongname ( ' message~headers . from ' ) ;
var render = preact . render ;:==:var createClass:==:preactCompat . createClass ;
var nodeStats = data . nodeStats ;:==:var clusterNodes:==:data . clusterNodes ;
var controls = this . controls ;:==:var animations:==:this . animations ;
var url = require ( ' url ' ) ;:==:var request:==:require ( ' request ' ) ;
var radiusX = ( p . radiusX ! = null ) ? p . radiusX : p . radius ;:==:var radiusY:==:( p . radiusY !   null ) ? p . radiusY : p . radius ;
var parse = require ( ' url ' ) . parse ;:==:var url:==:require ( ' url ' ) ;
var postProcessor = data . postProcessor ;:==:var userId:==:userIds . userId ;
var WIDTH_INDEX = Polyline . WIDTH_INDEX = 2 ;:==:var MATERIAL_INDEX:==:Polyline . MATERIAL_INDEX    3 ;
var len = _ len ;:==:var ofs:==:_ ofs ;
var timers = metrics . timers ;:==:var sets:==:metrics . sets ;
var imageryProviderViewModels = defaultValue ( options . imageryProviderViewModels , [ ] ) ;:==:var terrainProviderViewModels:==:defaultValue ( options . terrainProviderViewModels , [ ] ) ;
var indigo50 = exports . indigo50 = ' # e8eaf6 ' ;:==:var indigo100:==:exports . indigo100    ' # c5cae9 ' ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var argv:==:process . argv ;
var reactBrowserEventEmitter = require ( ' reactBrowserEventEmitter ' ) ;:==:var reactControlledComponent:==:require ( ' reactControlledComponent ' ) ;
var chunkedStreamManager = coreChunkedStream . chunkedStreamManager ;:==:var pdfDocument:==:coreDocument . pdfDocument ;
var firstEdgeIndexes = this . _ firstEdgeIndexes ;:==:var containmentEdges:==:this . containmentEdges ;
var collisionBoxArray = this . collisionBoxArray ;:==:var rotationMatrix:==:this . rotationMatrix ;
var timeout = ref . timeout ;:==:var propCount:==:ref . propCount ;
var $ elem = item . $ elem ;:==:var value:==:item . value ;
var error = new Error ( ' some error ' ) ;:==:var operation:==:retry . operation ( [ 1 , 2 , 3 ] ) ;
var client = this . client ;:==:var page:==:client . api . page . simplePageObj ( ) ;
var inject = ref . inject ;:==:var cache:==:ref . cache ;
var canvas = this . game . canvas ;:==:var parent:==:canvas . parentNode ;
var app = ns ( ' app ' ) ;:==:var acx:==:ns ( ' acx ' ) ;
var l = width - pright . sizeCalculated ;:==:var t:==:0 + ( stop ? ptop . sizeCalculated + this . padding : 0 ) ;
var duration = this . getAttribute ( ' data - duration ' ) ;:==:var scrollby:==:this . getAttribute ( ' data - scrollby ' ) ;
var renderTarget = this . renderTarget ;:==:var generateMipmaps:==:renderTarget . texture . generateMipmaps ;
var errorHeader = leafletHelpers . errorHeader ;:==:var helpers:==:leafletHelpers ;
var promise = this . _ promise0 ;:==:var receiver:==:this . _ receiverAt ( 0 ) ;
var K _ = goog . crypt . Sha2_64bit . K _ ;:==:var w:==:this . w _ ;
var restartButton = document . getElementById ( ' restartButton ' ) ;:==:var hangupButton:==:document . getElementById ( ' hangupButton ' ) ;
var flash = require ( ' connect - flash ' ) ;:==:var compression:==:require ( ' compression ' ) ;
var nodes = gltfRuntime . nodes ;:==:var node:==:nodes [ jointName ] ;
var customTime = customTime . customTimeFromTarget ( event ) ;:==:var snap:==:this . itemSet . options . snap  |  |  null ;
var MEM = 31 ;:==:var SYNC:==:32 ;
var tooltip = descriptor . tooltip ;:==:var caption:==:descriptor . caption ;
var neighborsSignificance = this . neighborsSignificance ;:==:var processingFlags:==:this . processingFlags ;
var format = info . format ;:==:var type:==:info . type ;
var valueMin = $ ( element ) . data ( ) . valueMin ;:==:var valueMax:==:$ ( element ) . data ( ) . valueMax ;
var subscriber = _ ref . subscriber ;:==:var buffer:==:_ ref . buffer ;
var entity = geometryUpdater . _ entity ;:==:var rectangle:==:entity . rectangle ;
var srcFiles = _ . pluck ( modules , ' srcFiles ' ) ;:==:var tpljsFiles:==:_ . pluck ( modules , ' tpljsFiles ' ) ;
var tab = req . query . tab  |  |  ' all ' ;:==:var proxy:==:new eventproxy ( ) ;
var label = createElement ( ' label ' ) ;:==:var input:==:createElement ( ' input ' ) ;
var pixelRatio = require ( ' pixelRatio ' ) ;:==:var reactNativePropRegistry:==:require ( ' reactNativePropRegistry ' ) ;
var hw_icon    = zombie_array [ index ] [ ' hw_icon ' ] ;:==:var domain:==:zombie_array [ index ] [ ' domain ' ] ;
var x = style . x  |  |  0 ;:==:var y:==:style . y  |  |  0 ;
var size = this . size ;:==:var step:==:this . _ step ;
var x = sx + i*dx ;:==:var y:==:sy + i*dy ;
var r = this . pow ( a , q . addn ( 1 ) . iushrn ( 1 ) ) ;:==:var t:==:this . pow ( a , q ) ;
var name = path . substring ( 0 , path . length - extname . length ) ;:==:var i18n:==:file . box . i18n ;
var r = this . createContactEquation ( planeBody , convexBody , planeShape , convexShape ) ;:==:var projected:==:planeconvex_projected ;
var eventResize = t . eventResize ;:==:var renderDayOverlay:==:t . renderDayOverlay ;
var leaveCancelled = data . leaveCancelled ;:==:var delayLeave:==:data . delayLeave ;
var msg = payload : ' foo ' , _ msgid : ' 987654321 ' ;:==:var m:==:n . metric ( ' info',msg,'15 mb ' ) ;
var parseuri = _ dereq _ ( ' parseuri ' ) ;:==:var debug:==:_ dereq _ ( ' debug ' ) ( ' socket . io - client : url ' ) ;
var color = _ props . color ;:==:var expandable:==:_ props . expandable ;
var groupItems = this . _ groupItems ;:==:var groupItem:==:groupItems [ groupKey ] ;
var topCallback = jasmine . createSpy ( ' topCallback ' ) ;:==:var leftCallback:==:jasmine . createSpy ( ' leftCallback ' ) ;
var should     = require ( ' should ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var head = doc . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var sc:==:doc . createElement ( ' script ' ) ;
var type = args . type ;:==:var items:==:args . items ;
var i d = $ ( this ) . attr ( ' i d ' ) ;:==:var file_id:==:$ ( this ) . attr ( ' file_id ' ) ;
var asciiHexStream = coreStream . asciiHexStream ;:==:var ccittFaxStream:==:coreStream . ccittFaxStream ;
var ajax = Backbone . ajax ;:==:var emulateHTTP:==:Backbone . emulateHTTP ;
var scheduler = this . scheduler ;:==:var actions:==:scheduler . actions ;
var element = _ react . propTypes . element ;:==:var shape:==:_ react . propTypes . shape ;
var tier = tiers [ index ] ;:==:var th:==:document . createElement ( ' th ' ) ;
var legendIcon = powerbi . visuals . legendIcon ;:==:var tooltipManager:==:powerbi . visuals . tooltipManager ;
var n = pts . length - 1 ;:==:var tr:==:state . view . translate ;
var tokenType = traceur . syntax . tokenType ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var postcss = require ( ' postcss ' ) ;:==:var autoprefixer:==:require ( ' autoprefixer ' ) ;
var test = new Test ( ' a test ' , noop ) ;:==:var err:==:message : ' an error message ' ;
var config = gRequire ( ' config ' ) ;:==:var task:==:gRequire ( ' task ' ) ;
var tagName = element . tagName . toLowerCase ( ) ;:==:var type:==:element . getAttribute ( ' type ' ) ;
var ends = this . endss _ [ index ] . slice ( ) ;:==:var end:==:ends [ ends . length - 1 ] ;
var drag = instance . drag ;:==:var resize:==:instance . resize ;
var utils = hash . utils ;:==:var rotl32:==:utils . rotl32 ;
var iNumberOfCols = window . iNumberOfCols ;:==:var setFocusOutsideOfTable:==:window . setFocusOutsideOfTable ;
var buffers = self . buffers ;:==:var textures:==:self . textures ;
var createLegend = powerbi . visuals . createLegend ;:==:var minervaAnimationDuration:==:powerbi . visuals . animatorCommon . minervaAnimationDuration ;
var decode = typeof e . decode = = = ' undefined ' ;:==:var back:==:e . backButtonPressed ;
var valueFormatter = powerbi . visuals . valueFormatter ;:==:var double:==:powerbi . double ;
var location = _ props2 . location ;:==:var routes:==:_ props2 . routes ;
var b = fulfillSoon ( ' b ' , 30 ) ;:==:var c:==:fulfillSoon ( ' c ' , 10 ) ;
var indigoA700 = exports . indigoA700 = ' # 304ffe ' ;:==:var blue50:==:exports . blue50    ' # e3f2fd ' ;
var fs = require ( ' fs ' ) ;:==:var zlib:==:require ( ' zlib ' ) ;
var collate = pouchCollate . collate ;:==:var normalizeKey:==:pouchCollate . normalizeKey ;
var resolveToObject = o . resolveToObject ;:==:var promise:==:promiseProvider . get ( ) ;
var verticalOrigin = billboard . _ verticalOrigin ;:==:var show:==:billboard . show & & billboard . clusterShow ;
var load = obj . load ;:==:var error:==:obj . error ;
var expect = require ( ' expect . js ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var frep = require ( ' gulp - frep ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var tab = tabs . focussedTab ;:==:var accessList:==:tab . pane . meta . accessList ;
var rowHeaders = this . wot . getSetting ( ' rowHeaders ' ) . length ;:==:var columnHeaders:==:this . wot . getSetting ( ' columnHeaders ' ) . length ;
var effector = bones [ ik . effector ] ;:==:var links:==:ik . links ;
var autorun = mobx . autorun ;:==:var iterall:==:require ( ' iterall ' ) ;
var min = utils . number ( filter . value . min ) ;:==:var max:==:utils . number ( filter . value . max ) ;
var allowClose = options . allowClose ;:==:var elements:==:options . elements  |  |  [ ] ;
var createReturnStatement = traceur . codegeneration . parseTreeFactory . createReturnStatement ;:==:var parseTreeTransformer:==:traceur . codegeneration . parseTreeTransformer ;
var shapePositiona = bodiesoverlap_shapepositiona ;:==:var shapePositionb:==:bodiesoverlap_shapepositionb ;
var chalk     = require ( ' chalk ' ) ;:==:var async:==:require ( ' async ' ) ;
var tmp = require ( ' tmp ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var pos = monthLabel . get ( ' position ' ) ;:==:var align:==:monthLabel . get ( ' align ' ) ;
var _ free = Module [ ' _ free ' ] = asm [ ' _ free ' ] ;:==:var _ main:==:Module [ ' _ main ' ]    asm [ ' _ main ' ] ;
var getSelectedNode = rangeUtils . getSelectedNode ;:==:var isAfterContentEditableFalse:==:caretUtils . isAfterContentEditableFalse ;
var fs   = require ( ' fs - extra ' ) ;:==:var input:==:opts . cli . input . slice ( 1 ) ;
var fired = this . fired ;:==:var res:==:this . results [ fired ] ;
var parent = node . parentNode ;:==:var nextSibling:==:node . nextSibling ;
var extrudedHeight = ellipse . extrudedHeight ;:==:var granularity:==:ellipse . granularity ;
var util = require ( ' util ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var sourcemaps = require ( ' gulp - sourcemaps ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var boundingSphere = primitive . _ boundingSpheres [ i ] ;:==:var boundingSpherewc:==:primitive . _ boundingSpherewc [ i ] ;
var dataViewObjects = powerbi . dataViewObjects ;:==:var colorHelper:==:powerbi . visuals . colorHelper ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var d = new symbolNode ( ' x ' ) ;:==:var e:==:new operatorNode ( ' - ' , ' subtract ' , [ c , d ] ) ;
var dynCall_ii = Module [ ' dynCall_ii ' ] = asm [ ' dynCall_ii ' ] ;:==:var dynCall_viiiddddi:==:Module [ ' dynCall_viiiddddi ' ]    asm [ ' dynCall_viiiddddi ' ] ;
var parent = context . parent ;:==:var property:==:context . property ;
var skip = parseInt ( params . qstring . skip  |  |  0 ) ;:==:var filter:==:params . qstring . filter  |  |  ' ' ;
var clientId = userIds . clientId ;:==:var userId:==:userIds . userId ;
var profile = sbx . data . profile ;:==:var iob:==:results . iob    sbx . properties . iob . iob  |  |  0 ;
var regex = options . regex ;:==:var ignore_quoted:==:options . ignore_quoted ;
var southwest = projection . project ( Rectangle . southwest ( tile . rectangle ) , southwestScratch ) ;:==:var northeast:==:projection . project ( rectangle . northeast ( tile . rectangle ) , northeastScratch ) ;
var xAxisModels = foundCpts . xAxisModels ;:==:var yAxisModels:==:foundCpts . yAxisModels ;
var parameterList = this . transformAny ( tree . parameterList ) ;:==:var body:==:this . transformSuperInFunctionBody _ ( tree . body , homeObject ) ;
var dirname = Utils . dirname ( path ) ;:==:var type:==:typeof data      ' undefined '  |  |  data      null ? ' dir ' : ' file ' ;
var indexType = this . transformAny ( tree . indexType ) ;:==:var typeAnnotation:==:this . transformAny ( tree . typeAnnotation ) ;
var express = require ( ' express ' ) ;:==:var connect:==:require ( ' connect ' ) ;
var listModel = _ jsModelListModel [ ' default ' ] ;:==:var tabsView:==:_ jsViewTabsView [ ' default ' ] ;
var dispatchListener = event . _ dispatchListeners ;:==:var dispatchInstance:==:event . _ dispatchInstances ;
var TOTAL_STACK = Module [ ' TOTAL_STACK ' ]  |  |  5242880 ;:==:var TOTAL_MEMORY:==:Module [ ' TOTAL_MEMORY ' ]  |  |  16777216 ;
var inner = ' SuperCallInEvalClass_inner_eval ' ;:==:var outer:==:' SuperCallInEvalClass_outer_eval ' ;
var cursors = byClassName ( cm . getWrapperElement ( ) , ' codeMirror - cursors ' ) [ 0 ] ;:==:var cursor:==:cursors . firstChild ;
var queue = nextTick . queue ;:==:var digest:==:nextTick . digest ;
var corners = computedPositions . corners ;:==:var endPositions:==:computedPositions . endPositions ;
var index = state . index ;:==:var count:==:state . count ;
var path3D = ( instance . path3D ) . update ( curve ) ;:==:var pathArray:==:extrusionPathArray ( shape , curve , instance . path3d , instance . pathArray , scale , rotation , scaleFunction , rotateFunction , instance . cap , custom ) ;
var b = ' print ( ' b ' ) ' ;:==:var c:==:' print ( ' c ' ) ' ;
var domRange = api . domRange ;:==:var wrappedRange:==:api . wrappedRange ;
var db = syncBrowserdb . db . _ db ;:==:var transaction:==:db . transaction ( dbos_bookmarks , ' readwrite ' ) ;
var shape = instance . shape ;:==:var shapeArrow:==:instance . shapeArrow ;
var annotationList = firepad . annotationList ;:==:var span:==:firepad . span ;
var getCustomerByUser = denodeify ( customer . getCustomerByUser ) . bind ( customer ) ;:==:var setCustomer:==:denodeify ( customer . setCustomer ) . bind ( customer ) ;
var strictRegion = query . region  |  |  options . strictRegion ;:==:var ignoreProtocolVersion:==:options . ignoreProtocolVersion ;
var deprecated = sharedUtil . deprecated ;:==:var info:==:sharedUtil . info ;
var min = Number ( closure . docs . get ( ' page . toc . min ' )  |  |  2 ) ;:==:var max:==:Number ( closure . docs . get ( ' page . toc . max ' )  |  |  3 ) ;
var npm = think . npm ;:==:var error:==:think . error ;
var center = options . center ;:==:var ellipsoid:==:defaultValue ( options . ellipsoid , ellipsoid . wgs84 ) ;
var name = req . fields . name ;:==:var password:==:req . fields . password ;
var clientLeft = docElem . clientLeft  |  |  body . clientLeft  |  |  0 ;:==:var top:==:box . top + scrollTop - clientTop ;
var resource = this . resource ( ) ;:==:var context:==:this . _ context ;
var status = p . status ;:==:var name:==:p . name ;
var should = require ( ' should ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var start = toInt ( res . feed . openSearch$startIndex . $ t ) ;:==:var total:==:toInt ( res . feed . openSearch$totalResults . $ t ) ;
var statusBar = require ( ' statusBar ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var collapsed = options . collapsed ;:==:var predicate:==:options . predicate ;
var isVirtual = mod . isVirtual ;:==:var justOne:==:mod . justOne ;
var PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX = Billboard . PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX ;:==:var DISTANCE_DISPLAY_CONDITION_INDEX:==:Billboard . DISTANCE_DISPLAY_CONDITION_INDEX ;
var relatedTarget = defaultValue ( options . relatedTarget , null ) ;:==:var ctrlKey:==:defaultValue ( options . ctrlKey , false ) ;
var stats = this . stats = suites : 0 , tests : 0 , passes : 0 , pending : 0 , failures : 0 ;:==:var failures:==:this . failures    [ ] ;
var designUnit = parseFloat ( params . designUnit ) ;:==:var columnCount:==:parseFloat ( params . columnCount ) ;
var onError = options . onError  |  |  function ( ) ;:==:var onSuccess:==:options . onSuccess  |  |  function ( ) ;
var diagram = this . diagram ;:==:var paper:==:this . _ paper ;
var z = this . normal . z ;:==:var d:==:this . d ;
var vm = require ( ' vm ' ) ;:==:var util:==:require ( ' util ' ) ;
var script = debuggerModelLocation . script ( ) ;:==:var uiSourceCode:==:this . _ editorAction . _ uiSourceCodes . get ( script ) ;
var isf = record . isf ;:==:var ic:==:record . ic ;
var escapeTextContentForBrowser = require ( ' escapeTextContentForBrowser ' ) ;:==:var setInnerhtml:==:require ( ' setInnerhtml ' ) ;
var TRACEUR = traceur . syntax . predefinedName . traceur ;:==:var element_delete:==:traceur . syntax . predefinedName . element_delete ;
var target = _ options . target ;:==:var targetModifier:==:_ options . targetModifier ;
var heading = options . heading ;:==:var body:==:options . body ;
var video = document . querySelector ( ' video ' ) ;:==:var canvas:==:window . canvas    document . querySelector ( ' canvas ' ) ;
var GET_PROPERTY = traceur . syntax . predefinedName . get_property ;:==:var runtime:==:traceur . syntax . predefinedName . runtime ;
var outlineWidth = corridor . outlineWidth ;:==:var cornerType:==:corridor . cornerType ;
var edgeTypeOffset = this . _ edgeTypeOffset ;:==:var edgeWeakType:==:this . _ edgeWeakType ;
var nodes = this . sigInst . graph . nodes ( ) ;:==:var prefix:==:this . sigInst . renderers [ self . config . rendererIndex ] . options . prefix ;
var scope = angular . element ( cellContent ) . scope ( ) ;:==:var grid:==:scope . grid ;
var reactFiberInstrumentation = require ( ' reactFiberInstrumentation ' ) ;:==:var reactDebugCurrentFiber:==:require ( ' reactDebugCurrentFiber ' ) ;
var STATUS_CONNECTING = exports . STATUS_CONNECTING   = 1 ;:==:var STATUS_ACTIVE:==:exports . STATUS_ACTIVE      2 ;
var title = tokens [ idx ] . title ? ( ' title= ' ' + escapeHtml ( replaceEntities ( tokens [ idx ] . title ) ) + ' ' ' ) : '' ;:==:var target:==:options . linkTarget ? ( ' target ' ' + options . linkTarget + ' ' ' ) : '' ;
var iconHelper = _ jsLibHelpers . iconHelper ;:==:var appsHelper:==:_ jsLibHelpers . appsHelper ;
var bind = require ( ' bind ' ) ;:==:var domify:==:require ( ' domify ' ) ;
var BOOLEAN_NUMBER_BINARY_OPERATORS = exports . BOOLEAN_NUMBER_BINARY_OPERATORS = [ ' > ' , ' < ' , ' > = ' , ' < = ' ] ;:==:var EQUALITY_BINARY_OPERATORS:==:exports . EQUALITY_BINARY_OPERATORS    [ '   ' , '    ' , ' ! ' , ' !   ' ] ;
var reactNoopUpdateQueue = require ( ' reactNoopUpdateQueue ' ) ;:==:var canDefineProperty:==:require ( ' canDefineProperty ' ) ;
var e = rounded . exponent ;:==:var c:==:rounded . coefficients ;
var SHOW_SPINNER = exports . SHOW_SPINNER = ' SHOW_SPINNER ' ;:==:var HIDE_SPINNER:==:exports . HIDE_SPINNER    ' HIDE_SPINNER ' ;
var columnCount = _ props2 . columnCount ;:==:var rowCount:==:_ props2 . rowCount ;
var left = this . $ el . offset ( ) . left ;:==:var top:==:this . $ el . offset ( ) . top ;
var inlineLoaderCompiler = traceur . loader . inlineLoaderCompiler ;:==:var options:==:traceur . util . options ;
var mockClock = goog . require ( ' goog . testing . mockClock ' ) ;:==:var testSuite:==:goog . require ( ' goog . testing . testSuite ' ) ;
var resolve = deferred . resolve ;:==:var reject:==:deferred . reject ;
var sources = util . getArg ( sourceMap , ' sources ' ) ;:==:var names:==:util . getArg ( sourceMap , ' names ' ) ;
var l = lStart ;:==:var r:==:rStart ;
var mapId = this . outgoingMaps _ [ i ] . mapId ;:==:var map:==:this . outgoingMaps _ [ i ] . map ;
var nextSibling = $ element [ 0 ] . nextSibling ;:==:var previousSibling:==:$ element [ 0 ] . previousSibling ;
var dx = Math . max ( 0 , Math . min ( bounds . width , parseFloat ( mxUtils . getValue ( this . state . style , ' dx ' , this . dx ) ) ) ) ;:==:var arrowHead:==:math . max ( 0 , math . min ( bounds . height , parseFloat ( mxUtils . getValue ( this . state . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;
var autoprefixer = require ( ' autoprefixer ' ) ;:==:var clean:==:require ( ' postcss - clean ' ) ;
var provider = imports [ ' clipboard . provider ' ] ;:==:var alert:==:imports [ ' dialog . alert ' ] ;
var region = e . data . region ;:==:var tab:==:tabs . findTab ( path ) ;
var wrench = require ( ' wrench ' ) ;:==:var stream:==:require ( ' stream ' ) ;
var visualMode = vim . visualMode ;:==:var operatorMotionArgs:==:copyArgs ( command . operatorMotionArgs ) ;
var script = scripts [ scripts . length - 1 ] ;:==:var src:==:script . src ;
var vertexBuffersToCreate = loadResources . vertexBuffersToCreate ;:==:var indexBuffersToCreate:==:loadResources . indexBuffersToCreate ;
var height = this . _ opaqueTexture . height ;:==:var accumulationTexture:==:this . _ accumulationTexture ;
var subModelTypeAttribute = attributes [ this . prototype . subModelTypeAttribute ] ;:==:var subModelType:==:this . _ subModels [ subModelTypeAttribute ] ;
var textMeasurementService = powerbi . textMeasurementService ;:==:var defaultLabelPrecision:==:visuals . dataLabelUtils . defaultLabelPrecision ;
var primitiveType = powerbi . primitiveType ;:==:var axisHelper:==:powerbi . visuals . axisHelper ;
var context = this . context _ ;:==:var pixelRatio:==:frameState . pixelRatio ;
var x = _ this . currTouch . x = touch . clientx - rect . left ;:==:var y:==:_ this . currTouch . y    touch . clienty - rect . top ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var insert:==:require ( ' gulp - insert ' ) ;
var children = ref . children ;:==:var parent:==:ref . parent ;
var actionSheetios = require ( ' actionSheetios ' ) ;:==:var f8Button:==:require ( ' f8Button ' ) ;
var COMMA_EXPRESSION = ' COMMA_EXPRESSION ' ;:==:var COMPREHENSION_FOR:==:' COMPREHENSION_FOR ' ;
var removed = removedObjects . values ;:==:var changedObjects:==:this . _ changedObjects ;
var destination = this . destination ;:==:var bufferSize:==:this . bufferSize ;
var companyCreated = identify . companyCreated ( ) ;:==:var created:==:identify . created ( ) ;
var gulp = require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;:==:var postcss:==:require ( ' postcss ' ) ;
var categoryAxisProperties = options . categoryAxisProperties ;:==:var valueAxisProperties:==:options . valueAxisProperties ;
var start = this . startTime ;:==:var end:==:this . endTime ;
var util = imports . util ;:==:var apf:==:imports . apf ;
var width = polyline . width ;:==:var followSurface:==:polyline . followSurface ;
var row = delta . start . row ;:==:var column:==:delta . start . column ;
var title = evt . detail . title  |  |  '' ;:==:var elements:==:this . elements ;
var color = layer . paint [ ' line - color ' ] ;:==:var tr:==:painter . transform ;
var require = WinJS . Utilities . _ require ;:==:var define:==:WinJS . Utilities . _ define ;
var title = template . find ( ' . title ' ) . value ;:==:var description:==:template . find ( ' . description ' ) . value ;
var scene = engine . scenes [ 0 ] ;:==:var textures:==:scene . textures ;
var s = this . _ iteratedString ;:==:var len:==:s . length ;
var N = N  |  |  3 ;:==:var fCtr0:==:fCtr0  |  |  15 . 625 ;
var itemsToDisplay = this . itemsToDisplay ;:==:var dataStartIndex:==:this . dataStartIndex ;
var dirname = require ( ' path ' ) . dirname ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var pez = docSet . getByLongname ( ' pez ' ) [ 0 ] ;:==:var cos:==:docSet . getByLongname ( ' cos ' ) [ 0 ] ;
var _ sQ = new uint8Array ( sock . _ sQbufferSize ) ;:==:var rq:==:new uint8Array ( sock . _ rQbufferSize ) ;
var baseEncodingName = properties . baseEncodingName ;:==:var differences:==:properties . differences ;
var x = center . x ;:==:var y:==:center . y ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var reactReconciler:==:require ( ' reactReconciler ' ) ;
var path = require ( ' path ' ) ;:==:var argv:==:optimist . argv ;
var Text = require ( ' Text ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var graph = ui . editor . graph ;:==:var input:==:document . createElement ( ' input ' ) ;
var variableDeclaration = traceur . syntax . trees . variableDeclaration ;:==:var variableDeclarationList:==:traceur . syntax . trees . variableDeclarationList ;
var inputState = vim . inputState ;:==:var motion:==:inputState . motion ;
var formalParameterList = traceur . syntax . trees . formalParameterList ;:==:var functionDeclaration:==:traceur . syntax . trees . functionDeclaration ;
var CONST = tokenType . const ;:==:var let:==:tokenType . let ;
var Text = require ( ' f8Text ' ) ;:==:var view:==:require ( ' view ' ) ;
var apiKey = options . apiKey ;:==:var version:==:options . version ;
var xAxisProperties = this . xAxisProperties = visuals . axisHelper . createAxis ( xAxisCreationOptions ) ;:==:var yAxisProperties:==:this . yAxisProperties    visuals . axisHelper . createAxis ( yAxisCreationOptions ) ;
var fs = require ( ' fs ' ) ;:==:var defaults:==:require ( ' lodash . defaults ' ) ;
var name = $ ( ' input#name ' ) . val ( ) ;:==:var email:==:$ ( ' input#email ' ) . val ( ) ;
var date = AWS . util . date . getDate ( ) ;:==:var signerClass:==:service . getSignerClass ( req ) ;
var operand = this . transformAny ( tree . operand ) ;:==:var elements:==:this . transformList ( tree . elements ) ;
var x0 = this . _ x0 ;:==:var y0:==:this . _ y0 ;
var legendData = powerbi . visuals . legendData ;:==:var legendPosition:==:powerbi . visuals . legendPosition ;
var async    = require ( ' async ' ) ;:==:var axon:==:require ( ' pm2-axon ' ) ;
var walletId = wallet . credentials . walletId ;:==:var config:==:configService . getSync ( ) . wallet . settings ;
var b = document . createElement ( ' b ' ) ;:==:var c:==:document . createTextNode ( ' c ' ) ;
var listView = that . listView ;:==:var visible:==:that . popup . visible ( ) ;
var array = this . _ array ;:==:var offset:==:this . _ offset ;
var settings = imports . settings ;:==:var findreplace:==:imports . findreplace ;
var colContentLeft = t . colContentLeft ;:==:var colContentRight:==:t . colContentRight ;
var merge = utils . merge ;:==:var bus:==:utils . bus ;
var sourceCubemap = options . sourceCubemap ;:==:var method:==:options . method ;
var x = value1 . x - value2 . x ;:==:var y:==:value1 . y - value2 . y ;
var w = crop . width ;:==:var h:==:crop . height ;
var trackedEntity = viewer . _ trackedEntity ;:==:var currentTime:==:viewer . clock . currentTime ;
var m = hasWeakMap ? weak : sym ;:==:var isPrivateSymbol:==:m . isPrivateSymbol ;
var level4 = db . model ( ' level_4 ' , level4Schema ) ;:==:var level3:==:db . model ( ' level_3 ' , level3Schema ) ;
var host = document . location . host ;:==:var protocol:==:document . location . protocol ;
var iconElementRight = _ props . iconElementRight ;:==:var iconClassNameLeft:==:_ props . iconClassNameLeft ;
var createFunctionExpression = parseTreeFactory . createFunctionExpression ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var Renderer = Hilo . Renderer ;:==:var Drawable:==:Hilo . Drawable ;
var windowSize = this . windowSize ;:==:var windows:==:this . windows ;
var isEventSupported = require ( ' isEventSupported ' ) ;:==:var isTextInputElement:==:require ( ' isTextInputElement ' ) ;
var pattern = patterns [ i ] ;:==:var index:==:pattern . index ;
var e = readmpInt ( der , ' public exponent ' ) ;:==:var d:==:readmpInt ( der , ' private exponent ' ) ;
var domUtils = baidu . editor . dom . domUtils ;:==:var img:==:document . createElement ( ' img ' ) ;
var childNodes = placeMark . childNodes ;:==:var length:==:childNodes . length ;
var x = offsetX - origin . x ;:==:var y:==:offsetY - origin . y ;
var watcher = imports . watcher ;:==:var experimental:==:imports [ ' preferences . experimental ' ] ;
var attributeLocations = primitive . _ attributeLocations ;:==:var geometries:==:primitive . _ geometries ;
var buffers = this . buffers ;:==:var len:==:buffers . length ;
var message = _ ref3 . message ;:==:var assert:==:_ ref3 . assert ;
var dataViewObjects = powerbi . dataViewObjects ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var activity = this . app . controllers . activity ;:==:var controls:==:this . app . controllers . controls ;
var bearing = ' bearing ' in options ? this . _ normalizeBearing ( options . bearing , startBearing ) : startBearing ;:==:var pitch:==:' pitch ' in options ? + options . pitch : startPitch ;
var arrayMap = traceur . util . arrayMap ;:==:var assert:==:traceur . assert ;
var current = self . current ;:==:var index:==:current . index ;
var nodeNameOffset = this . _ nodeNameOffset ;:==:var nodeIdOffset:==:this . _ nodeIdOffset ;
var http = require ( ' http ' ) ;:==:var assert:==:require ( ' chai ' ) . assert ;
var path = require ( ' path ' ) ;:==:var argv:==:require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;
var r = shape . r ;:==:var r0:==:shape . r0 ;
var tbody = document . createElement ( ' tbody ' ) ;:==:var tr:==:document . createElement ( ' tr ' ) ;
var limeA400 = exports . limeA400 = ' # c6ff00 ' ;:==:var limeA700:==:exports . limeA700    ' # aeea00 ' ;
var oldLen = unpacked . oldLen ;:==:var newLen:==:unpacked . newLen ;
var circle = s . circle ( 10 , 20 , 30 ) ;:==:var use:==:circle . use ( ) ;
var customData = options . customData ! = null ? options . customData : ;:==:var roles:==:array . isArray ( options . roles ) ? options . roles : [ ] ;
var target = tuple . target ;:==:var currentTarget:==:tuple . currentTarget ;
var rowStartIndex = _ ref8 . rowStartIndex ;:==:var rowStopIndex:==:_ ref8 . rowStopIndex ;
var endArgs = options . endArgs ;:==:var done:==:options . done ;
var block = this . blocks [ i ] ;:==:var node:==:this . _ ifNode ( callback ( block . node , ' blocks [ ' + i + ' ] . node ' , this ) ) ;
var a = ' foobar ' + x ( ) + ' moofoo ' + y ( ) + ' xyz ' + q ( ) ;:==:var b:==:' foo1 ' + x ( ) + ' 2boo ' ;
var object = intersection . object ;:==:var material:==:object . material ;
var rimraf = require ( ' rimraf ' ) ;:==:var sass:==:require ( ' gulp - sass ' ) ;
var e = c . preds _ ;:==:var f:==:c . preds_off ;
var firstRow = config . firstRow , lastRow = config . lastRow + 1 ;:==:var children:==:this . element . children ;
var minWidth = parseInt ( computedStyle . minWidth ) ;:==:var padding:==:parseInt ( computedStyle . padding ) * 2 ;
var relPath = sourceItem . relPath ;:==:var fileOptions:==:_ . clone ( sourceItem . fileOptions )  |  |  ;
var Legend = powerbi . visuals . Legend ;:==:var objectEnumerationBuilder:==:powerbi . visuals . objectEnumerationBuilder ;
var COLOR_INDEX = pointPrimitive . color_index = 2 ;:==:var outline_color_index:==:pointPrimitive . outline_color_index    3 ;
var tempCanvas = $ ( ' tempCanvas ' ) ;:==:var video:==:$ ( ' video ' ) ;
var comments = config . comments ;:==:var step:==:config . step ;
var FORMAL_PARAMETER_LIST = ' FORMAL_PARAMETER_LIST ' ;:==:var FORWARD_DEFAULT_EXPORT:==:' FORWARD_DEFAULT_EXPORT ' ;
var context = options . context ;:==:var gl:==:context . _ gl ;
var startrow = tileLayout . startrow ;:==:var rowSign:==:this . rowSign ;
var parent = self . _ parent ;:==:var volume:==:( Howler . _ muted  |  |  self . _ muted  |  |  self . _ parent . _ muted ) ? 0 : self . _ volume ;
var afterLastParagraph = options . afterLastParagraph = = null ? afterParagraph : options . afterLastParagraph ;:==:var linkFormatter:==:typeof options . linkFormatter      ' function ' ? options . linkFormatter : defaultLinkFormatter ;
var href = window . location . href ;:==:var body:==:_ jQuery ( document . body ) ;
var value = ref . value ;:==:var oldValue:==:ref . oldValue ;
var clearTimeout = global . clearTimeout ;:==:var window:==:global . window ;
var save = imports . save ;:==:var question:==:imports [ ' dialog . question ' ] . show ;
var alpha = defaultValue ( options . alpha , 0 . 0 ) ;:==:var beta:==:defaultValue ( options . beta , 0 . 0 ) ;
var registerWrapper = scope . registerWrapper ;:==:var unwrapIfNeeded:==:scope . unwrapIfNeeded ;
var dx = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;:==:var arrowHead:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;
var railway = feature . get ( ' railway ' ) ;:==:var sort_key:==:feature . get ( ' sort_key ' ) ;
var alert = find ( ' . jasmine - alert ' ) ;:==:var order:==:doneResult & & doneResult . order ;
var s = this . hsv _ [ 1 ] ;:==:var v:==:this . hsv _ [ 2 ] ;
var sab = msg . sab ;:==:var i d:==:msg . i d ;
var data = reader . data ( result ) ;:==:var model:==:new reader . model ( data [ 0 ] ) ;
var width = attributes . width  |  |  ' 100% ' ;:==:var height:==:attributes . height  |  |  ' 100% ' ;
var accuracy = e . heading . accuracy ;:==:var trueHeading:==:e . heading . trueHeading ;
var height = boundingRect . height  |  |  0 ;:==:var width:==:boundingRect . width  |  |  0 ;
var y = pt . y ;:==:var width:==:tooltipSize . width ;
var operand = this . transformAny ( left . operand ) ;:==:var memberExpression:==:this . transformAny ( left . memberExpression ) ;
var x1 = pf ( node . getAttribute ( ' x1 ' ) )  |  |  pf ( node . getAttribute ( ' x ' ) )  |  |  pf ( ( node . getAttribute ( ' cx ' ) ) - pf ( node . getAttribute ( ' r ' ) ) )  |  |  0 ;:==:var x2:==:pf ( node . getAttribute ( ' x2 ' ) )  |  |  ( x1 + pf ( node . getAttribute ( ' width ' ) ) )  |  |  ( pf ( node . getAttribute ( ' cx ' ) ) + pf ( node . getAttribute ( ' r ' ) ) )  |  |  0 ;
var obj = ast . obj . visit ( this ) ;:==:var key:==:ast . key . visit ( this ) ;
var tokenType = traceur . syntax . tokenType ;:==:var options:==:traceur . options . transform ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var service:==:require ( ' hap - nodejs ' ) . service ;
var FONTS = this . FONTDATA . FONTS ;:==:var fonts:==:( variant . fonts  |  |  this . FONTDATA . VARIANT . normal . fonts ) ;
var sysml = this . sysml ;:==:var eip:==:this . eip ;
var v1 = triangleNode . getAttribute ( ' v1 ' ) ;:==:var v2:==:triangleNode . getAttribute ( ' v2 ' ) ;
var width = Math . floor ( size . width * CSS_UNITS ) + ' px ' ;:==:var height:==:Math . floor ( size . height * CSS_UNITS ) + ' px ' ;
var readFileSync = require ( ' fs ' ) . readFileSync ;:==:var join:==:require ( ' path ' ) . join ;
var bindonAttr = output . bindonAttr ? output . bindonAttr . substring ( 0 , output . bindonAttr . length - 6 ) : null ;:==:var bracketParenAttr:==:output . bracketParenAttr ? ' [ ( ' + output . bracketParenAttr . substring ( 2 , output . bracketParenAttr . length - 8 ) + ' ) ] ' : null ;
var testLib    = fs . readFileSync ( testLibName , ' utf8 ' ) ;:==:var jsdom:==:require ( ' jsdom - no - contextify ' ) . jsdom ;
var delta = timeKeeper . delta ;:==:var active:==:skeletons [ activeSkeleton ] ;
var editor = this . ui . editor ;:==:var graph:==:editor . graph ;
var eventType = goog . fs . fileReader . eventType ;:==:var readyState:==:goog . fs . fileReader . readyState ;
var path = require ( ' path ' ) ;:==:var muk:==:require ( ' muk ' ) ;
var data = dataString ;:==:var graph:==:document . getElementById ( ' graph ' ) ;
var rsAstral = ' [ ' + rsAstralRange$1 + ' ] ' ;:==:var rsCombo:==:' [ ' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ' ] ' ;
var store = this . store ;:==:var idProperty:==:this . idProperty ;
var ellipsoid = corridorGeometry . _ ellipsoid ;:==:var vertexFormat:==:corridorGeometry . _ vertexFormat ;
var timeline = viewer . _ timeline ;:==:var fullscreenButton:==:viewer . _ fullscreenButton ;
var option , instancePrefix , optionIndex = this . props ;:==:var className:==:classNames ( this . props . className , option . className ) ;
var mime = require ( ' mime ' ) ;:==:var https:==:require ( ' https ' ) ;
var durationTween = this . _ movementData . durationTween = = = 0 ? this . _ rawDuration : this . _ movementData . durationTween ;:==:var tweenEasing:==:this . _ movementData . tweenEasing ;
var toolbar = this . toolbar ;:==:var settings:==:this . settings ;
var substring = cons . substring ( 20 , 80 ) ;:==:var index:==:substring . indexOf ( ' y ' ) ;
var assert = require ( ' assert ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' loopback : model ' ) ;
var fork = require ( ' child_process ' ) . fork ;:==:var path:==:require ( ' path ' ) ;
var arrayExtensions = jsCommon . arrayExtensions ;:==:var dataViewObjectDefinitions:==:powerbi . data . dataViewObjectDefinitions ;
var deviceNameController = _ appJsControllersDeviceNameController [ ' default ' ] ;:==:var progressDialogController:==:_ appJsControllersProgressDialogController [ ' default ' ] ;
var isCommutative = util . isCommutative ;:==:var isAssociative:==:util . isAssociative ;
var label = _ label  |  |  ' Loading . . . ' ;:==:var detail:==:_ detail  |  |  ' Please wait ' ;
var vertices = json . vertices  |  |  [ ] ;:==:var normals:==:json . normals  |  |  [ ] ;
var onproceed = options . onproceed  |  |  undefined ;:==:var dialogClass:==:options . dialogClass  |  |  ' ' ;
var sum64_5_hi = utils . sum64_5_hi ;:==:var sum64_5_lo:==:utils . sum64_5_lo ;
var BINDING_IDENTIFIER = ' BINDING_IDENTIFIER ' ;:==:var BLOCK:==:' BLOCK ' ;
var parameters = animation . parameters ;:==:var samplers:==:animation . samplers ;
var commands = imports . commands ;:==:var c9:==:imports . c9 ;
var nodePath = options . nodePath  |  |  ' ' ;:==:var runners:==:options . runners  |  |  ;
var headers = responseCache [ cacheKey ] . headers ;:==:var statusCode:==:responseCache [ cacheKey ] . statusCode ;
var h = this . height - xs ;:==:var maxValue:==:this . maxValue ;
var baseRadius = opts & & opts . baseRadius ! = = undefined ? opts . baseRadius : 0 . 5 ;:==:var height:==:opts & & opts . height !    undefined ? opts . height : 1 . 0 ;
var r = this . r . toString ( 16 ) ;:==:var g:==:this . g . toString ( 16 ) ;
var req = this . req ;:==:var res:==:this . res ;
var mcc = self . padLeft ( self . _ iccSettings . mcc , 3 ) ;:==:var mnc:==:self . padLeft ( self . _ iccSettings . mnc , 3 ) ;
var os = require ( ' os ' ) ;:==:var v8:==:process . versions . v8 ;
var tooltipBuilder = powerbi . visuals . tooltipBuilder ;:==:var objectEnumerationBuilder:==:powerbi . visuals . objectEnumerationBuilder ;
var expect = require ( ' expect . js ' ) ;:==:var object:==:require ( ' mout ' ) . object ;
var org = file . meta . org ;:==:var repo:==:file . meta . repo ;
var displayOrientations = windows . graphics . display . displayOrientations ;:==:var knownLibraryId:==:windows . storage . knownLibraryId ;
var scrollTop = _ state . scrollTop ;:==:var scrollWidth:==:_ state . scrollWidth ;
var connector = this . app . components . _ _ connector _ _ ;:==:var sessionService:==:this . app . get ( ' sessionService ' ) ;
var castShadows = shadowMode . castShadows ( model . shadows ) ;:==:var receiveShadows:==:shadowMode . receiveShadows ( model . shadows ) ;
var end = message . data . end ;:==:var count:==:start - count ;
var Nothing = Maybe . Nothing ;:==:var Just:==:Maybe . Just ;
var hasOwnProperty = require ( ' hasOwnProperty ' ) ;:==:var toString:==:require ( ' toString ' ) ;
var queue = this . _ queue ;:==:var limit:==:this . _ limit ;
var editorState = require ( ' editorState ' ) ;:==:var keyBindingUtil:==:require ( ' keyBindingUtil ' ) ;
var rotate = $ scope . rotate*6 ;:==:var trans:==:g . attr ( ' transform ' ) ;
var selectionColumns = this . $ selectionColumnsForRow ( row ) ;:==:var tabs:==:[ -1 ] . concat ( this . $ tabsForRow ( row ) ) ;
var identifierExpression = traceur . syntax . trees . identifierExpression ;:==:var keywords:==:traceur . syntax . keywords ;
var key = self . key ;:==:var quote:==:self . quote ;
var _ str_to_html = Module . _ str_to_html ;:==:var malloc:==:Module . _ malloc ;
var importBinding = traceur . syntax . trees . importBinding ;:==:var importSpecifier:==:traceur . syntax . trees . importSpecifier ;
var duration = self . _ duration ;:==:var sound:==:self . _ soundById ( i d ) ;
var prefix = store . prefix ( ) [ 0 ] ;:==:var cache:==:transaction . _ cache ;
var requireNativeComponent = require ( ' requireNativeComponent ' ) ;:==:var clippableView:==:requireNativeComponent ( ' clippableView ' , null ) ;
var winHeight = parallax . winHeight ;:==:var docHeight:==:parallax . docHeight ;
var auditCategory = declareInterfaceClass ( auditCategoryImpl ) ;:==:var auditResult:==:declareInterfaceClass ( auditResultImpl ) ;
var isCmd = corePrimitives . isCmd ;:==:var isStream:==:corePrimitives . isStream ;
var dynCall_viiiiiid = Module [ ' dynCall_viiiiiid ' ] = asm [ ' dynCall_viiiiiid ' ] ;:==:var dynCall_viii:==:Module [ ' dynCall_viii ' ]    asm [ ' dynCall_viii ' ] ;
var language = imports . language ;:==:var debug:==:imports . debugger ;
var nopt = require ( ' nopt ' ) ;:==:var path:==:require ( ' path ' ) ;
var path = require ( ' path ' ) ;:==:var favicon:==:require ( ' serve - favicon ' ) ;
var cmd = message . data . cmd ;:==:var arg:==:message . data . arg ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var async:==:require ( ' async ' ) ;
var MEMBER_LOOKUP_EXPRESSION = ' MEMBER_LOOKUP_EXPRESSION ' ;:==:var METHOD_SIGNATURE:==:' METHOD_SIGNATURE ' ;
var yellow900 = exports . yellow900 = ' # f57f17 ' ;:==:var yellowA100:==:exports . yellowA100    ' # ffff8d ' ;
var fs = require ( ' fs ' ) ;:==:var file:==:require ( ' file ' ) ;
var paste = this . actions . get ( ' paste ' ) ;:==:var pasteHere:==:this . actions . get ( ' pasteHere ' ) ;
var semiMajorAxis = options . semiMajorAxis ;:==:var semiMinorAxis:==:options . semiMinorAxis ;
var myFunction = function ( arg1 ) return [ this , ' myFunction ' , arg1 ] ;:==:var myFunctionWithCall:==:function ( arg1 ) return [ this , ' myFunctionWithCall ' , arg1 ] ;
var length = children . length ;:==:var state:==:this . _ state ;
var aspect = ( params . aspect ! = = undefined ) ? params . aspect : camera . aspect ;:==:var aperture:==:( params . aperture !    undefined ) ? params . aperture : 0 . 025 ;
var xRange = this . xRange ;:==:var yRange:==:this . yRange ;
var streamqueue = require ( ' streamqueue ' ) ;:==:var karma:==:require ( ' karma ' ) . server ;
var horizontalOverscanSize = _ props3 . horizontalOverscanSize ;:==:var noContentRenderer:==:_ props3 . noContentRenderer ;
var name = Handlebars . Utils . escapeExpression ( param . name ) ;:==:var valueId:==:handlebars . utils . escapeExpression ( param . valueId ) ;
var height = model . height ;:==:var dimensions:==:model . dimensions ;
var FALSE2 = C . FALSE2 = 0x32 ;:==:var FALSE3:==:C . FALSE3    0x33 ;
var $ element = self . $ element = jqLite ( element ) ;:==:var scrollView:==:self . scrollView    new ionic . views . scroll ( scrollViewOptions ) ;
var less = require ( ' gulp - less ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var onFocus = _ ref . onFocus ;:==:var onSelect:==:_ ref . onSelect ;
var locales = self . locales  |  |  opts . locales  |  |  ;:==:var locale:==:self . locale  |  |  opts . locale  |  |  ' en ' ;
var bmp = parts . bmp ;:==:var astral:==:parts . astral ;
var camera = frameState . camera ;:==:var direction:==:camera . directionwc ;
var noLineNumbers = options . noLineNumbers ;:==:var preserveLineNumbers:==:options . preserveLineNumbers ;
var activityIndicator = require ( ' activityIndicator ' ) ;:==:var react:==:require ( ' react ' ) ;
var extent = frameState . extent ;:==:var resolution:==:frameState . viewState . resolution ;
var y = lastMotionData . y ;:==:var z:==:lastMotionData . z ;
var GET_TODO_ERROR = exports . GET_TODO_ERROR = ' GET_TODO_ERROR ' ;:==:var GET_TODO_OK:==:exports . GET_TODO_OK    ' GET_TODO_OK ' ;
var offsetLeft = _ props . offsetLeft ;:==:var props:==:_ objectWithoutProperties ( _ props , [ ' offsetLeft ' ] ) ;
var start = moment ( now ) . clone ( ) . startOf ( ' day ' ) . toDate ( ) ;:==:var end:==:moment ( now ) . clone ( ) . endOf ( ' day ' ) . toDate ( ) ;
var traverse = require ( ' traverse ' ) ;:==:var ObjectID:==:require ( ' mongodb ' ) . ObjectID ;
var dayNamesShort = this . _ get ( inst , ' dayNamesShort ' ) ;:==:var dayNamesMin:==:this . _ get ( inst , ' dayNamesMin ' ) ;
var o = b . mb_info _ [ n ] ;:==:var a:==:o . alpha _ ;
var promise = A . promise . create ( ) ;:==:var url:==:this . url  |  |  ' window . html ' ;
var parentNode = node . parentNode ;:==:var index:==:goog . array . indexOf ( parentNode . childNodes , node ) ;
var annotation = annotations [ i ] ;:==:var row:==:annotation . row ;
var scm = imports . scm ;:==:var proc:==:imports . proc ;
var kpiArcs = this . kpiArcs = [ ] ;:==:var kpiArcPaths:==:this . kpiArcPaths    [ ] ;
var getDaySegmentContainer = t . getDaySegmentContainer ;:==:var formatDates:==:t . calendar . formatDates ;
var start = startToken ? startToken . loc . end . line : 1 ;:==:var end:==:endToken . loc . start . line ;
var basename = require ( ' path ' ) . basename ;:==:var etag:==:require ( ' etag ' ) ;
var async = require ( ' async ' ) ;:==:var path:==:require ( ' path ' ) ;
var page = api . page . simplePageObj ( ) ;:==:var section:==:page . section . signUp ;
var options = that . options ;:==:var optionLabel:==:options . optionLabel ;
var content = page . content ;:==:var images:==:options . image  |  |  options . images  |  |  page . photos  |  |  [ ] ;
var r = floor ( random ( 0 , flowers . length ) ) ;:==:var b:==:new Bubble ( mouseX , mouseY , flowers [ r ] ) ;
var viewState = frameState . viewState ;:==:var coordinateToPixelTransform:==:frameState . coordinateToPixelTransform ;
var type = types [ j ] ;:==:var value:==:values [ j ] ;
var registerHandler = exports . registerHandler = proxySupportCode ( ' registerHandler ' ) ;:==:var registerListener:==:exports . registerListener    proxySupportCode ( ' registerListener ' ) ;
var brown900 = exports . brown900 = ' # 3e2723 ' ;:==:var blueGrey50:==:exports . blueGrey50    ' # eceff1 ' ;
var ref = way . getAttribute ( ' ref ' ) ;:==:var role:==:way . getAttribute ( ' role ' ) ;
var x = ( textureCoordinates . x * 4095 . 0 )  |  0 ;:==:var y:==:( textureCoordinates . y * 4095 . 0 )  |  0 ;
var alert = imports [ ' dialog . alert ' ] . show ;:==:var basename:==:require ( ' path ' ) . basename ;
var loadResources = this . _ loadResources ;:==:var incrementallyLoadTextures:==:this . _ incrementallyLoadTextures ;
var sinon = require ( ' sinon ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var node2 = new goog . ui . tree . treeNode ( ' node2 ' ) ;:==:var node3:==:new goog . ui . tree . treeNode ( ' node3 ' ) ;
var accept = req . headers . accept  |  |  '' ;:==:var json:==:~accept . indexOf ( ' json ' ) ;
var architect = require ( ' architect ' ) ;:==:var os:==:require ( ' os ' ) ;
var baseTheme = _ context$muiTheme . baseTheme ;:==:var button:==:_ context$muiTheme . button ;
var Stream = util . stream . Stream ;:==:var fs:==:require ( ' fs ' ) ;
var num = exposureTime . numerator ;:==:var den:==:exposureTime . denominator ;
var roll = camera . roll ;:==:var positionCartographic:==:cartographic . clone ( camera . positionCartographic ) ;
var request = require ( ' request ' ) ;:==:var should:==:require ( ' should ' ) ;
var head = copyCursor ( sel . head ) ;:==:var anchor:==:copyCursor ( sel . anchor ) ;
var dynCall_iiiiiiiii = Module [ ' dynCall_iiiiiiiii ' ] = asm [ ' dynCall_iiiiiiiii ' ] ;:==:var dynCall_iiiii:==:Module [ ' dynCall_iiiii ' ]    asm [ ' dynCall_iiiii ' ] ;
var stiffness = params . stiffness  |  |  400 . 0 ;:==:var repulsion:==:params . repulsion  |  |  400 . 0 ;
var destroyTables = window . destroyTables ;:==:var getCell:==:window . getCell ;
var PDFJS = sharedGlobal . pdfjs ;:==:var globalScope:==:sharedGlobal . globalScope ;
var options = _ ref . options ;:==:var selectValue:==:_ ref . selectValue ;
var nonce = _ ref . nonce ;:==:var authority:==:_ ref . authority ;
var notification = imports [ ' dialog . notification ' ] ;:==:var pubsub:==:imports . pubsub ;
var path = route . format ( item . path ) ;:==:var data:==:item . data ;
var reference = references [ i ] ;:==:var i d:==:reference . identifier ;
var b = document . createElement ( ' b ' ) ;:==:var c:==:document . createElement ( ' c ' ) ;
var value = this . _ valueGetter ( dataItem ) ;:==:var valueExpr:==:this . _ valueExpr ( typeof value , values ) ;
var ajaxevent = o . getAttribute ( ' ajaxevent ' ) ? o . getAttribute ( ' ajaxevent ' ) : ' click ' ;:==:var ajaxurl:==:o . getAttribute ( ' ajaxurl ' ) ? o . getAttribute ( ' ajaxurl ' ) : o . href ;
var errorCheck = options . errorCheck ;:==:var env:==:options . env ;
var noscroll = options . noscroll ;:==:var className:==:options . className  |  |  ' ' ;
var description = item . description  |  |  item . summary  |  |  item . content  |  |  ' ' ;:==:var pubdate:==:item . pubdate  |  |  item . published  |  |  item . updated ;
var t1l = t1l + chl ;:==:var t1h:==:t1h + chh + ( ( t1l > > > 0 ) < ( chl > > > 0 ) ? 1 : 0 ) ;
var reactBrowserEventEmitter = require ( ' reactBrowserEventEmitter ' ) ;:==:var reactInputSelection:==:require ( ' reactInputSelection ' ) ;
var scrollContentHeight = this . state . scrollContentHeight ;:==:var reservedHeight:==:this . state . reservedHeight ;
var ensureComponentIsNative = require ( ' ensureComponentIsNative ' ) ;:==:var ensurePositiveDelayProps:==:require ( ' ensurePositiveDelayProps ' ) ;
var nullTree = traceur . syntax . trees . nullTree ;:==:var objectLiteralExpression:==:traceur . syntax . trees . objectLiteralExpression ;
var version = option_consume ( options , ' version ' ) ;:==:var format:==:option_consume ( options , ' format ' ) ;
var deferreds = processor . _ deferreds ;:==:var deferred:==:deferreds [ i d ] ;
var root = options . root  |  |  ' ' ;:==:var methods:==:options . methods  |  |  Object . keys ( vfs ) ;
var bulkInPipes = usbInterface . bulkInPipes ;:==:var bulkOutPipes:==:usbInterface . bulkOutPipes ;
var host = UI . getSetting ( ' host ' ) ;:==:var port:==:ui . getSetting ( ' port ' ) ;
var original = method . original ;:==:var fields:==:method . fields ;
var commander = require ( ' commander ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var warn = sharedUtil . warn ;:==:var isValidUrl:==:sharedUtil . isValidUrl ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var htmlFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' htmlFieldTestObject ' ) ) ;
var forOfStatement = exports . forOfStatement = buildForxStatement ( ' of ' ) ;:==:var forAwaitStatement:==:exports . forAwaitStatement    buildForxStatement ( ' await ' ) ;
var w = win . _ $ element . offsetWidth ;:==:var h:==:win . _ $ element . offsetHeight ;
var scene = this . _ scene ;:==:var screenSpaceCameraController:==:scene . screenSpaceCameraController ;
var words = this . words ;:==:var sigBytes:==:this . sigBytes ;
var semver = require ( ' semver ' ) ;:==:var readline:==:require ( ' readline ' ) ;
var receiver = options & & options . receiver ;:==:var ready:==:options & & options . ready ;
var Geolocation = Windows . Devices . Geolocation ;:==:var App:==:WinJS . Application ;
var tipLabel = options . tipLabel ! = = undefined ? options . tipLabel : ' attributions ' ;:==:var collapseLabel:==:options . collapseLabel !    undefined ? options . collapseLabel : ' \u00bb ' ;
var winston = require ( ' winston ' ) ;:==:var cron:==:require ( ' cron ' ) . cronJob ;
var work = job . _ work ;:==:var context:==:job . _ context ;
var doc = this . doc = new Document ( ' ' ) ;:==:var deferredUpdate:==:this . deferredUpdate    lang . deferredCall ( this . onUpdate . bind ( this ) ) ;
var bounds = this . bounds ;:==:var deadzone:==:this . deadzone ;
var val = $ ( this . element ) . val ( ) ;:==:var split:==:val . split ( this . separator ) ;
var path = decodeURI ( this . location . pathname + this . location . search ) ;:==:var root:==:this . root . slice ( 0 , -1 ) ;
var api = imports . api ;:==:var ui:==:imports . ui ;
var exportSymbol = traceur . semantics . symbols . exportSymbol ;:==:var moduleSymbol:==:traceur . semantics . symbols . moduleSymbol ;
var createBooleanLiteral = traceur . codegeneration . parseTreeFactory . createBooleanLiteral ;:==:var createCallExpression:==:traceur . codegeneration . parseTreeFactory . createCallExpression ;
var url = require ( ' url ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var routes = this . routes ;:==:var keys:==:Object . keys ( routes ) ;
var getBody = dom . getBody ;:==:var rangesEqual:==:domRange . rangesEqual ;
var contacts = document . getElementById ( ' option - contacts ' ) ;:==:var keypad:==:document . getElementById ( ' option - keypad ' ) ;
var durationValue = document . querySelector ( ' span#durationValue ' ) ;:==:var gapValue:==:document . querySelector ( ' span#gapValue ' ) ;
var option = seriesModel . option ;:==:var smooth:==:option . smooth ? smooth : null ;
var domLazyTree = require ( ' domLazyTree ' ) ;:==:var domNamespaces:==:require ( ' domNamespaces ' ) ;
var terminal = session . terminal ;:==:var rows:==:terminal . rows ;
var keys = _ . keys ( obj ) ;:==:var length:==:keys . length ;
var interpolationAlgorithm = this . _ interpolationAlgorithm ;:==:var packedInterpolationLength:==:this . _ packedInterpolationLength ;
var valueArray = _ ref . valueArray ;:==:var optionRenderer:==:this . props . optionRenderer ;
var winston = require ( ' winston ' ) ;:==:var url:==:require ( ' url ' ) ;
var fs = require ( ' fs ' ) ;:==:var readFile:==:rsvp . denodeify ( fs . readFile ) ;
var async = require ( ' async ' ) ;:==:var utils:==:require ( ' keystone - utils ' ) ;
var each = require ( ' each ' ) ;:==:var extend:==:require ( ' extend ' ) ;
var outlineColor = property . getValueOrClonedDefault ( polylineVolume . outlineColor , time , color . black , scratchColor ) ;:==:var outlineWidth:==:property . getValueOrDefault ( polylineVolume . outlineWidth , time , 1 . 0 ) ;
var b = new symbolNode ( ' b ' ) ;:==:var c:==:new symbolNode ( ' c ' ) ;
var dx = Math . max ( 0 , Math . min ( bounds . width , mxUtils . getValue ( this . state . style , ' dx ' , cornerShape . prototype . dx ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( bounds . height , mxUtils . getValue ( this . state . style , ' dy ' , cornerShape . prototype . dy ) ) ) ;
var events = require ( ' events ' ) ;:==:var event:==:new events . eventEmitter ( ) ;
var fs = require ( ' fs ' ) ;:==:var fork:==:require ( ' child_process ' ) . fork ;
var BIND_UI_ATTRS = concat ( config . BIND_UI_ATTRS , config . UI_ATTRS ) ;:==:var SYNC_UI_ATTRS:==:concat ( config . SYNC_UI_ATTRS , config . UI_ATTRS ) ;
var syntheticAnimationEvent = require ( ' syntheticAnimationEvent ' ) ;:==:var syntheticClipboardEvent:==:require ( ' syntheticClipboardEvent ' ) ;
var d = clearCommand . depth ;:==:var s:==:clearCommand . stencil ;
var trace = cd [ 0 ] . trace ;:==:var carpet:==:trace . carpetTrace    lookupCarpet ( gd , trace ) ;
var segments = opts & & opts . segments ! = = undefined ? opts . segments : 30 ;:==:var sides:==:opts & & opts . sides !    undefined ? opts . sides : 20 ;
var parent = node . parentNode ;:==:var scene:==:this . scene ;
var debug = require ( ' debug ' ) ( ' socket . io - client : socket ' ) ;:==:var parseqs:==:require ( ' parseqs ' ) ;
var browser = ( typeof argv . browser ! = = ' boolean ' ? false : argv . browser )  |  |  ! ! argv . features ;:==:var clean:==:( typeof argv . clean !    ' boolean ' ? true : argv . clean ) ;
var execSync = require ( ' child_process ' ) . execSync ;:==:var path:==:require ( ' path ' ) ;
var api = this . api ( true ) . columns . adjust ( ) ;:==:var settings:==:api . settings ( ) [ 0 ] ;
var summary = createDom ( ' div ' , className : ' summary ' ) ;:==:var results:==:find ( ' . results ' ) ;
var viewMode = this . options . viewMode ;:==:var container:==:this . container ;
var options = $ timepicker . $ options ;:==:var scope:==:$ timepicker . $ scope ;
var display_name = DDG . getProperty ( item , ' stream . channel . display_name ' ) ;:==:var status:==:ddg . getProperty ( item,'stream . channel . status ' ) ;
var reverseOptions = localUtils . reverseOptions ;:==:var filterInclusiveStart:==:localUtils . filterInclusiveStart ;
var touch = touches [ i ] ;:==:var i d:==:touch . identifier ;
var line = lastSelectionCurEnd . line - lastSelectionCurStart . line ;:==:var ch:==:line ? lastSelectionCurEnd . ch : lastSelectionCurEnd . ch - lastSelectionCurStart . ch ;
var path = require ( ' path ' ) ;:==:var spawn:==:require ( ' spawn - local - bin ' ) ;
var scrollToAlignment = props . scrollToAlignment ;:==:var scrollToRow:==:props . scrollToRow ;
var React = require ( ' React ' ) ;:==:var reactNativeViewAttributes:==:require ( ' reactNativeViewAttributes ' ) ;
var should = require ( ' should ' ) ;:==:var path:==:require ( ' path ' ) ;
var layout = context [ ' layout ' ] ;:==:var stride:==:context [ ' stride ' ] ;
var previousSibling = changedNode . previousSibling ;:==:var nextSibling:==:changedNode . nextSibling ;
var head = el . querySelector ( ' gui - list - view - head ' ) ;:==:var body:==:el . querySelector ( ' gui - list - view - body ' ) ;
var localDiff = currentDiff . localDiff ;:==:var remoteDiff:==:currentDiff . remoteDiff ;
var g = from . g + ( to . g - from . g ) * p . progress ;:==:var b:==:from . b + ( to . b - from . b ) * p . progress ;
var invariant = require ( ' invariant ' ) ;:==:var modifyBlockForContentState:==:require ( ' modifyBlockForContentState ' ) ;
var center = ' center ' in options ? lngLat . convert ( options . center ) : this . getCenter ( ) ;:==:var zoom:==:' zoom ' in options ? + options . zoom : startZoom ;
var objects = this . objects ;:==:var listeners:==:this . animState . listeners ;
var target = event . target  |  |  event . srcElement ;:==:var dom:==:this . dom ;
var datasets = data . datasets ;:==:var isHorizontal:==:me . isHorizontal ( ) ;
var rttc = require ( ' rttc ' ) ;:==:var eachRecordDeep:==:require ( ' waterline - utils ' ) . eachRecordDeep ;
var commands = imports . commands ;:==:var tabbehavior:==:imports . tabbehavior ;
var leaveToClass = data . leaveToClass ;:==:var leaveActiveClass:==:data . leaveActiveClass ;
var min = detail . min ;:==:var max:==:detail . max ;
var itemMoveRecords = this . _ itemMoveRecords ;:==:var moveRecords:==:this . _ moveRecords ;
var billboard = billboards [ i ] ;:==:var position:==:billboard . position ;
var glob = require ( ' glob ' ) ;:==:var watchify:==:require ( ' watchify ' ) ;
var knownLibraryId = windows . storage . knownLibraryId ;:==:var media:==:windows . media ;
var tabManager = imports . tabManager ;:==:var watcher:==:imports . watcher ;
var name = pkg . name ;:==:var version:==:pkg . version ;
var scriptVisualEnabled = featureSwitches ? featureSwitches . scriptVisualEnabled : false ;:==:var scriptVisualAuthoringEnabled:==:featureSwitches ? featureSwitches . scriptVisualAuthoringEnabled : false ;
var glyph = positionedGlyph . glyph ;:==:var rect:==:glyph . rect ;
var exclusiveMinimum = args . form . exclusiveMinimum  |  |  false ;:==:var multipleOf:==:args . form . multipleOf  |  |  false ;
var minSize = pulseChart . defaultSettings . dots . minSize ;:==:var maxSize:==:pulseChart . defaultSettings . dots . maxSize ;
var request = require ( ' request ' ) ;:==:var autosave:==:require ( ' json - autosave ' ) ;
var rounded = props . rounded ;:==:var circle:==:props . circle ;
var style = this . style ;:==:var shape:==:this . shape ;
var frameState = scene . _ frameState ;:==:var camera:==:frameState . camera ;
var col = db . collection ( ' find_one_and_delete_with_generators ' ) ;:==:var r:==:yield col . insertMany ( [ a : 1 , b : 1 ] , w : 1 ) ;
var drop = tmp . drop ;:==:var quest:==:tmp . quest ;
var promptChar = this . options . promptChar ;:==:var numberFormat:==:kendo . getCulture ( this . options . culture ) . numberFormat ;
var commands = imports . commands ;:==:var util:==:imports . util ;
var x = backgroundBillboard . _ translate . x ;:==:var y:==:- ( backgroundBillboard . _ translate . y + height ) ;
var max = config . max  |  |  MAX ;:==:var text:==:trim ( config . text ) ;
var columnxUnit = parseFloat ( params . columnxUnit ) ;:==:var gutterxUnit:==:parseFloat ( params . gutterxUnit ) ;
var fs = require ( ' fs ' ) ;:==:var cache:==:App . Providers . _ cache    ;
var navigator = freeSelf & & freeSelf . navigator ;:==:var appVersion:==:( navigator & & navigator . appVersion  |  |  '' ) . toLowerCase ( ) ;
var servers = null , serversIndex = 0 ;:==:var server:==:gatewayCallbacks . server ;
var hash = opts . hash ;:==:var writeToDisk:==:opts . writeToDisk ;
var startPoint = curve . startPoint ;:==:var endPoint:==:curve . endPoint ;
var sass   = require ( ' gulp - sass ' ) ;:==:var server:==:require ( ' gulp - develop - server ' ) ;
var reactNative = require ( ' reactNative ' ) ;:==:var touchable:==:require ( ' touchable ' ) ;
var range_check = require ( ' range_check ' ) ;:==:var util:==:require ( ' util ' ) ;
var language = imports . language ;:==:var proc:==:imports . proc ;
var Model = _ componentsFxosMvcDistMvc . model ;:==:var appsHelper:==:_ jsLibHelpers . appsHelper ;
var isBlock = isBlockElement ( node ) ;:==:var isEmpty:==:_ isEmpty ( node , state ) ;
var thunkify = require ( ' thunkify ' ) ;:==:var unyield:==:require ( ' unyield ' ) ;
var r = Math . max ( this . right , region . right ) ;:==:var b:==:Math . max ( this . bottom , region . bottom ) ;
var Order = db . model ( ' order ' + random ( ) , orderSchema ) ;:==:var o:==:new order ( total : null ) ;
var options = $ tooltip . $ options = angular . extend ( , defaults , config ) ;:==:var promise:==:$ tooltip . $ promise    $ bsCompiler . compile ( options ) ;
var rotation = options . rotation ! = = undefined ? options . rotation : 0 ;:==:var scale:==:options . scale !    undefined ? options . scale : 1 ;
var gulp    = require ( ' gulp ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var c9 = imports . c9 ;:==:var menus:==:imports . menus ;
var a = ' foo ' + ' bar ' + x ( ) + ' moo ' + ' foo ' + y ( ) + ' x ' + ' y ' + ' z ' + q ( ) ;:==:var b:==:' foo ' + 1 + x ( ) + 2 + ' boo ' ;
var shell   = require ( ' gulp - shell ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var shape = options . shape ;:==:var holes:==:options . holes  |  |  [ ] ;
var ll = this . map . getLonLatFromPixel ( llPx ) ;:==:var ur:==:this . map . getLonLatFromPixel ( urPx ) ;
var adapter = global . adapter ;:==:var rejected:==:adapter . rejected ;
var height = _ props4 . height ;:==:var noContentRenderer:==:_ props4 . noContentRenderer ;
var semver = require ( ' semver ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var exec = require ( ' shelljs ' ) . exec ;:==:var semver:==:require ( ' semver ' ) ;
var ARRAY_LITERAL = ' ARRAY_LITERAL ' ;:==:var ARRAY_PATTERN:==:' ARRAY_PATTERN ' ;
var yosay = require ( ' yosay ' ) ;:==:var wiredep:==:require ( ' wiredep ' ) ;
var primitive = primitives [ p ] ;:==:var inputs:==:primitive . inputs ;
var p = internalPropertyArray [ i ] ;:==:var v:==:p . value ;
var t = $ ( ' # templates . report ' ) . clone ( ) ;:==:var js:==:$ ( ' div . js ' , this ) . text ( ) . trim ( ) ;
var box = kendo . effects . box ;:==:var transformOrigin:==:kendo . effects . transformOrigin ;
var track = mline . track ;:==:var kind:==:mline . kind ;
var dom = ' dom ' ;:==:var moment:==:' moment ' ;
var async = require ( ' async ' ) ;:==:var partials:==:require ( ' express - partials ' ) ;
var notAuthorizedError = errors . notAuthorizedError ;:==:var resourceNotFoundError:==:errors . resourceNotFoundError ;
var title = $ ( this ) . data ( ' title ' ) ;:==:var url:==:$ ( this ) . data ( ' url ' ) ;
var settings = this . settings ;:==:var data:==:this . data ;
var head = window . document . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var s:==:window . document . createElement ( ' style ' ) ;
var Person = db . model ( ' gh2562_a0 ' , personSchema ) ;:==:var band:==:db . model ( ' gh2562_a1 ' , bandSchema ) ;
var settings = this . settings ;:==:var camera:==:this . camera ;
var start = segment . start , end = segment . end ;:==:var delta:==:segment . delta , offsetIndex    segment . offsetIndex ;
var wrapper = that . wrapper ;:==:var disable:==:options . disable ;
var form = that . _ send_form ;:==:var area:==:that . _ send_area ;
var escape = utils . escape ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var uploadImgServer = config . uploadImgServer ;:==:var uploadImgShowBase64:==:config . uploadImgShowBase64 ;
var preset = this . h ( ' preset ' ) ;:==:var user:==:this . h ( ' user ' ) ;
var duration = ( this . _ currentImage & & this . _ currentImage . duration )  |  |  this . options . duration ;:==:var isVideo:==:isVideoSource ( this . _ currentImage ) ;
var event = e  |  |  window . event ;:==:var target:==:event . target  |  |  event . srcElement ;
var orig = e . originalEvent ;:==:var pos:==:$ ( this ) . parent ( ) . position ( ) ;
var entryPoint = options . entryPoint ;:==:var preferredSize:==:options . preferredSize ;
var navigate = imports . navigate ;:==:var watcher:==:imports . watcher ;
var primitives = this . primitives ;:==:var primitive:==:this . primitive ;
var breakState = traceur . codegeneration . generator . breakState ;:==:var breakContinueTransformer:==:traceur . codegeneration . generator . breakContinueTransformer ;
var props = data . props ;:==:var domProps:==:data . domProps ;
var sendButton = document . querySelector ( ' button#sendButton ' ) ;:==:var closeButton:==:document . querySelector ( ' button#closeButton ' ) ;
var positions = screenSpaceEventHandler . _ positions ;:==:var previousPositions:==:screenSpaceEventHandler . _ previousPositions ;
var mrow = cTop . createElement ( ' mrow ' ) ;:==:var c:==:cTop . createElement ( type ) ;
var url = options . url ;:==:var oniframeload:==:options . oniframeload ;
var gml = gmlWriter ( dom , value , isGeography ) ;:==:var crs:==:value . crs ;
var isStream = corePrimitives . isStream ;:==:var nullStream:==:coreStream . nullStream ;
var mongoose = require ( ' mongoose ' ) ;:==:var path:==:require ( ' path ' ) ;
var m = Math . min ( h , w ) ;:==:var size:==:Math . max ( 0 , Math . min ( m , m * parseFloat ( mxUtils . getValue ( this . style , ' size ' , this . size ) ) ) ) ;
var U8 = new primitiveType ( ' u8 ' , 1 , ' i ' , 0 , 255 ) ;:==:var u16:==:new primitiveType ( ' u16 ' , 2 , ' i ' , 0 , 65535 ) ;
var showAnim = $ . datepicker . _ get ( inst , ' showAnim ' ) ;:==:var duration:==:$ . datepicker . _ get ( inst , ' duration ' ) ;
var namespace = params . namespace ;:==:var translations:==:params . translations ;
var metadata = this . model . get ( ' metadata ' )  |  |  ;:==:var content:==:this . model . get ( ' content ' )  |  |  '' ;
var dropOverride = params . dropOverride = = = true ;:==:var proxied:==:params . proxied !    false ;
var test = require ( ' tap ' ) . test ;:==:var fs:==:require ( ' fs ' ) ;
var crypto = require ( ' crypto ' ) ;:==:var events:==:require ( ' events ' ) ;
var replaceStars = semver . replaceStars ;:==:var toComparators:==:semver . toComparators ;
var reactNativeAttributePayload = require ( ' reactNativeAttributePayload ' ) ;:==:var reactNativeComponentTree:==:require ( ' reactNativeComponentTree ' ) ;
var c9 = imports . c9 ;:==:var fs:==:imports . fs ;
var localChunkSize = $ ( ' # localChunkSize ' ) . val ( ) ;:==:var remoteChunkSize:==:$ ( ' # remoteChunkSize ' ) . val ( ) ;
var lat = center . lat ;:==:var lon:==:center . lon ;
var _ children = this . _ children ;:==:var len:==:_ children . length , i , j , tmp ;
var x = ( cc . isUndefined ( json [ ' x ' ] ) ) ? 0 : json [ ' x ' ] ;:==:var y:==:( cc . isUndefined ( json [ ' y ' ] ) ) ? 0 : json [ ' y ' ] ;
var TRANSLUCENCY_BY_DISTANCE_INDEX = pointPrimitive . translucency_by_distance_index ;:==:var distance_display_condition_index:==:pointPrimitive . distance_display_condition_index ;
var event = options . event ;:==:var underlyingNodes:==:options . underlyingNodes ;
var enterClass = ref . enterClass ;:==:var enterToClass:==:ref . enterToClass ;
var gulp = require ( ' gulp ' ) ;:==:var zip:==:require ( ' gulp - zip ' ) ;
var custom = rectangle . custom  |  |  ;:==:var model:==:rectangle . _ model ;
var f = new foo ( ) ;:==:var b:==:new bar ( ) ;
var x = vertexNode . getAttribute ( ' x ' ) ;:==:var y:==:vertexNode . getAttribute ( ' y ' ) ;
var offsetY = defaultValue ( options . offsety , 0 ) ;:==:var width:==:defaultValue ( options . width , 0 ) ;
var span = body . html ( ' ' ) . append ( ' span ' ) ;:==:var div:==:body . insert ( ' div ' , ' span ' ) ;
var zoomInLabel = options . zoomInLabel ! = = undefined ? options . zoomInLabel : ' + ' ;:==:var zoomOutLabel:==:options . zoomOutLabel !    undefined ? options . zoomOutLabel : ' \u2212 ' ;
var readdir = promisify ( fs . readdir ) ;:==:var readFile:==:promisify ( fs . readFile ) ;
var video = instance . _ video ;:==:var usingVideo:==:instance . _ usingVideo ( ) ;
var x = P3x * QB1 ( pct ) + P2x * QB2 ( pct ) + P1x * QB3 ( pct ) ;:==:var y:==:P3y * QB1 ( pct ) + P2y * QB2 ( pct ) + P1y * QB3 ( pct ) ;
var n = new rangeNode ( start , end , step ) ;:==:var e:==:new constantNode ( 3 ) ;
var i = frameIndex * curveTimeline . bezier_size ;:==:var curves:==:this . curves ;
var Dispatcher = require ( ' Dispatcher ' ) ;:==:var fluxContainer:==:require ( ' fluxContainer ' ) ;
var thinkjs = require ( ' thinkjs ' ) ;:==:var path:==:require ( ' path ' ) ;
var red = Color . floatToByte ( color . red ) ;:==:var green:==:color . floatToByte ( color . green ) ;
var reactNativeInjection = require ( ' reactNativeInjection ' ) ;:==:var reactNativeMount:==:require ( ' reactNativeMount ' ) ;
var fs = imports . fs ;:==:var commands:==:imports . commands ;
var s3tc = extras . compressedImage3dTiles . s3tc ;:==:var pvrtc:==:extras . compressedImage3dTiles . pvrtc1 ;
var X = cs . XW * fn_g ( L ) ;:==:var Y:==:cs . YW * fn_g ( M ) ;
var outlineColor = property . getValueOrDefault ( this . _ outlineColorProperty , time , color . black ) ;:==:var distanceDisplayCondition:==:this . _ distanceDisplayConditionProperty . getValue ( time ) ;
var url = ( typeof this . url ! = ' object ' ? this . url : this . url . get ) ;:==:var records:==:$ ( ' # grid_'+ this . name + ' _ records ' ) ;
var ux = window . app . ns ( ' ux ' ) ;:==:var ut:==:window . app . ns ( ' ut ' ) ;
var disconnecting = ' disconnecting ' ;:==:var unauthorized:==:' unauthorized ' ;
var key = validator . trim ( req . body . key )  |  |  '' ;:==:var name:==:validator . trim ( req . body . name )  |  |  '' ;
var filename = attrs . filename = node . file . fullPath ;:==:var str:==:node . file . str ;
var bool = row . find ( ' . bool ' ) . val ( ) ;:==:var field:==:row . find ( ' . field ' ) . val ( ) ;
var O_SYNC = constants . O_SYNC  |  |  0 ;:==:var O_TRUNC:==:constants . O_TRUNC  |  |  0 ;
var bubbles = this . bubbles = options . bubbles ;:==:var slices:==:this . slices    options . slices ;
var l = event . outputBuffer . getChannelData ( 0 ) ;:==:var r:==:event . outputBuffer . getChannelData ( 1 ) ;
var lights = scene . userData . lights ;:==:var keys:==:object . keys ( lights ) ;
var version = req . params . version ;:==:var user:==:req . user ;
var value = element ( by . binding ( ' value  |  date : ' yyyy - MM ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var gl = this . gl ;:==:var renderer:==:this . renderer ;
var cursor = Base . cursor ;:==:var color:==:Base . color ;
var categorical = dataView ? dataView . categorical : null ;:==:var dataPoint:==:dataPoints [ categoryIndex ] ;
var closeBottom = rectangle . closeBottom ;:==:var closeTop:==:rectangle . closeTop ;
var h = ! opt  |  |  ! opt . hv  |  |  opt . hv [ 0 ] ;:==:var v:==:! opt  |  |  ! opt . hv  |  |  opt . hv [ 1 ] ;
var currDB = currConn . getdb ( currdbName ) ;:==:var targetdb:==:targetConn . getdb ( targetdbName ) ;
var dynCall_vi = Module [ ' dynCall_vi ' ] = asm [ ' dynCall_vi ' ] ;:==:var dynCall_iiiidd:==:Module [ ' dynCall_iiiidd ' ]    asm [ ' dynCall_iiiidd ' ] ;
var Role = goog . a11y . aria . Role ;:==:var State:==:goog . a11y . aria . State ;
var new_source = new_source . replace ( ' Help ' , ' Hello ' ) ;:==:var new_source:==:new_source . replace ( ' 17 ' , ' 18 ' ) ;
var camera = this . camera ;:==:var app:==:this . app ;
var title = this . _ options . title ;:==:var submitButton:==:this . _ options . submitButton ;
var data = msg . data  |  |  ;:==:var user:==:data & & data . userId & & workspace . getUser ( data . userId ) ;
var rotation = ellipse . rotation ;:==:var height:==:ellipse . height ;
var isAdmin = results . isAdmin ;:==:var isGlobalModerator:==:results . isGlobalModerator ;
var caret = kendo . caret ;:==:var ui:==:kendo . ui ;
var collections = dataconfig . collections ;:==:var db:==:dataconfig . db ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var zip:==:require ( ' gulp - zip ' ) ;
var claimedLineDisplay = windows . devices . pointOfService . claimedLineDisplay ;:==:var lineDisplayTextAttribute:==:windows . devices . pointOfService . lineDisplayTextAttribute ;
var options = that . options ;:==:var status:==:STATUS [ file . status ] ;
var cssPropertyOperations = require ( ' cssPropertyOperations ' ) ;:==:var domLazyTree:==:require ( ' domLazyTree ' ) ;
var t = this . _ stack . pop ( ) ;:==:var c:==:this . _ stack . pop ( ) ;
var settings = imports . settings ;:==:var Frame:==:debug . Frame ;
var i d = typeof options . i d ! = ' undefined ' ? options . i d : this . getIdentity ( object ) ;:==:var store:==:this . store ;
var scrollTop = this . elInput _ . scrollTop ;:==:var scrollLeft:==:this . elInput _ . scrollLeft ;
var invalidHeaderError = errors . invalidHeaderError ;:==:var requestExpiredError:==:errors . requestExpiredError ;
var message = error . message  |  |  String ( error ) ;:==:var filename:==:( error . filename ? ' ' + error . filename : ' ' ) ;
var query = _ ref . query ;:==:var hash:==:_ ref . hash ;
var pixelConverter = jsCommon . pixelConverter ;:==:var arrayExtensions:==:jsCommon . arrayExtensions ;
var Marked = require ( ' Marked ' ) ;:==:var React:==:require ( ' React ' ) ;
var rename = require ( ' gulp - rename ' ) ;:==:var cache:==:require ( ' gulp - cached ' ) ;
var tree = this . tree ;:==:var url:==:this . url ;
var SHOW_INDEX = Polyline . SHOW_INDEX ;:==:var WIDTH_INDEX:==:Polyline . WIDTH_INDEX ;
var Controller = _ fxosMvcDistMvc . controller ;:==:var progressDialogView:==:_ appJsViewsProgressDialogView [ ' default ' ] ;
var expect = chai . expect ;:==:var Emitter:==:events . eventEmitter ;
var START = C . START = 0x11 ;:==:var STOP:==:C . STOP    0x12 ;
var shr64_hi = utils . shr64_hi ;:==:var shr64_lo:==:utils . shr64_lo ;
var chapter = store . createRecord ( ' chapter ' , title : ' the story begins ' ) ;:==:var relationship:==:chapter . _ internalModel . _ relationships . get ( ' pages ' ) ;
var createBlock = traceur . codegeneration . parseTreeFactory . createBlock ;:==:var createBooleanLiteral:==:traceur . codegeneration . parseTreeFactory . createBooleanLiteral ;
var url = require ( ' url ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var from = codeMirror . indexFromPos ( change . from ) ;:==:var to:==:codeMirror . indexFromPos ( change . to ) ;
var start = node . loc . start . line ;:==:var end:==:node . loc . end . line ;
var startScreen = windows . ui . startScreen ;:==:var jumpList:==:startScreen . jumpList ;
var os = require ( ' os ' ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var _ im_get_fixed_len = Module [ ' _ im_get_fixed_len ' ] = asm [ ' _ im_get_fixed_len ' ] ;:==:var _ im_cancel_last_choice:==:Module [ ' _ im_cancel_last_choice ' ]    asm [ ' _ im_cancel_last_choice ' ] ;
var stagger = elementData . stagger ;:==:var timings:==:elementData . timings ;
var async = require ( ' async ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var p2 = input . p2 ;:==:var r:==:b2Math . subtractvv ( p1 , p2 ) ;
var l = _ l ;:==:var accu:==:_ accu ;
var headerCursor = this . headerCursor ;:==:var items:==:headerCursor . messagesSlice . items ;
var defineProperty = object . defineProperty ;:==:var getOwnPropertyNames:==:object . getOwnPropertyNames ;
var beforeLeave = data . beforeLeave ;:==:var leave:==:data . leave ;
var cellToDate = t . cellToDate ;:==:var dateToCell:==:t . dateToCell ;
var positions = corridorGeometry . _ positions ;:==:var height:==:corridorGeometry . _ height ;
var height = $ embediFrame . attr ( ' height ' ) ;:==:var name:==:$ embediFrame . attr ( ' name ' ) ;
var cpx2 = shape . cpx2 ;:==:var cpy2:==:shape . cpy2 ;
var reactHostComponent = require ( ' reactHostComponent ' ) ;:==:var reactNativeComponentEnvironment:==:require ( ' reactNativeComponentEnvironment ' ) ;
var g = new Backbone . Model ( i d : 21 , label : ' g ' ) ;:==:var h:==:new Backbone . Model ( i d : 22 , label : ' h ' ) ;
var force = _ ref . force ;:==:var event:==:_ ref . event ;
var iconStyleRight = _ props . iconStyleRight ;:==:var onTitleTouchTap:==:_ props . onTitleTouchTap ;
var negative = $ . data ( this , ' numeric . negative ' ) ;:==:var decimalPlaces:==:$ . data ( this , ' numeric . decimalPlaces ' ) ;
var Node = mod . Node ;:==:var avlTree:==:mod . avlTree ;
var silent_redirect_uri = _ ref . silent_redirect_uri ;:==:var silentRequestTimeout:==:_ ref . silentRequestTimeout ;
var parseTreeTransformer = traceur . codegeneration . parseTreeTransformer ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var help01 = document . getElementById ( ' help01 ' ) ;:==:var help02:==:document . getElementById ( ' help02 ' ) ;
var http = require ( ' http ' ) ;:==:var merge:==:require ( ' utils - merge ' ) ;
var doc = e . doc ;:==:var tab:==:doc . tab ;
var childNodeInterface = scope . childNodeInterface ;:==:var node:==:scope . wrappers . node ;
var labelledStatement = traceur . syntax . trees . labelledStatement ;:==:var literalExpression:==:traceur . syntax . trees . literalExpression ;
var rowStartIndex = _ ref . rowStartIndex ;:==:var rowStopIndex:==:_ ref . rowStopIndex ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var each:==:require ( ' gulp - each ' ) ;
var parseqs = require ( ' parseqs ' ) ;:==:var parser:==:require ( ' engine . io - parser ' ) ;
var canvasGraphics = displayCanvas . canvasGraphics ;:==:var createScratchCanvas:==:displayCanvas . createScratchCanvas ;
var b = Ext . eventObject . setEvent ( c ) ;:==:var a:==:this . fly ( b . getTarget ( ) ) ;
var forkContext = this . forkContext ;:==:var brokenForkContext:==:this . popBreakContext ( ) . brokenForkContext ;
var x2 = pf ( node . getAttribute ( ' x2 ' ) )  |  |  ( x1 + pf ( node . getAttribute ( ' width ' ) ) )  |  |  ( pf ( node . getAttribute ( ' cx ' ) ) + pf ( node . getAttribute ( ' r ' ) ) )  |  |  0 ;:==:var y1:==:pf ( node . getAttribute ( ' y1 ' ) )  |  |  pf ( node . getAttribute ( ' y ' ) )  |  |  ( pf ( node . getAttribute ( ' cy ' ) ) - pf ( node . getAttribute ( ' r ' ) ) )  |  |  0 ;
var source = this . source ;:==:var template:==:this . _ templateSection ;
var rangeToSegments = t . rangeToSegments ;:==:var cellToDate:==:t . cellToDate ;
var sinon = require ( ' sinon ' ) ;:==:var path:==:require ( ' path ' ) ;
var formats = this . _ formats ;:==:var RULES:==:this . RULES ;
var encodingType = getValue ( options . encodingType , camera . encodingType . jpeg ) ;:==:var mediaType:==:getValue ( options . mediaType , camera . mediaType . picture ) ;
var winningRev = metadata . winningRev ;:==:var deleted:==:metadata . deleted ;
var tablixObjects = visuals . controls . internal . tablixObjects ;:==:var urlUtils:==:jsCommon . urlUtils ;
var React = require ( ' React ' ) ;:==:var pixelRatio:==:require ( ' pixelRatio ' ) ;
var massageSelector = localUtils . massageSelector ;:==:var massageSort:==:localUtils . massageSort ;
var rowIndex = _ ref3 . rowIndex ;:==:var rowWrapperStyle:==:this . props . rowWrapperStyle ;
var calendar = this . calendar = Factory ( ' calendar ' , calOverrides ) ;:==:var storeFactory:==:core . storeFactory ;
var parse = propertyTypes . array . parse ;:==:var stringify:==:propertyTypes . array . stringify ;
var unwrapIfNeeded = scope . unwrapIfNeeded ;:==:var wrapNodeList:==:scope . wrapNodeList ;
var gl = this . gl ;:==:var shader:==:filter . shaders [ gl . i d ] ;
var left = ~dir . indexOf ( ' left ' ) & & ' left ' ;:==:var right:==:~dir . indexOf ( ' right ' ) & & ' right ' ;
var properties = this . _ propertiesChanged ;:==:var createVertexArray:==:this . _ createVertexArray ;
var centerToleranceSquared = defined ( ellipsoid ) ? ellipsoid . _ centerToleranceSquared : wgs84CenterToleranceSquared ;:==:var p:==:scaleToGeodeticSurface ( cartesian , oneOverRadii , oneOverRadiiSquared , centerToleranceSquared , cartesianToCartographicp ) ;
var base64StreamDecoder = goog . require ( ' goog . net . streams . base64StreamDecoder ' ) ;:==:var pbStreamParser:==:goog . require ( ' goog . net . streams . pbStreamParser ' ) ;
var expect = chai . expect ;:==:var assert:==:require ( ' assert ' ) ;
var symbolNode = math . expression . node . symbolNode ;:==:var constantNode:==:math . expression . node . constantNode ;
var scrollLeft = htmlNode . scrollLeft ;:==:var scrollTop:==:htmlNode . scrollTop ;
var store = new datastore ( tests . data . readOnlyItemFileTestTemplates . getTestData ( ' countries_withnull ' ) ) ;:==:var d:==:new doh . deferred ( ) ;
var url = URL . parse ( req . url ) . pathname ;:==:var dirname:==:path . dirname ( url ) ;
var value = _ ref . value ;:==:var styles:==:_ ref . styles ;
var rctEventEmitter = require ( ' rctEventEmitter ' ) ;:==:var reactNativeBridgeEventPlugin:==:require ( ' reactNativeBridgeEventPlugin ' ) ;
var template = this . _ template ;:==:var list:==:this . list ;
var constraints = this . constraints ;:==:var arbiters:==:this . arbiters ;
var focusRippleOpacity = _ props3 . focusRippleOpacity ;:==:var href:==:_ props3 . href ;
var btnMin = o . buttons . btnMin ;:==:var btnMax:==:o . buttons . btnMax ;
var strList = db . model ( ' strList ' ) ;:==:var t:==:new strList ( ) ;
var time = sidx . earliest_presentation_time ;:==:var start:==:info . range . start + sidx . offset + sidx . first_offset + sidx . size ;
var createReturnStatement = parseTreeFactory . createReturnStatement ;:==:var createStatementList:==:parseTreeFactory . createStatementList ;
var pointPrimitivesToUpdate = pointPrimitiveCollection . _ pointPrimitivesToUpdate ;:==:var modelMatrix:==:pointPrimitiveCollection . _ modelMatrix ;
var entityManager = firepad . entityManager ;:==:var parseHtml:==:firepad . parseHtml ;
var dynCall_diii = Module [ ' dynCall_diii ' ] = asm [ ' dynCall_diii ' ] ;:==:var dynCall_dii:==:Module [ ' dynCall_dii ' ]    asm [ ' dynCall_dii ' ] ;
var opt = t . opt ;:==:var renderBasic:==:t . renderBasic ;
var word = line . children [ wordKey ] ;:==:var x:==:dpr * ( textGroup . x + line . x + word . x ) ;
var position = this . position ;:==:var spaces:==:this . spaces , out    spine . Utils . setArraySize ( this . positions , spacesCount * 3 + 2 ) , world    null ;
var value = _ ref2 . value ;:==:var group:==:_ ref2 . group ;
var isString = logic . _ isString ;:==:var isArrayWhere:==:logic . _ isArrayWhere ;
var gfm = options . gfm ;:==:var commonmark:==:options . commonmark ;
var autoload = ! ! opt_autoload ;:==:var name:==:opt_name  |  |  ds . getDataName ( ) ;
var url = require ( ' url ' ) ;:==:var extend:==:require ( ' extend ' ) ;
var uSquared = ellipsoidGeodesic . _ uSquared ;:==:var a:==:ellipsoidGeodesic . _ ellipsoid . maximumRadius ;
var View = require ( ' View ' ) ;:==:var resolveBoxStyle:==:require ( ' resolveBoxStyle ' ) ;
var output = options . output  |  |  false ;:==:var dialogClass:==:options . dialogClass  |  |  ' ' ;
var models = _ _ alloyId22 . models ;:==:var len:==:models . length ;
var nameify = utils . nameify ;:==:var Observable:==:Rx . Observable ;
var appear = ref . appear ;:==:var afterAppear:==:ref . afterAppear ;
var geofence = report . geofence ;:==:var i d:==:geofence . i d ;
var fillColor = c . state . fillColor ;:==:var o:==:mxUtils . getValue ( this . style , mxBpmnShape . prototype . miscEnum . outline , mxBpmnShape . prototype . eventTypeEnum . none ) ;
var registerObject = scope . registerObject ;:==:var registerWrapper:==:scope . registerWrapper ;
var bluebird = require ( ' bluebird ' ) ;:==:var q:==:require ( ' q ' ) ;
var display = opts . display ;:==:var isHorizontal:==:me . isHorizontal ( ) ;
var mode = renderSettings . mode ;:==:var el:==:renderSettings . el ;
var y = - _ vector3 . y * _ svgHeightHalf ;:==:var node:==:object . node ;
var condition = this . transformAny ( tree . condition ) ;:==:var ifClause:==:this . transformToBlockOrStatement ( tree . ifClause ) ;
var m = this . transform ;:==:var dpr:==:ctx . dpr  |  |  1 ;
var rangeList = selection . rangeList ;:==:var ranges:==:( keepOrder ? selection : rangeList ) . ranges ;
var http = require ( ' http ' ) ;:==:var Transform:==:require ( ' stream ' ) . Transform ;
var complex = math . complex ;:==:var Unit:==:math . type . Unit ;
var vizion   = require ( ' vizion ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' pm2 : god ' ) ;
var cancel = onEvt ( el , ' touchcancel ' , onReleasedItem , this ) ;:==:var scroll:==:onEvt ( window , ' scroll ' , onReleasedItem , this ) ;
var rightWalls = shuffle ( rightWalls ) ;:==:var downWalls:==:shuffle ( downWalls ) ;
var reactNativeAttributePayload = require ( ' reactNativeAttributePayload ' ) ;:==:var textInputState:==:require ( ' textInputState ' ) ;
var notebookId = $ ( this ) . parent ( ) . attr ( ' notebookId ' ) ;:==:var userId:==:$ ( this ) . parent ( ) . attr ( ' userId ' ) ;
var qos = opts . qos  |  |  0 ;:==:var retain:==:opts . retain ? protocol . RETAIN_MASK : 0 ;
var r = floor ( random ( 0 , happy . length ) ) ;:==:var li:==:createElement ( ' li ' , happy [ r ] ) ;
var width = params . width  |  |  window . innerWidth  |  |  1 ;:==:var height:==:params . height  |  |  window . innerHeight  |  |  1 ;
var url = domAgent . url ;:==:var location:==:node . location ;
var async = require ( ' async ' ) ;:==:var express:==:require ( ' express ' ) ;
var httpDo = p5 . prototype . httpDo ;:==:var loadjson:==:p5 . prototype . loadjson ;
var net = require ( ' net ' ) ;:==:var assert:==:require ( ' chai ' ) . assert ;
var Nil = mod . Nil ;:==:var sbTree:==:mod . sbTree ;
var isArray = array . isArray ;:==:var defined:==:require ( ' defined ' ) ;
var fs = require ( ' fs ' ) ;:==:var argparse:==:require ( ' argparse ' ) ;
var m = trace . match ( filenameRE ) ;:==:var map:==:m & & mapConsumers [ m [ 1 ] ] ;
var oldKeyGetter = this . _ oldKeyGetter ;:==:var newKeyGetter:==:this . _ newKeyGetter ;
var editor = this . editor ;:==:var $ textElem:==:editor . $ textElem ;
var cancelAnimationFramePolyfill = require ( ' cancelAnimationFramePolyfill ' ) ;:==:var requestAnimationFramePolyfill:==:require ( ' requestAnimationFramePolyfill ' ) ;
var _ main = Module [ ' _ main ' ] = asm [ ' _ main ' ] ;:==:var _ rand_r:==:Module [ ' _ rand_r ' ]    asm [ ' _ rand_r ' ] ;
var navOptions = options . navOptions [ courseIdForOptions ] ;:==:var admOptions:==:options . admOptions [ courseIdForOptions ] ;
var async = require ( ' async ' ) ;:==:var staticPrefix:==:options . staticPrefix ;
var len = element . style . length ;:==:var style:==:element . style ;
var KIND_PACKAGE = scopeAnalyzer . kind_package ;:==:var kind_hidden:==:scopeAnalyzer . kind_hidden ;
var minute = getOption ( options , ' minute ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;:==:var second:==:getOption ( options , ' second ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;
var m = minutes ;:==:var s:==:seconds ;
var returnStatement = traceur . syntax . trees . returnStatement ;:==:var yieldStatement:==:traceur . syntax . trees . yieldStatement ;
var scene = document . createElement ( ' a - scene ' ) ;:==:var assets:==:document . createElement ( ' a - assets ' ) ;
var concat = require ( ' concat - stream ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var track = tracks [ trackName ] ;:==:var codec:==:track . levelCodec  |  |  track . codec ;
var from = currentRange . from ;:==:var to:==:currentRange . to + 1 ;
var c = tree . c = b . firstChild ;:==:var sr:==:tree . sr    b . createShadowRoot ( ) ;
var obj = this . obj ;:==:var name:==:e . name ;
var frame = frames [ i ] ;:==:var sc:==:this . _ scale*frame . scale ;
var x = this . x , y = this . y , z = this . z , w = this . w ;:==:var e:==:m . elements ;
var PIXEL_OFFSET_INDEX = Billboard . PIXEL_OFFSET_INDEX ;:==:var EYE_OFFSET_INDEX:==:Billboard . EYE_OFFSET_INDEX ;
var x = quadraticAt ( x0 , x1 , x2 , tx ) ;:==:var y:==:quadraticAt ( y0 , y1 , y2 , ty ) ;
var db = this . _ db ;:==:var transaction:==:this . _ db . transaction ( [ ' places ' ] , ' readwrite ' ) ;
var page = this . pageCache [ data . pageNum - 1 ] ;:==:var intentState:==:page . intentStates [ data . intent ] ;
var request = evt . request ;:==:var body:==:request . body ;
var React = require ( ' React ' ) ;:==:var progressBar:==:require ( ' progressBarAndroid ' ) ;
var pid = result . rows [ 0 ] . pg_backend_pid ;:==:var psql:==:' psql ' ;
var getOffsetParent = _ tetherBase$Utils . getOffsetParent ;:==:var extend:==:_ tetherBase$Utils . extend ;
var complex = math . complex ;:==:var matrix:==:math . matrix ;
var username = $ ( this ) . attr ( ' username ' ) ;:==:var company:==:$ ( this ) . attr ( ' company ' ) ;
var goals = this . goals ( track . event ( ) ) ;:==:var revenue:==:track . revenue ( ) ;
var chart = me . chart ;:==:var options:==:me . options ;
var fonttype = fonttype  |  |  ' helvetica ' ;:==:var canvas:==:acroForm . internal . calculateFontSpace . canvas  |  |  ( acroForm . internal . calculateFontSpace . canvas    document . createElement ( ' canvas ' ) ) ;
var slices = defaultValue ( options . slices , 128 ) ;:==:var numberOfVerticalLines:==:math . max ( defaultValue ( options . numberOfVerticalLines , 16 ) , 0 ) ;
var lineJoin = state . lineJoin ;:==:var lineWidth:==:state . lineWidth ;
var uiEvent = registerGenericEvent ( ' uiEvent ' , event ) ;:==:var customEvent:==:registerGenericEvent ( ' customEvent ' , event ) ;
var assert = require ( ' assert ' ) ;:==:var mockery:==:require ( ' mockery ' ) ;
var x = this . x ;:==:var yl:==:this . yl ;
var hash = location . hash  |  |  '' ;:==:var state:==:location . state  |  |  null ;
var getName = options . getName ;:==:var defaultParallel:==:options . defaultParallel  |  |  false ;
var type = evt . type ;:==:var charCode:==:evt . charCode ;
var destination = this . destination ;:==:var windowSize:==:this . windowSize ;
var safeApply = leafletHelpers . safeApply ;:==:var isDefined:==:leafletHelpers . isDefined ;
var pixelRatio = frameState . pixelRatio ;:==:var viewState:==:frameState . viewState ;
var keys = kendo . keys ;:==:var ui:==:kendo . ui ;
var highlightsSaturation = params . highlightsSaturation ;:==:var splitPoint:==:params . splitPoint ;
var networkPdfManager = corePdfManager . networkPdfManager ;:==:var globalScope:==:sharedGlobal . globalScope ;
var holderURL = flags . holderURL ;:==:var engineSettings:==:extend ( _ engineSettings , null ) ;
var type = ref . type ;:==:var timeout:==:ref . timeout ;
var c = face . c ;:==:var d:==:face . d ;
var horizontalPosition = _ props . horizontalPosition ;:==:var label:==:_ props . label ;
var l = parseFloat ( s . left ) ;:==:var t:==:parseFloat ( s . top ) ;
var d1 = _ addDiv ( ' d1 ' ) ;:==:var d2:==:_ addDiv ( ' d2 ' ) ;
var dayNames = settings . dayNames  |  |  this . local . dayNames ;:==:var monthNumbers:==:settings . monthNumbers  |  |  this . local . monthNumbers ;
var layout = imports . layout ;:==:var settings:==:imports . settings ;
var borderColor = nodeItemStyleModel . get ( ' borderColor ' ) ;:==:var borderColorSaturation:==:nodeItemStyleModel . get ( ' borderColorSaturation ' ) ;
var Image = require ( ' Image ' ) ;:==:var toolbarAndroid:==:require ( ' toolbarAndroid ' ) ;
var duration = isUndefined ( v [ ' duration ' ] ) ? 2 : v [ ' duration ' ] ;:==:var timeout:==:isUndefined ( v [ ' timeout ' ] ) ? 250 : v [ ' timeout ' ] ;
var i d = jqThis . data ( ' i d ' ) ;:==:var name:==:jqThis . parents ( ' . pl - item ' ) . find ( ' . name ' ) . text ( ) ;
var winston = require ( ' winston ' ) ;:==:var nconf:==:require ( ' nconf ' ) ;
var skinnedNodesIds = model . _ loadResources . skinnedNodesIds ;:==:var length:==:skinnedNodesIds . length ;
var from = this . from ;:==:var distance:==:distanceFromIntersectionSquared ( from , this . direction , position ) ;
var session = this . session ;:==:var chunks:==:this . chunks ;
var assign = require ( ' object - assign ' ) ;:==:var async:==:require ( ' async ' ) ;
var content = options . content ;:==:var delay:==:options . delay ;
var o = this . options ;:==:var menu:==:this . menu ;
var clips = this . _ clips ;:==:var len:==:clips . length ;
var prompt    = require ( ' prompt - sync ' ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var t = height - pbottom . size ;:==:var w:==:width ;
var yaml = require ( ' js - yaml ' ) ;:==:var express:==:require ( ' express ' ) ;
var color = itemModel . get ( colorQuery ) ;:==:var opacity:==:itemModel . get ( opacityQuery ) ;
var Wire = goog . labs . net . webChannel . wire ;:==:var wirev8:==:goog . labs . net . webChannel . wirev8 ;
var querystring = require ( ' querystring ' ) ;:==:var url:==:require ( ' url ' ) ;
var greenA700 = exports . greenA700 = ' # 00c853 ' ;:==:var lightGreen50:==:exports . lightGreen50    ' # f1f8e9 ' ;
var node = optimization . node ;:==:var sourceIndex:==:optimization . sourceIndex ;
var back = document . getElementById ( ' back ' ) ;:==:var activationScreen:==:uiManager & & uiManager . activationScreen ;
var tabManager = imports . tabManager ;:==:var menu:==:imports . menu ;
var axon    = require ( ' pm2-axon ' ) ;:==:var domain:==:require ( ' domain ' ) ;
var touchStartEventName = visuals . touchUtils . touchStartEventName ( ) ;:==:var touchEndEventName:==:visuals . touchUtils . touchEndEventName ( ) ;
var transport = content . transport ;:==:var payloads:==:desc . payloads  |  |  [ ] ;
var m = create ( matcher ) ;:==:var type:==:typeOf ( expectation ) ;
var lineno = suspension . lineno ;:==:var colno:==:suspension . colno ;
var Scale = Tone_signal_Scale ;:==:var timelineSignal:==:tone_signal_timelinesignal ;
var path = require ( ' path ' ) ;:==:var sass:==:require ( ' gulp - sass ' ) ;
var EMPTY_STRING = unicodeData . empty_string ;:==:var whitespace:==:unicodeData . whitespace ;
var validatorError = schemaType . validatorError ;:==:var validationError:==:mongoose . document . validationError ;
var w = ( this . maxWidth & & this . maxWidth < o . width ) ? this . maxWidth : o . width ;:==:var x:==:w * text . h_offsets [ this . textAlign |  | 'left ' ] ;
var LTR = goog . i18n . bidi . Dir . LTR ;:==:var RTL:==:goog . i18n . bidi . Dir . RTL ;
var tabStops = emmet . tabStops ;:==:var utils:==:emmet . utils . common ;
var Set = require ( ' Set ' ) ;:==:var springConfig:==:require ( ' springConfig ' ) ;
var ext = imports . ext ;:==:var ui:==:imports . ui ;
var options   = bs . options ;:==:var port:==:options . get ( ' port ' ) ;
var istanbul = require ( ' browserify - istanbul ' ) ;:==:var isparta:==:require ( ' isparta ' ) ;
var shapes = this . shapes = options . shapes ;:==:var clearCatcher:==:options . clearCatcher ;
var services = app . ns ( ' services ' ) ;:==:var ux:==:app . ns ( ' ux ' ) ;
var locationX = touch & & touch . locationX ;:==:var locationY:==:touch & & touch . locationY ;
var isPositive = math . isPositive ;:==:var bignumber:==:math . bignumber ;
var pkg = input . pkg ;:==:var callbacks:==:input . callbacks ;
var menus = imports . menus ;:==:var preview:==:imports . preview ;
var rect = s . rect ( 10 , 20 , 30 , 40 ) ;:==:var circle:==:s . circle ( 10 , 20 , 30 ) ;
var chalk = require ( ' chalk ' ) ;:==:var table:==:require ( ' text - table ' ) ;
var warningClient = raygun . warningClient ;:==:var connect:==:imports . connect ;
var denyMime = getMimeRegex ( this . settings . denyMime ) ;:==:var maxSize:==:this . settings . maxSize  |  |  false ;
var heading = defaultValue ( options . heading , 0 . 0 ) ;:==:var pitch:==:defaultValue ( options . pitch , -CesiumMath . pi_over_two ) ;
var n = $ ( node ) . prevAll ( node . nodeName . toLowerCase ( ) ) . length + 1 ;:==:var i d:==:$ ( node ) . attr ( ' i d ' ) ;
var n = new conditionalNode ( condition , a , b ) ;:==:var e:==:new constantNode ( 4 ) ;
var uniform = uniforms [ i ] ;:==:var name:==:uniform . name ;
var ensureLoggedIn = imports [ ' c9 . login ' ] . ensureLoggedIn ( ) ;:==:var handler:==:imports [ ' preview . handler ' ] ;
var scope = this . scope _ ;:==:var parent:==:scope . parent ;
var hint = require ( ' jshint ' ) . JSHINT ;:==:var uglify:==:require ( ' uglify - js ' ) ;
var run = Ember . run ;:==:var attr:==:DS . attr ;
var metadata = this . _ metadata ;:==:var headers:==:metadata . _ headers ;
var editor = e . editor ;:==:var command:==:e . command ;
var geometry = this . geometry ;:==:var matrixWorld:==:this . matrixWorld ;
var s = this . _ createRootHostViewScope ( ) ;:==:var hostProtoView:==:view_ref_1 . internalProtoView ( hostProtoViewRef ) ;
var frame = frames [ key ] ;:==:var spriteFrame:==:spriteFrames [ key ] ;
var sockjs = require ( ' sockjs ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' sockjs - client : test - server : app ' ) ;
var route = response . routes [ 0 ] ;:==:var path:==:route . overview_path ;
var Inject = makeParamDecorator ( ' inject ' , [ [ ' token ' , undefined ] ] ) ;:==:var optional:==:makeParamDecorator ( ' optional ' , [ ] ) ;
var last_exception = graphiteStats . last_exception  |  |  0 ;:==:var flush_time:==:graphiteStats . flush_time  |  |  0 ;
var async = require ( ' async ' ) ;:==:var os:==:require ( ' os ' ) ;
var semimajorAxis = this . _ semimajorAxis ;:==:var x:==:cartographic . longitude * semimajorAxis ;
var caseClause = traceur . syntax . trees . caseClause ;:==:var identifierExpression:==:traceur . syntax . trees . identifierExpression ;
var m = adapter [ ' transform : get ' ] ( node , true ) . set ( 1,0,0,1,0,0 ) ;:==:var filter:==:node . filters [ ident ] ;
var width = imgData . width ;:==:var height:==:imgData . height ;
var number = this . params . number ;:==:var debounce:==:this . params . debounce ;
var rightDelimiter = parserConf . rightDelimiter  |  |  ' ' ;:==:var leftDelimiter:==:parserConf . leftDelimiter  |  |  ' ' ;
var responseType = options . responseType ;:==:var method:==:defaultValue ( options . method , ' get ' ) ;
var path = require ( ' path ' ) ;:==:var electron:==:require ( ' electron ' ) ;
var redA200 = exports . redA200 = ' # ff5252 ' ;:==:var redA400:==:exports . redA400    ' # ff1744 ' ;
var mdNoAsterisk = $ mdUtil . parseAttributeBoolean ( attr . mdNoAsterisk ) ;:==:var tagName:==:element [ 0 ] . tagName . toLowerCase ( ) ;
var a = new constructor ( initialLen ) ;:==:var s:==:a . subarray ( start , end ) ;
var width = jpxImage . width ;:==:var height:==:jpxImage . height ;
var cx = polar . cx ;:==:var cy:==:polar . cy ;
var line = options . line ;:==:var identifier:==:options . identifierPrefix ;
var isOrIsAncestorOf = dom . isOrIsAncestorOf ;:==:var getDocument:==:dom . getDocument ;
var and = stdlib . Atomics . and ;:==:var fround:==:stdlib . Math . fround ;
var polygonOffset = defaultValue ( rs . polygonOffset , ) ;:==:var scissorTest:==:defaultValue ( rs . scissorTest , ) ;
var upgradeDocumentTree = scope . upgradeDocumentTree ;:==:var upgradeAll:==:scope . upgradeAll ;
var textRenderingMode = sharedUtil . textRenderingMode ;:==:var util:==:sharedUtil . util ;
var n = new indexNode ( [ b , c ] ) ;:==:var e:==:new symbolNode ( ' c ' ) ;
var Compiler = Handlebars . Compiler = function ( ) ;:==:var javaScriptCompiler:==:handlebars . javaScriptCompiler    function ( ) ;
var muk = require ( ' muk ' ) ;:==:var path:==:require ( ' path ' ) ;
var methodNotAllowedError = errors . methodNotAllowedError ;:==:var resourceNotFoundError:==:errors . resourceNotFoundError ;
var translation = node . translation  |  |  [ 0 , 0 , 0 ] ;:==:var rotation:==:node . rotation  |  |  [ 0 , 0 , 0 , 1 ] ;
var returned = this . returnedForkContext = [ ] ;:==:var thrown:==:this . thrownForkContext    [ ] ;
var tls = require ( ' tls ' ) ;:==:var inherits:==:require ( ' util ' ) . inherits ;
var south = queryNumericValue ( latLonBox , ' south ' , namespaces . kml ) ;:==:var east:==:queryNumericValue ( latLonBox , ' east ' , namespaces . kml ) ;
var iccId = this . conns [ cardIndex ] . iccId ;:==:var icc:==:this . iccManager . getIccById ( iccId ) ;
var max = o . max ;:==:var min:==:o . min ;
var srsName = context [ ' srsName ' ] ;:==:var hasz:==:context [ ' hasz ' ] ;
var canvas = this . canvas ;:==:var width:==:canvas . width ;
var indigoA100 = exports . indigoA100 = ' # 8c9eff ' ;:==:var indigoA200:==:exports . indigoA200    ' # 536dfe ' ;
var log = require ( dirs . core + ' log ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var ip = record . get ( ' ip ' ) ;:==:var port:==:record . get ( ' port ' ) ;
var width = view . width , height = view . height ;:==:var canvas:==:d3 . select ( document . createElement ( ' canvas ' ) ) . attr ( ' width ' , width ) . attr ( ' height ' , height ) . node ( ) ;
var width = options . width ;:==:var marginLeft:==:options . marginLeft ;
var blockBindingTransformer = traceur . codegeneration . blockBindingTransformer ;:==:var cascadeExpressionTransformer:==:traceur . codegeneration . cascadeExpressionTransformer ;
var debug = options . debug ;:==:var isTouch:==:options . isTouch ;
var _ elImage = this . _ elImage ;:==:var _ oContext:==:this . _ oContext ;
var vertexNode = vertexNodes [ i ] ;:==:var x:==:vertexNode . getAttribute ( ' x ' ) ;
var querystring = require ( ' querystring ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var width = this . bounds . width ( ) ;:==:var height:==:this . bounds . height ( ) ;
var group = _ ref10 . group ;:==:var _ refreshed:==:_ ref10 . _ refreshed ;
var tokenType = traceur . syntax . tokenType ;:==:var createBinaryOperator:==:parseTreeFactory . createBinaryOperator ;
var activate = this . activate . bind ( this ) ;:==:var deactivate:==:this . deactivate . bind ( this ) ;
var def = goog . dom . getElement ( ' def-2 ' ) ;:==:var jkl:==:goog . dom . getElement ( ' jkl-2 ' ) ;
var r = this . hexify ( this . rgba [ 0 ] ) ;:==:var g:==:this . hexify ( this . rgba [ 1 ] ) ;
var domain = require ( ' domain ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var group = this . groups [ groupId ] ;:==:var foreground:==:group . dom . foreground ;
var begin = beginIndex  |  |  0 ;:==:var end:==:typeof endIndex      ' number ' ? endIndex : this . children . length ;
var rename = require ( ' gulp - rename ' ) ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var rev = serverVars . rev ;:==:var padId:==:serverVars . padId ;
var glob = require ( ' glob ' ) ;:==:var madge:==:require ( ' madge ' ) ;
var setting = this . _ setting ;:==:var hasMultiLineEx:==:this . _ hasMultiLineEx ;
var useColors = this . useColors ;:==:var name:==:this . namespace ;
var p = goog . functions . partialRight ( getFoo , ' dog ' ) ;:==:var b:==:goog . bind ( p , obj , ' hot ' ) ;
var propTypes = react . propTypes ;:==:var table:==:fixedDataTable . table ;
var stageWidth = window . stageWidth |  | winWidth ;:==:var stageHeight:==:window . stageHeight |  |  ( winHeight - gameContainer . offsetTop ) ;
var ecModel = this . _ ecModel ;:==:var seriesIndex:==:el . seriesIndex ;
var accepts = this . accepts ;:==:var promises:==:this . promises ;
var preservedValues = this . _ preservedValues ;:==:var limit:==:this . _ limit ;
var target = ev . target ;:==:var parent:==:target . parentElement ;
var newValue = event . detail . newValue ;:==:var oldItem:==:event . detail . oldItem ;
var start = this . newBlock ( ' start for ' + genIndex ) ;:==:var skip:==:this . newBlock ( ' skip for ' + genIndex ) ;
var normal = normals [ i ] ;:==:var face:==:faces [ i ] ;
var aax = trace . aaxis ;:==:var bax:==:trace . baxis ;
var name = state . name . identifierToken ;:==:var func:==:createFunctionDeclaration ( name , parameters , functionBody ) ;
var tag = this . _ tag ;:==:var URL:==:window . URL  |  |  window . webkitURL ;
var INDEX_SIGNATURE = ' INDEX_SIGNATURE ' ;:==:var INTERFACE_DECLARATION:==:' INTERFACE_DECLARATION ' ;
var wrappedOperation = firepad . wrappedOperation ;:==:var textOperation:==:firepad . textOperation ;
var clientWidth = _ ref . clientWidth ;:==:var scrollHeight:==:_ ref . scrollHeight ;
var unitName = config . unitName ;:==:var unitToSatoshi:==:config . unitToSatoshi ;
var start = this . _ delegate . start ( oControl , sAggregationName , isDefaultAggregation ) ;:==:var middle:==:this . _ delegate . middle ( oControl , sAggregationName , isDefaultAggregation ) ;
var positiveValues = valuesPerType [ meta . type ] . positiveValues ;:==:var negativeValues:==:valuesPerType [ meta . type ] . negativeValues ;
var binaryErrorHandler = struct ( ' binaryErrorHandler ' ) ;:==:var location:==:struct ( ' location ' ) ;
var moduleSpecifier = traceur . syntax . trees . moduleSpecifier ;:==:var nameStatement:==:traceur . syntax . trees . nameStatement ;
var ISNT = traceur . syntax . predefinedName . isnt ;:==:var runtime:==:traceur . syntax . predefinedName . runtime ;
var tr = state . view . translate ;:==:var s:==:state . view . scale ;
var banner = document . getElementById ( ' banner ' ) ;:==:var message:==:document . getElementById ( ' message ' ) ;
var ifStatement = traceur . syntax . trees . ifStatement ;:==:var importDeclaration:==:traceur . syntax . trees . importDeclaration ;
var xy = evt . xy ;:==:var x:==:xy . x  |  0 ;
var object = dirty . object ;:==:var old:==:dirty . old ;
var b = [ this . b0 , this . b1 , this . b2 ] ;:==:var a:==:[ this . a0 , this . a1 , this . a2 ] ;
var dimension = opt_dimension ! = = undefined ? opt_dimension : 2 ;:==:var output:==:opt_output !    undefined ? opt_output : new Array ( length ) ;
var name = this . transformAny ( tree . name ) ;:==:var attributes:==:this . transformList ( tree . attributes ) ;
var osx = rules . osx [ commandId ]  |  |  '' ;:==:var linux:==:rules . linux [ commandId ]  |  |  '' ;
var style = _ props3 . style ;:==:var children:==:_ props3 . children ;
var n = znear ;:==:var f:==:zfar ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var fs:==:require ( ' hexo - fs ' ) ;
var users = _ . zipObject ( uids , results . users ) ;:==:var categories:==:_ . zipObject ( cids , results . categories ) ;
var elementFinder = util . module ( ' elementFinder ' ) ;:==:var assert:==:util . assert ;
var position = entity . position ;:==:var length:==:cylinder . length ;
var scrollTop = parallax . scrollTop ;:==:var scrollLeft:==:parallax . scrollLeft ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var _ calloc:==:Module [ ' _ calloc ' ]    asm [ ' _ calloc ' ] ;
var a = ' aaaaaaaaaaaaaaaaaaaaaaaabbaacabbabaaaaabbaaaabbac ' . slice ( 24,-1 ) ;:==:var b:==:' bbaacabbabaaaaabbaaaabba ' + a ;
var name = $ ( this ) . parent ( ) . children ( ' . file - name ' ) . text ( ) ;:==:var path:==:paths [ name ] ;
var afterEnter = ref . afterEnter ;:==:var enterCancelled:==:ref . enterCancelled ;
var pos = isUndefined ( v [ ' pos ' ] ) ? ' 43 ' : v [ ' pos ' ] ;:==:var layer:==:isUndefined ( v [ ' layer ' ] ) ? 1 : v [ ' layer ' ] ;
var session = require ( ' express - session ' ) ;:==:var redis:==:require ( ' redis ' ) ;
var center = result . center ;:==:var radius:==:result . radius ;
var path = require ( ' path ' ) ;:==:var pngcrush:==:require ( ' imagemin - pngcrush ' ) ;
var orangeA400 = exports . orangeA400 = ' # ff9100 ' ;:==:var orangeA700:==:exports . orangeA700    ' # ff6d00 ' ;
var fs = require ( ' fs ' ) ;:==:var bunyan:==:require ( ' bunyan ' ) ;
var user = checkin . user ;:==:var venue:==:checkin . venue ;
var clientTop = docElem . clientTop  |  |  body . clientTop  |  |  0 ;:==:var clientLeft:==:docElem . clientLeft  |  |  body . clientLeft  |  |  0 ;
var canDefineProperty = require ( ' canDefineProperty ' ) ;:==:var hasOwnProperty:==:object . prototype . hasOwnProperty ;
var s = numeric . dim ( x ) , abs = Math . abs , m = s [ 0 ] , n = s [ 1 ] ;:==:var A:==:numeric . clone ( x ) , Ai , Aj ;
var exec = childProcess . exec ;:==:var spawn:==:childProcess . spawn ;
var fixedDataTableWidthHelper = require ( ' fixedDataTableWidthHelper ' ) ;:==:var cx:==:require ( ' cx ' ) ;
var variableDeclarationList = traceur . syntax . trees . variableDeclarationList ;:==:var variableStatement:==:traceur . syntax . trees . variableStatement ;
var t = Math . max ( this . top , region . top   ) ;:==:var r:==:Math . min ( this . right , region . right ) ;
var TYPE_ALIAS_DECLARATION = ' TYPE_ALIAS_DECLARATION ' ;:==:var TYPE_ARGUMENTS:==:' TYPE_ARGUMENTS ' ;
var trace = calcTrace [ 0 ] . trace ;:==:var marker:==:trace . marker ;
var dynCall_iiiiiiiiiiii = Module [ ' dynCall_iiiiiiiiiiii ' ] = asm [ ' dynCall_iiiiiiiiiiii ' ] ;:==:var dynCall_vidi:==:Module [ ' dynCall_vidi ' ]    asm [ ' dynCall_vidi ' ] ;
var scriptId = currentFrame . _ location . scriptId ;:==:var sourceurl:==:currentFrame . _ script . sourceurl ;
var cp_decache = function cp_decache ( cp ) cpdcache [ cp ] = cpecache [ cp ] = undefined ; ;:==:var decache:==:function decache ( )
var enable = states . enable ;:==:var length:==:enable . length ;
var Navigator = require ( ' Navigator ' ) ;:==:var f8DrawerLayout:==:require ( ' f8DrawerLayout ' ) ;
var morphAttributes = geometry . morphAttributes ;:==:var keys:==:object . keys ( morphAttributes ) ;
var x = matrix . a*point . x+matrix . c*point . y+matrix . e*1 ;:==:var y:==:matrix . b*point . x+matrix . d*point . y+matrix . f*1 ;
var user = users [ 0 ] ;:==:var base64:==:sampleBuffer . toString ( ' base64 ' ) ;
var born = this . _ options . born ;:==:var survive:==:this . _ options . survive ;
var symbolNode = math . expression . node . symbolNode ;:==:var accessorNode:==:math . expression . node . accessorNode ;
var xTable = this . _ xTable ;:==:var yTable:==:this . _ yTable ;
var replaceEntities = _ _ webpack_require _ _ ( 1023 ) . replaceEntities ;:==:var escapeHtml:==:_ _ webpack_require _ _ ( 1023 ) . escapeHtml ;
var callbackFunc = this . callbackFunc ;:==:var args:==:this . args ;
var isNan = math . isNan ;:==:var bignumber:==:math . bignumber ;
var vector = intersectConvex_vector ;:==:var minDistIntersect:==:intersectconvex_mindistintersect ;
var anims = imports . anims ;:==:var menus:==:imports . menus ;
var nodesChanged = _ determineIfDifferent2 . nodesChanged ;:==:var edgesChanged:==:_ determineIfDifferent2 . edgesChanged ;
var from = codeMirror . posFromIndex ( _ editedNode . location + change . from ) ;:==:var to:==:codeMirror . posFromIndex ( _ editedNode . location + change . to ) ;
var br = document . createElement ( ' br ' ) ;:==:var span:==:goog . dom . createDom ( ' span ' , null , text , br ) ;
var isSupported = this . isSupported ( ) ;:==:var isPrefixed:==:this . isPrefixed _ ( ) ;
var Identify = require ( ' facade ' ) . Identify ;:==:var Track:==:require ( ' facade ' ) . Track ;
var cellMetadatum = _ ref4 . cellMetadatum ;:==:var index:==:_ ref4 . index ;
var lightBlue300 = exports . lightBlue300 = ' # 4fc3f7 ' ;:==:var lightBlue400:==:exports . lightBlue400    ' # 29b6f6 ' ;
var normalizeWheel = require ( ' normalizeWheel ' ) ;:==:var requestAnimationFramePolyfill:==:require ( ' requestAnimationFramePolyfill ' ) ;
var sqlite3 = require ( ' sqlite3 ' ) ;:==:var db:==:new sqlite3 . Database ( dbPath ) ;
var type = require ( ' type ' ) ;:==:var has:==:Object . prototype . hasOwnProperty ;
var operand = this . transformAny ( tree . left . operand ) ;:==:var memberName:==:tree . left . memberName ;
var vError = mod_verror . vError ;:==:var wError:==:mod_verror . wError ;
var border = node . getData ( ' border ' ) ;:==:var pos:==:node . pos . getc ( true ) ;
var sourceLink = sourceLinks . lastElementChild ;:==:var href:==:sourceLink . getAttribute ( ' href ' ) ;
var min = calendarCtrl . minDate ? dateUtil . getFirstDateOfMonth ( calendarCtrl . minDate ) : null ;:==:var max:==:calendarCtrl . maxDate ? dateUtil . getFirstDateOfMonth ( calendarCtrl . maxDate ) : null ;
var url = networkuiSourceCode . url ;:==:var path:==:uiSourceCode . path ( ) ;
var dispatcher = scope . dispatcher ;:==:var n:==:window . navigator ;
var col = db . collection ( ' remove_many_with_generators ' ) ;:==:var r:==:yield col . insertMany ( [ a : 1 , a : 1 ] ) ;
var minimumBatchSize = _ ref3 . minimumBatchSize ;:==:var rowCount:==:_ ref3 . rowCount ;
var utils = firepad . utils ;:==:var LIST_TYPE:==:firepad . lineFormatting . list_type ;
var htmlbarsOptions = this . _ addon . htmlbarsOptions ( ) ;:==:var templateCompiler:==:htmlbarsOptions . templateCompiler ;
var h = p . _ handler ;:==:var t:==:setTimeout ( onTimeout , ms , reason , p . _ handler ) ;
var radiusY = options . radiusY  |  |  radius ;:==:var radiusZ:==:options . radiusZ  |  |  radius ;
var token = tokens [ ti ] ;:==:var style:==:styleCache [ token ] ;
var vj = ContactEquation_getImpactVelocityAlongNormal_vj ;:==:var xi:==:ContactEquation_getImpactVelocityAlongNormal_xi ;
var makiMarkersPlugin = leafletHelpers . makiMarkersPlugin ;:==:var extraMarkersPlugin:==:leafletHelpers . extraMarkersPlugin ;
var tabManager = imports . tabManager ;:==:var callstack:==:imports . callstack ;
var cardIndex = options . cardIndex ;:==:var contact:==:options . contact ;
var transaction = db . transaction ( ' bookmarks ' ) ;:==:var objectStore:==:transaction . objectStore ( ' bookmarks ' ) ;
var thisExpression = traceur . syntax . trees . thisExpression ;:==:var throwStatement:==:traceur . syntax . trees . throwStatement ;
var maxDirtyNumber = model . _ maxDirtyNumber ;:==:var allowPicking:==:model . allowPicking ;
var version = options . version ;:==:var run:==:s . run ( ' show ' , name + ' @ ' + version ) ;
var lzwStream = coreStream . lzwStream ;:==:var nullStream:==:coreStream . nullStream ;
var ARRAY_COMPREHENSION = ' ARRAY_COMPREHENSION ' ;:==:var ARRAY_LITERAL:==:' ARRAY_LITERAL ' ;
var browser = _ ref . browser ;:==:var version:==:_ ref . version ;
var View = require ( ' View ' ) ;:==:var propTypes:==:react . propTypes ;
var context = frameState . context ;:==:var texturesToCreate:==:model . _ loadResources . texturesToCreate ;
var nav = ( state & & options . lossy ) ? state . navigable : state ;:==:var url:==:( nav & & nav . url ) ? nav . url . format ( normalize ( state . params , params  |  |  ) ) : null ;
var zip = require ( ' gulp - zip ' ) ;:==:var postcss:==:require ( ' gulp - postcss ' ) ;
var dx = dxy [ 0 ] * trace . dpdx ( xaxis ) ;:==:var dy:==:dxy [ 1 ] * trace . dpdy ( yaxis ) ;
var typeAnnotation = this . transformAny ( tree . typeAnnotation ) ;:==:var annotations:==:this . transformList ( tree . annotations ) ;
var cellCount = _ ref2 . cellCount ;:==:var estimatedCellSize:==:_ ref2 . estimatedCellSize ;
var symbol = instance . getAttribute ( ' symbol ' ) ;:==:var target:==:instance . getAttribute ( ' target ' ) ;
var x = this . centerWorld . x - point . x ;:==:var y:==:this . centerWorld . y - point . y ;
var extent = ol . extent . boundingExtent ( coordinates ) ;:==:var geometry:==:opt_geometry  |  |  new ol . geom . polygon ( null ) ;
var gl = this . glplot . gl ;:==:var canvas:==:this . glplot . canvas ;
var sessionDescription = window . mozrtcSessionDescription  |  |  window . rtcSessionDescription ;:==:var mediaStream:==:window . webkitMediaStream  |  |  window . mediaStream ;
var scrollTop = element . scrollTop ;:==:var scrollLeft:==:element . scrollLeft ;
var convert = defaultValue ( options . convert , true ) ;:==:var destination:==:defaultValue ( options . destination , cartesian3 . clone ( this . positionwc , scratchSetViewCartesian ) ) ;
var purple200 = exports . purple200 = ' # ce93d8 ' ;:==:var purple300:==:exports . purple300    ' # ba68c8 ' ;
var upgrade = scope . upgrade ;:==:var upgradeWithDefinition:==:scope . upgradeWithDefinition ;
var abiword = exports . abiwordAvailable ( ) ;:==:var soffice:==:exports . sofficeAvailable ( ) ;
var events   = require ( ' events ' ) ;:==:var passThrough:==:require ( ' stream ' ) . passThrough ;
var c = Math . cos ( angle ) ;:==:var s:==:Math . sin ( angle ) ;
var x = Math . abs ( args . start . x - args . pos . x ) ;:==:var y:==:Math . abs ( args . start . y - args . pos . y ) ;
var direction = ray . direction ;:==:var hitPointWorld:==:intersectheightfield_hitpointworld ;
var x = this . aX + this . xRadius * math . cos ( angle ) ;:==:var y:==:this . ay + this . yRadius * math . sin ( angle ) ;
var a = SIMD . Float32x4 ( 16 . 0 , 9 . 0 , 4 . 0 , 1 . 0 ) ;:==:var c:==:SIMD . Float32x4 . replaceLane ( a , [ ' 2 ' ] , 20 . 0 ) ;
var values = khrMaterialsCommon . values ;:==:var keys:==:object . keys ( values ) . sort ( ) ;
var forwardLink = jQuery . sap . byId ( i d + ' --forwardLink ' ) . toggleClass ( ' sapUiLnk ' , ! isLast ) . toggleClass ( ' sapUiLnkDsbl ' , isLast ) ;:==:var lastPage:==:jQuery . sap . byId ( i d + ' --lastPageLink ' ) . toggleClass ( ' sapUiLnk ' , ! isLast ) . toggleClass ( ' sapUiLnkDsbl ' , isLast ) ;
var modules = backend . modules ;:==:var nodeOps:==:backend . nodeOps ;
var global = goog . global ;:==:var frame:==:window . frames [ ' frame ' ] ;
var parseuri = _ dereq _ ( ' parseuri ' ) ;:==:var parsejson:==:_ dereq _ ( ' parsejson ' ) ;
var wrench = require ( ' wrench ' ) ;:==:var tmp:==:require ( ' tmp ' ) ;
var internalArray = utils . internalArray ;:==:var internalPackedArray:==:utils . internalPackedArray ;
var notebookId = $ ( ' # curNotebookForNewSharedNote ' ) . attr ( ' notebookId ' ) ;:==:var userId:==:$ ( ' # curNotebookForNewSharedNote ' ) . attr ( ' userId ' ) ;
var href = _ ieUriMonitor . iframe . location . href ;:==:var index:==:href . indexOf ( ' ? ' ) ;
var val = jEl . val ( ) ;:==:var spec:==:jEl . data ( ' spec ' ) ;
var planes = this . planes ;:==:var center:==:sphere . center ;
var V = parseInt ( dt . formats . v ( d ) , 10 ) ;:==:var w:==:parseInt ( dt . formats . w ( d ) , 10 ) ;
var _ strlen = Module [ ' _ strlen ' ] = asm [ ' _ strlen ' ] ;:==:var _ free:==:Module [ ' _ free ' ]    asm [ ' _ free ' ] ;
var x = this . origin . x + this . offset . x + this . tween . x ;:==:var y:==:this . origin . y + this . offset . y + this . tween . y ;
var filter = require ( ' filter - files ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var x = P4x * CB1 ( pct ) + P3x * CB2 ( pct ) + P2x * CB3 ( pct ) + P1x * CB4 ( pct ) ;:==:var y:==:P4y * CB1 ( pct ) + P3y * CB2 ( pct ) + P2y * CB3 ( pct ) + P1y * CB4 ( pct ) ;
var x = node . _ x ;:==:var y:==:node . _ y ;
var db = BrowserDB . db . _ db ;:==:var transaction:==:db . transaction ( ' bookmarks ' , ' readwrite ' ) ;
var defaultParallel = options . defaultParallel  |  |  false ;:==:var defaultParallelConcurrency:==:options . defaultParallelConcurrency  |  |  4 ;
var columnsByRole = this . columnsByRole ;:==:var column:==:columnsByRole [ roleName ] ;
var penetrationDeceleration = self . options . penetrationDeceleration ;:==:var penetrationAcceleration:==:self . options . penetrationAcceleration ;
var overlayView = app . overlayView ;:==:var overlayTitle:==:app . overlayTitle ;
var dynCall_iiiiiiddi = Module [ ' dynCall_iiiiiiddi ' ] = asm [ ' dynCall_iiiiiiddi ' ] ;:==:var dynCall_viiiii:==:Module [ ' dynCall_viiiii ' ]    asm [ ' dynCall_viiiii ' ] ;
var shiftKey = event . shiftKey ;:==:var altKey:==:event . altKey ;
var sceneEl = this . sceneEl = document . createElement ( ' a - scene ' ) ;:==:var camera:==:this . camera    document . createElement ( ' a - camera ' ) ;
var uvs = sprite . _ uvs ;:==:var w:==:texture . baseTexture . width ;
var T = new Twit ( config ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var _ im_open_decoder = Module [ ' _ im_open_decoder ' ] = asm [ ' _ im_open_decoder ' ] ;:==:var _ memmove:==:Module [ ' _ memmove ' ]    asm [ ' _ memmove ' ] ;
var tessellation = options . tessellation  |  |  16 ;:==:var sideOrientation:==:( options . sideOrientation      0 ) ? 0 : options . sideOrientation  |  |  babylon . mesh . defaultside ;
var p = this . pos ;:==:var o:==:this . oldpos ;
var renderBasic = t . renderBasic ;:==:var skipHiddenDays:==:t . skipHiddenDays ;
var mediaConstraints = options . mediaConstraints  |  |  ;:==:var n:==:navigator ;
var table2 = goog . dom . getElement ( ' table2 ' ) ;:==:var table2td:==:goog . dom . getElement ( ' table2td ' ) ;
var pop = $ ( ' # w2ui - popup ' ) ;:==:var sel:==:' input : visible , button : visible , select : visible , textarea : visible ' ;
var pattern = post . pattern ;:==:var source:==:hexo . source ;
var skin = skinCtrl . skin ;:==:var skeleton:==:visualScene . getChildById ( ctrl . skeleton [ 0 ] ) ;
var parser = self . _ parser ;:==:var responseType:==:self . _ responseType ;
var assign = require ( ' object - assign ' ) ;:==:var fork:==:require ( ' child_process ' ) . fork ;
var from = new rgbColor ( this . attribute ( ' from ' ) . value ) ;:==:var to:==:new rgbColor ( this . attribute ( ' to ' ) . value ) ;
var selectorsInterface = scope . selectorsInterface ;:==:var addWrapNodeListMethod:==:scope . addWrapNodeListMethod ;
var cellCache = _ ref5 . cellCache ;:==:var cellRenderer:==:_ ref5 . cellRenderer ;
var type = conf . type ;:==:var n:==:conf . n  |  0 ;
var forces = this . physicsBody . forces ;:==:var velocities:==:this . physicsBody . velocities ;
var slide = s . slides . eq ( index ) ;:==:var img:==:slide . find ( ' img . swiper - lazy : not ( . swiper - lazy - loaded ) : not ( . swiper - lazy - loading ) ' ) ;
var packaging = options . packaging ;:==:var staticPrefix:==:options . staticPrefix ;
var outlineColor = property . getValueOrClonedDefault ( ellipse . outlineColor , time , color . black , scratchColor ) ;:==:var outlineWidth:==:property . getValueOrDefault ( ellipse . outlineWidth , time , 1 . 0 ) ;
var clone = require ( ' clone ' ) ;:==:var when:==:require ( ' when ' ) ;
var scope = _ ref . scope ;:==:var redirect_uri:==:_ ref . redirect_uri ;
var Hook = mocha . Hook ;:==:var path:==:require ( ' path ' ) ;
var Util = sharedUtil . util ;:==:var addLinkAttributes:==:sharedUtil . addLinkAttributes ;
var headerStyle = _ props2 . headerStyle ;:==:var onHeaderClick:==:_ props2 . onHeaderClick ;
var reactNativeAttributePayload = require ( ' reactNativeAttributePayload ' ) ;:==:var reactNativePropRegistry:==:require ( ' reactNativePropRegistry ' ) ;
var tagName = state . tagName ;:==:var args:==:state . args ;
var host = config . host  |  |  ' localhost ' ;:==:var port:==:( Number ( config . port ) + 1 )  |  |  3001 ;
var dxydj = trace . dxydj ( null , i0 , j0 , u , v ) ;:==:var dbdj:==:trace . dbdj ( j0 , v ) ;
var start = Math . max ( range . start , this . start ) ;:==:var end:==:Math . min ( range . end , this . end ) ;
var direction = camera . direction ;:==:var normal:==:camera . worldToCameraCoordinatesVector ( cartesian3 . unit_x , normalScratch ) ;
var inspect = require ( ' util ' ) . inspect ;:==:var validationError:==:mongooseError . validationError ;
var arrayOf = _ react . propTypes . arrayOf ;:==:var oneOfType:==:_ react . propTypes . oneOfType ;
var flow = security . flow ;:==:var authorizationUrl:==:security . authorizationUrl ;
var y = ' y ' ;:==:var z:==:' z ' ;
var ry = this . attribute ( ' ry ' ) . Length . toPixels ( ' y ' ) ;:==:var cx:==:this . attribute ( ' cx ' ) . length . toPixels ( ' x ' ) ;
var t = this ; if ( arguments . length ):==:var i:==:Array . prototype . slice . call ( arguments ) ; i . forEach ( function ( i )
var g = readmpInt ( der , ' g ' ) ;:==:var y:==:readmpInt ( der , ' y ' ) ;
var parent = elem . parentElement ;:==:var i:==:void 0 ;
var request = evt . request ;:==:var path:==:request . path ;
var panels = imports . panels ;:==:var layout:==:imports . layout ;
var shape       = pair . value . shape ;:==:var parentHeight:==:pair . value . parentHeight ;
var canvas = $ ( ' canvas ' ) ;:==:var debug:==:$ ( ' # debug ' ) ;
var col = obj . columns [ column ] ;:==:var edit:==:col ? col . editable : null ;
var assertRange = caretAsserts . assertRange ;:==:var createRange:==:caretAsserts . createRange ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var tick:==:require ( ' next - tick ' ) ;
var property = util . property ;:==:var memoizedProperty:==:util . memoizedProperty ;
var httpHeaders = method . httpHeaders ;:==:var toolbar:==:method . toolbar ;
var projectId = webInspector . networkProject . projectId ( target , spliturl [ 0 ] , false ) ;:==:var project:==:this . _ workspace . project ( projectId ) ;
var outputBuffer = struct ( ' outputBuffer ' ) ;:==:var readBinaryOptions:==:struct ( ' readBinaryOptions ' ) ;
var socket = options . redis . socket ;:==:var port:==:! socket ? ( options . redis . port  |  |  6379 ) : null ;
var fs = require ( ' hexo - fs ' ) ;:==:var highlight:==:require ( ' hexo - util ' ) . highlight ;
var width = dataViewObjects . getValue ( objects , mekkoChart . properties [ ' columnBorder ' ] [ ' width ' ] , mekkoChart . defaultSettings . columnBorder . width ) ;:==:var maxWidth:==:mekkoChart . defaultSettings . columnBorder . maxWidth ;
var isChromeApp = platformInfo . isChromeApp ;:==:var isnw:==:platformInfo . isnw ;
var i d = req . params . user_id ;:==:var user:==:db . users [ i d ] ;
var View = require ( ' View ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var xref = this . xref ;:==:var content:==:this . content ;
var slice = Array . prototype . slice ;:==:var toString:==:object . prototype . toString ;
var currentTime = clockViewModel . currentTime ;:==:var startTime:==:clockViewModel . startTime ;
var name = event_data . script ( ) . name ( ) ;:==:var i d:==:event_data . script ( ) . i d ( ) ;
var height = codeView . height ( ) ;:==:var scrollTop:==:codeView . scrollTop ( ) ;
var domain = require ( ' domain ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' axm : events ' ) ;
var validatorResult = helpers . validatorResult ;:==:var schemaError:==:helpers . schemaError ;
var not_container = document . getElementById ( ' not_container ' ) ;:==:var not_contained:==:document . getElementById ( ' not_contained ' ) ;
var contract = descriptor . contract ;:==:var client:==:data . client ;
var functionAssignmentNode = math . expression . node . functionAssignmentNode ;:==:var rangeNode:==:math . expression . node . rangeNode ;
var rimraf = require ( ' rimraf ' ) ;:==:var uuid:==:require ( ' node - uuid ' ) ;
var layoutPropTypes = require ( ' layoutPropTypes ' ) ;:==:var colorPropType:==:require ( ' colorPropType ' ) ;
var stylish = require ( ' jshint - stylish ' ) ;:==:var jscs:==:require ( ' gulp - jscs ' ) ;
var jDiv = jDivInit ( i d ) ;:==:var len:==:jDiv . children ( ' div . comments ' ) . children ( ) . length ;
var createIdentifierExpression = parseTreeFactory . createIdentifierExpression ;:==:var createMemberExpression:==:parseTreeFactory . createMemberExpression ;
var pi = math . pi ;:==:var acosh:==:math . acosh ;
var atan = stdlib . Math . atan ;:==:var cos:==:stdlib . Math . cos ;
var forEach = angular . forEach ;:==:var isString:==:angular . isString ;
var data = me . chart . data ;:==:var isHorizontal:==:me . isHorizontal ( ) ;
var b = ' var b ' ;:==:var c:==:' var c ' ;
var state = this . state _ ;:==:var strokeStyle:==:state . strokeStyle ;
var invariant = require ( ' invariant ' ) ;:==:var joinClasses:==:require ( ' joinClasses ' ) ;
var merge = require ( ' utils - merge ' ) ;:==:var sign:==:require ( ' cookie - signature ' ) . sign ;
var indentUnit = config . indentUnit ;:==:var multilineTagIndentFactor:==:parserConfig . multilineTagIndentFactor  |  |  1 ;
var start = this . start ;:==:var stop:==:this . stop ;
var commands = imports . commands ;:==:var console:==:imports . console ;
var tipLabel = options . tipLabel ! = = undefined ? options . tipLabel : ' overview map ' ;:==:var collapseLabel:==:options . collapseLabel !    undefined ? options . collapseLabel : ' \u00ab ' ;
var After = exports . After = proxySupportCode ( ' after ' ) ;:==:var before:==:exports . before    proxySupportCode ( ' before ' ) ;
var context = data . context ;:==:var dependencies:==:data . dependencies ;
var div = document . body . appendChild ( document . createElement ( ' div ' ) ) ;:==:var input:==:div . appendChild ( document . createElement ( ' input ' ) ) ;
var t = new nodeList ( ) ;:==:var e:==:dnd . _ empty ;
var endAngle = shape . endAngle ;:==:var clockwise:==:shape . clockwise ;
var wind = options . window  |  |  window ;:==:var noop:==:angular . noop ;
var min = Math . min ( v0 , v1 ) ;:==:var max:==:Math . max ( v0 , v1 ) ;
var allowLoop = boolean ( options & & options . allowLoop ) ;:==:var allowSwitch:==:boolean ( options & & options . allowSwitch ) ;
var replace = require ( ' gulp - replace ' ) ;:==:var mocha:==:require ( ' gulp - spawn - mocha ' ) ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var queue:==:async . queue ( doConvertTask , 1 ) ;
var ipfilter = require ( ' express - ipfilter ' ) . ipFilter ;:==:var fs:==:require ( ' fs ' ) ;
var b = Object . freeze ( a ) ;:==:var c:==:Object . create ( b ) ;
var crit = tmp . crit ;:==:var drop:==:tmp . drop ;
var tileHeight = defaultValue ( options . tileHeight , 256 ) ;:==:var minimumLevel:==:defaultValue ( options . minimumLevel , 0 ) ;
var keys = this . keys _ ;:==:var map:==:this . map _ ;
var a = ' foobar ' + boo ( ) + ' bazxy ' ;:==:var b:==:[ ' foo - bar ' , boo ( ) , ' baz - x - y ' ] . join ( ' - ' ) ;
var revenue = track . revenue ( ) ;:==:var orderId:==:track . orderId ( ) ;
var a = this . alpha ;:==:var m:==:typeof multiplier !    ' undefined ' ? multiplier : 0 . 5 ;
var jshint = analyzejshint ( [ ] . concat ( paths . js , paths . specs , paths . nodejs ) ) ;:==:var jscs:==:analyzejscs ( [ ] . concat ( paths . js , paths . nodejs ) ) ;
var Stream = coreStream . stream ;:==:var getGlyphsUnicode:==:coreGlyphList . getGlyphsUnicode ;
var width = polyline . width ;:==:var show:==:polyline . show & & width > 0 . 0 ;
var semver = require ( ' semver ' ) ;:==:var shell:==:require ( ' shelljs ' ) ;
var s = ( c . page * c . size ) ;:==:var e:==:( s + c . size ) ;
var message = exception & & exception . message ;:==:var l10n:==:self . l10n ;
var diffView = this . diffView ;:==:var chunks:==:diffView . chunks ;
var gulp = require ( ' gulp ' ) ;:==:var mocha:==:require ( ' gulp - spawn - mocha ' ) ;
var cropper = $ image . data ( ' cropper ' ) ;:==:var image:==:cropper . image ;
var xScale4 = chart . scales . xScale4 ;:==:var yScale0:==:chart . scales . yScale0 ;
var value = Expression . Create ( '' + ( options . value  |  |  $ thisStr ) + '' , ' value ' ) ;:==:var caption:==:blocks . isString ( options . caption ) & & new virtualElement ( ' option ' ) ;
var crypto = require ( ' crypto ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var http = require ( ' http ' ) ;:==:var thinkjs:==:require ( ' thinkjs ' ) ;
var task = grunt . task ;:==:var file:==:grunt . file ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , data , base_opts ) ;
var level = paragraph . level + ( li ? 1 : 0 ) ;:==:var lic:==:paragraph . in_license_block ;
var FOR_OF_STATEMENT = ' FOR_OF_STATEMENT ' ;:==:var FOR_ON_STATEMENT:==:' FOR_ON_STATEMENT ' ;
var successCallback = jasmine . createSpy ( ' successCallback ' ) ;:==:var errorCallback:==:jasmine . createSpy ( ' errorCallback ' ) ;
var amount = ripple . Amount . from_json ( amountValue ) ;:==:var currency:==:amount . currency ( ) ;
var name = this . transformAny ( tree . name ) ;:==:var typeAnnotation:==:this . transformAny ( tree . typeAnnotation ) ;
var constructor = def . constructor ;:==:var statics:==:def . statics ;
var dataZoomModel = this . dataZoomModel ;:==:var ecModel:==:this . ecModel ;
var expect = require ( ' chai ' ) . expect ;:==:var rewire:==:require ( ' rewire ' ) ;
var goal = nodesFromArray ( item . goal ) ;:==:var shuffled:==:nodesFromArray ( item . shuffled ) ;
var timelinesRotation = current . timelinesRotation ;:==:var timelinesFirst:==:current . timelinesFirst ;
var radiusX = options . radiusX  |  |  radius ;:==:var radiusY:==:options . radiusY  |  |  radius ;
var nodeType = nodes [ nodeIndex + nodeTypeOffset ] ;:==:var nodeSize:==:nodes [ nodeIndex + nodeSizeOffset ] ;
var missingPrimaryExpression = traceur . syntax . trees . missingPrimaryExpression ;:==:var moduleDeclaration:==:traceur . syntax . trees . moduleDeclaration ;
var db = new PouchDB ( dbs . name ) ;:==:var rep:==:db . replicate . from ( remote , live : true ) ;
var start = span . start ;:==:var end:==:span . end ;
var i18n = this . theme . i18n ;:==:var config:==:this . config ;
var getDayId = calc . getDayId ;:==:var isAllDay:==:calc . isAllDay ;
var project = projects [ i ] ;:==:var uiSourceCode:==:project . uiSourceCodeForOriginurl ( originurl ) ;
var PUT = ' PUT ' ;:==:var ALL:==:' ALL ' ;
var legendIcon = powerbi . visuals . legendIcon ;:==:var appendClearCatcher:==:powerbi . visuals . appendClearCatcher ;
var OBJECT_LITERAL = ' OBJECT_LITERAL ' ;:==:var OBJECT_PATTERN:==:' OBJECT_PATTERN ' ;
var fs = require ( ' fs ' ) ;:==:var acquit:==:require ( ' acquit ' ) ;
var clone = zrUtil . clone ;:==:var map:==:zrUtil . map ;
var route = exports . route = oneOfType ( [ object , element ] ) ;:==:var routes:==:exports . routes    oneOfType ( [ route , arrayOf ( route ) ] ) ;
var ELEMENT_NODE     = nodeType . element_node     = 1 ;:==:var attribute_node:==:nodeType . attribute_node       2 ;
var centerY = widget . _ centerY ;:==:var svg:==:widget . _ svgNode ;
var info = this . columns [ col_ind ] . info ;:==:var rec:==:this . records [ ind ] ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var when:==:require ( ' when ' ) ;
var preview = imports . preview ;:==:var ext:==:imports . ext ;
var localFrom = intersectheightfield_localfrom ;:==:var localTo:==:intersectheightfield_localto ;
var session = this . session ;:==:var firstRow:==:config . firstRow ;
var minScale = _ props . minScale ;:==:var style:==:_ props . style ;
var util = require ( ' util ' ) ;:==:var lodash:==:require ( ' lodash ' ) ;
var body = this . transformAny ( tree . body ) ;:==:var debugName:==:this . transformAny ( tree . debugName ) ;
var ONEMIN = constants . ONEMIN ;:==:var ONESEC:==:constants . ONESEC ;
var children = that . element [ 0 ] . children ;:==:var selectable:==:that . options . selectable ;
var sin = Math . sin ;:==:var sqrt:==:Math . sqrt ;
var os   = require ( ' os ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' interface : push - interactor ' ) ;
var GET_GITHUB_FAIL = exports . GET_GITHUB_FAIL = ' GET_GITHUB_FAIL ' ;:==:var CHAGE_USER_ID:==:exports . CHAGE_USER_ID    ' CHAGE_USER_ID ' ;
var origin = context . origin ;:==:var opacity:==:context . opacity ;
var e = Ext . domQuery , h = b . responsexml , a = h . documentElement  |  |  h ;:==:var c:==:new ext . data . response ( action : g , success : this . getSuccess ( a ) , message : this . getMessage ( a ) , data : this . extractData ( e . select ( this . meta . record , a )  |  |  e . select ( this . meta . root , a ) , false ) , raw : h ) ;
var ocean = param : ' ocean ' , surface : ' surface ' , level : ' currents ' , overlayType : ' default ' ;:==:var attr:==:_ . clone ( configuration . attributes ) ;
var reactNativeContainerInfo = require ( ' reactNativeContainerInfo ' ) ;:==:var reactNativeTagHandles:==:require ( ' reactNativeTagHandles ' ) ;
var c = fulfillSoon ( ' c ' , 10 ) ;:==:var d:==:fulfillSoon ( ' d ' , 20 ) ;
var param = _ param ;:==:var accu:==:_ accu ;
var preferences = imports . preferences ;:==:var settings:==:imports . settings ;
var s = ' a ' + escapeChar + ' string escaped ' ;:==:var e:==:_ . escape ( s ) ;
var href = _ props3 . href ;:==:var keyboardFocused:==:_ props3 . keyboardFocused ;
var http = Npm . require ( ' http ' ) ;:==:var os:==:Npm . require ( ' os ' ) ;
var path = require ( ' path ' ) ;:==:var should:==:require ( ' should ' ) ;
var b = div . appendChild ( document . createElement ( ' b ' ) ) ;:==:var c:==:div . appendChild ( document . createElement ( ' c ' ) ) ;
var height = _ ref3 . height ;:==:var width:==:_ ref3 . width ;
var join = require ( ' path ' ) . join ;:==:var readdirSync:==:require ( ' fs ' ) . readdirSync ;
var s = TO_STRING ( this ) ;:==:var len:==:arguments . length ;
var O_NOCTTY = constants . O_NOCTTY  |  |  0 ;:==:var O_NOFOLLOW:==:constants . O_NOFOLLOW  |  |  0 ;
var label = bkmrk [ ' label ' ] ;:==:var latlng:==:bkmrk [ ' latlng ' ] ;
var settings = $ ( this ) . data ( ' settings ' ) ;:==:var selected:==:$ ( this ) . data ( ' selected ' ) ;
var U64 = new primitiveType ( ' u64 ' , 8 , ' i ' ) ;:==:var f32:==:new primitiveType ( ' f32 ' , 4 , ' f ' ) ;
var xmppbot = config . xmppbot ;:==:var utc:==:moment . utc ;
var warn = sharedUtil . warn ;:==:var name:==:corePrimitives . name ;
var   COPY _ = 15 ;:==:var   COPY:==:16 ;
var vel1 = resolveSingleBilateral_vel1 ;:==:var vel2:==:resolveSingleBilateral_vel2 ;
var getBody = dom . getBody ;:==:var getContentDocument:==:dom . getContentDocument ;
var file = current . document . file ;:==:var paneId:==:current . _ paneId ;
var isArray = leafletHelpers . isArray ;:==:var errorHeader:==:leafletHelpers . errorHeader ;
var sanitize = require ( ' sanitize - filename ' ) ;:==:var util:==:require ( ' util ' ) ;
var createAssignmentExpression = parseTreeFactory . createAssignmentExpression ;:==:var createCallCall:==:parseTreeFactory . createCallCall ;
var s = goog . vec . vec3f . createFromValues ( 6 , 7 , 8 ) ;:==:var o:==:goog . vec . vec3f . createFromValues ( 9 , 10 , -11 ) ;
var featureNS = context [ ' featureNS ' ] ;:==:var gmlVersion:==:context [ ' gmlVersion ' ] ;
var storage = this . _ _ storage ;:==:var zr:==:this . _ _ zr ;
var msg = rule . msg ;:==:var msgData:==:rule . msgData ;
var logRecord = goog . debug . logRecord ;:==:var logger:==:goog . debug . logger ;
var falsy = exports . falsy = internalPropTypes . falsy ;:==:var history:==:exports . history    internalPropTypes . history ;
var data = config . data ;:==:var headers:==:config . headers ;
var setHeader = res . setHeader ;:==:var _ renderHeaders:==:res . _ renderHeaders ;
var memberLookupExpression = traceur . syntax . trees . memberLookupExpression ;:==:var moduleDeclaration:==:traceur . syntax . trees . moduleDeclaration ;
var location = exports . location = locationShape ;:==:var component:==:exports . component    internalPropTypes . component ;
var weight = dom . weight . value ;:==:var rotation:==:parseFloat ( dom . rotation . value ) ;
var util = require ( ' hexo - util ' ) ;:==:var highlight:==:util . highlight ;
var bindToAny = document . getElementById ( ' bindToAny ' ) ;:==:var adapterList:==:document . getElementById ( ' adapterList ' ) ;
var textures = this . textures _ ;:==:var hitDetectionTextures:==:this . hitDetectionTextures _ ;
var polylines = this . polylines ;:==:var length:==:polylines . length ;
var c = locations [ ci ] ;:==:var s:==:Math . abs ( det ( a , b , c ) ) ;
var T = numeric . T ;:==:var n:==:A . length , i , k , flag    false , B    QB . B , H    numeric . dot ( QB . Q , numeric . dot ( QH . H , numeric . transpose ( QB . Q ) ) ) ;
var folds = this . folds ;:==:var foldData:==:this . foldData ;
var COMPREHENSION_FOR = ' COMPREHENSION_FOR ' ;:==:var COMPREHENSION_IF:==:' COMPREHENSION_IF ' ;
var disableKeyboardFocus = _ props3 . disableKeyboardFocus ;:==:var disableTouchRipple:==:_ props3 . disableTouchRipple ;
var p   = this . _ props ;:==:var style:==:this . el . style ;
var nullStream = coreStream . nullStream ;:==:var stream:==:coreStream . stream ;
var t = this . view . translate ;:==:var s:==:this . view . scale ;
var disableFocusRipple = _ props3 . disableFocusRipple ;:==:var disableKeyboardFocus:==:_ props3 . disableKeyboardFocus ;
var path = require ( ' path ' ) ;:==:var sys:==:require ( ' sys ' ) ;
var display = display ? display : ' block ' ;:==:var waiting:==:waiting ? waiting : ' 请稍候 . . . ' ;
var format = require ( ' util ' ) . format ;:==:var del:==:require ( ' del ' ) ;
var isDict = corePrimitives . isDict ;:==:var decryptStream:==:coreStream . decryptStream ;
var _ strlen = Module [ ' _ strlen ' ] = asm [ ' _ strlen ' ] ;:==:var _ realloc:==:Module [ ' _ realloc ' ]    asm [ ' _ realloc ' ] ;
var scene = options . scene ;:==:var dataSourceCollection:==:options . dataSourceCollection ;
var transform = Matrix4 . clone ( camera . transform , scratch2dViewportCameraTransform ) ;:==:var frustum:==:camera . frustum . clone ( ) ;
var getEventTarget = require ( ' getEventTarget ' ) ;:==:var isEventSupported:==:require ( ' isEventSupported ' ) ;
var defer = Q . defer ( ) ;:==:var promise:==:defer . promise ;
var eventDrop = t . eventDrop ;:==:var eventResize:==:t . eventResize ;
var evalFunctions = options [ ' evalFunctions ' ] = = null ? false : options [ ' evalFunctions ' ] ;:==:var cacheFunctions:==:options [ ' cacheFunctions ' ]     null ? false : options [ ' cacheFunctions ' ] ;
var resolution = viewState . resolution ;:==:var pixelRatio:==:frameState . pixelRatio ;
var ui = app . ns ( ' ui ' ) ;:==:var data:==:app . ns ( ' data ' ) ;
var selector = event . selector ;:==:var type:==:event . type ;
var left = offset . left - appendOffset . left ;:==:var top:==:offset . top - appendOffset . top ;
var args = mixin . args  |  |  '' ;:==:var block:==:mixin . block ;
var subscribable = new ko . subscribable ( ) . extend ( rateLimit : 250 ) ;:==:var notifySpy:==:jasmine . createSpy ( ' notifySpy ' ) ;
var isHostMethod = util . isHostMethod ;:==:var domRange:==:api . domRange ;
var fs = require ( ' fs ' ) ;:==:var ejs:==:require ( ' ejs ' ) ;
var options = this . _ options ;:==:var positions:==:Property . getValueOrUndefined ( corridor . positions , time , options . positions ) ;
var y = p . y ;:==:var z:==:p . z ;
var LITERAL_PROPERTY_NAME = ' LITERAL_PROPERTY_NAME ' ;:==:var MEMBER_EXPRESSION:==:' MEMBER_EXPRESSION ' ;
var defaultClause = traceur . syntax . trees . defaultClause ;:==:var switchStatement:==:traceur . syntax . trees . switchStatement ;
var component = params . component ;:==:var theme:==:params . theme ;
var g = rejectThenableSoon ( ' rejected - g ' , 10 ) ;:==:var h:==:createThrowingThenable ( ' rejected - h ' ) ;
var db = mandreel_indexedDB . db ;:==:var trans:==:db . transaction ( [ ' cache ' ] , idbTransaction . read_write ) ;
var prefilteredCubeMap8 = this . prefilteredCubeMap8  |  |  globalSky8 ;:==:var prefilteredCubeMap4:==:this . prefilteredCubeMap4  |  |  globalSky4 ;
var A = recordsA [ i ] ;:==:var B:==:recordsB [ i ] ;
var ruleSet = ruleSets [ i ] ;:==:var selectors:==:ruleSet . selectors ;
var fs = require ( ' fs ' ) ;:==:var minimatch:==:require ( ' minimatch ' ) ;
var path = require ( ' path ' ) ;:==:var env:==:process . env ;
var bones = this . mesh . skeleton . bones ;:==:var bone:==:( params . boneIndex      -1 ) ? new three . bone ( ) : bones [ params . boneIndex ] ;
var gt = semver . gt ;:==:var lt:==:semver . lt ;
var Platform = require ( ' Platform ' ) ;:==:var f8DrawerLayout:==:require ( ' f8DrawerLayout ' ) ;
var deviceInfo = deviceInfos [ i ] ;:==:var option:==:document . createElement ( ' option ' ) ;
var arc = ( options . arc < = 0  |  |  options . arc > 1 ) ? 1 . 0 : options . arc  |  |  1 . 0 ;:==:var slice:==:( options . slice <   0 ) ? 1 . 0 : options . slice  |  |  1 . 0 ;
var loaded = instance . get ( ' loaded ' ) ;:==:var loading:==:instance . get ( ' loading ' ) ;
var request = require ( ' request ' ) ;:==:var unzip:==:require ( ' unzip ' ) ;
var staticRenderFns = ref . staticRenderFns ;:==:var _ parentVnode:==:ref . _ parentVnode ;
var concat = Array . prototype . concat . call . bind ( Array . prototype . concat ) ;:==:var slice:==:Array . prototype . slice . call . bind ( Array . prototype . slice ) ;
var tablixUtils = visuals . controls . internal . tablixUtils ;:==:var tablixObjects:==:visuals . controls . internal . tablixObjects ;
var timer_data = metrics . timer_data ;:==:var statsd_metrics:==:metrics . statsd_metrics ;
var parent = node . parentNode ;:==:var next:==:node . nextSibling ;
var gltf = model . gltf ;:==:var accessor:==:gltf . accessors [ accessorId ] ;
var manifest = app . manifest  |  |  app . updateManifest ;:==:var name:==:new manifestHelper ( manifest ) . name ;
var tagName = this . _ tagName ;:==:var type:==:this . _ attributes . type ;
var iterators = this . iterators ;:==:var index:==:this . index++ ;
var fs = require ( ' fs - extra ' ) ;:==:var git:==:require ( ' gulp - git ' ) ;
var documentElement = cloneNode ( ownerDocument . documentElement , options . javascriptEnabled ) ;:==:var container:==:containerDocument . createElement ( ' iframe ' ) ;
var teal600 = exports . teal600 = ' # 00897b ' ;:==:var teal700:==:exports . teal700    ' # 00796b ' ;
var SYNTAX_ERR     = exceptionCode . syntax_err     = ( ( exceptionMessage [ 12 ] = ' syntax error ' ) , 12 ) ;:==:var invalid_modification_err:==:exceptionCode . invalid_modification_err    ( ( exceptionMessage [ 13 ]   ' invalid modification ' ) , 13 ) ;
var Container = Hilo . Container ;:==:var canvasRenderer:==:hilo . canvasRenderer ;
var backdrop = new Animation ( ele . querySelector ( ' ion - backdrop ' ) ) ;:==:var wrapper:==:new animation ( ele . querySelector ( ' . popover - wrapper ' ) ) ;
var shadow = sharedUtil . shadow ;:==:var stringToBytes:==:sharedUtil . stringToBytes ;
var data = this . data ;:==:var dataPoints:==:data . dataPoints ;
var sel = provider . selectedItems ;:==:var i:==:sel . indexOf ( node ) ;
var timelines = from . animation . timelines ;:==:var timelinesFirst:==:from . timelinesFirst ;
var long = $ el . data ( ' long ' ) ;:==:var zip:==:$ el . data ( ' zip ' ) ;
var l = _ l ;:==:var acc:==:_ acc ;
var reject = follower . _ rejectionHandler0 ;:==:var promise:==:follower . _ promise0 ;
var rotationSkewx = options [ ' rotationSkewx ' ] ! = null ? options [ ' rotationSkewx ' ] : 0 ;:==:var rotationSkewy:==:options [ ' rotationSkewy ' ] !   null ? options [ ' rotationSkewy ' ] : 0 ;
var fs = require ( ' fs ' ) ;:==:var moment:==:require ( ' moment ' ) ;
var x = options [ ' x ' ] ! = null ? options [ ' x ' ] : 0 ;:==:var y:==:options [ ' y ' ] !   null ? options [ ' y ' ] : 0 ;
var cyan50 = exports . cyan50 = ' # e0f7fa ' ;:==:var cyan100:==:exports . cyan100    ' # b2ebf2 ' ;
var x = filterArea . x - offsetx ;:==:var y:==:filterArea . y - offsety ;
var util = require ( ' util ' ) ;:==:var Readable:==:stream . Readable ;
var prev = jQuery ( ' # firstp ' ) [ 0 ] . previousSibling ;:==:var p:==:jQuery ( ' # first ' ) [ 0 ] . parentNode ;
var request = require ( ' request ' ) ;:==:var globby:==:require ( ' globby ' ) ;
var val2 = w2utils . isDate ( val2 , w2utils . settings . date_format , true ) ;:==:var val3:==:w2utils . isDate ( val3 , w2utils . settings . date_format , true ) ;
var c9 = imports . c9 ;:==:var settings:==:imports . settings ;
var expressions = tree . expressions ;:==:var expression:==:expressions [ expressions . length - 1 ] ;
var IMPORT_SELECTOR = scope . IMPORT_SELECTOR ;:==:var rootDocument:==:scope . rootDocument ;
var scenario = scenarios . shift ( ) ;:==:var data:==:scenario . data ;
var key = this . _ parseKey ( this . _ keyInputElement . value ) ;:==:var pageSize:==:this . _ pageSize ;
var os = require ( ' os ' ) ;:==:var request:==:require ( ' request ' ) ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var karma:==:require ( ' karma ' ) . server ;
var layout = imports . layout ;:==:var tabManager:==:imports . tabManager ;
var inherits = require ( ' inherits ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var minimumLevel = defaultValue ( options . minimumLevel , parseInt ( tilesetsList [ 0 ] . getAttribute ( ' order ' ) , 10 ) ) ;:==:var maximumLevel:==:defaultValue ( options . maximumLevel , parseInt ( tilesetsList [ tilesetsList . length - 1 ] . getAttribute ( ' order ' ) , 10 ) ) ;
var charset = cff . charset . charset ;:==:var encoding:==:cff . encoding ? cff . encoding . encoding : null ;
var isOpened = _ props . isOpened ;:==:var keepCollapsedContent:==:_ props . keepCollapsedContent ;
var d = new functionNode ( s , [ b , c ] ) ;:==:var e:==:d . clone ( ) ;
var format = imports . format ;:==:var collab:==:imports . collab ;
var key = validator . trim ( req . query . key  |  |  '' ) ;:==:var name:==:validator . trim ( req . query . name  |  |  '' ) ;
var mqtt = require ( ' mqtt ' ) ;:==:var events:==:require ( ' events ' ) ;
var string = get_string_from_ptr ( ptr_string ) ;:==:var program:==:array_ids_ogl [ program_id ] ;
var sourcemaps = require ( ' gulp - sourcemaps ' ) ;:==:var replace:==:require ( ' gulp - replace ' ) ;
var errorObj = util . errorObj ;:==:var isObject:==:util . isObject ;
var col = db . collection ( ' find_one_and_replace_with_generators ' ) ;:==:var r:==:yield col . insertMany ( [ a : 1 , b : 1 ] , w : 1 ) ;
var ui = imports . ui ;:==:var c9:==:imports . c9 ;
var x = cartesian3 . x ;:==:var y:==:cartesian3 . y ;
var cd = pointData . cd ;:==:var trace:==:cd [ 0 ] . trace ;
var isFunction = _ _ dependency4 _ _ . isFunction ;:==:var now:==:_ _ dependency4 _ _ . now ;
var rimraf = require ( ' rimraf ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var absolute = require ( ' absolute ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var i d = cookie . get ( ' i d ' ) ;:==:var type:==:this . user . get ( ' type ' ) ;
var Cancel = axios . Cancel ;:==:var cancelToken:==:axios . cancelToken ;
var options = el . options ;:==:var i:==:options . length ;
var isArray = sharedUtil . isArray ;:==:var isNum:==:sharedUtil . isNum ;
var album = items [ i ] . tags . album ;:==:var artist:==:items [ i ] . tags . artist ;
var h = Math . max ( 0 , f - k ) ;:==:var i:==:Math . min ( qrcode . width - 1 , f + k ) ;
var parse5 = require ( ' parse5 ' ) ;:==:var remark:==:require ( ' remark ' ) ;
var cx = this . attribute ( ' cx ' ) . Length . toPixels ( ' x ' ) ;:==:var cy:==:this . attribute ( ' cy ' ) . length . toPixels ( ' y ' ) ;
var d = data . portal . options . data ;:==:var health:==:d . health ;
var indexNode = math . expression . node . indexNode ;:==:var accessorNode:==:math . expression . node . accessorNode ;
var width = options . width  |  |  512 ;:==:var height:==:options . height ;
var popup_redirect_uri = _ ref . popup_redirect_uri ;:==:var popupWindowFeatures:==:_ ref . popupWindowFeatures ;
var category = track . category ( ) ;:==:var repeat:==:track . proxy ( ' properties . repeat ' ) ;
var Plugin = imports . Plugin ;:==:var test:==:imports . test ;
var data = _ ref . data ;:==:var prompt:==:_ ref . prompt ;
var d = new assignmentNode ( object , index , value ) ;:==:var e:==:new constantNode ( 3 ) ;
var from = operations . from ;:==:var to:==:operations . to ;
var group = _ ref . group ;:==:var force:==:_ ref . force ;
var async = require ( ' async ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var valueRects = model . valueRects ;:==:var targetValues:==:model . targetValues ;
var slotDataList = armatureData . slotDataList ;:==:var i:==:boneDataList . length ;
var from = sourceRange . from ;:==:var to:==:sourceRange . to ;
var viewStylePropTypes = require ( ' viewStylePropTypes ' ) ;:==:var processColor:==:require ( ' processColor ' ) ;
var u2Over4 = constants . u2Over4 ;:==:var u6Over64:==:constants . u6Over64 ;
var link = credit . link ;:==:var span:==:document . createElement ( ' span ' ) ;
var autohide = options . autohide  |  |  false ;:==:var index:==:options . index  |  |  100 ;
var doc = subject . window . document ;:==:var p:==:doc . querySelector ( ' p ' ) ;
var util = require ( ' util ' ) ;:==:var logger:==:require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;
var op = operations . operation ( latestRev . contents , revertToRev . contents ) ;:==:var authAttribs:==:latestRev . authAttribs ;
var trim = require ( ' trim ' ) ;:==:var inherit:==:utils . inherit ;
var createPostfixExpression = parseTreeFactory . createPostfixExpression ;:==:var createUnaryExpression:==:parseTreeFactory . createUnaryExpression ;
var target = e . htmlEvent . target ;:==:var gutter:==:plugin . ace . container . querySelector ( ' . ace_gutter ' ) ;
var pairSetOffset = pairSetOffsets [ firstGlyph ] ;:==:var sharedPairSet:==:sharedPairSets [ pairSetOffset ] ;
var canBubble = defaultValue ( options . canBubble , true ) ;:==:var cancelable:==:defaultValue ( options . cancelable , true ) ;
var withCodeCoverage = options & & options . withCodeCoverage ;:==:var transformRun:==:options & & options . transformRun ;
var url = e . url ;:==:var decode:==:typeof e . decode      ' undefined ' ;
var c = createContext ( ) ;:==:var destroyableObject:==:jasmine . createSpyObj ( ' destroyableObject ' , [ ' destroy ' ] ) ;
var createParenExpression = parseTreeFactory . createParenExpression ;:==:var delete_property:==:traceur . syntax . predefinedName . delete_property ;
var daySelectionMousedown = t . daySelectionMousedown ;:==:var cellToDate:==:t . cellToDate ;
var highlightShapes = this . highlightShapes = options . highlightShapes ;:==:var majorLabels:==:options . majorLabels ;
var util = require ( ' util ' ) ;:==:var events:==:require ( ' events ' ) ;
var debug = require ( ' debug ' ) ( ' gaia - profile - builder ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var Keys = require ( ' Keys ' ) ;:==:var React:==:require ( ' React ' ) ;
var c = d3 . select ( this ) ;:==:var trace:==:d . trace ;
var isNumber = _ angular . isNumber ;:==:var isDefined:==:_ angular . isDefined ;
var value = ' value ' ;:==:var value2:==:' value2 ' ;
var min = this . minContainerOffset ( ) ;:==:var max:==:this . maxContainerOffset ( ) ;
var alive = child . getChildNode ( ' alive ' ) ;:==:var aliases:==:child . getChildNode ( ' aliases ' ) ;
var setInterval = window . setInterval ;:==:var setTimeout:==:window . setTimeout ;
var firstDayOfWeek = self . l10n . firstDayOfWeek ;:==:var weekdays:==:self . l10n . weekdays . shorthand . slice ( ) ;
var scrollToRow = _ props3 . scrollToRow ;:==:var width:==:_ props3 . width ;
var mult = new operatorNode ( ' * ' , ' multiply ' , [ a , b ] ) ;:==:var add:==:new operatorNode ( ' + ' , ' add ' , [ a , b ] ) ;
var hierarchy = polygon . hierarchy ;:==:var show:==:polygon . show ;
var sqrt = Math . sqrt ;:==:var atan:==:Math . atan ;
var edgeElementType = this . _ edgeElementType ;:==:var edgeToNodeOffset:==:this . _ edgeToNodeOffset ;
var classes = taffy ( members . classes ) ;:==:var modules:==:taffy ( members . modules ) ;
var first = cm . firstLine ( ) ;:==:var last:==:cm . lastLine ( ) ;
var promisify = require ( ' promisify - any ' ) . use ( Promise ) ;:==:var util:==:require ( ' util ' ) ;
var d2 = _ addDiv ( ' d2 ' , d1 , null , 200 , 200 , 50 , 50 ) ;:==:var d3:==:_ addDiv ( ' d3 ' , null , null , 700 , 700 , 500 , 500 ) ;
var client = data . client ;:==:var contract:==:data . contract ;
var borderColor = _ muiTheme$textField . borderColor ;:==:var disabledTextColor:==:_ muiTheme$textField . disabledTextColor ;
var basename = location . basename ;:==:var pathname:==:location . pathname ;
var input = conf . input ;:==:var n:==:conf . n  |  0 ;
var doclet = doclets [ i ] ;:==:var params:==:doclet . params ;
var log = require ( util . dirs ( ) . core + ' log ' ) ;:==:var exchangeChecker:==:require ( util . dirs ( ) . core + ' exchangeChecker ' ) ;
var name = identify . name ( ) ;:==:var i d:==:identify . userId ( ) ;
var util = require ( ' gulp - util ' ) ;:==:var through2:==:require ( ' through2 ' ) ;
var nconf = require ( ' nconf ' ) ;:==:var mime:==:require ( ' mime ' ) ;
var imageKind = sharedUtil . imageKind ;:==:var ops:==:sharedUtil . ops ;
var frustum = camera . frustum ;:==:var frustumSplits:==:frameState . frustumSplits ;
var createStatementList = parseTreeFactory . createStatementList ;:==:var createStringLiteral:==:parseTreeFactory . createStringLiteral ;
var minX = r1 . _ minX < r2 . _ minX ? r1 . _ minX : r2 . _ minX ;:==:var minY:==:r1 . _ minY < r2 . _ minY ? r1 . _ minY : r2 . _ minY ;
var index = cells [ i ] . index ;:==:var column:==:cells [ i ] . column ;
var resolve = require ( ' path ' ) . resolve ;:==:var join:==:require ( ' path ' ) . join ;
var scale = Fn . scale ;:==:var toFixed:==:fn . toFixed ;
var events = require ( ' events ' ) ;:==:var async:==:require ( ' async ' ) ;
var div = document . createElement ( ' div ' ) ;:==:var span:==:document . createElement ( ' span ' ) ;
var closeArray = options . closeArray ;:==:var closePath:==:options . closePath ;
var addAsset = options . addAsset ;:==:var relPath:==:sourceItem . relPath ;
var createErrback = parseTreeFactory . createErrback ;:==:var createFunctionExpression:==:parseTreeFactory . createFunctionExpression ;
var evOutput = instance . _ evOutput ( ) ;:==:var lastQuadrant:==:instance . lastQuadrant ;
var height = canvas & & canvas . height ;:==:var width:==:canvas & & canvas . width ;
var body = this . body ;:==:var constructorBody:==:this . constructorBody    t . blockStatement ( [ ] ) ;
var categorical = dataView . categorical ;:==:var hasHighlights:==:reader . hasHighlights ( ' y ' ) ;
var yaml = require ( ' js - yaml ' ) ;:==:var util:==:require ( ' hexo - util ' ) ;
var exp = expectation [ key ] ;:==:var act:==:actual [ key ] ;
var x = this . attribute ( ' x ' ) . Length . toPixels ( ' x ' ) ;:==:var y:==:this . attribute ( ' y ' ) . length . toPixels ( ' y ' ) ;
var channelRequest = goog . labs . net . webChannel . channelRequest ;:==:var connectionState:==:goog . labs . net . webChannel . connectionState ;
var logger = require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var PROPER = scopeAnalyzer . proper ;:==:var maybe_proper:==:scopeAnalyzer . maybe_proper ;
var isUndefined = angular . isUndefined ;:==:var isDefined:==:angular . isDefined ;
var content = this . content ;:==:var resources:==:this . resources ;
var dx2 = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx2 ' , this . dx2 ) ) ) ) ;:==:var dy2:==:math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dy2 ' , this . dy2 ) ) ) ) ;
var x = ( vector . x * transformation . m [ 0 ] ) + ( vector . y * transformation . m [ 4 ] ) + ( vector . z * transformation . m [ 8 ] ) + transformation . m [ 12 ] ;:==:var y:==:( vector . x * transformation . m [ 1 ] ) + ( vector . y * transformation . m [ 5 ] ) + ( vector . z * transformation . m [ 9 ] ) + transformation . m [ 13 ] ;
var expect = require ( ' expect . js ' ) ;:==:var util:==:require ( ' util ' ) ;
var FP_SAFE = numConstants . fp_safe ;:==:var badnum:==:numConstants . badnum ;
var getSlotDuration = t . getSlotDuration ;:==:var getSlotContainer:==:t . getSlotContainer ;
var h = config . lineHeight ;:==:var top:==:pixelPos . top ;
var limit = options . limit  |  |  defaults . limit ;:==:var comparator:==:options . comparator  |  |  defaults . comparator ;
var startOffset = editor . selection . getRange ( ) . startOffset ;:==:var collapse:==:editor . selection . getRange ( ) . collapsed ;
var content = msg . content ;:==:var start:==:content . cursor_start ;
var text = message . data . text ;:==:var padId:==:sessioninfos [ client . i d ] . padId ;
var descending = ' descending ' in opts ? opts . descending : false ;:==:var keys:==:' keys ' in opts ? opts . keys : false ;
var srsName = context [ ' srsName ' ] ;:==:var curve:==:context [ ' curve ' ] ;
var name = e . name ;:==:var method:==:method  |  |  ' on ' + name ;
var texture = this . texture ;:==:var frame:==:texture . frame ;
var f = this . finishValue ;:==:var p:==:this . getValueProportion ( ) ;
var outlineWidth = ellipse . outlineWidth ;:==:var numberOfVerticalLines:==:ellipse . numberOfVerticalLines ;
var Application = Ember . Application ;:==:var Controller:==:Ember . Controller ;
var fs = require ( ' fs ' ) ;:==:var btoa:==:require ( ' btoa ' ) ;
var error = options . error ;:==:var lockType:==:options . lockType ;
var onRest = _ props4 . onRest ;:==:var props:==:_ objectWithoutProperties ( _ props4 , [ ' springConfig ' , ' onHeightReady ' , ' isOpened ' , ' style ' , ' children ' , ' fixedHeight ' , ' keepCollapsedContent ' , ' onRest ' ] ) ;
var debugShowBoundingVolume = polylineCollection . debugShowBoundingVolume ;:==:var batchTable:==:polylineCollection . _ batchTable ;
var red500 = exports . red500 = ' # f44336 ' ;:==:var red600:==:exports . red600    ' # e53935 ' ;
var DOCUMENT_POSITION_FOLLOWING = Node . DOCUMENT_POSITION_FOLLOWING ;:==:var DOCUMENT_POSITION_CONTAINS:==:Node . DOCUMENT_POSITION_CONTAINS ;
var activityIndicatorios = require ( ' activityIndicatorios ' ) ;:==:var progressBarAndroid:==:require ( ' progressBarAndroid ' ) ;
var node = nodesToInsert [ i d ] . node ;:==:var parentId:==:nodesToInsert [ i d ] . parentId ;
var boneDataList = armatureData . boneDataList ;:==:var slotDataList:==:armatureData . slotDataList ;
var elementMultiplier = defaultValue ( structure . elementMultiplier , heightmapTessellator . default_structure . elementMultiplier ) ;:==:var isBigEndian:==:defaultValue ( structure . isBigEndian , heightmapTessellator . default_structure . isBigEndian ) ;
var el = this . $ element ;:==:var src:==:el . getAttribute ( ' data - src ' )  |  |  ' about : blank ' ;
var Block = traceur . syntax . trees . Block ;:==:var callExpression:==:traceur . syntax . trees . callExpression ;
var rowData = _ ref . rowData ;:==:var rowIndex:==:_ ref . rowIndex ;
var canonical = require ( ' canonical ' ) ;:==:var includes:==:require ( ' includes ' ) ;
var blogPost = db . model ( ' gh4073_2 ' , blogPostSchema ) ;:==:var event:==:db . model ( ' gh4073_3 ' , eventSchema ) ;
var syntheticMouseEvent = require ( ' syntheticMouseEvent ' ) ;:==:var syntheticDragEvent:==:require ( ' syntheticDragEvent ' ) ;
var contents = tmpl . contents  |  |  ' ' ;:==:var fsHash:==:tmpl . fsHash  |  |  hashString ( contents ) ;
var mouseOverStop = ( opts . mouseOverStop=='false' |  | opts . mouseOverStop==false ) ? false : true ;:==:var defaultPlay:==:( opts . defaultPlay   ' false' |  | opts . defaultPlay   false ) ? false : true ;
var xScale1 = chart . scales . xScale1 ;:==:var xScale2:==:chart . scales . xScale2 ;
var propertyNameAssignment = traceur . syntax . trees . propertyNameAssignment ;:==:var parseTreeTransformer:==:traceur . codegeneration . parseTreeTransformer ;
var width = self . width  |  |  FALLBACK_WIDTH ;:==:var scrollbarWidth:==:self . scrollbarWidth ;
var key = e . keyCode ;:==:var altKey:==:e . altKey ;
var useNative = scope . useNative ;:==:var initializeModules:==:scope . initializeModules ;
var open = ' open ' ;:==:var punct:==:' punct ' ;
var getNodeForCharacterOffset = require ( ' getNodeForCharacterOffset ' ) ;:==:var getTextContentAccessor:==:require ( ' getTextContentAccessor ' ) ;
var array = util . array ;:==:var isArray:==:array . isArray ;
var optimist = require ( ' optimist ' ) ;:==:var path:==:require ( ' path ' ) ;
var getValue = localUtils . getValue ;:==:var validateFindRequest:==:localUtils . validateFindRequest ;
var browserify = require ( ' browserify ' ) ;:==:var b:==:browserify ( ) ;
var propertyReplacer = goog . require ( ' goog . testing . propertyReplacer ' ) ;:==:var testCase:==:goog . require ( ' goog . testing . testCase ' ) ;
var samplingMode = samplingModes [ i ]  |  |  defaultSamplingMode ;:==:var type:==:types [ i ]  |  |  defaultType ;
var itemStyle = getFixedItemStyle ( itemStyleModel , scale ) ;:==:var hoverItemStyle:==:getFixedItemStyle ( hoverItemStyleModel , scale ) ;
var keyCommandDeleteWord = require ( ' keyCommandDeleteWord ' ) ;:==:var keyCommandInsertNewline:==:require ( ' keyCommandInsertNewline ' ) ;
var mapping = formatData . mapping ;:==:var lineNumber:==:debuggerModelLocation . lineNumber ;
var scheduler = instance . get ( ' scheduler ' ) ;:==:var locale:==:scheduler . get ( ' locale ' ) ;
var fs = Promise . promisifyAll ( require ( ' fs ' ) ) ;:==:var mkdirp:==:promise . promisify ( require ( ' mkdirp ' ) ) ;
var ikConstraints = this . ikConstraints ;:==:var transformConstraints:==:this . transformConstraints ;
var settings = imports . settings ;:==:var Datagrid:==:imports . Datagrid ;
var min = this . options . min = = = 0 ? 0 : Math . log ( this . options . min ) ;:==:var v:==:value      0 ? 0 : Math . log ( value ) ;
var message = error . message ;:==:var status:==:error . status ;
var revocable = Proxy . revocable ( , handler2 ) ;:==:var proxy:==:revocable . proxy ;
var bigNumber = math . type . bigNumber ;:==:var denseMatrix:==:math . type . denseMatrix ;
var css = [ ' gulpfile . js ' ] . concat ( pkg . paths . css , pkg . paths . vendorcss ) ;:==:var images:==:[ ' gulpfile . js ' ] . concat ( pkg . paths . images ) ;
var positions = Property . getValueOrUndefined ( polylineVolume . positions , time , options . polylinePositions ) ;:==:var shape:==:property . getValueOrUndefined ( polylineVolume . shape , time ) ;
var Danger = require ( ' Danger ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var proc = imports . proc ;:==:var ui:==:imports . ui ;
var swig = require ( ' swig ' ) ;:==:var extras:==:require ( ' swig - extras ' ) ;
var isAfterContentEditableFalse = caretUtils . isAfterContentEditableFalse ;:==:var isBeforeContentEditableFalse:==:caretUtils . isBeforeContentEditableFalse ;
var d = this . d ;:==:var tx:==:this . tx ;
var callee = node . callee ;:==:var parent:==:node . parent ;
var x = _ ref3 . x ;:==:var y:==:_ ref3 . y ;
var node = instance . activeDrop . get ( ' node ' ) ;:==:var placeholder:==:instance . get ( ' placeholder ' ) ;
var height = options . height  |  |  options . size  |  |  1 ;:==:var depth:==:options . depth  |  |  options . size  |  |  1 ;
var mainView = _ appJsViewsMainView [ ' default ' ] ;:==:var appController:==:_ appJsControllersAppController [ ' default ' ] ;
var eventPluginRegistry = require ( ' eventPluginRegistry ' ) ;:==:var reactDebugCurrentFiber:==:require ( ' reactDebugCurrentFiber ' ) ;
var tooltipModel = this . _ tooltipModel ;:==:var triggerOn:==:tooltipModel . get ( ' triggerOn ' ) ;
var scrollLeft = _ ref5 . scrollLeft ;:==:var scrollTop:==:_ ref5 . scrollTop ;
var emptyFunction = require ( ' emptyFunction ' ) ;:==:var translatedomPositionxy:==:require ( ' translatedomPositionxy ' ) ;
var selectionId = powerbi . visuals . selectionId ;:==:var dataViewObject:==:powerbi . dataViewObject ;
var util = require ( ' gulp - util ' ) ;:==:var GITHUB_ACCESS_TOKEN:==:process . env . GITHUB_ACCESS_TOKEN ;
var authority = _ ref . authority ;:==:var client_id:==:_ ref . client_id ;
var assert = require ( ' assert ' ) . ok ;:==:var kOnTimeout:==:timer . kOnTimeout  |  0 ;
var observableStringDictionary = babylon . observableStringDictionary ;:==:var propertyChangedBase:==:babylon . propertyChangedBase ;
var script = command . script ;:==:var context:==:command . context  |  |  ;
var min = boxGeometry . _ minimum ;:==:var max:==:boxGeometry . _ maximum ;
var field = this . options . field ;:==:var FIELDS:==:vectorField . fields ;
var predefinedName = traceur . syntax . predefinedName ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var k = n . keys [ j ] ;:==:var t:==:k . t ;
var p = createjs . extend ( Text , createjs . displayObject ) ;:==:var canvas:==:( createjs . createCanvas?createjs . createCanvas ( ) : document . createElement ( ' canvas ' ) ) ;
var a = this . ta ;:==:var b:==:this . tb ;
var offsetWidth = b . offsetWidth ;:==:var offsetHeight:==:b . offsetHeight ;
var context = options . context ;:==:var source:==:options . source ;
var imageId = this . _ imageId ;:==:var image:==:this . _ image ;
var ejs = require ( ' gulp - ejs ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var axis = this . dygraph _ . axisPropertiesForSeries ( setName ) ;:==:var logscale:==:this . dygraph _ . attributes _ . getForSeries ( ' logscale ' , setName ) ;
var visualDataRoleKind = powerbi . visualDataRoleKind ;:==:var createDisplayNameGetter:==:powerbi . data . createDisplayNameGetter ;
var st = this . st ;:==:var graph:==:st . graph ;
var each = zrUtil . each ;:==:var asc:==:numberUtil . asc ;
var stRotation = polygonGeometry . _ stRotation ;:==:var height:==:polygonGeometry . _ height ;
var printStyle = _ _ webpack_require _ _ ( 144 ) . printStyle ;:==:var allOptions:==:_ _ webpack_require _ _ ( 157 ) . allOptions ;
var gulp = require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;:==:var execSync:==:require ( ' child_process ' ) . execSync ;
var mom = $ . fullCalendar . moment . parseZone ( ' 2014 - 06 - 08t10 : 00 : 00 ' ) ;:==:var clone:==:mom . clone ( ) ;
var w = c . width = img . width ;:==:var h:==:c . height    img . height ;
var textRenderingMode = sharedUtil . textRenderingMode ;:==:var uint32ArrayView:==:sharedUtil . uint32ArrayView ;
var version = plugin . version ;:==:var important:==:notification . important ;
var scale = queryNumericValue ( node , ' scale ' , namespaces . kml ) ;:==:var heading:==:queryNumericValue ( node , ' heading ' , namespaces . kml ) ;
var dep1 = require ( ' dep1 ' ) ;:==:var dep2:==:require ( ' dep2 ' ) ;
var indices   = opts & & opts . indices ! = = undefined ? opts . indices : null ;:==:var blendIndices:==:opts & & opts . blendIndices !    undefined ? opts . blendIndices : null ;
var h = toInt ( match [ 4 ]  |  |  0 ) - tzHour ;:==:var m:==:toInt ( match [ 5 ]  |  |  0 ) - tzMin ;
var View = require ( ' View ' ) ;:==:var Navigator:==:require ( ' Navigator ' ) ;
var body = client . findElement ( ' body ' ) ;:==:var font:==:body . cssProperty ( ' font - size ' ) ;
var i d = e . getAttribute ( ' i d ' ) ;:==:var from:==:e . getAttribute ( ' from ' )  |  |  '' ;
var valueField = this . cfg . valueField  |  |  ' value ' ;:==:var data:==:data . data ;
var autoprefixer = require ( ' gulp - autoprefixer ' ) ;:==:var Buffer:==:require ( ' buffer ' ) . Buffer ;
var path = require ( ' path ' ) ;:==:var webpack:==:require ( ' webpack ' ) ;
var a = mobx . observable ( 3 ) ;:==:var b:==:mobx . observable ( a : 3 ) ;
var heightSegments = opts & & opts . heightSegments ! = = undefined ? opts . heightSegments : 5 ;:==:var capSegments:==:opts & & opts . capSegments !    undefined ? opts . capSegments : 20 ;
var x2 = Math . min ( a . x2 , b . x2 ) ;:==:var y2:==:Math . min ( a . y2 , b . y2 ) ;
var isStream = corePrimitives . isStream ;:==:var decodeStream:==:coreStream . decodeStream ;
var isString = sharedUtil . isString ;:==:var warn:==:sharedUtil . warn ;
var multiSurface = context [ ' multiSurface ' ] ;:==:var surface:==:context [ ' surface ' ] ;
var node = nodes [ i d ] ;:==:var runtimeSkin:==:runtimeSkins [ node . skin ] ;
var Output = _ _ webpack_require _ _ ( 3 ) . Output ;:==:var lineBreak:==:acorn . lineBreak ;
var name = $ ( this ) . data ( ' name ' ) ;:==:var version:==:$ ( this ) . data ( ' version ' ) ;
var superOrder = challengeSpec . superOrder ;:==:var isBeta:==:! ! challengeSpec . isBeta ;
var session = e . session ;:==:var tab:==:e . tab ;
var left = webview . _ _ mui_left ;:==:var right:==:webview . _ _ mui_right ;
var values = this . values ;:==:var spaces:==:this . spaces ;
var indentUnit = config . indentUnit ;:==:var statementIndent:==:parserConfig . statementIndent ;
var r = this . $ composeBuffer ( data , hashId , key , e ) ;:==:var buffer:==:r . bufferToUse ;
var stackPartitions = math . round ( defaultValue ( options . stackPartitions , 64 ) ) ;:==:var slicePartitions:==:math . round ( defaultValue ( options . slicePartitions , 64 ) ) ;
var r = this . loose ? re [ COMPARATORLOOSE ] : re [ COMPARATOR ] ;:==:var m:==:comp . match ( r ) ;
var y = possibleCoordinates . y ;:==:var z:==:possibleCoordinates . z ;
var x : [ e , f ] , g = x : [ e : 4 , 5 ] , g : 6 ;:==:var h:==:h : 7 , i    i : 8 ;
var element = editingContext . element ;:==:var config:==:editingContext . config ;
var rowClassName = _ props . rowClassName ;:==:var rowStyle:==:_ props . rowStyle ;
var radius = radiusAxis . dataToRadius ( data [ 0 ] ) ;:==:var angle:==:angleAxis . dataToAngle ( data [ 1 ] ) ;
var defaultStyle = _ props . defaultStyle ;:==:var style:==:_ props . style ;
var width = pageSize . width ;:==:var height:==:pageSize . height ;
var del = require ( ' del ' ) ;:==:var bistre:==:require ( ' bistre ' ) ;
var syntheticEvent = require ( ' syntheticEvent ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var w = this . image . width ;:==:var h:==:this . image . height ;
var exportSpecifier = traceur . syntax . trees . exportSpecifier ;:==:var exportSpecifierSet:==:traceur . syntax . trees . exportSpecifierSet ;
var error = sharedUtil . error ;:==:var eof:==:coreParser . eof ;
var direction = self . getDirection ( data . direction ) ;:==:var easing:==:easing_functions [ data . easing ] ;
var height = viewport . height - ( margin . top + margin . bottom ) ;:==:var width:==:viewport . width - ( margin . left + margin . right ) ;
var ASSIGNMENT_ELEMENT = ' ASSIGNMENT_ELEMENT ' ;:==:var AWAIT_EXPRESSION:==:' AWAIT_EXPRESSION ' ;
var index = $ ( this ) . attr ( ' data - index ' ) ;:==:var callback:==:buttons [ index ] . callback ;
var width = range . width ( ) - 15 ;:==:var max:==:parseFloat ( range . attr ( ' max ' ) ) ;
var createCatchStatement = parseTreeFactory . createCatchStatement ;:==:var createIdentifierToken:==:parseTreeFactory . createIdentifierToken ;
var Grid = ( 0 , _ reactDom . finddomNode ) ( this . grid ) ;:==:var clientWidth:==:grid . clientWidth  |  |  0 ;
var denodeify = RSVP . denodeify ;:==:var readFile:==:denodeify ( fs . readFile ) ;
var module = require ( moduleName ) ;:==:var deprecationMsg:==:symbolPath in deprecationMap ? ' access made to deprecated symbol : ' + symbolPath + ' . ' + deprecationMsg : null ;
var moduleAnalyzer = traceur . semantics . moduleAnalyzer ;:==:var project:==:traceur . semantics . symbols . project ;
var isName = corePrimitives . isName ;:==:var isStream:==:corePrimitives . isStream ;
var e = event ;:==:var action:==:this . action ;
var index = point . _ index ;:==:var custom:==:point . custom  |  |  ;
var editor = this . editor ;:==:var renderer:==:editor . renderer ;
var village = $ ( ' div#village ' ) ;:==:var population:==:$ ( ' div#population ' ) ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var touchableOpacity:==:require ( ' touchableOpacity ' ) ;
var buffer = require ( ' vinyl - buffer ' ) ;:==:var connect:==:require ( ' gulp - connect ' ) ;
var Suite = mocha . Suite ;:==:var Test:==:mocha . Test ;
var path = doc . $ _ _ fullPath ( self . path ) ;:==:var owner:==:doc . ownerDocument ? doc . ownerDocument ( ) : doc ;
var svg = this . svg ;:==:var pie:==:this . pie ;
var scope = selectedCallFrame . scopeChain [ i ] ;:==:var object:==:this . target ( ) . runtimeModel . createRemoteObject ( scope . object ) ;
var field = fieldInformation [ 0 ] ;:==:var len:==:field . length ;
var category = this . _ category  |  |  props . category  |  |  ' All ' ;:==:var label:==:props . label ;
var extend = require ( ' extend ' ) ;:==:var inherits:==:require ( ' util ' ) . inherits ;
var Firepad = firepad . Firepad ;:==:var Headless:==:Firepad . Headless ;
var View = _ fxosMvcDistMvc . view ;:==:var deviceNameService:==:_ appJsServicesDeviceNameService [ ' default ' ] ;
var left = leftChildIdx ( idx ) ;:==:var right:==:rightChildIdx ( idx ) ;
var path = require ( ' path ' ) ;:==:var nconf:==:require ( ' nconf ' ) ;
var p = particle . position ;:==:var v:==:particle . velocity ;
var start = value . substr ( 0 , startPos ) ;:==:var end:==:value . substr ( endPos ) ;
var request = require ( ' request ' ) ;:==:var express:==:require ( ' express ' ) ;
var when = require ( ' when ' ) ;:==:var path:==:require ( ' path ' ) ;
var includes = require ( ' includes ' ) ;:==:var url:==:require ( ' url ' ) ;
var x = quaternion . x * inverseMagnitude ;:==:var y:==:quaternion . y * inverseMagnitude ;
var i = nodes . length , node , value , internalName = ' data - mce- ' + name ;:==:var urlConverter:==:settings . url_converter , urlConverterScope    settings . url_converter_scope , undef ;
var pluckFn = transformUtils . pluckFn ;:==:var identity:==:transformUtils . identity ;
var stringExtensions = jsCommon . stringExtensions ;:==:var formatting:==:jsCommon . formatting ;
var fromWorldPoint = orbitCameraInputTouch . fromWorldPoint ;:==:var toWorldPoint:==:orbitCameraInputTouch . toWorldPoint ;
var domNamespaces = require ( ' domNamespaces ' ) ;:==:var createMicrosoftUnsafeLocalFunction:==:require ( ' createMicrosoftUnsafeLocalFunction ' ) ;
var allOptions = _ _ webpack_require _ _ ( 49 ) . allOptions ;:==:var configureOptions:==:_ _ webpack_require _ _ ( 49 ) . configureOptions ;
var light = $ ( ' # lightButton . button ' ) ;:==:var stoke:==:$ ( ' # stokeButton . button ' ) ;
var top = $ this . offset ( ) . top ;:==:var scrollTop:==:$ ( window ) . scrollTop ( ) ;
var rpc     = require ( ' pm2-axon - rpc ' ) ;:==:var axon:==:require ( ' pm2-axon ' ) ;
var title = $ . trim ( $ ( ' . title ' ) . text ( ) ) ;:==:var desc:==:$ . trim ( $ ( ' # desc ' ) . text ( ) ) ;
var sn1 = helper . getNode ( ' sn1 ' ) ;:==:var sn2:==:helper . getNode ( ' sn2 ' ) ;
var user = this . analytics . user ( ) ;:==:var events:==:this . events ( track . event ( ) ) ;
var util = require ( ' hexo - util ' ) ;:==:var escapeHTML:==:util . escapeHTML ;
var minute = calendar . month . minute ( ) ;:==:var second:==:calendar . month . second ( ) ;
var p = createjs . extend ( abstractLoader , createjs . eventDispatcher ) ;:==:var s:==:abstractLoader ;
var subscriber = _ ref . subscriber ;:==:var window:==:_ ref . window ;
var cyan900 = exports . cyan900 = ' # 006064 ' ;:==:var cyanA100:==:exports . cyanA100    ' # 84ffff ' ;
var menus = imports . menus ;:==:var auth:==:imports . auth ;
var d = vp8Get ( b ) ? vp8GetSignedValue ( b , 4 ) : 0 ;:==:var e:==:vp8Get ( b ) ? vp8GetSignedValue ( b , 4 ) : 0 ;
var getClosestAncestorIn = dom . getClosestAncestorIn ;:==:var getNodeLength:==:dom . getNodeLength ;
var scrollLeft = self . _ _ scrollLeft + self . _ _ decelerationVelocityx ;:==:var scrollTop:==:self . _ _ scrollTop + self . _ _ decelerationVelocityy ;
var text   = _ text  |  |  ' Warning ' ;:==:var position:==:_ position  |  |  ' center ' ;
var rating = request . parameters . rating ;:==:var filePath:==:decodeuriComponent ( request . parameters . filePath ) ;
var forOfStatement = traceur . syntax . trees . forOfStatement ;:==:var forInStatement:==:traceur . syntax . trees . forInStatement ;
var userType = element ( by . binding ( ' userType ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var operatorNode = math . expression . node . operatorNode ;:==:var blockNode:==:math . expression . node . blockNode ;
var fluxStore = require ( ' fluxStore ' ) ;:==:var dispatcher:==:require ( ' dispatcher ' ) ;
var message = config . messages [ i ] ;:==:var status:==:config . status [ i ] ;
var target = $ ( event . target ) ;:==:var btn:==:target . closest ( ' a . sys - icon - btn ' ) ;
var http = require ( ' http ' ) ;:==:var events:==:require ( ' events ' ) ;
var accessControl = imports . accessControl ;:==:var collab:==:imports . collab ;
var groupSizes = numberFormatInfo . groupSizes  |  |  [ 3 ] ;:==:var groupSize:==:groupSizes [ 0 ] ;
var api = imports . api ;:==:var TEST_MODE:==:! ! process . env . C9_TEST_MODE ;
var tabbehavior = imports . tabbehavior ;:==:var tabManager:==:imports . tabManager ;
var from = codeMirror . posFromIndex ( node . location + change . from ) ;:==:var to:==:codeMirror . posFromIndex ( node . location + change . to ) ;
var findRangesImmutable = require ( ' findRangesImmutable ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var options = self . options ;:==:var ui:==:self . ui ;
var percent = percentFormat . format ( randomNumber ) ;:==:var permille:==:permilleFormat . format ( randomNumber ) ;
var x = goog . math . Integer . fromString ( xs , 16 ) ;:==:var y:==:goog . math . integer . fromString ( ys , 16 ) ;
var w = x + width ;:==:var h:==:y + height ;
var path = require ( ' path ' ) ;:==:var https:==:require ( ' https ' ) ;
var mark = $ ( ' # chatinput mark ' ) ;:==:var input:==:$ ( ' # chatinput input ' ) ;
var eventPropagators = require ( ' eventPropagators ' ) ;:==:var syntheticAnimationEvent:==:require ( ' syntheticAnimationEvent ' ) ;
var fields = this . _ fields  |  |  ( this . _ fields = ) ;:==:var type:==:typeof arg ;
var l = _ l ;:==:var i:==:_ i ;
var ANON_BLOCK = ' ANON_BLOCK ' ;:==:var ARGUMENT_LIST:==:' ARGUMENT_LIST ' ;
var clockseq = options . clockseq ! = = undefined ? options . clockseq : _ clockseq ;:==:var msecs:==:options . msecs !    undefined ? options . msecs : new Date ( ) . getTime ( ) ;
var identifier = this . transformAny ( tree . identifier ) ;:==:var typeAnnotation:==:this . transformAny ( tree . typeAnnotation ) ;
var next = context . next ;:==:var userContext:==:context . userContext ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var textMeasurementService:==:powerbi . textMeasurementService ;
var i d = spec . i d ;:==:var waitFor:==:( spec . waitFor     undefined ) ? true : spec . waitFor ;
var transformation = generate_transformation_string ( options ) ;:==:var resource_type:==:option_consume ( options , ' resource_type ' , ' image ' ) ;
var n = this . n ;:==:var r1:==:this . r1 ;
var reactMultiChild = require ( ' reactMultiChild ' ) ;:==:var reactServerRenderingTransaction:==:require ( ' reactServerRenderingTransaction ' ) ;
var hostname = os . hostname ( ) ;:==:var uptime:==:formatUptime ( process . uptime ( ) ) ;
var prev = jQuery ( ' # firstp ' ) [ 0 ] . previousSibling ;:==:var p:==:jQuery ( ' # firstp,#first ' ) [ 0 ] . parentNode ;
var dest = params . destArray  |  |  null ;:==:var allowNegativeOffset:==:params . allowNegativeOffset  |  |  false ;
var CLEARANCE = goog . ui . editor . Bubble . VERTICAL_CLEARANCE _ ;:==:var bubbleContainer:==:bubble . bubbleContainer _ ;
var i d = material . i d ;:==:var shader:==:shaders [ i d ] ;
var COLOR_INDEX = Billboard . COLOR_INDEX = 8 ;:==:var ROTATION_INDEX:==:Billboard . ROTATION_INDEX    9 ;
var ellipse = type : ' ellipse ' , x : 10 , y : 10 ;:==:var line:==:type : ' line ' , x1 : 10 , x2 : 50 , y1 : 10 , y2 : 20 ;
var declare = require ( ' gulp - declare ' ) ;:==:var wrap:==:require ( ' gulp - wrap ' ) ;
var continueStatement = traceur . syntax . trees . continueStatement ;:==:var doWhileStatement:==:traceur . syntax . trees . doWhileStatement ;
var continueStatement = traceur . syntax . trees . continueStatement ;:==:var debuggerStatement:==:traceur . syntax . trees . debuggerStatement ;
var axis = axisInfo . axis ;:==:var dim:==:axis . dim ;
var allowNone = activity . source . data . allowNone ;:==:var currentToneid:==:activity . source . data . currentToneid ;
var width = this . currentViewport . width ;:==:var height:==:this . currentViewport . height ;
var join = require ( ' path ' ) . join ;:==:var sliced:==:require ( ' sliced ' ) ;
var toComparators = semver . toComparators ;:==:var semVer:==:semver . semVer ;
var className = options . className ! = = undefined ? options . className : ' ol - rotate ' ;:==:var label:==:options . label !    undefined ? options . label : ' \u21e7 ' ;
var loop = S . in_loop ;:==:var labels:==:S . labels ;
var n = computeNormals_n ;:==:var normals:==:this . normals ;
var transparency = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . transparency , 50 ) ;:==:var style:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . style , visuals . lineStyle . dashed ) ;
var x = t . x ;:==:var y:==:t . y ;
var y = this . centerWorld . y - point . y ;:==:var z:==:this . centerWorld . z - point . z ;
var isFading = this . _ animation . _ isFading ;:==:var i:==:this . _ boneList . length ;
var w = width + bleed_x ;:==:var h:==:height + bleed_y ;
var events = expandoStore . events ;:==:var handle:==:expandoStore . handle ;
var a = board . millis ( ) ;:==:var b:==:board . millis ( ) ;
var models = _ _ alloyId29 . models ;:==:var len:==:models . length ;
var sendProgress = document . querySelector ( ' progress#sendProgress ' ) ;:==:var receiveProgress:==:document . querySelector ( ' progress#receiveProgress ' ) ;
var height = _ props3 . height ;:==:var horizontalOverscanSize:==:_ props3 . horizontalOverscanSize ;
var sideOrientation = meshBuilder . updateSideOrientation ( options . sideOrientation , scene ) ;:==:var instance:==:options . instance ;
var grey100 = exports . grey100 = ' # f5f5f5 ' ;:==:var grey200:==:exports . grey200    ' # eeeeee ' ;
var visualBounds = this . dom . visualBounds ;:==:var layoutBounds:==:this . dom . layoutBounds ;
var type = param . type ;:==:var num:==:Math . floor ( param . num ) ;
var heightData = options . heightData ;:==:var widthData:==:options . widthData ;
var prefix = context & & context . prefix ;:==:var inexport:==:context & & context . inexport ;
var moveSelectionBackward = require ( ' moveSelectionBackward ' ) ;:==:var removeTextWithStrategy:==:require ( ' removeTextWithStrategy ' ) ;
var exists = fs . exists  |  |  require ( ' path ' ) . exists ;:==:var crypto:==:require ( ' crypto ' ) ;
var ifClause = this . transformToBlockOrStatement ( tree . ifClause ) ;:==:var elseClause:==:this . transformToBlockOrStatement ( tree . elseClause ) ;
var ut = u * p , ut3 = ut * 3 , uut3 = u * ut3 , utt3 = ut3 * p ;:==:var x:==:x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt , y    y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt ;
var minX = this . minX ;:==:var minY:==:this . minY ;
var rotation = viewState . rotation ;:==:var size:==:frameState . size ;
var toggle = element . find ( ' [ uib - dropdown - toggle ] ' ) ;:==:var menu:==:$ document . find ( ' # dropdown - menu ' ) ;
var head = rootNode . querySelector ( ' head ' ) ;:==:var body:==:rootNode . querySelector ( ' body ' ) ;
var netmask = wanlink_netmask ( ) ;:==:var gateway:==:wanlink_gateway ( ) ;
var pnLoop = ( opts . pnLoop=='false' |  | opts . pnLoop==false ) ? false : true ;:==:var mouseOverStop:==:( opts . mouseOverStop   ' false' |  | opts . mouseOverStop   false ) ? false : true ;
var objectId = schemaTypes . objectId ;:==:var mixed:==:schemaTypes . mixed ;
var promise = this . promise ;:==:var input:==:this . _ input ;
var barClassFailure = options . barClassFailure  |  |  ' bar - danger ' ;:==:var outputClassSuccess:==:options . outputClassSuccess  |  |  ' ' ;
var root = this . _ shadowRoot . createChild ( ' div ' , ' root ' ) ;:==:var svg:==:this . _ createsvgChild ( root , ' svg ' ) ;
var moment = require ( ' moment ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var prefix = results . prefix ;:==:var matches:==:results & & results . matches ;
var key = rows [ i ] . editors [ j ] . key ;:==:var editor:==:this . editors [ key ] ;
var onUnhandledFail = testUtils . onUnhandledFail ;:==:var onUnhandledSucceed:==:testUtils . onUnhandledSucceed ;
var destination = this . destination ;:==:var duration:==:tryCatch_1 . tryCatch ( this . durationSelector ) ( value ) ;
var widget = widgets [ i ] ;:==:var computed:==:widget . computed ;
var fs = require ( ' graceful - fs ' ) ;:==:var intersect:==:require ( ' intersect ' ) ;
var axon    = require ( ' pm2-axon ' ) ;:==:var util:==:require ( ' util ' ) ;
var doc = eventDoc . documentElement ;:==:var body:==:eventDoc . body ;
var statusText = xhr . statusText  |  |  '' ;:==:var response:==:( ' response ' in xhr ) ? xhr . response : xhr . responseText ;
var directive = directives [ directiveIndex ] ;:==:var annotation:==:directive . annotation ;
var    LENEXT = 22 ;:==:var    DIST:==:23 ;
var stringToBytes = sharedUtil . stringToBytes ;:==:var string32:==:sharedUtil . string32 ;
var current = tester . inject ( ' $ route ' ) . current ;:==:var controller:==:current . controller ;
var error = options . error  |  |  emptyFn ;:==:var user:==:options . user  |  |  '' ;
var x = docSet . getByLongname ( ' x ' ) [ 0 ] ;:==:var foo:==:docSet . getByLongname ( ' foo ' ) [ 0 ] ;
var createThrowStatement = parseTreeFactory . createThrowStatement ;:==:var createUndefinedExpression:==:parseTreeFactory . createUndefinedExpression ;
var guardBits = quantizationParameters . guardBits ;:==:var segmentationSymbolUsed:==:codingStyleParameters . segmentationSymbolUsed ;
var keys = this . keys ;:==:var velocity:==:this . velocity ;
var clientX = event . center ? event . center . x : event . clientX ;:==:var clientY:==:event . center ? event . center . y : event . clientY ;
var style = _ props . style ;:==:var width:==:_ props . width ;
var x = cursor . x ;:==:var y:==:cursor . y ;
var m = math . matrix ( [ [ 1 , 2 ] , [ 3 , 4 ] ] , ' sparse ' ) ;:==:var r:==:multiply ( m , math . matrix ( [ [ 5 , 6 ] , [ 7 , 8 ] ] , ' sparse ' ) ) ;
var line = node . loc . start . line ;:==:var col:==:node . loc . start . column ;
var Table = fixedDataTable . table ;:==:var column:==:fixedDataTable . column ;
var fieldset = $ ( ' selects_fieldset ' ) ;:==:var fields:==:fieldset . immediateDescendants ( ) ;
var tabsView = _ jsViewTabsView [ ' default ' ] ;:==:var offlineView:==:_ jsViewOfflineView [ ' default ' ] ;
var clientWidth = lineSpace . clientWidth  |  |  lineSpace . offsetWidth ;:==:var clientHeight:==:lineSpace . clientHeight  |  |  lineSpace . offsetHeight ;
var constantinople = require ( ' constantinople ' ) ;:==:var stringify:==:require ( ' js - stringify ' ) ;
var x0 = subband . tbx0 ;:==:var y0:==:subband . tby0 ;
var isSameOrigin = sharedUtil . isSameOrigin ;:==:var loadJpegStream:==:sharedUtil . loadJpegStream ;
var stepPlot = g . getBooleanOption ( ' stepPlot ' , setName ) ;:==:var points:==:e . points ;
var Node = mod . Node ;:==:var linkedList:==:mod . linkedList ;
var fs = require ( ' fs ' ) ;:==:var Schema:==:mongoose . Schema ;
var opts = _ _ alloyId30 . opts  |  |  ;:==:var models:==:_ _ alloyId29 . models ;
var createObjectLiteralExpression = parseTreeFactory . createObjectLiteralExpression ;:==:var createParameterList:==:parseTreeFactory . createParameterList ;
var cacheForwardStack = json . parse ( cacheMapping . cacheForwardStack  |  |  ' [ ] ' ) ;:==:var cacheBackStack:==:json . parse ( cacheMapping . cacheBackStack  |  |  ' [ ] ' ) ;
var opts = _ _ alloyId13 . opts  |  |  ;:==:var models:==:_ _ alloyId12 . models ;
var canAttach = errors . canAttach ;:==:var thrower:==:util . thrower ;
var value = group [ 1 ]  |  |  ' $ value ' ;:==:var index:==:group [ 2 ]  |  |  ' $ index ' ;
var a = new global . tests . _ base . declare . tmp22 ( ) ;:==:var b:==:new global . tests . _ base . declare . tmp23 ( ) ;
var context = frameState . context ;:==:var pass:==:frameState . passes ;
var size = frameState . size ;:==:var pixelRatio:==:frameState . pixelRatio ;
var items = groupNode . items ;:==:var isOpen:==:groupNode . isOpen ;
var faceUV = options . faceUV  |  |  new Array ( 6 ) ;:==:var faceColors:==:options . faceColors ;
var reactFiberCommitWork = require ( ' reactFiberCommitWork ' ) ;:==:var reactFiberHostContext:==:require ( ' reactFiberHostContext ' ) ;
var name = jQuery ( ' # ' + pl . nsClass ( ' newattributename ' ) ) . val ( ) ;:==:var wert:==:jQuery ( ' # ' + pl . nsClass ( ' newattributewert ' ) ) . val ( ) ;
var COMMA    = C . COMMA    = 0x6 ;:==:var TRUE:==:C . TRUE      0x7 ;
var key = relationship . key ;:==:var belongsTo:==:snapshot . belongsTo ( key ) ;
var cm = this . cm , display = cm . display , sel = cm . doc . sel . primary ( ) ;:==:var from:==:sel . from ( ) , to    sel . to ( ) ;
var rule = pattern . rules [ j ] ;:==:var r:==:true ;
var commitCollection = collections . commitCollection ;:==:var branchCollection:==:collections . branchCollection ;
var destroyTables = window . destroyTables ;:==:var iNumberOfCols:==:window . iNumberOfCols ;
var batchedBridge = require ( ' batchedBridge ' ) ;:==:var timePickerAndroid:==:require ( ' timePickerAndroid ' ) ;
var top = Math . ceil ( box . top ) ;:==:var left:==:Math . ceil ( box . left ) ;
var li = lis [ i ] ;:==:var text:==:li . textContent ;
var end = node . end ;:==:var callee:==:node . callee ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var binaryOperator:==:traceur . syntax . trees . binaryOperator ;
var textNode = textNodes [ 0 ] ;:==:var block:==:blocks [ 0 ] ;
var Util = sharedUtil . util ;:==:var error:==:sharedUtil . error ;
var WHITESPACE = unicodeData . whitespace ;:==:var punctuation:==:unicodeData . punctuation ;
var layout = this . arg ( ' layout ' ) ;:==:var value:==:this . arg ( ' value ' ) ;
var names = smc . _ names = arraySet . fromArray ( aSourceMap . _ names . toArray ( ) , true ) ;:==:var sources:==:smc . _ sources    arraySet . fromArray ( aSourceMap . _ sources . toArray ( ) , true ) ;
var loc = parentSection . location ( ) ;:==:var size:==:parentSection . size ( ) ;
var getHoverListener = t . getHoverListener ;:==:var rangeToSegments:==:t . rangeToSegments ;
var https = require ( ' https ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var webSocketError = windows . networking . sockets . webSocketError ;:==:var webErrorStatus:==:windows . web . webErrorStatus ;
var info = imports . info ;:==:var api:==:imports . api ;
var index = m . _ index ;:==:var ptr:==:m . _ ptr ;
var isName = corePrimitives . isName ;:==:var stream:==:coreStream . stream ;
var has = require ( ' has ' ) ;:==:var util:==:require ( ' util ' ) ;
var DISTANCE_DISPLAY_CONDITION = Polyline . DISTANCE_DISPLAY_CONDITION ;:==:var NUMBER_OF_PROPERTIES:==:Polyline . NUMBER_OF_PROPERTIES ;
var path = require ( ' path ' ) ;:==:var requirejs:==:require ( ' requirejs ' ) ;
var maximumRenderbufferSize = contextLimits . maximumRenderbufferSize ;:==:var format:==:defaultValue ( options . format , renderbufferFormat . rgba4 ) ;
var center = opt_center  |  |  new goog . math . Coordinate ( 0 , 0 ) ;:==:var x:==:this . x ;
var inner = ' inner ' ;:==:var mathord:==:' mathord ' ;
var width = element . getAttribute ( ' width ' ) ;:==:var height:==:element . getAttribute ( ' height ' ) ;
var Schema = mongoose . Schema ;:==:var objectId:==:schema . objectId ;
var status = yargs . argv . status ;:==:var message:==:yargs . argv . message ;
var CONSTRUCT_SIGNATURE = ' CONSTRUCT_SIGNATURE ' ;:==:var CONSTRUCTOR_TYPE:==:' CONSTRUCTOR_TYPE ' ;
var msgType = msg . msgType ;:==:var msgData:==:msg . msgData ;
var sort = typeof options . sort = = = ' function ' ? options . sort : null ;:==:var allowDots:==:typeof options . allowDots      ' undefined ' ? false : options . allowDots ;
var fontLoader = displayFontLoader . fontLoader ;:==:var canvasGraphics:==:displayCanvas . canvasGraphics ;
var pattern = obj . pattern  |  |  attrGetter ( ' ngfPattern ' , scope , $ event : evt ) ;:==:var len:==:items . length ;
var input = element . find ( ' input ' ) ;:==:var ul:==:element . find ( ' ul ' ) ;
var hour = options . hour ;:==:var left:==:options . left ;
var del    = require ( ' del ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var isTabKey = utilities . isTabKey ;:==:var isUpArrow:==:utilities . isUpArrow ;
var moment = require ( ' moment ' ) ;:==:var argv:==:require ( ' yargs ' ) . argv ;
var left = result . left ;:==:var right:==:result . right ;
var column = columnsMetadata [ i ] ;:==:var queryName:==:column . queryName ;
var paths = gatherAvailableNodePaths ( exports . paths ) ;:==:var prefixes:==:exports . prefixes ;
var afterItemsNode = options . afterItemsNode ;:==:var containerNode:==:options . containerNode ;
var stacks = this . stacks ;:==:var source:==:this . source ;
var config = ref . config ;:==:var nextTick:==:ref . nextTick ;
var lang = this . model . get ( ' lang ' ) ;:==:var code:==:this . $ el . find ( ' # code ' ) [ 0 ] ;
var dynCall_iiii = Module [ ' dynCall_iiii ' ] = asm [ ' dynCall_iiii ' ] ;:==:var dynCall_viii:==:Module [ ' dynCall_viii ' ]    asm [ ' dynCall_viii ' ] ;
var commands = imports . commands ;:==:var clipboard:==:imports . clipboard ;
var results = runner . results ( ) ;:==:var specs:==:runner . specs ( ) ;
var fromName = itemModel . get ( ' fromName ' ) ;:==:var toName:==:itemModel . get ( ' toName ' ) ;
var width = displayObject . texture . frame . width ;:==:var height:==:displayObject . texture . frame . height ;
var cachedProperty = utils . cachedProperty ;:==:var parseBytes:==:utils . parseBytes ;
var opacity = definition . opacity ;:==:var origin:==:definition . origin ;
var onAfterChange = jasmine . createSpy ( ' onAfterChange ' ) ;:==:var syncSources:==:jasmine . createSpy ( ' syncSources ' ) ;
var uuid = require ( ' hap - nodejs ' ) . uuid ;:==:var inherits:==:require ( ' util ' ) . inherits ;
var startTime = options . startTime ;:==:var stopTime:==:options . stopTime ;
var height = win . height ( ) + 5 ;:==:var width:==:win . width ( ) + 20 ;
var p = SCM . position ( ) ;:==:var d:==:SCM . duration ( ) ;
var main = window . main = null ;:==:var sender:==:window . sender    null ;
var parseTreeFactory = traceur . codegeneration . parseTreeFactory ;:==:var createAssignmentStatement:==:parseTreeFactory . createAssignmentStatement ;
var rollup = require ( ' rollup ' ) ;:==:var babel:==:require ( ' rollup - plugin - babel ' ) ;
var next = order . next ;:==:var prev:==:order . prev ;
var path = require ( ' path ' ) ;:==:var assert:==:require ( ' chai ' ) . assert ;
var objectLoader = coreObj . objectLoader ;:==:var xRef:==:coreObj . xRef ;
var preview = $ this . preview ;:==:var codeMirror:==:$ this . codeMirror ;
var Plugin = imports . Plugin ;:==:var panels:==:imports . panels ;
var name = tree . name . literalToken ;:==:var type:==:tree . typeAnnotation ;
var data = $ . data ( this , ' pp - rwdrag ' ) ;:==:var el:==:data . options . el [ 0 ] ;
var first = this . container . find ( ' . calendar . first ' ) ;:==:var second:==:this . container . find ( ' . calendar . second ' ) ;
var Selectable = kendo . ui . Selectable ;:==:var dataBoundWidget:==:kendo . ui . dataBoundWidget ;
var addonTestApp = require ( ' ember - cli - addon - tests ' ) . addonTestApp ;:==:var request:==:require ( ' request ' ) ;
var atanh = math . atanh ;:==:var tanh:==:math . tanh ;
var layout = imports . layout ;:==:var watcher:==:imports . watcher ;
var dy = Math . max ( 0 , Math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' dy ' , this . dy ) ) ) ) ;:==:var arrowHead:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;
var specialMatch = stringMatch . _ specialMatch ;:==:var normalMatch:==:stringMatch . _ normalMatch ;
var ext = imports . ext ;:==:var util:==:imports . util ;
var instanceCount = item . instanceCount ;:==:var inclusiveRenderDuration:==:item . inclusiveRenderDuration ;
var selectionManager = powerbi . visuals . utility . selectionManager ;:==:var colorHelper:==:powerbi . visuals . colorHelper ;
var path = require ( ' path ' ) ;:==:var dist:==:' dist ' + path . sep ;
var isInt = sharedUtil . isInt ;:==:var stringToBytes:==:sharedUtil . stringToBytes ;
var n = width * percent  |  0 ;:==:var i:==:width - n ;
var onKeyboardFocus = _ props . onKeyboardFocus ;:==:var tooltip:==:_ props . tooltip ;
var min = d3 . min ( data , function ( d ) return d [ field ] ) ;:==:var max:==:d3 . max ( data , function ( d ) return d [ field ] ) ;
var fs   = require ( ' fs ' ) ;:==:var util:==:require ( ' util ' ) ;
var pieceList = this . _ pieceList ;:==:var selected:==:( isInit ? thisOption : newOption ) . selected  |  |  ;
var s = windowManager . prototype . getWindowSpace . apply ( this , arguments ) ;:==:var d:==:this . getSetting ( ' desktopMargin ' ) ;
var settings    = this . settings ;:==:var editor:==:this . editor ;
var args = item . args ;:==:var handler:==:item . handler ;
var operatorNode = math . expression . node . operatorNode ;:==:var assignmentNode:==:math . expression . node . assignmentNode ;
var movementThreshold = options . movementThreshold = = = undefined ? movement_threshold : options . movementThreshold ;:==:var sensitiveArea:==:options . sensitiveArea      undefined ? sensitive_area : options . sensitiveArea ;
var https = require ( ' https ' ) ;:==:var pem:==:require ( ' pem ' ) ;
var con = client . connection ;:==:var query:==:client . query ( ' whatever ' ) ;
var moment = require ( ' moment ' ) ;:==:var file:==:path . join ( process . cwd ( ) , moment ( ) . format ( ' dd - HH : mm : ss ' ) + ' . cpuprofile ' ) ;
var a11 = this . a11 ;:==:var a12:==:this . a12 ;
var maximum = this . _ options . maximum ;:==:var ignoreBrackets:==:this . _ options . ignoreBrackets ;
var lazy = _ _ webpack_require _ _ ( 5 ) . lazy ;:==:var isFactory:==:_ _ webpack_require _ _ ( 5 ) . isFactory ;
var util = require ( ' util ' ) ;:==:var connect:==:require ( ' connect ' ) ;
var a = new blockNode ( [ node : new symbolNode ( ' x ' ) , node : new constantNode ( 2 ) ] ) ;:==:var b:==:new blockNode ( [ node : new symbolNode ( ' x ' ) , node : new constantNode ( 2 ) ] ) ;
var min = Math . floor ( minFloat ) ;:==:var sec:==:math . round ( secFloat * 100 ) ;
var origin = addVector ( scale ( rays [ 0 ] . origin , xp ) , scale ( rays [ 1 ] . origin , 1 - xp ) ) ;:==:var dir:==:normaliseVector ( addVector ( scale ( rays [ 0 ] . dir , xp ) , scale ( rays [ 1 ] . dir , 1 - xp ) ) ) ;
var host = keystone . get ( ' host ' ) ;:==:var port:==:keystone . get ( ' port ' ) ;
var AFTER_UNSUBSCRIPTION_ID = nconf . get ( ' AFTER_UNSUBSCRIPTION_ID ' ) ;:==:var BEFORE_UNSUBSCRIPTION_ID:==:nconf . get ( ' BEFORE_UNSUBSCRIPTION_ID ' ) ;
var r = der . readString ( asn1 . ber . integer , true ) ;:==:var s:==:der . readString ( asn1 . ber . integer , true ) ;
var encoding = mesh . encoding ;:==:var indices:==:mesh . indices ;
var type = this . property . value . type ;:==:var subtype:==:this . property . value . subtype ;
var branchCollection = collections . branchCollection ;:==:var tagCollection:==:collections . tagCollection ;
var scrollTop = math . max ( math . min ( self . _ _ scrollTop , self . _ _ maxScrollTop ) , 0 ) ;:==:var clientWidth:==:self . _ _ clientWidth ;
var Y = cs . MYA * AGR + cs . MYB * BGG + cs . MYC * CGB ;:==:var Z:==:cs . MZA * AGR + cs . MZB * BGG + cs . MZC * CGB ;
var isArray = sharedUtil . isArray ;:==:var isInt:==:sharedUtil . isInt ;
var setTimeout = window . setTimeout . bind ( window ) ;:==:var clearTimeout:==:window . clearTimeout . bind ( window ) ;
var shapeHover = instance . get ( ' shapeHover ' ) ;:==:var shapeArrowHover:==:instance . get ( ' shapeArrowHover ' ) ;
var width = defaultValue ( options . width , 1 . 0 ) ;:==:var colorsPerVertex:==:defaultValue ( options . colorsPerVertex , false ) ;
var style = textContent . styles [ textItem . fontName ] ;:==:var text:==:document . createElementns ( svg_ns , ' svg : text ' ) ;
var component = components . get ( utils . getParentComponent ( ) ) ;:==:var mutations:==:component & & component . mutations  |  |  [ ] ;
var asc = numberUtil . asc ;:==:var bind:==:zrUtil . bind ;
var selectionState = require ( ' selectionState ' ) ;:==:var style:==:require ( ' style ' ) ;
var yellowA400 = exports . yellowA400 = ' # ffea00 ' ;:==:var yellowA700:==:exports . yellowA700    ' # ffd600 ' ;
var columnNumber = this . _ breakpoint . _ columnNumber ;:==:var condition:==:this . _ breakpoint . condition ( ) ;
var green = Color . floatToByte ( color . green ) ;:==:var blue:==:color . floatToByte ( color . blue ) ;
var div = document . createElement ( ' div ' ) ;:==:var p:==:document . createElement ( ' p ' ) ;
var FALSE3 = C . FALSE3 = 0x33 ;:==:var FALSE4:==:C . FALSE4    0x34 ;
var projection = globe . projection ;:==:var bounds:==:globe . bounds ( view ) ;
var browser = utils . browser [ 0 ] ;:==:var platform:==:utils . platform ;
var push = [ ] . push ;:==:var hasOwnProperty:==:object . prototype . hasOwnProperty ;
var scrollHeight = _ state . scrollHeight ;:==:var scrollLeft:==:_ state . scrollLeft ;
var CHECK = 27 ;:==:var LENGTH:==:28 ;
var expression = this . transformAny ( tree . expression ) ;:==:var body:==:this . transformAny ( tree . body ) ;
var gradientUtils = powerbi . visuals . gradientUtils ;:==:var axisType:==:powerbi . visuals . axisType ;
var value = this . value ( ) ;:==:var type:==:this . type ( ) ;
var shadow = light . shadow ;:==:var isPointLight:==:light & & light . isPointLight ;
var touches = e . originalEvent . touches ;:==:var pagex:==:touches ? touches [ 0 ] . pagex : e . pagex ;
var dist = distanceBetween ( lastPoint , currentPoint ) ;:==:var angle:==:angleBetween ( lastPoint , currentPoint ) ;
var x = ~~particle . position . x ;:==:var y:==:~~particle . position . y ;
var add = this . addCondition _ ( mapBrowserEvent ) ;:==:var remove:==:this . removeCondition _ ( mapBrowserEvent ) ;
var el = meta . el ;:==:var view:==:el . _ view ;
var scene = this . scene ;:==:var img:==:document . createElement ( ' img ' ) ;
var logger = require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;:==:var package:==:protocol . package ;
var cordova = require ( ' cordova ' ) ;:==:var action:==:msg . action ;
var username = identify . username ( ) ;:==:var traits:==:identify . traits ( ) ;
var createCallExpression = parseTreeFactory . createCallExpression ;:==:var createCommaExpression:==:parseTreeFactory . createCommaExpression ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var visualDataRoleKind:==:powerbi . visualDataRoleKind ;
var featurePrefix = context [ ' featurePrefix ' ] ;:==:var featurens:==:context [ ' featurens ' ] ;
var width = crunch . _ crn_get_width ( src , srcSize ) ;:==:var height:==:crunch . _ crn_get_height ( src , srcSize ) ;
var month = getOption ( options , ' month ' , ' string ' , [ ' 2-digit ' , ' numeric ' , ' narrow ' , ' short ' , ' long ' ] , undefined ) ;:==:var day:==:getOption ( options , ' day ' , ' string ' , [ ' 2-digit ' , ' numeric ' ] , undefined ) ;
var index = self . $ panes . indexOf ( pane ) ;:==:var active:==:self . $ panes . $ active ;
var easing = EASING_FUNCTIONS [ data . easing ] ;:==:var fill:==:data . fill ;
var loadHero = sandbox . spy ( scope , ' loadHero ' ) ;:==:var scrollTo:==:sandbox . spy ( window , ' scrollTo ' ) ;
var layout = imports . layout ;:==:var navigate:==:imports . navigate ;
var slice = Array . prototype . slice ;:==:var toStr:==:object . prototype . toString ;
var entity = this . entity ;:==:var entityManager:==:this . entityManager ;
var MODULE_REQUIRE = parseTreeType . module_require ;:==:var variable_statement:==:parseTreeType . variable_statement ;
var Datagrid = imports . Datagrid ;:==:var menuItem:==:imports . menuItem ;
var a = mobx . observable ( 1 ) ;:==:var b:==:mobx . observable ( 1 ) ;
var frame = this . texture . frame ;:==:var context:==:renderSession . context ;
var type = this . _ currentElement . type ;:==:var constructor:==:this . _ instance & & this . _ instance . constructor ;
var x = arc . x ;:==:var y:==:arc . y ;
var el = this . el ;:==:var controllerComponent:==:el . components [ controllerComponentName ] ;
var pat = Sk . ffi . unwrapo ( pattern ) ;:==:var str:==:Sk . ffi . unwrapo ( string ) ;
var transform = options . transform ;:==:var separator:==:options . hasOwnProperty ( ' separator ' ) ? options . separator : ' , ' ;
var html = response . html ;:==:var embed:==:win . find ( ' # embed ' ) [ 0 ] ;
var createBreakStatement = parseTreeFactory . createBreakStatement ;:==:var createContinueStatement:==:parseTreeFactory . createContinueStatement ;
var requirejs = require ( ' requirejs ' ) ;:==:var karma:==:require ( ' karma ' ) . Server ;
var prefix = self . prefix ;:==:var cookie:==:self . cookie ;
var PROPERTY_SIGNATURE = ' PROPERTY_SIGNATURE ' ;:==:var PROPERTY_VARIABLE_DECLARATION:==:' PROPERTY_VARIABLE_DECLARATION ' ;
var scaleX = options . scaleX ;:==:var scaleY:==:options . scaleY ;
var w = layer . widthInPixels ;:==:var h:==:layer . heightInPixels ;
var createPromiseCapability = sharedUtil . createPromiseCapability ;:==:var util:==:sharedUtil . util ;
var text = $ ( hs [ i ] ) . text ( ) ;:==:var tagName:==:hs [ i ] . tagName . toLowerCase ( ) ;
var discussion = discussionList . shift ( ) ;:==:var commentElt:==:commentEltMap [ discussion . discussionIndex ] ;
var tube = options . tube  |  |  0 . 5 ;:==:var radialSegments:==:options . radialSegments  |  |  32 ;
var i d = opts . i d ;:==:var env:==:opts . env  |  |  ;
var defaults = require ( ' defaults ' ) ;:==:var json:==:require ( ' json ' ) ;
var dataSet = vis . dataSet ;:==:var dataView:==:vis . dataView ;
var chat = imports . chat ;:==:var timeslider:==:imports . timeslider ;
var editor = new Editor ( fs , ' editor ' ) ;:==:var filer:==:new Filer ( fs , ' filer ' , editor , isSyncable ) ;
var db = this . _ db ;:==:var transaction:==:this . _ db . transaction ( [ DBOS_VISITS ] , ' readwrite ' ) ;
var sIcon = sap . ui . core . theming . parameters . _ getThemeImage ( ' _ sap_ui_ux3_feed_toolsiconurl ' ) ;:==:var sIconHover:==:sap . ui . core . theming . parameters . _ getThemeImage ( ' _ sap_ui_ux3_feed_toolsiconhoverurl ' ) ;
var height = svg . getAttribute ( ' height ' ) ;:==:var width:==:svg . getAttribute ( ' width ' ) ;
var end = state . end ;:==:var subscriber:==:state . subscriber ;
var leaveClass = data . leaveClass ;:==:var leaveActiveClass:==:data . leaveActiveClass ;
var source = options . source ;:==:var minimize:==:options . minimize ;
var $ button = event . data . $ button ;:==:var button:==:$ button . data ( ' button ' ) ;
var SPREAD_EXPRESSION = ' SPREAD_EXPRESSION ' ;:==:var SPREAD_PATTERN_ELEMENT:==:' SPREAD_PATTERN_ELEMENT ' ;
var node = e . node ;:==:var name:==:node . name ;
var x = defaultValue ( queryNumericValue ( iconNode , ' x ' , namespaces . gx ) , 0 ) ;:==:var y:==:defaultValue ( queryNumericValue ( iconNode , ' y ' , namespaces . gx ) , 0 ) ;
var order = $ scope . order ;:==:var pair:==:order . currency_pair ;
var utils = require ( ' keystone - utils ' ) ;:==:var DISABLE_CSRF:==:process . env . DISABLE_CSRF      ' true ' ;
var scrollX = this . _ mc . scrollX ;:==:var scrollY:==:this . _ mc . scrollY ;
var deactivated = ref . deactivated ;:==:var activated:==:ref . activated ;
var EYE_OFFSET_INDEX = Billboard . EYE_OFFSET_INDEX = 3 ;:==:var HORIZONTAL_ORIGIN_INDEX:==:Billboard . HORIZONTAL_ORIGIN_INDEX    4 ;
var record_on = Test . anotherWay . _ record_control_get_element ( ' record_on ' ) ;:==:var record_off:==:test . anotherWay . _ record_control_get_element ( ' record_off ' ) ;
var b = rejectThenableSoon ( ' rejected - b ' , 30 ) ;:==:var c:==:rejectBuiltInSoon ( ' rejected - c ' , 10 ) ;
var offset = data . offset  |  |  x : 0 , y : 0 ;:==:var repeat:==:data . repeat  |  |  x : 1 , y : 1 ;
var O_DIRECTORY = constants . O_DIRECTORY  |  |  0 ;:==:var O_EXCL:==:constants . O_EXCL  |  |  0 ;
var count = accessor . count ;:==:var buffer:==:loadResources . getBuffer ( bufferView ) ;
var TAKE = ' TAKE ' ;:==:var PUT:==:' PUT ' ;
var isArray   = angular . isArray ;:==:var isString:==:angular . isString ;
var standardEncoding = coreEncodings . standardEncoding ;:==:var macRomanEncoding:==:coreEncodings . macRomanEncoding ;
var e = a . cache_y_stride _ ;:==:var f:==:d . f_info _ [ 1 + b ] ;
var access_token = tokenData . access_token ;:==:var expires:==:number ( tokenData . expires ) ;
var codingLine = this . codingLine ;:==:var codingPos:==:this . codingPos ;
var inner = ' inner ' ;:==:var baz:==:' baz inner ' ;
var s = e . values ;:==:var n:==:s . length ;
var summary = $ ( ' # grid_'+ this . name + ' _ summary ' ) ;:==:var fsummary:==:$ ( ' # grid_'+ this . name + ' _ fsummary ' ) ;
var extension = ( json . extensions & & json . extensions [ EXTENSIONS . KHR_MATERIALS_COMMON ] )  |  |  ;:==:var lights:==:extension . lights  |  |  ;
var cellToDate = t . cellToDate ;:==:var getIsCellAllDay:==:t . getIsCellAllDay ;
var commands = imports . commands ;:==:var fs:==:imports . fs ;
var reactTestRenderer = require ( ' reactTestRenderer ' ) ;:==:var reactdomFeatureFlags:==:require ( ' reactdomFeatureFlags ' ) ;
var data = JSON . parse ( request . data ) ;:==:var name:==:data . name ;
var p1 = input . p1 ;:==:var p2:==:input . p2 ;
var camera = this . camera ;:==:var system:==:this . system ;
var nock = require ( ' nock ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var ds = app . dataSource ( ' ds ' , connector : ' memory ' ) ;:==:var score:==:app . registry . createModel ( ' score ' ) ;
var quasiLiteralTransformer = traceur . codegeneration . quasiLiteralTransformer ;:==:var restParameterTransformer:==:traceur . codegeneration . restParameterTransformer ;
var scale = target . scale  |  |  [ 1 , 1 ] ;:==:var rotation:==:target . rotation  |  |  0 ;
var nodeFieldCount = snapshot . _ nodeFieldCount ;:==:var nodeTypeOffset:==:snapshot . _ nodeTypeOffset ;
var lineWidgets = this . session . lineWidgets ;:==:var w:==:lineWidgets & & lineWidgets [ row ] ;
var panels = imports . panels ;:==:var find:==:imports . find ;
var createVariableStatement = traceur . codegeneration . parseTreeFactory . createVariableStatement ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var left = event . center . x - rect . left ;:==:var top:==:event . center . y - rect . top ;
var SPREAD_PATTERN_ELEMENT = ' SPREAD_PATTERN_ELEMENT ' ;:==:var STATE_MACHINE:==:' STATE_MACHINE ' ;
var BAZ = docSet . getByLongname ( ' baz ' ) [ 0 ] ;:==:var qux:==:docSet . getByLongname ( ' qux ' ) [ 0 ] ;
var slice = arrayProto . slice ;:==:var concat:==:arrayProto . concat ;
var data = this . data ;:==:var keys:==:this . keys ;
var shader = this . shader ;:==:var batcher:==:this . batcher ;
var descriptor = preEvaluatedFont . descriptor ;:==:var type:==:preEvaluatedFont . type ;
var oPage = this . _ oPage ;:==:var sLibraryName:==:this . _ sLibraryName ;
var dirs = util . dirs ( ) ;:==:var events:==:require ( ' events ' ) ;
var topPosition = cartesian3 . fromArray ( topPositions , i3 , scratchCartesian3Position1 ) ;:==:var bottomPosition:==:cartesian3 . fromArray ( bottomPositions , i3 , scratchCartesian3Position2 ) ;
var datasets = data . datasets ;:==:var getValueOrDefault:==:helpers . getValueOrDefault ;
var from = Math . max ( update . visible . from - cm . options . viewportMargin , doc . first ) ;:==:var to:==:math . min ( end , update . visible . to + cm . options . viewportMargin ) ;
var sourceMap = this . sourceMapConfiguration _ . sourceMapGenerator . toString ( ) ;:==:var inputSourceMap:==:this . sourceMapConfiguration _ . inputSourceMap ;
var auth = imports . auth ;:==:var ideProviderName:==:options . ideProviderName  |  |  ' cloud9 ' ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var expect:==:require ( ' expect . js ' ) ;
var samplingRatio = setting & & ( 0 , _ object . hasOwnProperty ) ( setting , ' samplingRatio ' ) ? this . hot . getSettings ( ) . autoColumnSize . samplingRatio : void 0 ;:==:var allowSampleDuplicates:==:setting & & ( 0 , _ object . hasOwnProperty ) ( setting , ' allowSampleDuplicates ' ) ? this . hot . getSettings ( ) . autoColumnSize . allowSampleDuplicates : void 0 ;
var requestEntityTooLargeError = errors . requestEntityTooLargeError ;:==:var payloadTooLargeError:==:errors . payloadTooLargeError ;
var tokenType = traceur . syntax . tokenType ;:==:var formalParameterList:==:traceur . syntax . trees . formalParameterList ;
var attr = element . attributes [ i ] ;:==:var name:==:attr . name ;
var activeDrag = ddm . activeDrag ;:==:var activeDrop:==:instance . activeDrop ;
var blockTree = require ( ' blockTree ' ) ;:==:var characterMetadata:==:require ( ' characterMetadata ' ) ;
var logic = require ( ' logic ' ) ;:==:var scope:==:logic . scope ( ' browserBox ' ) ;
var breakpoints = imports . breakpoints ;:==:var ui:==:imports . ui ;
var rowOverscanStartIndex = _ ref6 . rowOverscanStartIndex ;:==:var rowOverscanStopIndex:==:_ ref6 . rowOverscanStopIndex ;
var should = require ( ' should ' ) ;:==:var async:==:require ( ' async ' ) ;
var canvas = this . canvas ;:==:var embedded:==:this . getAttribute ( ' embedded ' ) & & ! this . is ( ' vr - mode ' ) ;
var b = frustum . bottom ;:==:var r:==:frustum . right ;
var basename = state . file . opts . basename  |  |  ' unknownFile ' ;:==:var filename:==:state . file . opts . filename  |  |  ' unknownFile ' ;
var reactTypeOfWork = require ( ' reactTypeOfWork ' ) ;:==:var syntheticEvent:==:require ( ' syntheticEvent ' ) ;
var columnCount = _ props3 . columnCount ;:==:var height:==:_ props3 . height ;
var util = require ( ' hexo - util ' ) ;:==:var fs:==:require ( ' hexo - fs ' ) ;
var polylineDecoratorPlugin = leafletHelpers . polylineDecoratorPlugin ;:==:var isDefined:==:leafletHelpers . isDefined ;
var Base = C_lib . Base ;:==:var wordArray:==:c_lib . wordArray ;
var token = tokens [ 0 ] ;:==:var value:==:token . value ;
var composite = preEvaluatedFont . composite ;:==:var descriptor:==:preEvaluatedFont . descriptor ;
var size = options . size  |  |  new BABYLON . Vector3 ( 1 , 1 , 1 ) ;:==:var angle:==:options . angle  |  |  0 ;
var File = this . File ;:==:var base:==:this . base ;
var input = element . find ( ' input ' ) . eq ( 0 ) ;:==:var attributes:==:field . attributes ( ) ;
var getColumnHeader = window . getColumnHeader ;:==:var getRowHeader:==:window . getRowHeader ;
var p = this . _ props ;:==:var radiusX:==:( p . radiusX !   null ) ? p . radiusX : p . radius ;
var i d = broadcast . i d ;:==:var type:==:broadcast . type ;
var start = me . _ start ;:==:var view:==:me . _ view ;
var nodeCommands = model . _ nodeCommands ;:==:var length:==:nodeCommands . length ;
var v2 = sphereTrimesh_v2 ;:==:var relpos:==:sphereTrimesh_relpos ;
var size = object . size ;:==:var type:==:object . type ;
var box = aBox ( ' the scripted box ' ) ;:==:var sphere:==:aSphere ( ' the scripted sphere ' ) ;
var i2 = _ i2 ;:==:var s1:==:_ s1 ;
var x86 = path . join ( profileDir , ' x86 ' ) ;:==:var amd64:==:path . join ( profileDir , ' amd64 ' ) ;
var wordArray = c_lib . wordArray ;:==:var hasher:==:c_lib . hasher ;
var direction = camera . directionWC ;:==:var position:==:camera . positionWC ;
var charset = charsetDetect . detect ( line ) ;:==:var encoding:==:charset . encoding ;
var x = v . x ;:==:var y:==:v . y ;
var width = corridorGeometry . _ width ;:==:var extrudedHeight:==:corridorGeometry . _ extrudedHeight ;
var trimLeft   = string . prototype . trimLeft ;:==:var trimRight:==:string . prototype . trimRight ;
var commands = imports . commands ;:==:var menus:==:imports . menus ;
var commandList = frameState . commandList ;:==:var passes:==:frameState . passes ;
var memberName = this . props . memberName ;:==:var memberGroups:==:this . props . memberGroups ;
var utils = require ( ' keystone - utils ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' keystone : core : createItems ' ) ;
var pinchMidPoint = orbitCameraInputTouch . pinchMidPoint ;:==:var touches:==:event . touches ;
var yellow300 = exports . yellow300 = ' # fff176 ' ;:==:var yellow400:==:exports . yellow400    ' # ffee58 ' ;
var allVoices = windows . media . speechSynthesis . speechSynthesizer . allVoices ;:==:var defaultVoice:==:windows . media . speechSynthesis . speechSynthesizer . defaultVoice ;
var unibuild = unibuildInfo . unibuild ;:==:var unibuildJson:==:unibuildInfo . unibuildJson ;
var x = ( p0 . x * b1 + p1 . x * b2 + p2 . x * b3 + p3 . x * b4 ) ;:==:var y:==:( p0 . y * b1 + p1 . y * b2 + p2 . y * b3 + p3 . y * b4 ) ;
var children = this . el . children ;:==:var childNodes:==:this . el . childNodes ;
var height = polygon . height ;:==:var extrudedHeight:==:polygon . extrudedHeight ;
var clientWidth = document . documentElement . clientWidth ;:==:var contentWidth:==:this . contentWidth ;
var idbKeyRange = goog . global . idbKeyRange  |  |  goog . global . webkitidbKeyRange ;:==:var d:==:new goog . async . deferred ( ) ;
var rule = this . _ cssParser . rules ( ) [ itemIndex ] ;:==:var lineNumber:==:rule . lineNumber ;
var x = this . attribute ( ' x ' ) . toPixels ( ' x ' ) ;:==:var y:==:this . attribute ( ' y ' ) . toPixels ( ' y ' ) ;
var rc = require ( ' rc ' ) ;:==:var rttc:==:require ( ' rttc ' ) ;
var pressure = defaultValue ( options . pressure , 0 ) ;:==:var rotation:==:defaultValue ( options . rotation , 0 ) ;
var row = this . _ grid . getOrCreateRow ( rowIndex + this . _ rowLayoutManager . _ gridOffset ) ;:==:var column:==:this . _ grid . getOrCreateColumn ( columnIndex + this . _ columnLayoutManager . _ gridOffset ) ;
var Image = require ( ' Image ' ) ;:==:var styleSheet:==:require ( ' styleSheet ' ) ;
var scrollTop = _ ref2 . scrollTop ;:==:var totalHeight:==:_ ref2 . totalHeight ;
var asyncQueue = $ rootScope . $ $ asyncQueue = [ ] ;:==:var postDigestQueue:==:$ rootScope . $ $ postDigestQueue    [ ] ;
var width = canvas . width - 10 ;:==:var height:==:canvas . height - 10 ;
var analytics = imports [ ' analytics ' ] ;:==:var Types:==:require ( ' frontdoor ' ) . Types ;
var alarm = alarms [ i d ] ;:==:var alarm_clock:==:alarm_clocks [ i d ] ;
var tileWidth = defaultValue ( options . tileWidth , parseInt ( format . getAttribute ( ' width ' ) , 10 ) ) ;:==:var tileHeight:==:defaultValue ( options . tileHeight , parseInt ( format . getAttribute ( ' height ' ) , 10 ) ) ;
var fclone = require ( ' fclone ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var n = this . tn ;:==:var d:==:vdot ( vsub ( this . ta , a ) , n ) ;
var assert = require ( ' assert ' ) ;:==:var cst:==:require ( ' cst ' ) ;
var addLinkTargets = util . addLinkTargets ;:==:var stripHtml:==:util . stripHtml ;
var defval = o . defval ;:==:var range:==:o . range !   null ? o . range : sheet [ ' ! ref ' ] ;
var Timer = goog . require ( ' goog . Timer ' ) ;:==:var dom:==:goog . require ( ' goog . dom ' ) ;
var start = content . cursor_start ;:==:var end:==:content . cursor_end ;
var values = m . _ values ;:==:var index:==:m . _ index ;
var mixins = taffy ( members . mixins ) ;:==:var externals:==:taffy ( members . externals ) ;
var count = cfg . count  |  |  12 ;:==:var section:==:cfg . section ;
var sideOrientation = meshBuilder . updateSideOrientation ( options . sideOrientation , scene ) ;:==:var cap:==:options . cap  |  |  babylon . mesh . no_cap ;
var eventMixin = hilo . eventMixin ;:==:var imageLoader:==:hilo . imageLoader ;
var div = document . createElement ( ' div ' ) ;:==:var template:==:templateFn ( f , field )  |  |  templateFn ( f , decorator [ ' default ' ] ) ;
var normal = Cartesian3 . fromArray ( normals , i ) ;:==:var tangent:==:cartesian3 . fromArray ( tangents , i ) ;
var props = this . props ;:==:var columns:==:props . columns ;
var operation = req . service . api . operations [ req . operation ] ;:==:var input:==:operation . input ;
var s = ref . s ;:==:var l:==:ref . l ;
var edgeFieldsCount = this . _ edgeFieldsCount ;:==:var nodeFieldCount:==:this . _ nodeFieldCount ;
var base_url = this . notebook . base_url ;:==:var path:==:this . notebook . notebook_path ;
var min = $ element . attr ( ' minchecked ' ) ;:==:var max:==:$ element . attr ( ' maxchecked ' )  |  |  options . maxChecked ;
var colorPool = workspace . colorPool ;:==:var reversedAuthorPool:==:workspace . reversedAuthorPool ;
var bcrypt = require ( ' bcryptjs ' ) ;:==:var async:==:require ( ' async ' ) ;
var debug_tab = document . getElementById ( ' debug_tab ' ) ;:==:var results_tab:==:document . getElementById ( ' results_tab ' ) ;
var searchResult = this . _ searchResult ;:==:var uiSourceCode:==:searchResult . uiSourceCode ;
var col = db . collection ( ' insert_many_with_generators ' ) ;:==:var r:==:yield col . insertMany ( [ a : 1 , a : 2 ] ) ;
var del = require ( ' del ' ) ;:==:var watch:==:require ( ' gulp - watch ' ) ;
var createCallExpression = parseTreeFactory . createCallExpression ;:==:var createMemberExpression:==:parseTreeFactory . createMemberExpression ;
var net = require ( ' net ' ) ;:==:var join:==:require ( ' path ' ) . join ;
var tileLoadQueueLow = primitive . _ tileLoadQueueLow ;:==:var tileProvider:==:primitive . _ tileProvider ;
var touch = _ props . touch ;:==:var verticalPosition:==:_ props . verticalPosition ;
var c = rejectSoon ( ' rejected - c ' , 10 ) ;:==:var d:==:fulfillSoon ( ' d ' , 20 ) ;
var useragent = require ( ' express - useragent ' ) ;:==:var favicon:==:require ( ' serve - favicon ' ) ;
var typescript = require ( ' gulp - typescript ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var height = options . height  |  |  10 . 0 ;:==:var subdivisions:==:options . subdivisions  |  |  1  |  0 ;
var ppo = this . indicators . ppo ;:==:var long:==:ppo . long . result ;
var first = res . boundry . first ;:==:var last:==:res . boundry . last ;
var contexts = this . contexts ;:==:var bitsDecoded:==:this . bitsDecoded ;
var skip = opt_skip & & this . selectedElement _ ;:==:var dir:==:opt_direction  |  |  1 ;
var confirm = imports [ ' dialog . confirm ' ] . show ;:==:var accessControl:==:imports . accessControl ;
var categoryAxis = group . categoryAxis ;:==:var valueAxis:==:group . valueAxis ;
var i d = i d  |  |  options . size ( ) ;:==:var option:==:chart_option_number ( ) ;
var source = require ( ' vinyl - source - stream ' ) ;:==:var babel:==:require ( ' gulp - babel ' ) ;
var projection = opts . projection ;:==:var snapX:==:opts . snapX ;
var TRY_STATEMENT = ' TRY_STATEMENT ' ;:==:var TYPE_ALIAS_DECLARATION:==:' TYPE_ALIAS_DECLARATION ' ;
var l = doc . getValue ( ) . length ;:==:var random:==:math . random ( ) ;
var originalEvent = event . originalEvent ;:==:var touches:==:originalEvent & & originalEvent . touches ;
var stacked = scale . options . stacked ;:==:var stack:==:meta . stack ;
var merge = require ( ' utils - merge ' ) ;:==:var parseurl:==:require ( ' parseurl ' ) ;
var selector = btn . parents ( ' . color - selector ' ) ;:==:var container:==:selector . parents ( ' [ data - container - html ] ' ) ;
var trailing = node . trailingComments ;:==:var leading:==:node . leadingComments ;
var math = require ( ' mathjs ' ) ;:==:var workerpool:==:require ( ' workerpool ' ) ;
var size = active . bounds . size ;:==:var x:==:offset . x + size . x + 100 , offsetY    offset . y ;
var util = require ( ' util ' ) ;:==:var shims:==:require ( ' _ shims ' ) ;
var selectFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' selectFieldTestObject ' ) ) ;:==:var textFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;
var pixelConverter = jsCommon . pixelConverter ;:==:var polygon:==:visuals . shapes . polygon ;
var abstractDataServiceAdapter = breeze . abstractDataServiceAdapter ;:==:var autoGeneratedKeyType:==:breeze . autoGeneratedKeyType ;
var editor = this . editor ;:==:var config:==:editor . config ;
var orange300 = exports . orange300 = ' # ffb74d ' ;:==:var orange400:==:exports . orange400    ' # ffa726 ' ;
var w = this . width ;:==:var h:==:this . height ;
var skipSelf = makeParamDecorator ( ' skipSelf ' , [ ] ) ;:==:var host:==:makeParamDecorator ( ' host ' , [ ] ) ;
var pid = req . params . pid ;:==:var vfsid:==:req . params . vfsid ;
var util = imports . util ;:==:var Panel:==:imports . Panel ;
var ty = m . ty ;:==:var x:==:bounds . x ;
var Readable = require ( ' stream ' ) . Readable ;:==:var replace:==:require ( ' gulp - replace ' ) ;
var name = this . props . name ;:==:var def:==:this . props . def ;
var gapSize = options . gapSize ;:==:var dashNb:==:options . dashNb ;
var app = this . app ;:==:var speed:==:this . speed ;
var objectEnumerationBuilder = powerbi . visuals . objectEnumerationBuilder ;:==:var gradientUtils:==:powerbi . visuals . gradientUtils ;
var eventType = subscription . eventType ;:==:var key:==:subscription . key ;
var context = scene . _ context ;:==:var shadowsEnabled:==:frameState . shadowHints . shadowsEnabled ;
var a = w . agents [ 0 ] ;:==:var b:==:a . brain ;
var lead = this . editor . selection . lead ;:==:var anchor:==:this . editor . selection . anchor ;
var EPOCHJD = constants . EPOCHJD ;:==:var ONEDAY:==:constants . ONEDAY ;
var email = $ ( ' input#email ' ) . val ( ) ;:==:var phone:==:$ ( ' input#phone ' ) . val ( ) ;
var objectPatternField = traceur . syntax . trees . objectPatternField ;:==:var parenExpression:==:traceur . syntax . trees . parenExpression ;
var list = this . list ;:==:var req:==:this . req ;
var GET_TODO_OK = exports . GET_TODO_OK = ' GET_TODO_OK ' ;:==:var ADD_TODO_ERROR:==:exports . ADD_TODO_ERROR    ' ADD_TODO_ERROR ' ;
var rowOverscanStartIndex = _ ref8 . rowOverscanStartIndex ;:==:var rowOverscanStopIndex:==:_ ref8 . rowOverscanStopIndex ;
var legendObjectProperties = legend : data . legendObjectProperties ;:==:var show:==:powerbi . dataViewObjects . getValue ( legendObjectProperties , visuals . treemapProps . legend . show , this . legend . isVisible ( ) ) ;
var yAxisPosition = powerbi . visuals . yAxisPosition ;:==:var appendClearCatcher:==:powerbi . visuals . appendClearCatcher ;
var label = ' label ' ;:==:var file:==:' file ' ;
var path = sm . source  |  |  bp . path ;:==:var line:==:sm . line  |  |  bp . line ;
var dataGrid = parseOutput . dataGrid ;:==:var headerNames:==:parseOutput . headerNames ;
var fontAliases = descriptor . fontAliases ;:==:var hash:==:preEvaluatedFont . hash ;
var ripple = this . refs . ripple ;:==:var tooltip:==:this . refs . tooltip ;
var show = powerbi . dataViewObjects . getValue ( objects , properties [ ' show ' ] , defaultSettings . show ) ;:==:var position:==:powerbi . dataViewObjects . getValue ( objects , properties [ ' position ' ] , defaultSettings . position ) ;
var isInt = sharedUtil . isInt ;:==:var isValidUrl:==:sharedUtil . isValidUrl ;
var reportSelection = t . reportSelection ;:==:var unselect:==:t . unselect ;
var keys = JSDOC . jsPlate . keys ;:==:var values:==:jsdoc . jsPlate . values ;
var ARRAY_TYPE = ' ARRAY_TYPE ' ;:==:var ARROW_FUNCTION_EXPRESSION:==:' ARROW_FUNCTION_EXPRESSION ' ;
var vi = ContactEquation_getImpactVelocityAlongNormal_vi ;:==:var vj:==:ContactEquation_getImpactVelocityAlongNormal_vj ;
var backdrop = new Animation ( ele . querySelector ( ' ion - backdrop ' ) ) ;:==:var wrapper:==:new animation ( ele . querySelector ( ' . loading - wrapper ' ) ) ;
var nativeMethodsMixin = require ( ' nativeMethodsMixin ' ) ;:==:var platform:==:require ( ' platform ' ) ;
var precision = frame . precision ;:==:var samplesPerLine:==:frame . samplesPerLine ;
var collection = db . collection ( ' test_should_throw_error_if_serializing_function ' ) ;:==:var func:==:function ( ) return 1 ;
var prompt = _ ref . prompt ;:==:var display:==:_ ref . display ;
var createParameterList = parseTreeFactory . createParameterList ;:==:var createParameterReference:==:parseTreeFactory . createParameterReference ;
var options = this . options ;:==:var aspectRatio:==:options . aspectRatio ;
var win = window . frames [ 0 ] ;:==:var doc:==:win . document ;
var service = msg . service ;:==:var payload:==:msg . payload ;
var scrollLeft = _ state . scrollLeft ;:==:var scrollPositionChangeReason:==:_ state . scrollPositionChangeReason ;
var redis = config . redis ;:==:var assert:==:require ( ' assert ' ) ;
var eslint = require ( ' gulp - eslint ' ) ;:==:var gulp:==:require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;
var turn = iceCandidates . turn ;:==:var host:==:iceCandidates . host ;
var v3 = triangleNode . getAttribute ( ' v3 ' ) ;:==:var p1:==:triangleNode . getAttribute ( ' p1 ' ) ;
var x = game . math . snapToFloor ( pointer . x , 32 , 0 ) ;:==:var y:==:game . math . snapToFloor ( pointer . y , 32 , 0 ) ;
var left = ( current . oleft + ( e . pageX  |  |  e . clientX ) - current . ox ) ;:==:var top:==:( current . otop + ( e . pageY  |  |  e . clientY ) - current . oy ) ;
var innerRadiusOfArc = drawOptions . innerRadiusOfArc ;:==:var left:==:drawOptions . left ;
var coverInitializedNameCount = this . coverInitializedNameCount _ ;:==:var expression:==:this . parseExpressionAllowPattern _ ( expressionIn ) ;
var htmlElement = scope . wrappers . htmlElement ;:==:var htmlShadowElement:==:scope . wrappers . htmlShadowElement ;
var slotSegHtml = t . slotSegHtml ;:==:var cellToDate:==:t . cellToDate ;
var url = request . url ;:==:var responseType:==:request . responseType  |  |  ' text ' ;
var action = payload . action ;:==:var data:==:action . data ;
var mout = require ( ' mout ' ) ;:==:var nopt:==:require ( ' nopt ' ) ;
var index = node . index ? compile ( node . index , defs , args ) : null ;:==:var value:==:compile ( node . value , defs , args ) ;
var data = component . data ;:==:var assets:==:this . system . app . assets ;
var lang = options . langInfo ;:==:var editable:==:$ editable [ 0 ] ;
var domNode = this . domNode ;:==:var parent:==:domNode . parentNode ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var async:==:require ( ' async ' ) ;
var outerContainer = opts . outerContainer ;:==:var commonLabelOpts:==:opts . commonLabelOpts  |  |  ;
var months   = w2utils . settings . fullmonths ;:==:var days:==:w2utils . settings . fulldays ;
var value1 = element ( by . binding ( ' value1 ' ) ) ;:==:var value2:==:element ( by . binding ( ' value2 ' ) ) ;
var childs = this . parent . childs ;:==:var index:==:childs . indexOf ( this ) ;
var gaze = require ( ' gaze ' ) ;:==:var ecstatic:==:require ( ' ecstatic ' ) ;
var options = grunt . config ( [ this . name ] ) . options ;:==:var templateFile:==:required ( options , ' templateFile ' ) ;
var version = util . getArg ( sourceMap , ' version ' ) ;:==:var sections:==:util . getArg ( sourceMap , ' sections ' ) ;
var emptyFunction = require ( ' emptyFunction ' ) ;:==:var joinClasses:==:require ( ' joinClasses ' ) ;
var getTreeScope = scope . getTreeScope ;:==:var isWrapper:==:scope . isWrapper ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var numberArrayFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' numberArrayFieldTestObject ' ) ) ;
var metadata = JSON . parse ( doc . metadata ) ;:==:var data:==:JSON . parse ( doc . data ) ;
var slotDuration = view . opt ( ' slotDuration ' ) ;:==:var snapDuration:==:view . opt ( ' snapDuration ' ) ;
var projection = viewState . projection ;:==:var resolution:==:viewState . resolution ;
var el = this . el ;:==:var v:==:el . dom . value ;
var settings = self . data ( ' timepicker - settings ' ) ;:==:var list:==:self . data ( ' timepicker - list ' ) ;
var boxWidthList = groupItem . boxWidthList = [ ] ;:==:var boxOffsetList:==:groupItem . boxOffsetList    [ ] ;
var d = vdot ( vsub ( this . ta , a ) , n ) ;:==:var r:==:this . r ;
var dynCall_iiii = Module [ ' dynCall_iiii ' ] = asm [ ' dynCall_iiii ' ] ;:==:var dynCall_dii:==:Module [ ' dynCall_dii ' ]    asm [ ' dynCall_dii ' ] ;
var selectableLegendDataPoints = this . selectableLegendDataPoints ;:==:var selectableLabelsDataPoints:==:this . selectableLabelsDataPoints ;
var fs    = require ( ' fs ' ) ;:==:var pidusage:==:require ( ' pidusage ' ) ;
var createdAt = doc . createdAt ;:==:var updatedAt:==:doc . updatedAt ;
var i d = _ elementId ( $ ( this ) , idx ) ;:==:var item:==:items . filter ( ' [ aria - controls ' + ( this . i d  |  |  0 ) + ' ] ' ) [ 0 ] ;
var linbits = entry . linbits ;:==:var startbits:==:entry . startbits ;
var vy = this . vy * damping + ( gravity . y + this . f . y * this . m_inv ) * dt ;:==:var v_limit:==:this . v_limit ;
var pvrtc = extras . compressedImage3dTiles . pvrtc1 ;:==:var etc1:==:extras . compressedImage3dTiles . etc1 ;
var last_logic = this . last_logic ;:==:var last_field:==:this . last_field ;
var i d = i d  |  |  options . size ( ) ;:==:var option:==:chart_option_checkbox ( ) ;
var worldImpulse = body_applylocalimpulse_worldimpulse ;:==:var worldPoint:==:body_applylocalimpulse_worldpoint ;
var i = cursor_skipWhitespace ( str , start , imax ) ;:==:var c:==:str . charCodeAt ( i ) ;
var prevDelta = session . prevDelta  |  |  ;:==:var prevInput:==:session . prevInput  |  |  ;
var headerPair = headerPairs [ i ] ;:==:var index:==:headerPair . indexOf ( ' \u003a\u0020 ' ) ;
var _ subscribers = parent . _ subscribers ;:==:var length:==:_ subscribers . length ;
var cookie = require ( ' cookie ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' analytics . js : cookie ' ) ;
var beforeEnter = ref . beforeEnter ;:==:var enter:==:ref . enter ;
var sqrt = Math . sqrt ;:==:var round:==:Math . round ;
var state = cm . state . lint , options = state . options ;:==:var annotations:==:groupByLine ( annotationsNotSorted ) ;
var path = require ( ' path ' ) ;:==:var timekeeper:==:require ( ' timekeeper ' ) ;
var premultiply = options . premultiply ;:==:var transparent:==:options . transparent ;
var right = ~dir . indexOf ( ' right ' ) & & ' right ' ;:==:var top:==:~dir . indexOf ( ' top ' )   & & ' top ' ;
var keepIdx = options ? options . keepIdx : false ;:==:var timeThreshold:==:options ? options . timeThreshold : null ;
var y = shape . y ;:==:var r:==:shape . r ;
var rimraf = require ( ' rimraf ' ) ;:==:var async:==:require ( ' async ' ) ;
var CATCH = ' CATCH ' ;:==:var CLASS_DECLARATION:==:' CLASS_DECLARATION ' ;
var vel2 = calcRollingFriction_vel2 ;:==:var vel:==:calcRollingFriction_vel ;
var instances = parameters . instances ;:==:var length:==:instances . length ;
var nodes = this . body . nodes ;:==:var edges:==:this . body . edges ;
var interruptInPipes = usbInterface . interruptInPipes ;:==:var interruptOutPipes:==:usbInterface . interruptOutPipes ;
var auth = imports . auth ;:==:var http:==:imports . http ;
var ambient = m . parameters . ambient ;:==:var shininess:==:m . parameters . shininess ;
var dimensions = this . dimensions = [ ] ;:==:var parallelAxisIndex:==:this . parallelAxisIndex    [ ] ;
var uv = attributes [ ' uv ' ] ;:==:var color:==:attributes [ ' color ' ] ;
var m = o . getElementById ( ' state ' ) ;:==:var l:==:m ? m . innerText : null ;
var save = imports . save ;:==:var fs:==:imports . fs ;
var parameterArguments = booleans [ parameterArgumentsIndex ] ;:==:var callsEval:==:booleans [ callsEvalIndex ] ;
var reactdomInjection = require ( ' reactdomInjection ' ) ;:==:var reactdomStackInjection:==:require ( ' reactdomStackInjection ' ) ;
var level = Number ( req . query . level ) ;:==:var group:==:req . query . group  |  |  ' default ' ;
var winston = require ( ' winston ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var path = require ( ' path ' ) ;:==:var argv:==:require ( ' yargs ' ) . argv ;
var period   = options . period ;:==:var dampingRatio:==:options . dampingRatio ;
var ctx = currentLayer . ctx ;:==:var m:==:el . transform ;
var unread = liEl . hasClass ( ' unread ' ) ;:==:var nid:==:liEl . attr ( ' data - nid ' ) ;
var https   = require ( ' https ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' interface : http ' ) ;
var serverConfig = config . params . serverConfig ; < % if ( filters . mongoose ) % >:==:var mongoose:==:require ( ' mongoose ' ) ;
var sh        = option . shape ;:==:var parent:==:option . parent ;
var prop = propertiesToTest [ propKey ] ;:==:var provider:==:propertyProviders [ providerKey ] ;
var tryCatch3 = util . tryCatch3 ;:==:var errorObj:==:util . errorObj ;
var isStream = corePrimitives . isStream ;:==:var colorSpace:==:coreColorSpace . colorSpace ;
var lineBreak = _ . lineBreak ;:==:var isNewLine:==:_ . isNewLine ;
var primitives = mesh . primitives . length ;:==:var length:==:primitives . length ;
var Schema = mongoose . Schema ;:==:var utility:==:require ( ' utility ' ) ;
var originalLight = light . userData . originalLight ;:==:var distance:==:originalLight . distance ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var jscs:==:require ( ' gulp - jscs ' ) ;
var LET = tokenType . let ;:==:var var:==:tokenType . var ;
var dns = require ( ' dns ' ) ;:==:var extend:==:require ( ' extend ' ) ;
var listeners = this . _ listeners ;:==:var index:==:listeners [ type ] . indexOf ( listener ) ;
var roseType = seriesModel . get ( ' roseType ' ) ;:==:var stillShowZeroSum:==:seriesModel . get ( ' stillShowZeroSum ' ) ;
var first = Object . clone ( edge . dockers . first ( ) . referencePoint ) ;:==:var last:==:object . clone ( edge . dockers . last ( ) . referencePoint ) ;
var nativeModules = require ( ' nativeModules ' ) ;:==:var promise:==:require ( ' promise ' ) ;
var cellStyle = props . cellStyle ;:==:var columnCount:==:props . columnCount ;
var classIndex = node . classIndex ( ) ;:==:var seen:==:! ! seenClassNameIndexes [ classIndex ] ;
var etag = webapp . metaData . etag  |  |  null ;:==:var packageEtag:==:webapp . metaData . packageEtag  |  |  null ;
var confirmDownloadView = _ appJsViewsConfirmDownloadView [ ' default ' ] ;:==:var deviceNameView:==:_ appJsViewsDeviceNameView [ ' default ' ] ;
var value = element ( by . binding ( ' example . value  |  date : ' HH : mm : ss ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var d5 = _ addDiv ( ' d5 ' ) , d6 = _ addDiv ( ' d6 ' ) ;:==:var conn:==:_ jsPlumb . connect ( source : d5 , target : d6 ) ;
var S = db . model ( ' docArrayWithHookedSet ' , schema ) ;:==:var s:==:new s ( name : ' test ' ) ;
var os = require ( ' os ' ) ;:==:var nconf:==:require ( ' nconf ' ) ;
var x = new symbolNode ( ' x ' ) ;:==:var o:==:new functionNode ( ' outputScope ' , [ x ] ) ;
var positions = segments . positions ;:==:var lengths:==:segments . lengths ;
var cyan400 = exports . cyan400 = ' # 26c6da ' ;:==:var cyan500:==:exports . cyan500    ' # 00bcd4 ' ;
var word = data . word ;:==:var score:==:Number ( data . score ) ;
var createArrayLiteralExpression = parseTreeFactory . createArrayLiteralExpression ;:==:var createAssignmentExpression:==:parseTreeFactory . createAssignmentExpression ;
var bytes = this . bytes ;:==:var pos:==:this . pos ;
var createWhileStatement = parseTreeFactory . createWhileStatement ;:==:var breakState:==:traceur . codegeneration . generator . breakState ;
var cssnano = require ( ' cssnano ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var conditionalNode = math . expression . node . conditionalNode ;:==:var operatorNode:==:math . expression . node . operatorNode ;
var fullBuildTimeout = this . fullBuildTimeout ;:==:var requestTimeout:==:this . requestTimeout ;
var x1 = segment . x1 ;:==:var y1:==:segment . y1 ;
var oldValue = context . oldValue ;:==:var newValue:==:context . newValue ;
var User = db . model ( ' gh4073_0 ' , userSchema ) ;:==:var comment:==:db . model ( ' gh4073_1 ' , commentSchema ) ;
var binder = this . binder ;:==:var hierarchyNavigator:==:this . _ owner . owner . owner . hierarchyNavigator ;
var start = range . start . row ;:==:var end:==:range . end . row ;
var count = ( this . count + = 1 ) ;:==:var destination:==:this . destination ;
var info = imports . info ;:==:var menus:==:imports . menus ;
var mail = $ routeParams . mail ;:==:var password:==:$ routeParams . password ;
var w = ( k . width - x * 16 ) ;:==:var h:==:( k . height - y * 16 ) ;
var h = p . height ? s . height : 0 ;:==:var width:==:this . parent ? this . parent . width ( ) : ( w + l + r ) ;
var passwordException = sharedUtil . passwordException ;:==:var statTimer:==:sharedUtil . statTimer ;
var d = new assignmentNode ( object , c ) ;:==:var e:==:new constantNode ( 5 ) ;
var x = data . chars [ char ] . x ;:==:var y:==:data . chars [ char ] . y ;
var mockAngular = jasmine . createSpyObj ( ' mockAngular ' , [ ' element ' ] ) ;:==:var mockElement:==:jasmine . createSpyObj ( ' mockElement ' , [ ' focus ' ] ) ;
var uvs = sprite . _ uvs ;:==:var rect:==:spriteFrame . _ rect ;
var characterSpacing = getStyleProperty ( item , styleContextStack , ' characterSpacing ' , 0 ) ;:==:var link:==:getStyleProperty ( item , styleContextStack , ' link ' , null ) ;
var force = _ ref2$force = = = undefined ? false : _ ref2$force ;:==:var value:==:_ ref2 . value ;
var format = require ( ' util ' ) . format ;:==:var hbs:==:require ( ' hbs ' ) ;
var columns   = method . columns ;:==:var columnGroups:==:method . columnGroups ;
var extension = ref . extension ;:==:var fileWithoutQuery:==:ref . fileWithoutQuery ;
var key = _ ref . key ;:==:var value:==:_ ref . value ;
var cell = evt . getProperty ( ' cell ' ) ;:==:var old:==:evt . getProperty ( ' old ' ) ;
var rename = require ( ' gulp - rename ' ) ;:==:var sourcemaps:==:require ( ' gulp - sourcemaps ' ) ;
var createTrueLiteral = parseTreeFactory . createTrueLiteral ;:==:var createTryStatement:==:parseTreeFactory . createTryStatement ;
var fs = require ( ' fs ' ) ;:==:var base:==:fs . readFileSync ( ' base . html ' ) . toString ( ) ;
var SOCKET = docSet . getByLongname ( ' socket ' ) [ 0 ] ;:==:var rocket:==:docSet . getByLongname ( ' rocket ' ) [ 0 ] ;
var path = require ( ' path ' ) ;:==:var glob:==:require ( ' glob ' ) ;
var resolve = require ( ' url ' ) . resolve ;:==:var methods:==:require ( ' methods ' ) ;
var zone = info . zone ;:==:var rule:==:info . rule ;
var todo = require ( ' gulp - todo ' ) ;:==:var webpack:==:require ( ' webpack - stream ' ) ;
var children = _ props . children ;:==:var enterDelay:==:_ props . enterDelay ;
var avatar = req . files . avatar . path . split ( path . sep ) . pop ( ) ;:==:var password:==:req . fields . password ;
var listView = that . listView ;:==:var value:==:listView . value ( ) [ position ] ;
var collab = imports . collab ;:==:var Menu:==:imports . Menu ;
var quotmark = linter . getOption ( ' quotmark ' ) ;:==:var esnext:==:linter . getOption ( ' esnext ' ) ;
var expression = expressions [ i ] ;:==:var feature:==:expression . feature ( ) ;
var context = this . context _ ;:==:var extent:==:frameState . extent ;
var createMemberLookupExpression = parseTreeFactory . createMemberLookupExpression ;:==:var createOperatorToken:==:parseTreeFactory . createOperatorToken ;
var is = require ( ' is ' ) ;:==:var matter:==:require ( ' gray - matter ' ) ;
var createParenExpression = parseTreeFactory . createParenExpression ;:==:var createPostfixExpression:==:parseTreeFactory . createPostfixExpression ;
var getAccessor = traceur . syntax . trees . getAccessor ;:==:var ifStatement:==:traceur . syntax . trees . ifStatement ;
var info = sharedUtil . info ;:==:var isInt:==:sharedUtil . isInt ;
var iterator = getIterator ( object ( this . iterator ) ) ;:==:var scheduler:==:this . scheduler ;
var customStyle = displaydomUtils . customStyle ;:==:var pdfjs:==:sharedGlobal . pdfjs ;
var editors = imports . editors ;:==:var ui:==:imports . ui ;
var it = lab . it ;:==:var expect:==:Code . expect ;
var visualDataRoleKind = powerbi . visualDataRoleKind ;:==:var createInteractivityService:==:powerbi . visuals . createInteractivityService ;
var attributes = technique . attributes ;:==:var uniforms:==:technique . uniforms ;
var ttsStatus = document . getElementById ( ' ttsStatus ' ) ;:==:var voiceInfo:==:document . getElementById ( ' voiceInfo ' ) ;
var characterData = scope . wrappers . characterData ;:==:var enqueueMutation:==:scope . enqueueMutation ;
var l = this . $ docRowCache . length ;:==:var i:==:this . $ getRowCacheIndex ( this . $ docRowCache , docRow ) + 1 ;
var events = require ( ' events ' ) ;:==:var util:==:require ( ' util ' ) ;
var element = _ elements [ e ] ;:==:var material:==:element . material ;
var owner = doc . ownerDocument ? doc . ownerDocument ( ) : doc ;:==:var pop:==:owner . populated ( path , true ) ;
var denseMatrix = math . type . denseMatrix ;:==:var immutableDenseMatrix:==:math . type . immutableDenseMatrix ;
var value = event . detail . value ;:==:var filteredKeys:==:this . _ filteredKeys ;
var cellWidth = self . cellWidth ( ) ;:==:var cellHeight:==:self . cellHeight ( ) ;
var util = require ( ' util ' ) ;:==:var http:==:require ( ' http ' ) ;
var ref = this . references [ vertex . triangleStart + i ] ;:==:var t:==:this . triangles [ ref . triangleId ] ;
var height = this . attribute ( ' height ' ) . Length . toPixels ( ' y ' ) ;:==:var mask:==:element . attribute ( ' mask ' ) . value ;
var method = options . method ;:==:var ignoreSize:==:options . ignoreSize ;
var withCredentials = _ fallbackIfUndefined ( item . withCredentials , model . get ( ' withCredentials ' ) ) ;:==:var hlsjsdefault:==:model . get ( ' hlsjsdefault ' ) ;
var zip = require ( ' gulp - zip ' ) ;:==:var del:==:require ( ' del ' ) ;
var len = points . length ;:==:var smoothMonotone:==:shape . smoothMonotone ;
var docsSidebar = require ( ' docsSidebar ' ) ;:==:var footer:==:require ( ' footer ' ) ;
var source = element . _ source ;:==:var owner:==:element . _ owner ;
var start = moment ( now ) . clone ( ) . startOf ( ' year ' ) . toDate ( ) ;:==:var end:==:moment ( now ) . clone ( ) . endOf ( ' year ' ) . toDate ( ) ;
var reactInputSelection = require ( ' reactInputSelection ' ) ;:==:var syntheticEvent:==:require ( ' syntheticEvent ' ) ;
var should = require ( ' should ' ) ;:==:var util:==:require ( ' util ' ) ;
var len = this . _ length ;:==:var front:==:this . _ front ;
var axe2 = obj . axe2  |  |  [ 1,0,0 ] ;:==:var pos1:==:obj . pos1  |  |  [ 0,0,0 ] ;
var scale = Math . pow ( Crafty . viewport . _ scale , options . scaleResponse ) ;:==:var viewport:==:crafty . viewport ;
var conversion = this . conversions [ i ] ;:==:var type:==:toConversion & & conversion ? conversion . to : this . types [ i ] ;
var source = new ol . source . Source ( projection : ol . proj . get ( ' EPSG : 4326 ' ) ) ;:==:var layer:==:new ol . layer . Layer ( source : source ) ;
var data = this . series . map ( function ( s ) return s . data ) ;:==:var min:==:d3 . min ( data . map ( function ( d ) return d [ 0 ] . x ) ) ;
var messages = file . messages ;:==:var length:==:messages . length ;
var eventPropagators = require ( ' eventPropagators ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var observer = this . observer ;:==:var typeSupported:==:this . typeSupported ;
var name = desc . name ;:==:var path:==:fs . realpathSync ( desc . path ) ;
var legendProps = powerbi . visuals . legendProps ;:==:var tooltipManager:==:powerbi . visuals . tooltipManager ;
var constant = protobuf . constants ;:==:var util:==:protobuf . util ;
var to = this . to ;:==:var from:==:this . from ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var x = this . body . position . x ;:==:var y:==:this . body . position . y ;
var min_size_x = this . resize_min_size_x ;:==:var max_size_y:==:this . resize_max_size_y ;
var route = what  |  |  this [ config . restangularFields . route ] ;:==:var fetchUrl:==:urlHandler . fetchUrl ( this , what ) ;
var columnData = _ ref . columnData ;:==:var rowData:==:_ ref . rowData ;
var height = options . height ;:==:var width:==:options . width ;
var container = this . container . el . getBoundingClientRect ( ) ;:==:var handle:==:this . handle . el . getBoundingClientRect ( ) ;
var width = img . naturalWidth  |  |  img . width ;:==:var height:==:img . naturalHeight  |  |  img . height ;
var clientX = evt . clientX ;:==:var clientY:==:evt . clientY ;
var path = require ( ' path ' ) . join ( my . session . session_id ( ) , src , args . path ) ;:==:var payload:==:args . payload  |  |  null ;
var Site = require ( ' Site ' ) ;:==:var Marked:==:require ( ' Marked ' ) ;
var formidable = require ( ' formidable ' ) ;:==:var once:==:require ( ' once ' ) ;
var isNW = platformInfo . isnw ;:==:var isCordova:==:platformInfo . isCordova ;
var domApp = inputApp . domApp ;:==:var manifest:==:new manifestHelper ( domApp . manifest ) ;
var sliced = require ( ' sliced ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' nightmare : ipc ' ) ;
var e2 = _ e2 ;:==:var e1:==:_ e1 ;
var debug = require ( ' debug ' ) ( ' loopback : persisted - model ' ) ;:==:var passThrough:==:require ( ' stream ' ) . passThrough ;
var mongo = require ( ' mongoskin ' ) ;:==:var Firebase:==:require ( ' Firebase ' ) ;
var scale = BABYLON . Vector3 . fromArray ( node . scale  |  |  [ 1 , 1 , 1 ] ) ;:==:var rotation:==:babylon . quaternion . fromArray ( node . rotation  |  |  [ 0 , 0 , 0 , 1 ] ) ;
var handlerPath = event . data . handlerPath ;:==:var method:==:event . data . method ;
var margin = parseInt ( titleBar . css ( ' margin - top ' ) , 10 ) ;:==:var padding:==:parseInt ( dialog . wrapper . css ( ' padding - top ' ) , 10 ) ;
var WireV8 = goog . labs . net . webChannel . wirev8 ;:==:var netUtils:==:goog . labs . net . webChannel . netUtils ;
var width = canvas . width * scale ;:==:var height:==:canvas . height * scale ;
var Animated = require ( ' Animated ' ) ;:==:var Easing:==:require ( ' Easing ' ) ;
var widget = script . getAttribute ( ' data - widget ' ) ;:==:var deprecated:==:! ! script . getAttribute ( ' data - deprecated ' ) ;
var collabPanel = imports . collabPanel ;:==:var collab:==:imports . collab ;
var dracula = ' dracula ' ;:==:var piggy:==:' misspiggy ' ;
var bufferCreationInterval = state . bufferCreationInterval ;:==:var bufferTimeSpan:==:state . bufferTimeSpan ;
var header = require ( ' gulp - header ' ) ;:==:var jshint:==:require ( ' gulp - jshint ' ) ;
var techniques = model . gltf . techniques ;:==:var technique:==:techniques [ i d ] ;
var overscanColumnCount = props . overscanColumnCount ;:==:var overscanRowCount:==:props . overscanRowCount ;
var name = file . name ;:==:var size:==:file . size ;
var node = unwrap ( nodeWrapper ) ;:==:var parentNode:==:node . parentNode ;
var requestCamera = this . camera . requestCamera ;:==:var release:==:this . camera . release ;
var languagePre = document . getElementById ( ' languagePre ' ) ;:==:var languageta:==:document . getElementById ( ' languageta ' ) ;
var editor = mouseHandler . editor ;:==:var gutter:==:editor . renderer . $ gutterLayer ;
var generateECDSA = dhe . generateECDSA ;:==:var generateED25519:==:dhe . generateED25519 ;
var DICT = 11 ;:==:var   TYPE:==:12 ;
var target   = opt . get ( ' target ' ) ;:==:var proxyReq:==:getProxyReqFunctions ( opt . get ( ' proxyReq ' ) , opt , bs ) ;
var fs = require ( ' fs ' ) ;:==:var d3:==:require ( ' d3 ' ) ;
var neighbors = this . neighbors ;:==:var faces:==:this . faces ;
var radius = opts & & opts . radius ! = = undefined ? opts . radius : 0 . 5 ;:==:var latitudeBands:==:opts & & opts . latitudeBands !    undefined ? opts . latitudeBands : 16 ;
var options = props . options ;:==:var valueKey:==:props . valueKey ;
var fs = require ( ' fs ' ) ;:==:var https:==:require ( ' https ' ) ;
var fs     = require ( ' fs ' ) ;:==:var path:==:require ( ' path ' ) ;
var c = table . config . widgets ;:==:var l:==:c . length ;
var sideOrientation = options . sideOrientation ;:==:var instance:==:options . instance ;
var settings = JSON . parse ( fs . readFileSync ( settingsPath ) ) ;:==:var commonSettings:==:json . parse ( fs . readFileSync ( commonSettingsPath ) ) ;
var head = cm . getCursor ( ' head ' ) ;:==:var inVisualBlock:==:vimGlobalState . macroModeState . lastInsertModeChanges . inVisualBlock ;
var CLOSE_BRACKET = [ SPACES , RAW_CLOSE_BRACKET , SPACES ] . join ( ' ' ) ;:==:var COMMA:==:[ SPACES , RAW_COMMA , SPACES ] . join ( ' ' ) ;
var textGap = visualMapModel . get ( ' textGap ' ) ;:==:var itemSize:==:visualMapModel . itemSize ;
var VERTICAL_ORIGIN_INDEX = Billboard . VERTICAL_ORIGIN_INDEX ;:==:var SCALE_INDEX:==:Billboard . SCALE_INDEX ;
var attachment = constraint . attachment ;:==:var pin:==:constraint . pin ;
var array = goog . require ( ' goog . array ' ) ;:==:var asserts:==:goog . require ( ' goog . asserts ' ) ;
var backdrop = new Animation ( ele . querySelector ( ' ion - backdrop ' ) ) ;:==:var wrapper:==:new animation ( ele . querySelector ( ' . action - sheet - wrapper ' ) ) ;
var released = ( options & & options . released )  |  |  200 ;:==:var scope:==:( options & & options . scope )  |  |  el ;
var applicationData = windows . storage . applicationData ;:==:var storageApplicationPermissions:==:windows . storage . accessCache . storageApplicationPermissions ;
var underlineShow = _ props2 . underlineShow ;:==:var underlineStyle:==:_ props2 . underlineStyle ;
var api = this . client . api ;:==:var page:==:api . page . simplePageObj ( ) ;
var h = helpers ;:==:var Firepad:==:firepad . Firepad ;
var protocol = require ( ' pomelo - protocol ' ) ;:==:var Package:==:protocol . Package ;
var nextToken = options . nextToken ;:==:var atLeast:==:options . atLeast ;
var stores = $ ( ' div#stores ' ) ;:==:var resources:==:$ ( ' div#resources ' ) ;
var eventHandlerPrefix = configuration . eventHandlerPrefix  |  |  ' handle ' ;:==:var eventHandlerPropPrefix:==:configuration . eventHandlerPropPrefix  |  |  ' on ' ;
var assert = util . assert ;:==:var templating:==:util . Module ( ' templating ' ) ;
var lastFocus = apf . menu . lastFocus ;:==:var opener:==:this . opener ;
var style = props . style ;:==:var text:==:props . text ;
var position = mesh1 . geometry . getAttribute ( ' position ' ) ;:==:var array:==:position . array ;
var identity = identityFn ( req ) ;:==:var yyyymmdd:==:moment ( ) . format ( ' yyyymmdd ' ) ;
var children = _ props . children ;:==:var name:==:_ props . name ;
var log = ' logLevel= ' + ( options . verbose = = = ' 1 ' ? ' 0 ' : ' 4 ' ) ;:==:var optimize:==:' optimize none ' ;
var apiInformation = windows . foundation . metadata . apiInformation ;:==:var orientationSensor:==:windows . devices . sensors . orientationSensor ;
var begin = this . interval . begin ;:==:var end:==:this . interval . end ;
var tileUpdateManager = windows . ui . notifications . tileUpdateManager ;:==:var tiles:==:notificationsExtensions . tiles ;
var SHOW_INDEX = pointPrimitive . show_index ;:==:var position_index:==:pointPrimitive . position_index ;
var a = Math . cos ( x ) , b = Math . sin ( x ) ;:==:var c:==:Math . cos ( y ) , d    Math . sin ( y ) ;
var days    = abs$1 ( this . _ days ) ;:==:var months:==:abs$1 ( this . _ months ) ;
var newValue = event . detail . newValue ;:==:var list:==:this . _ list ;
var series = ecModel . getSeriesByIndex ( idxItem . seriesIndex ) ;:==:var dataIndex:==:idxItem . dataIndexInside ;
var page3 = element ( by . i d ( ' page3 ' ) ) ;:==:var page4:==:element ( by . i d ( ' page4 ' ) ) ;
var newItem = event . detail . newItem ;:==:var filter:==:this . _ filter ;
var score = scores [ k ] . score ;:==:var li:==:createElement ( ' li ' , initials + ' : ' + score ) ;
var path = require ( ' path ' ) ;:==:var hashish:==:require ( ' hashish ' ) ;
var unicodeUtils = require ( ' unicodeUtils ' ) ;:==:var moveSelectionForward:==:require ( ' moveSelectionForward ' ) ;
var https   = require ( ' https ' ) ;:==:var Map:==:require ( ' immutable ' ) . Map ;
var masterha = args . masterha  |  |  ' false ' ;:==:var type:==:args . type  |  |  Constants . RESERVED . ALL ;
var validator = require ( ' validator ' ) ;:==:var async:==:require ( ' async ' ) ;
var layerState = this . layerStates [ i ] ;:==:var layer:==:this . map . layers [ i ] ;
var shadowRoot = scope . wrappers . shadowRoot ;:==:var defineWrapGetter:==:scope . defineWrapGetter ;
var dimensions = coordSys . dimensions ;:==:var option:==:seriesModel . option ;
var position = this . _ position ;:==:var isExcepted:==:this . _ isExcepted ;
var parseMonth = settings . parseMonth  |  |  this . local . parseMonth ;:==:var monthNumbers:==:settings . monthNumbers  |  |  this . local . monthNumbers ;
var body = doc . body ;:==:var documentElement:==:doc . documentElement ;
var update = aggregator . _ update ;:==:var isDown:==:aggregator . _ isDown ;
var keys = Object . keys ( members ) ;:==:var isArray:==:array . isArray ( target ) ;
var technique = techniques [ i d ] ;:==:var states:==:technique . states ;
var tile = context . tiles [ tileIndex ] ;:==:var packetsIterator:==:tile . packetsIterator ;
var w = this . win . outerWidth  |  |  800 ;:==:var h:==:this . win . outerHeight  |  |  500 ;
var black = exports . black = ' # 000000 ' ;:==:var white:==:exports . white    ' # ffffff ' ;
var path = require ( ' path ' ) ;:==:var favicon:==:require ( ' static - favicon ' ) ;
var ui = imports . ui ;:==:var Tree:==:imports . Tree ;
var float32Array = this . float32Array ;:==:var uint32Array:==:this . uint32Array ;
var prefix = new Blockly . fieldLabel ( ' prefix ' ) ;:==:var field:==:new blockly . fieldLabel ( ' field ' ) ;
var TEXT_NODE      = nodeType . text_node      = 3 ;:==:var cdata_section_node:==:nodeType . cdata_section_node      4 ;
var maxDuration = elementData . maxDuration ;:==:var activeClassName:==:elementData . activeClassName ;
var unknownErrorException = sharedUtil . unknownErrorException ;:==:var util:==:sharedUtil . util ;
var passport = require ( ' passport ' ) ;:==:var flash:==:require ( ' connect - flash ' ) ;
var children = _ props3 . children ;:==:var fixedHeight:==:_ props3 . fixedHeight ;
var itmSbWrap = window . itmSbWrap ;:==:var itmSbWrappm:==:window . itmSbWrappm ;
var layout = imports . layout ;:==:var commands:==:imports . commands ;
var dataLabelUtils = powerbi . visuals . dataLabelUtils ;:==:var colorHelper:==:powerbi . visuals . colorHelper ;
var y = rectData . y ;:==:var width:==:rectData . width ;
var menus = imports . menus ;:==:var analytics:==:imports [ ' c9 . analytics ' ] ;
var object = this . object . toTex ( options ) ;:==:var index:==:this . index ? this . index . toTex ( options ) : '' ;
var Platform = require ( ' react - native ' ) . Platform ;:==:var a:==:Platform . OS , b    Platform . select ( android : 1 , ios : 2 ) ;
var standardCertificateStoreNames = windows . security . cryptography . certificates . standardCertificateStoreNames ;:==:var cryptographicBuffer:==:windows . security . cryptography . cryptographicBuffer ;
var relatedTarget = typeof options . relatedTarget ! = ' undefined ' ? options . relatedTarget : null ;:==:var touches:==:this . createTouchList ( options . touches , target ) ;
var manifest = app . manifest  |  |  app . updateManifest ;:==:var role:==:manifest . role ;
var assert = require ( ' assert ' ) ;:==:var argv:==:require ( ' optimist ' ) . argv ;
var scrollLeft = math . min ( math . max ( 0 , totalColumnsWidth - width + scrollbarSize ) , event . target . scrollLeft ) ;:==:var scrollTop:==:math . min ( math . max ( 0 , totalRowsHeight - height + scrollbarSize ) , event . target . scrollTop ) ;
var r = this . r . toArray ( ) ;:==:var s:==:this . s . toArray ( ) ;
var position = Cartesian3 . clone ( camera . position , scratch2dViewportSavedPosition ) ;:==:var transform:==:matrix4 . clone ( camera . transform , scratch2dViewportCameraTransform ) ;
var value = event . detail . value ;:==:var groupKey:==:this . _ groupKeyOf ( value ) ;
var gulp = require ( ' gulp ' ) ;:==:var jscs:==:require ( ' gulp - jscs ' ) ;
var audio2 = document . querySelector ( ' audio#audio2 ' ) ;:==:var callButton:==:document . querySelector ( ' button#callButton ' ) ;
var title = metadata . title . trim ( ) ;:==:var artist:==:metadata . artist . trim ( ) ;
var x1 = parseFloat ( document . getElementById ( ' x1 ' ) . value ) ;:==:var x2:==:parseFloat ( document . getElementById ( ' x2 ' ) . value ) ;
var utils = mocha . utils ;:==:var path:==:require ( ' path ' ) ;
var reactFeatureFlags = require ( ' reactFeatureFlags ' ) ;:==:var reactReconciler:==:require ( ' reactReconciler ' ) ;
var animationTop = element ( by . i d ( ' animationTop ' ) ) ;:==:var toggledNode:==:element ( by . i d ( ' toggledNode ' ) ) ;
var regExp = platform . regExp ;:==:var number:==:platform . number ;
var createForStatement = parseTreeFactory . createForStatement ;:==:var createFunctionDeclaration:==:parseTreeFactory . createFunctionDeclaration ;
var index = el . parent . children . indexOf ( el ) ;:==:var p:==:el . parent ;
var sqrt = Math . sqrt ;:==:var pow:==:Math . pow ;
var vel = this . vel = new Vector2 ( 0,0 ) ;:==:var targetVel:==:this . targetVel    new vector2 ( 0,0 ) ;
var start = interaction . start ;:==:var end:==:interaction . end ;
var login_hint = _ ref . login_hint ;:==:var acr_values:==:_ ref . acr_values ;
var postcss = require ( ' gulp - postcss ' ) ;:==:var doiuse:==:require ( ' doiuse ' ) ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var notifier:==:require ( ' node - notifier ' ) ;
var anchor = cm . getCursor ( ' anchor ' ) ;:==:var head:==:cm . getCursor ( ' head ' ) ;
var cellToDate = t . cellToDate ;:==:var getColCnt:==:t . getColCnt ;
var paddingRight = parseInt ( style . paddingRight , 10 )  |  |  0 ;:==:var paddingTop:==:parseInt ( style . paddingTop , 10 )  |  |  0 ;
var i d = _ getAttribute ( el , ' i d ' ) ;:==:var endpoints:==:endpointsByElement [ i d ] ;
var crypto = require ( ' crypto ' ) ;:==:var bigInteger:==:require ( ' jsbn ' ) . bigInteger ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var _ bitshift64Shl:==:module [ ' _ bitshift64Shl ' ]    asm [ ' _ bitshift64Shl ' ] ;
var settings = imports . settings ;:==:var debug:==:imports . debugger ;
var flatCoordinates = gxTrackObject . flatCoordinates ;:==:var when s:==:gxTrackObject . when s ;
var options = this . options ;:==:var extensions:==:this . extensions ;
var scale = ' scale ' in args ? args . scale : this . scale ;:==:var rotation:==:' rotation ' in args ? args . rotation : this . rotation ;
var method = obj . method . toLowerCase ( ) ;:==:var timeout:==:obj . timeout ;
var cyanA400 = exports . cyanA400 = ' # 00e5ff ' ;:==:var cyanA700:==:exports . cyanA700    ' # 00b8d4 ' ;
var prev = remove . prev ;:==:var next:==:remove . next ;
var bower = require ( ' bower ' ) ;:==:var wrench:==:require ( ' wrench ' ) ;
var lightBlue100 = exports . lightBlue100 = ' # b3e5fc ' ;:==:var lightBlue200:==:exports . lightBlue200    ' # 81d4fa ' ;
var appearClass = data . appearClass ;:==:var appearActiveClass:==:data . appearActiveClass ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var nodemon:==:require ( ' gulp - nodemon ' ) ;
var processColor = require ( ' processColor ' ) ;:==:var processTransform:==:require ( ' processTransform ' ) ;
var x = new symbolNode ( ' x ' ) ;:==:var d:==:new assignmentNode ( a , x ) ;
var path = require ( ' path ' ) ;:==:var webpack:==:require ( ' webpack - stream ' ) ;
var bottom = frustum . bottom ;:==:var right:==:frustum . right ;
var textDecoder = global . textDecoder  |  |  require ( ' text - encoding ' ) . textDecoder ;:==:var fakexmlHttpRequest:==:sinonFakeXhr . fakexmlHttpRequest ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var esformatter:==:require ( ' gulp - esformatter ' ) ;
var name = left . node . name ;:==:var exports:==:this . exports [ name ] ;
var lexed = opts . lexed ;:==:var filename:==:opts . filename ;
var treeOutline = this . treeOutline ;:==:var parentNode:==:node . parentNode ;
var doc = wrap ( document ) ;:==:var win:==:wrap ( window ) ;
var len = ( s . length + left  |  0 ) + right  |  0 ;:==:var r:==:Caml_string . caml_create_string ( len ) ;
var tessellation = options . tessellation  |  |  64 ;:==:var radiusFunction:==:options . radiusFunction ;
var backup = parseInt ( this . realtime . root . get ( ' backupDate ' ) ) ;:==:var modified:==:parseInt ( this . realtime . root . get ( ' modifiedDate ' ) ) ;
var b = newObjectIt ( bb ) ;:==:var c:==:a . dec _ ;
var isAbsolute = $ traceurRuntime . isAbsolute ;:==:var removeDotSegments:==:$ traceurRuntime . removeDotSegments ;
var stRotation = rectangleGeometry . _ stRotation ;:==:var vertexFormat:==:rectangleGeometry . _ vertexFormat ;
var screen = window . screen ;:==:var orientation:==:screen . orientation  |  |  screen . mozOrientation  |  |  screen . msOrientation ;
var rename = require ( ' gulp - rename ' ) ;:==:var tap:==:require ( ' gulp - tap ' ) ;
var h = hsba [ 0 ] ;:==:var s:==:hsba [ 1 ] ;
var util = require ( ' util ' ) ;:==:var hark:==:require ( ' hark ' ) ;
var sinon = require ( ' sinon ' ) ;:==:var isNodejs:==:testUtils . isNodejs ;
var chat = $ ( ' # chatconversation ' ) ;:==:var smileys:==:$ ( ' # smileysarea ' ) ;
var y = extractNumber ( props . y , 0 ) ;:==:var w:==:extractNumber ( props . width , 0 ) ;
var createBlock = parseTreeFactory . createBlock ;:==:var createCatch:==:parseTreeFactory . createCatch ;
var item = items [ i ] ;:==:var itemsToRemove:==:item . itemsToRemove ;
var lightGreena100 = exports . lightGreena100 = ' # ccff90 ' ;:==:var lightGreena200:==:exports . lightGreena200    ' # b2ff59 ' ;
var offsetPF = this . morph . _ offsetPF ;:==:var offsetNF:==:this . morph . _ offsetNF ;
var id_token_hint = _ ref . id_token_hint ;:==:var post_logout_redirect_uri:==:_ ref . post_logout_redirect_uri ;
var nav = window . navigator ;:==:var userLang:==:args [ ' lang ' ]  |  |  ( nav . languages & & nav . languages [ 0 ] )  |  |  nav . language  |  |  nav . userLanguage ;
var c = Math . ceil ( PI ) ;:==:var f:==:Math . floor ( PI ) ;
var bufferLen = config . bufferLen  |  |  4096 ;:==:var numChannels:==:config . numChannels  |  |  2 ;
var n = Cartesian3 . fromArray ( normals , i03 , normalScratch ) ;:==:var t:==:cartesian3 . fromArray ( tan1 , i03 , tScratch ) ;
var e = expanded [ i ] , b = bounds [ i ] ;:==:var m:==:b . m , c    m [ 0 ] , s    m [ 1 ] ;
var Stream = coreStream . stream ;:==:var chunkedStreamManager:==:coreChunkedStream . chunkedStreamManager ;
var domProperty = require ( ' domProperty ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var test = imports [ ' plugin . test ' ] ;:==:var myplugin:==:imports . myplugin ;
var isUndefined = _ angular . isUndefined ;:==:var element:==:_ angular . element ;
var input1 = window . document . getElementById ( ' form1-input1 ' ) ;:==:var input2:==:window . document . getElementById ( ' form1-input2 ' ) ;
var sum64_4_hi = utils . sum64_4_hi ;:==:var sum64_4_lo:==:utils . sum64_4_lo ;
var idAttr = this . options . idAttr ;:==:var type:==:change . type ;
var domPropertyNames = domPropertyConfig . domPropertyNames  |  |  ;:==:var domMutationMethods:==:domPropertyConfig . domMutationMethods  |  |  ;
var values = this . values ;:==:var destination:==:this . destination ;
var reactGenericBatching = require ( ' reactGenericBatching ' ) ;:==:var reactTypeOfWork:==:require ( ' reactTypeOfWork ' ) ;
var shapes = this . _ shapes ;:==:var indicator:==:shapes . indicator ;
var ip = hosts . hosts [ key ] . ip ;:==:var hostname:==:hosts . hosts [ key ] . hostname ;
var start = new moment ( startTime , format ) ;:==:var end:==:new moment ( endTime , format ) ;
var fluxStoreGroup = require ( ' fluxStoreGroup ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var opacity = this . _ opacity ;:==:var maxOpacity:==:this . _ maxOpacity ;
var nodes = this . nodes ;:==:var firstRetainerIndex:==:this . _ firstRetainerIndex ;
var layout = imports . layout ;:==:var editors:==:imports . editors ;
var listView = _ jsViewListView [ ' default ' ] ;:==:var webServer:==:_ jsLibWebServer [ ' default ' ] ;
var y = dataPoint [ this . _ yField ] ;:==:var radi:==:this . _ radi ;
var debug = imports [ ' plugin . debug ' ] ;:==:var Plugin:==:imports . Plugin ;
var l = hsla [ 2 ] ;:==:var a:==:hsla [ 3 ]  |  |  1 ;
var browserify = require ( ' browserify ' ) ;:==:var babelify:==:require ( ' babelify ' ) ;
var pubsub = imports . pubsub ;:==:var info:==:imports [ ' info ' ] ;
var width = options . width ;:==:var ellipsoid:==:options . ellipsoid ;
var dataModel = el . dataModel  |  |  seriesModel ;:==:var dataIndex:==:el . dataIndex ;
var style = _ props . style ;:==:var textareaStyle:==:_ props . textareaStyle ;
var coefficentsMagnitude = this . coefficentsMagnitude ;:==:var neighborsSignificance:==:this . neighborsSignificance ;
var cursor = profile . cursor ( ) ;:==:var isUnary:==:abbrUtils . isUnary ( item ) ;
var bottoms = this . bottoms ;:==:var len:==:tops . length ;
var condition = renameAll ( renames , tree . condition ) ;:==:var increment:==:renameAll ( renames , tree . increment ) ;
var mainEl = $ ( mainEl ) ;:==:var i d:==:mainEl . attr ( ' data - draggable - id ' ) ;
var cellSizeAndPositionGetter = _ ref5 . cellSizeAndPositionGetter ;:==:var indices:==:_ ref5 . indices ;
var params = req . params ;:==:var payload:==:input . payload ;
var createParenExpression = traceur . codegeneration . parseTreeFactory . createParenExpression ;:==:var createReturnStatement:==:traceur . codegeneration . parseTreeFactory . createReturnStatement ;
var done = self . _ done ( resolve , self ) ;:==:var onOpenComplete:==:self . config [ ' onOpenComplete ' ]  |  |  angular . noop ;
var instanceCount = item . instanceCount ;:==:var totalDuration:==:item . totalDuration ;
var request = info . request ;:==:var response:==:info . response ;
var spawn = child_process . spawn ;:==:var path:==:require ( ' path ' ) ;
var e = event  |  |  window . event ;:==:var keyCode:==:e . keyCode  |  |  e . which ;
var detail = options . detail  |  |  null ;:==:var cancelable:==:! ! options . cancelable ;
var audioSendBitrate = options . audioSendBitrate ;:==:var audioRecvBitrate:==:options . audioRecvBitrate ;
var action = e & & e . action ;:==:var skipUpdateOnBind:==:that . options . skipUpdateOnBind ;
var pathname = location . pathname ;:==:var search:==:location . search ;
var animation = viewer . _ animation ;:==:var timeline:==:viewer . _ timeline ;
var integerBufferSet = require ( ' integerBufferSet ' ) ;:==:var clamp:==:require ( ' clamp ' ) ;
var changeNode1 = helper . getNode ( ' changeNode1 ' ) ;:==:var helperNode1:==:helper . getNode ( ' helperNode1 ' ) ;
var subcategories = this . data _ . subcategories [ category ] ;:==:var charList:==:this . data _ . charList [ category ] ;
var minimist = require ( ' minimist ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var toolbar = $ ( this . box ) . find ( ' > div . w2ui - form - toolbar ' ) ;:==:var tabs:==:$ ( this . box ) . find ( ' > div . w2ui - form - tabs ' ) ;
var h = image . height ;:==:var c:==:image . channels ;
var methodNode = this . methodNode ;:==:var superRef:==:this . superRef  |  |  t . identifier ( ' function ' ) ;
var vertexPositionBuffer = this . _ vertexPositionBuffer ;:==:var uvPositionBuffer:==:this . _ uvPositionBuffer ;
var f = function ( x , y ) return x * y ;:==:var m:==:functionUtils . memoize ( f ) ;
var node = this . _ node ;:==:var tex:==:node . _ batchNode ? node . textureAtlas . texture : node . _ texture ;
var profile = req . session . profile ;:==:var isnew:==:req . body . isnew ;
var to = docSet . getByLongname ( ' message~headers . to ' ) ;:==:var from:==:docSet . getByLongname ( ' < anonymous>~headers . from ' ) ;
var layoutLength = layoutInfo . layoutLength ;:==:var axisExpandWidth:==:layoutInfo . axisExpandWidth ;
var option = data ? ' toggle ' : options ;:==:var parent:==:options . parent ;
var file = fileUtils . getFile ( this . testSuite . file . parent . path ) ;:==:var filename:==:this . filename ;
var script = scriptLocation . script ( ) ;:==:var target:==:scriptLocation . target ( ) ;
var data = me . _ data ;:==:var chartInstance:==:me . _ chartInstance ;
var $ wrapper = node . $ wrapper ;:==:var children:==:node . children ;
var extra = stype . _ extra ;:==:var alreadyWrapped:==:extra . alreadyWrappedProps  |  |  ;
var cx = shape . cx ;:==:var cy:==:shape . cy ;
var Block = traceur . syntax . trees . Block ;:==:var breakStatement:==:traceur . syntax . trees . breakStatement ;
var fakeSumRow = window . fakeSumRow ;:==:var fakeGroupRow:==:window . fakeGroupRow ;
var mongoose = keystone . mongoose ;:==:var path:==:require ( ' path ' ) ;
var promise = this . _ promiseAt ( i ) ;:==:var receiver:==:this . _ receiverAt ( i ) ;
var moduleVisitor = traceur . codegeneration . module . moduleVisitor ;:==:var parseTreeType:==:traceur . syntax . trees . parseTreeType ;
var vAPI = self . vAPI = self . vAPI  |  |  ;:==:var chrome:==:self . chrome ;
var blueGrey50 = exports . blueGrey50 = ' # eceff1 ' ;:==:var blueGrey100:==:exports . blueGrey100    ' # cfd8dc ' ;
var isDefined = leafletHelpers . isDefined ;:==:var isString:==:leafletHelpers . isString ;
var scheduledAnimations = this . _ scheduledAnimations ;:==:var length:==:scheduledAnimations . length ;
var _ initRecog = module [ ' _ initRecog ' ] = asm [ ' _ initRecog ' ] ;:==:var _ saveSetjmp:==:module [ ' _ saveSetjmp ' ]    asm [ ' _ saveSetjmp ' ] ;
var el = this . $ element ;:==:var body:==:el . querySelector ( ' gui - icon - view - body ' ) ;
var value = event . detail . value ;:==:var list:==:this . _ list ;
var PRIMITIVE = emitValue ( s_primitive ) ;:==:var offset:==:emitValue ( s_offset ) ;
var COVER_INITIALIZED_NAME = ' COVER_INITIALIZED_NAME ' ;:==:var DEBUGGER_STATEMENT:==:' DEBUGGER_STATEMENT ' ;
var graph = this . editor . graph ;:==:var hasScrollbars:==:mxUtils . hasScrollbars ( graph . container ) ;
var margin = this . margin ;:==:var isSparklines:==:this . isSparklines ( ) ;
var stream = require ( ' stream ' ) ;:==:var errors:==:require ( ' restify - errors ' ) ;
var g = Math . round ( rgb [ 1 ] * 255 ) ;:==:var b:==:Math . round ( rgb [ 2 ] * 255 ) ;
var stylish = require ( ' jshint - stylish ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var dataTransfer = require ( ' dataTransfer ' ) ;:==:var draftModifier:==:require ( ' draftModifier ' ) ;
var TEST_TYPE = utils . getEnv ( ' test_type ' ) ;:==:var reporter:==:utils . getEnv ( ' reporter ' ) ;
var head = document . head  |  |  document . getElementsByTagName ( ' head ' ) [ 0 ]  |  |  document . documentElement ;:==:var s:==:document . createElement ( ' script ' ) ;
var port = opts . port ;:==:var label:==:opts . label ? ' ( ' + opts . label+ ' ) ' : '' ;
var scrollTop = htmlNode . scrollTop ;:==:var clientx:==:e . clientx - pos . left + scrollLeft ;
var styleSpec = options . styleSpec ;:==:var style:==:options . style ;
var plumber = require ( ' gulp - plumber ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var symbolSize = normalize ( itemModel . getShallow ( ' symbolSize ' , true ) ) ;:==:var color:==:itemModel . get ( colorQuery ) ;
var textAlign = titleModel . get ( ' textAlign ' ) ;:==:var textBaseline:==:titleModel . get ( ' textBaseline ' ) ;
var callback = callback  |  |  false ;:==:var implicitYou:==:this . implicitYou ( ) ;
var enableCollisionDetection = screenSpaceCameraController . enableCollisionDetection ;:==:var minimumCollisionTerrainHeight:==:screenSpaceCameraController . minimumCollisionTerrainHeight ;
var x = pos . x ;:==:var y:==:pos . y ;
var createBooleanLiteral = parseTreeFactory . createBooleanLiteral ;:==:var createCallExpression:==:parseTreeFactory . createCallExpression ;
var pass = passes [ passName ] ;:==:var instanceProgram:==:pass . instanceProgram ;
var scale = typeof options . scale ! = ' undefined ' ? options . scale : 1 . 0 ;:==:var rotation:==:typeof options . rotation !   ' undefined ' ? options . rotation : 0 . 0 ;
var text = formatMessageText ( msg . text ) ;:==:var notif:==:msg . notification ;
var cellCount = _ ref . cellCount ;:==:var cellSizeGetter:==:_ ref . cellSizeGetter ;
var load = args . load  |  |  [ ] ;:==:var scope:==:args . scope  |  |  [ ] ;
var marginLimits = axesLayout . marginLimits ;:==:var plotArea:==:axesLayout . plotArea ;
var view = view_ref_1 . internalView ( viewRef ) ;:==:var parentView:==:view_ref_1 . internalView ( viewContainerLocation . parentView ) ;
var firstInnerQuadrangle = options . firstInnerQuadrangle ;:==:var lastInnerQuadrangle:==:options . lastInnerQuadrangle ;
var infoBox = viewer . _ infoBox ;:==:var selectionIndicator:==:viewer . _ selectionIndicator ;
var baseTestChannel = goog . labs . net . webChannel . baseTestChannel ;:==:var webChannelDebug:==:goog . labs . net . webChannel . webChannelDebug ;
var size = Math . max ( 0 , Math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' size ' , this . size ) ) ) ) ;:==:var participant:==:mxUtils . getValue ( this . style , ' participant ' ) ;
var mag = Cartesian3 . magnitude ( center ) ;:==:var unitPos:==:cartesian3 . normalize ( center , unitPosScratch ) ;
var chalk = require ( ' chalk ' ) ;:==:var tildify:==:require ( ' tildify ' ) ;
var version = options . version ;:==:var cwd:==:process . cwd ( ) ;
var calendar = that . calendar ;:==:var options:==:that . options ;
var fnArray = operatorList . fnArray ;:==:var i:==:executionStartIdx  |  |  0 ;
var borderWidthInPixels = defaultValue ( options . borderWidthInPixels , 1 . 0 ) ;:==:var initialSize:==:defaultValue ( options . initialSize , defaultInitialSize ) ;
var tooltipManager = powerbi . visuals . tooltipManager ;:==:var hasRole:==:powerbi . data . dataRoleHelper . hasRole ;
var request = require ( ' request ' ) ;:==:var request:==:RSVP . denodeify ( request ) ;
var height = params . height ;:==:var extrudedHeight:==:params . extrudedHeight ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var clone:==:require ( ' clone ' ) ;
var isAllDay = calc . isAllDay ;:==:var spanOfMonth:==:calc . spanOfMonth ;
var steps = options . steps ! = = undefined ? options . steps : 1 ;:==:var extrudePath:==:options . extrudePath ;
var a = arguments [ i ] ;:==:var t:==:$ . type ( a ) ;
var SCALE_BY_DISTANCE_INDEX = pointPrimitive . scale_by_distance_index = 6 ;:==:var translucency_by_distance_index:==:pointPrimitive . translucency_by_distance_index    7 ;
var forInStatement = traceur . syntax . trees . forInStatement ;:==:var forOfStatement:==:traceur . syntax . trees . forOfStatement ;
var ace = imports . ace ;:==:var util:==:imports [ ' collab . util ' ] ;
var element = Hierarchy . follow ( Element . fromDom ( viewBlock . get ( ) ) , elementPath ) . getOrDie ( ) ;:==:var action:==:actionOption . getOrDie ( ) ;
var memberLookupExpression = traceur . syntax . trees . memberLookupExpression ;:==:var newExpression:==:traceur . syntax . trees . newExpression ;
var distTo = tree . distTo ;:==:var edgeTo:==:tree . edgeTo ;
var o = ES . toObject ( this ) ;:==:var len:==:es . toLength ( o . length ) ;
var Before = exports . Before = proxySupportCode ( ' before ' ) ;:==:var registerHandler:==:exports . registerHandler    proxySupportCode ( ' registerHandler ' ) ;
var line = cm . getCursor ( ) . line ;:==:var repeat:==:motionArgs . repeat ;
var dbContext = dbContexts [ dbInfo . name ] ;:==:var forages:==:dbContext . forages ;
var defineReactive = _ vue$util . defineReactive ;:==:var init:==:vue . prototype . _ init ;
var context = scene . _ context ;:==:var frameState:==:scene . _ frameState ;
var length = updatersWithAttributes . length ;:==:var waitingOnCreate:==:this . waitingOnCreate ;
var results = data . results = ;:==:var raw:==:data . raw ;
var c = _ c ;:==:var str_ind:==:_ str_ind ;
var assignmentNode = math . expression . node . assignmentNode ;:==:var operatorNode:==:math . expression . node . operatorNode ;
var bones = this . bones ;:==:var geometry:==:this . geometry ;
var min2 = e1 . min2 . value ;:==:var max2:==:e1 . max2 . value ;
var imageStylePropTypes = require ( ' imageStylePropTypes ' ) ;:==:var nativeMethodsMixin:==:require ( ' nativeMethodsMixin ' ) ;
var linkto = helper . linkto ;:==:var resolveAuthorLinks:==:helper . resolveAuthorLinks ;
var argv = require ( ' yargs ' ) . argv ;:==:var child_process:==:require ( ' child_process ' ) ;
var body = this . transformAny ( tree . body ) ;:==:var parameterList:==:this . transformAny ( tree . parameterList ) ;
var textFormatting = state . textFormatting ;:==:var lineFormatting:==:state . lineFormatting ;
var me = matrix . elements ;:==:var radius:==:- object . geometry . boundingSphere . radius * matrix . getMaxScaleOnAxis ( ) ;
var framework = require ( ' framework ' ) ;:==:var tabs:==:require ( ' tabs ' ) ;
var labelKey = _ ref . labelKey ;:==:var onFocus:==:_ ref . onFocus ;
var t = parseFloat ( s . top ) ;:==:var w:==:parseFloat ( s . width ) ;
var dx5 = Math . max ( parseFloat ( mxUtils . getValue ( this . state . style , ' dx4 ' , 0 ) ) , math . min ( bounds . width , parseFloat ( mxUtils . getValue ( this . state . style , ' dx5 ' , 0 ) ) ) ) ;:==:var dy5:==:math . max ( 0 , math . min ( 100 , parseFloat ( mxUtils . getValue ( this . state . style , ' dy5 ' , 0 ) ) ) ) ;
var origin = context . origin ;:==:var size:==:context . size ;
var throttle = require ( ' throttle ' ) ;:==:var when:==:require ( ' when ' ) ;
var width = this . element . width ;:==:var height:==:this . element . height ;
var signedXml = require ( ' xml - crypto ' ) . signedXml ;:==:var uuid:==:require ( ' uuid ' ) ;
var readFile = opts . readFile  |  |  fs . readFile ;:==:var extensions:==:opts . extensions  |  |  [ ' . js ' ] ;
var pieceList = this . _ pieceList ;:==:var precision:==:thisOption . precision ;
var s = this . _ container . style ;:==:var l:==:parseFloat ( s . left ) ;
var each = zrUtil . each ;:==:var parsePercent:==:numberUtil . parsePercent ;
var sinon = require ( ' sinon ' ) ;:==:var passport:==:require ( ' passport ' ) ;
var date = data . date ;:==:var type:==:data . type ;
var repeat = motionArgs . repeat ;:==:var line:==:motionArgs . forward ? cur . line + repeat : cur . line - repeat ;
var n = this . near ;:==:var f:==:this . far ;
var from = navigationTransition . states . from ;:==:var to:==:navigationTransition . states . to ;
var name = test_function_name + ' ' + test_object_name ;:==:var test_function:==:test_function_gen ( object ) ;
var Evaluator = imports . Evaluator ;:==:var settings:==:imports . settings ;
var geometry = object . geometry ;:==:var parameters:==:geometry . parameters ;
var funnelAlign = seriesModel . get ( ' funnelAlign ' ) ;:==:var gap:==:seriesModel . get ( ' gap ' ) ;
var rename = require ( ' gulp - rename ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var textAlign = textAlign  |  |  ' center ' ;:==:var container:==:container  |  |  ' # specLabels ' ;
var list = document . getElementById ( base + ' -list ' ) ;:==:var summary:==:document . getElementById ( base + ' -summary ' ) ;
var r = this . game . rnd . realInRange ( player . rotation - 0 . 2 , player . rotation + 0 . 2 ) ;:==:var b:==:this . game . rnd . between ( this . bulletSpeed - 200 , this . bulletSpeed + 200 ) ;
var os = require ( ' os ' ) ;:==:var async:==:require ( ' async ' ) ;
var wordwrap = require ( ' wordwrap ' ) ;:==:var PROGRESS_DEBUG:==:! ! process . env . METEOR_PROGRESS_DEBUG ;
var type = this . type ;:==:var op:==:opData . op ;
var atan2 = stdlib . Math . atan2 ;:==:var pow:==:stdlib . Math . pow ;
var interpolationAlgorithm = property . interpolationAlgorithm ;:==:var interpolationDegree:==:property . interpolationDegree ;
var listenTo = reactBrowserEventEmitter . listenTo ;:==:var registrationNameModules:==:reactBrowserEventEmitter . registrationNameModules ;
var context = scene . _ context ;:==:var viewport:==:passState . viewport ;
var l = this . _ indexToValueInSpace ( hash , this . _ lightnessSpace ) ;:==:var a:==:this . _ indexToValueInSpace ( hash , this . _ alphaSpace ) ;
var addClass = _ vue$util . addClass ;:==:var removeClass:==:_ vue$util . removeClass ;
var y = Math . abs ( args . start . y - args . pos . y ) ;:==:var r:==:Math . sqrt ( Math . pow ( x , 2 ) + Math . pow ( y , 2 ) ) ;
var fs = require ( ' fs ' ) ;:==:var log:==:require ( ' some - async - logger ' ) ;
var BLOCK_SCOPED_SYMBOL = exports . BLOCK_SCOPED_SYMBOL = ( 0 , _ for2 . default ) ( ' var used to be block scoped ' ) ;:==:var NOT_LOCAL_BINDING:==:exports . NOT_LOCAL_BINDING    ( 0 , _ for2 . default ) ( ' should not be considered a local binding ' ) ;
var b = rejectThenableSoon ( ' rejected - b ' , 30 ) ;:==:var c:==:rejectThenableSoon ( ' rejected - c ' , 10 ) ;
var setName = e . setName ;:==:var strokeWidth:==:e . strokeWidth ;
var spawn = childProcess . spawn ;:==:var exec:==:childProcess . exec ;
var jshint = require ( ' gulp - jshint ' ) ;:==:var replace:==:require ( ' gulp - replace ' ) ;
var x = this . _ positionDelta . x * dt ;:==:var y:==:this . _ positionDelta . y * dt ;
var dayNames = this . _ get ( inst , ' dayNames ' ) ;:==:var dayNamesShort:==:this . _ get ( inst , ' dayNamesShort ' ) ;
var createPrivateSymbol = m . createPrivateSymbol ;:==:var hasPrivate:==:m . hasPrivate ;
var path = d3 . geo . path ( ) . projection ( this . projection ) ;:==:var defs:==:mapSvg . append ( ' defs ' ) ;
var menus = imports . menus ;:==:var save:==:imports . save ;
var emitter = scene . getLastEntryByid ( parsedLensFlareSystem . emitterId ) ;:==:var lensFlareSystem:==:new babylon . lensFlareSystem ( ' lensFlareSystem # ' + parsedLensFlareSystem . emitterId , emitter , scene ) ;
var attr = DS . attr ;:==:var resolve:==:Ember . RSVP . resolve ;
var constantNode = math . expression . node . constantNode ;:==:var operatorNode:==:math . expression . node . operatorNode ;
var hasShortCmap = ! ! cmapTable . hasShortCmap ;:==:var toFontChar:==:this . toFontChar ;
var resolveUrl = traceur . util . resolveUrl ;:==:var objectMap:==:traceur . util . objectMap ;
var buffer = this . ensureBuffer ( this . bufferLength + maxDecodeLength ) ;:==:var bufferLength:==:this . bufferLength ;
var store = tx . objectStore ( ' store ' ) ;:==:var index:==:store . getIndex ( ' index ' ) ;
var spritesheets = properties [ ' spritesheets ' ] ;:==:var spriteFrameCache:==:cc . spriteFrameCache ;
var coef = this . _ coef ;:==:var xTable:==:this . _ xTable ;
var context = result . context ;:==:var request:==:result . request ;
var p = camera . pickEllipsoid ( windowCoord ) ;:==:var c:==:ellipsoid . cartesianToCartographic ( p ) ;
var timeWindowLeft = this . _ timeWindowLeft ;:==:var flowStartTimes:==:timelineData . flowStartTimes ;
var Given = exports . Given = defineStep ;:==:var when:==:exports . when    defineStep ;
var changeEventPlugin = require ( ' changeEventPlugin ' ) ;:==:var domEventPluginOrder:==:require ( ' domEventPluginOrder ' ) ;
var currentTag = context . currentTag = context . currentTag  |  |  match ? match [ 1 ] : null ;:==:var index:==:gitSemverTags . indexOf ( currentTag ) ;
var findSessionByuri = require ( ' findSessionByuri ' ) ;:==:var connect:==:require ( ' react - redux ' ) ;
var list = this . _ list ;:==:var msecs:==:list . msecs ;
var data = app . ns ( ' data ' ) ;:==:var ut:==:app . ns ( ' ut ' ) ;
var rowClassName = _ props3 . rowClassName ;:==:var rowGetter:==:_ props3 . rowGetter ;
var message = error . message ;:==:var data:==:error . data ;
var done = self . _ done ( resolve , self ) ;:==:var show:==:self . _ simpleBind ( self . show , self ) ;
var curIndex = this . curIndex _ ;:==:var i:==:this . isFull _ ? curIndex : -1 ;
var renderTarget = this . renderTarget ;:==:var generateMipmaps:==:renderTarget . generateMipmaps ;
var fs = require ( ' fs - extra ' ) ;:==:var nomnom:==:require ( ' nomnom ' ) ;
var reactMount = require ( ' reactMount ' ) ;:==:var reactUpdates:==:require ( ' reactUpdates ' ) ;
var async = require ( ' async ' ) ;:==:var multiline:==:require ( ' multiline ' ) ;
var renderers = window . _ _ REACT_DEVTOOLS_GLOBAL_HOOK _ _ . _ renderers ;:==:var renderer:==:renderers [ Object . keys ( renderers ) [ 0 ] ] ;
var chain = this . chain ;:==:var fired:==:this . fired ;
var div = $ ( obj ) . data ( ' div ' ) ;:==:var settings:==:$ ( obj ) . data ( ' settings ' ) ;
var expect = chai . expect ;:==:var sinon:==:require ( ' sinon ' ) ;
var fluxContainer = require ( ' fluxContainer ' ) ;:==:var fluxReduceStore:==:require ( ' fluxReduceStore ' ) ;
var disabled = _ props . disabled ;:==:var disableTouchRipple:==:_ props . disableTouchRipple ;
var codeMirror   = this . codeMirror ;:==:var previewContainer:==:this . previewContainer ;
var undefsafe = require ( ' undefsafe ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var nestedFlushStartTime = _ lifeCycleTimerStack$ . nestedFlushStartTime ;:==:var debugid:==:_ lifeCycleTimerStack$ . debugid ;
var cancel = this . cancel ;:==:var bounds:==:globe . bounds ( view ) ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var svgScrollbar:==:powerbi . visuals . controls . svgScrollbar ;
var val = tf2 . value ;:==:var p:==:Ti . Contacts . getGroupByid ( val ) ;
var gitError = errors . gitError ;:==:var commandResult:==:errors . commandResult ;
var fs = imports . fs ;:==:var util:==:imports . util ;
var buffer = require ( ' vinyl - buffer ' ) ;:==:var merge2:==:require ( ' merge2 ' ) ;
var lat = imageProperties . latitude ;:==:var long:==:imageProperties . longitude ;
var el = this . $ element ;:==:var orient:==:el . getAttribute ( ' data - orientation ' )  |  |  ' horizontal ' ;
var autoHeight = _ props3 . autoHeight ;:==:var columnCount:==:_ props3 . columnCount ;
var i d = option . i d ;:==:var color:==:option . color |  | null ;
var selectedIndex = ui . deviceSelector . selectedIndex ;:==:var option:==:document . createElement ( ' option ' ) ;
var assertion = config . assertions [ i ] ;:==:var li:==:document . createElement ( ' li ' ) ;
var editorLayout = getComponent ( ' editorLayout ' , true ) ;:==:var topbar:==:getComponent ( ' topbar ' , true ) ;
var parseServer = require ( ' parse - server ' ) . parseServer ;:==:var path:==:require ( ' path ' ) ;
var element = parameters [ ' element ' ] ? Utils . getElementAt ( parameters [ ' element ' ] , doc ) : null ;:==:var x:==:( ' xoffset ' in parameters ) ? parameters [ ' xoffset ' ] : null ;
var relatedTarget = eventData . relatedTarget  |  |  element ;:==:var keys:==:eventData . keys ;
var searchData = method . searchData ;:==:var sortData:==:method . sortData ;
var signalr = options & & options . signalr ? options . signalr : ;:==:var promise:==:signalr . promise ;
var toolbar = $ ( ' # grid_'+ this . name + ' _ toolbar ' ) ;:==:var summary:==:$ ( ' # grid_'+ this . name + ' _ summary ' ) ;
var episode = $ ( e . currentTarget ) . attr ( ' data - episode ' ) ;:==:var season:==:$ ( e . currentTarget ) . attr ( ' data - season ' ) ;
var y1 = shape . y1 ;:==:var x2:==:shape . x2 ;
var li = document . createElement ( ' li ' ) ;:==:var label:==:document . createElement ( ' label ' ) ;
var counter_rates = metrics . counter_rates ;:==:var timer_data:==:metrics . timer_data ;
var snapshotNodeList = scope . snapshotNodeList ;:==:var unsafeUnwrap:==:scope . unsafeUnwrap ;
var config = ctx . config . highlight  |  |  ;:==:var enable:==:config . enable ;
var host = server . host  |  |  server . ipc ;:==:var port:==:server . port  |  |  27017 ;
var scrollView = require ( ' scrollView ' ) ;:==:var deprecatedPropType:==:require ( ' deprecatedPropType ' ) ;
var topLevelTypes = eventConstants . topLevelTypes ;:==:var isStartish:==:eventPluginUtils . isStartish ;
var paddingBottom = options . paddingBottom ;:==:var paddingLeft:==:options . paddingLeft ;
var Map    = require ( ' immutable ' ) . Map ;:==:var fromJS:==:require ( ' immutable ' ) . fromJS ;
var async = require ( ' async ' ) ;:==:var format:==:require ( ' util ' ) . format ;
var person1 = element ( by . model ( ' person1 ' ) ) ;:==:var person2:==:element ( by . model ( ' person2 ' ) ) ;
var enterCancelled = ref . enterCancelled ;:==:var beforeAppear:==:ref . beforeAppear ;
var sfField = sfBuilderProvider . builders . sfField ;:==:var condition:==:sfBuilderProvider . builders . condition ;
var callback = options . callback ;:==:var callbackPeriod:==:options . callbackPeriod  |  |  10 ;
var w = viewportSize . width * 2 ;:==:var h:==:viewportSize . height * 2 ;
var cheerio = require ( ' cheerio ' ) ;:==:var url:==:require ( ' url ' ) ;
var EVENT_PREFIX = api . EVENT_PREFIX ;:==:var log:==:window . logFlags  |  |  ;
var projection = this . _ projection ;:==:var southwest:==:projection . project ( Rectangle . southwest ( rectangle ) ) ;
var savedPose = this . savedPose ;:==:var hasPositionalTracking:==:this . hasPositionalTracking !    undefined ? this . hasPositionalTracking : checkHasPositionalTracking ( ) ;
var folder_view = require ( ' folder_view ' ) ;:==:var gui:==:require ( ' nw . gui ' ) ;
var after = new Blockly . fieldLabel ( ' after ' ) ;:==:var suffix:==:new blockly . fieldLabel ( ' suffix ' ) ;
var o = geometry . vertices [ vidx ] ;:==:var s:==:skinned [ vidx ] ;
var con = contacts [ i ] ;:==:var jnAcc:==:con . jnAcc ;
var isArray = array . isArray ( source ) ;:==:var target:==:_ target  |  |  ( isArray ? new array ( source . length ) : ) ;
var type = operation . type ;:==:var key:==:operation . key ;
var when = require ( ' when ' ) ;:==:var clone:==:require ( ' clone ' ) ;
var layers = this . layers ;:==:var dataViews:==:this . dataViews ;
var createOperatorToken = parseTreeFactory . createOperatorToken ;:==:var createStatementList:==:parseTreeFactory . createStatementList ;
var name = obj . name  |  |  name ;:==:var prefix:==:obj . prefix  |  |  '' ;
var changeMonth = this . _ get ( inst , ' changeMonth ' ) ;:==:var changeYear:==:this . _ get ( inst , ' changeYear ' ) ;
var isCordova = platformInfo . isCordova ;:==:var isChromeApp:==:platformInfo . isChromeApp ;
var width = layoutManager . width ;:==:var height:==:layoutManager . height ;
var json = alias . json ( ) ;:==:var user:==:this . analytics . user ( ) ;
var trim = require ( ' trim ' ) ;:==:var type:==:require ( ' component - type ' ) ;
var labelSettings = this . cardFormatSetting . labelSettings ;:==:var isSmallViewport:==:this . isSmallViewport ( ) ;
var deferred = config . _ deferred = config . _ deferred  |  |  $ q . defer ( ) ;:==:var promise:==:deferred . promise ;
var result = resultSelector ( state ) ;:==:var time:==:timeSelector ( state ) ;
var objectEnumerationBuilder = powerbi . visuals . objectEnumerationBuilder ;:==:var selectionManager:==:powerbi . visuals . utility . selectionManager ;
var tangent = tangentScratch ;:==:var normal:==:normalScratch ;
var container = this . client . findElement ( ' # container ' ) ;:==:var value:==:container . getAttribute ( ' data - value ' ) ;
var path = Npm . require ( ' path ' ) ;:==:var url:==:Npm . require ( ' url ' ) ;
var r = row . cloneNode ( ) ;:==:var t:==:title . cloneNode ( ) ;
var tagName = match . tagName ;:==:var unarySlash:==:match . unarySlash ;
var objname = objnames [ match [ 1 ] ] [ 2 ] ;:==:var title:==:titles [ match [ 0 ] ] ;
var is = require ( ' is ' ) ;:==:var tick:==:require ( ' next - tick ' ) ;
var expect = require ( ' expect . js ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var tags = options . get ( ' tags ' ) ;:==:var createTag:==:options . get ( ' createTag ' ) ;
var blob = request . source . data . blob ;:==:var header:==:document . getElementById ( ' header ' ) ;
var cellLayoutManager = _ props . cellLayoutManager ;:==:var scrollLeft:==:_ props . scrollLeft ;
var x = Math . max ( frame . x , locpsRect . x ) ;:==:var y:==:math . max ( frame . y , locpsRect . y ) ;
var account = owners . account ;:==:var providerType:==:account . providerType ;
var mime = send . mime ;:==:var resolve:==:path . resolve ;
var base_url = that . notebook . base_url ;:==:var notebook_path:==:utils . encode_uri_components ( that . notebook . notebook_path ) ;
var ReactDOM = require ( ' ReactDOM ' ) ;:==:var getDraftEditorSelection:==:require ( ' getDraftEditorSelection ' ) ;
var bunyan = require ( ' bunyan ' ) ;:==:var lodash:==:require ( ' lodash ' ) ;
var v = goog . vec . vec3f . createFromValues ( 3 , 4 , 5 ) ;:==:var s:==:goog . vec . vec3f . createFromValues ( 6 , 7 , 8 ) ;
var cloneObject = c9Util . cloneObject ;:==:var debug:==:connect . debug ;
var history = window . history ;:==:var pushState:==:history . pushState ;
var start = metadata . preview . start ;:==:var end:==:metadata . preview . end ;
var querystring = require ( ' querystring ' ) ;:==:var request:==:require ( ' request ' ) . defaults ( json : true ) ;
var force = args . f  |  |  args . force ;:==:var route:==:this . route ;
var Program = traceur . syntax . trees . Program ;:==:var propertyMethodAssignment:==:traceur . syntax . trees . propertyMethodAssignment ;
var groundColor = new three . color ( data . groundColor ) . getHex ( ) ;:==:var intensity:==:data . intensity ;
var contentBox = instance . get ( ' contentBox ' ) ;:==:var canvas:==:instance . canvas ;
var adapter = saveContext . adapter ;:==:var originalEntities:==:saveContext . originalEntities    saveBundle . entities ;
var lineno = ast . lineno ;:==:var col_offset:==:ast . col_offset ;
var readFile = require ( ' fs ' ) . readFileSync ;:==:var resolve:==:require ( ' path ' ) . resolve ;
var stream = streams [ name ] ;:==:var url:==:stream . url ;
var COMPUTED_PROPERTY_NAME = ' COMPUTED_PROPERTY_NAME ' ;:==:var CONDITIONAL_EXPRESSION:==:' CONDITIONAL_EXPRESSION ' ;
var settings = settings  |  |  ;:==:var handler:==:handler  |  |  function ( ) ;
var WAIT_AFTER_LAST_REQUEST = process . env . WAIT_AFTER_LAST_REQUEST  |  |  500 ;:==:var JS_CHECK_TIMEOUT:==:process . env . JS_CHECK_TIMEOUT  |  |  300 ;
var DISTANCE_DISPLAY_CONDITION_INDEX = pointPrimitive . distance_display_condition_index ;:==:var disable_depth_distance_index:==:pointPrimitive . disable_depth_distance_index ;
var b = i d : 2 , name : ' b ' ;:==:var c:==:i d : 3 , name : ' c ' ;
var channel = animation . channels [ i ] ;:==:var sampler:==:animation . samplers [ channel . sampler ] ;
var getStdFontMap = coreStandardFonts . getStdFontMap ;:==:var getSerifFonts:==:coreStandardFonts . getSerifFonts ;
var pos = m . position ;:==:var rot:==:m . rotation ;
var opacity = current . opts . opacity ;:==:var $ thumb:==:current . opts . $ thumb ;
var size = this . _ size ;:==:var dataZoomModel:==:this . dataZoomModel ;
var on = this . sandbox . spy ( this . rgb , ' on ' ) ;:==:var off:==:this . sandbox . spy ( this . rgb , ' off ' ) ;
var posts = locals . posts . sort ( ' -date ' ) . toArray ( ) ;:==:var length:==:posts . length ;
var config = require ( configPath ) ( project . environment ) . mockServer  |  |  ;:==:var morgan:==:require ( ' morgan ' ) ;
var head = document . head ;:==:var body:==:document . body ;
var flatten = util . flatten ;:==:var unflattenr:==:util . unflattenr ;
var srcPath = ref . srcPath ;:==:var filename:==:ref . filename ;
var timestamp = req . query . timestamp ;:==:var nonce:==:req . query . nonce ;
var onBeforeShow = spyOn ( myTooltip . $ options , ' onBeforeShow ' ) ;:==:var onShow:==:spyOn ( myTooltip . $ options , ' onShow ' ) ;
var footer = require ( ' gulp - footer ' ) ;:==:var zip:==:require ( ' gulp - zip ' ) ;
var categorical = dataView & & dataView . categorical ;:==:var values:==:categorical & & categorical . values ;
var bold = getStyleProperty ( item , styleContextStack , ' bold ' , false ) ;:==:var italics:==:getStyleProperty ( item , styleContextStack , ' italics ' , false ) ;
var getContentDocument = dom . getContentDocument ;:==:var isCharacterDataNode:==:dom . isCharacterDataNode ;
var createExpressionStatement = parseTreeFactory . createExpressionStatement ;:==:var createIdentifierExpression:==:parseTreeFactory . createIdentifierExpression ;
var Marked = require ( ' Marked ' ) ;:==:var docsSidebar:==:require ( ' docsSidebar ' ) ;
var value = options . value ;:==:var valueSpec:==:options . valueSpec ;
var withAppended = util . withAppended ;:==:var maybeWrapAsError:==:util . maybeWrapAsError ;
var c = table . config ;:==:var l:==:rows . length ;
var activeDismissableNeedsFocus = ! ! options . activeDismissableNeedsFocus ;:==:var rendered:==:this . _ updatedom_rendered ;
var repl = require ( ' repl ' ) ;:==:var util:==:require ( ' util ' ) ;
var max = this . _ max ;:==:var min:==:this . _ min ;
var readonly = options . readonly ;:==:var wrapper:==:that . wrapper . add ( that . filterInput ) . off ( ns ) ;
var reactComponentWithPureRenderMixin = require ( ' reactComponentWithPureRenderMixin ' ) ;:==:var clamp:==:require ( ' clamp ' ) ;
var createMarker = leafletMarkersHelpers . createMarker ;:==:var deleteMarker:==:leafletMarkersHelpers . deleteMarker ;
var scrollTop = window . pageyOffset  |  |  document . documentElement . scrollTop ;:==:var scrollLeft:==:window . pagexOffset  |  |  document . documentElement . scrollLeft ;
var remote = new PouchDB ( dbs . remote ) ;:==:var bulkDocs:==:remote . bulkDocs ;
var end = new Date ( this . $ endDate . datepicker ( ' getDate ' ) ) ;:==:var start:==:new date ( this . $ startDate . datepicker ( ' getDate ' ) ) ;
var start = message . data . start ;:==:var granularity:==:message . data . granularity ;
var getValueOrDefault = helpers . getValueOrDefault ;:==:var isHorizontal:==:me . isHorizontal ( ) ;
var prevCoord = this . _ prevCoord ;:==:var prevTime:==:this . _ prevTime ;
var rowRenderer = _ props3 . rowRenderer ;:==:var rowStyle:==:_ props3 . rowStyle ;
var error = sharedUtil . error ;:==:var shadow:==:sharedUtil . shadow ;
var c9 = imports . c9 ;:==:var ace:==:imports . ace ;
var delay = this . delayTime ;:==:var source:==:this . source ;
var isHorizontal = referenceLineHelper . isHorizontal ( refLine , options . axes ) ;:==:var viewport:==:options . viewport ;
var util = imports . util ;:==:var layout:==:imports . layout ;
var indexOf = utils . indexOf ;:==:var keys:==:utils . keys ;
var Lax = db . model ( ' nestedLax ' , lax , ' nestdoc ' + random ( ) ) ;:==:var strict:==:db . model ( ' nestedStrict ' , strict , ' nestdoc ' + random ( ) ) ;
var executeDispatch = eventPluginUtils . executeDispatch ;:==:var pluginModule:==:eventPluginRegistry . getPluginModuleForEvent ( event ) ;
var step = steps [ i ] [ 1 ] ;:==:var reverse:==:step . reverse ;
var symbolPatternSize = itemModel . get ( ' symbolPatternSize ' )  |  |  2 ;:==:var isAnimationEnabled:==:itemModel . isAnimationEnabled ( ) ;
var source = new ol . source . OSM ( ) ;:==:var layer:==:new ol . layer . Tile ( ) ;
var errorThresh = options . errorThresh  |  |  0 . 005 ;:==:var log:==:options . log ? ( _ . isFunction ( options . log ) ? options . log : console . log ) : false ;
var depthTest = defaultValue ( rs . depthTest , ) ;:==:var colorMask:==:defaultValue ( rs . colorMask , ) ;
var deg = Math . floor ( degFloat ) ;:==:var min:==:math . floor ( minFloat ) ;
var axes = axesMapping [ key ] ;:==:var changed:==:evt . detail . changed ;
var readline = serialport . parsers . readline ;:==:var optimist:==:require ( ' optimist ' ) ;
var end = codeMirror . posFromIndex ( interval . end ) ;:==:var contentStart:==:codeMirror . posFromIndex ( interval . contentStart ) ;
var i d = $ ( this ) . data ( ' i d ' ) ;:==:var box:==:$ ( this ) . parents ( ' . box ' ) ;
var r = goog . color . alpha . hexToRgba ( testColors [ i ] [ 0 ] ) ;:==:var t:==:testColors [ i ] [ 1 ] ;
var slice = Array . prototype . slice . call . bind ( Array . prototype . slice ) ;:==:var filter:==:Array . prototype . filter . call . bind ( Array . prototype . filter ) ;
var codeblock = codeblocks [ i ] ;:==:var precinctNumber:==:codeblock . precinctNumber ;
var align = this . align _ ;:==:var font:==:this . font _ ;
var dataSource = that . dataSource ;:==:var ignoreCase:==:options . ignoreCase ;
var hour = this . h ( ' hour ' ) ;:==:var format:==:this . h ( ' format ' ) ;
var kr = this . kr ;:==:var n:==:yl . length ;
var TOTAL_MEMORY = Module [ ' TOTAL_MEMORY ' ]  |  |  16777216 ;:==:var FAST_MEMORY:==:Module [ ' FAST_MEMORY ' ]  |  |  2097152 ;
var throughput = preset . throughput  |  0 ;:==:var latency:==:preset . latency  |  0 ;
var rowTokens = this . $ rowTokens ;:==:var tokenIndex:==:this . $ tokenIndex ;
var cx = this . attribute ( ' cx ' ) . toPixels ( ' x ' ) ;:==:var cy:==:this . attribute ( ' cy ' ) . toPixels ( ' y ' ) ;
var flatCoordinates = this . flatCoordinates ;:==:var ends:==:this . ends _ ;
var prototypeColumn = prototypeColumns [ i ] ;:==:var select:==:selects [ prototypeColumn . index ] ;
var proxy_server_addr = unblock_youku . default_proxy_server_addr ;:==:var backup_proxy_server_proc:==:unblock_youku . backup_proxy_server_proc ;
var maxWidth = oDimensions . maxWidth ;:==:var maxHeight:==:oDimensions . maxHeight ;
var cosh = math . cosh ;:==:var complex:==:math . complex ;
var x = Math . min ( Math . max ( 0 , d3 . event . x ) , chart ( ) . charts . attr ( ' width ' ) ) ;:==:var y:==:Math . min ( Math . max ( 0 , d3 . event . y ) , chart ( ) . focusHeight ) ;
var shouldPreload = ref . shouldPreload ;:==:var clientManifest:==:ref . clientManifest ;
var createContinueStatement = parseTreeFactory . createContinueStatement ;:==:var createEmptyArrayLiteralExpression:==:parseTreeFactory . createEmptyArrayLiteralExpression ;
var dirtyList = this . dirtyList ;:==:var region:==:regionCreate ( ) ;
var sigma = options . get ( ' sigma ' ) ;:==:var wilsonInterval:==:options . get ( ' wilsonInterval ' ) ;
var side_ns1 = sphereBox_side_ns1 ;:==:var side_ns2:==:sphereBox_side_ns2 ;
var target = tween . _ target ;:==:var tweens:==:Tween . _ tweens ;
var sections = this . sections [ pseudoId ] ;:==:var index:==:sections . indexOf ( section ) ;
var genre = $ ( ' . genres . value ' ) . data ( ' value ' ) ;:==:var sorter:==:$ ( ' . sorters . value ' ) . data ( ' value ' ) ;
var clipPoints1 = b2Collision . s_clippoints1 ;:==:var clipPoints2:==:b2Collision . s_clippoints2 ;
var b = myIframeDoc . createElement ( ' b ' ) ;:==:var c:==:myIframeDoc . createTextNode ( ' c ' ) ;
var Test = mongoose . model ( ' Test ' , testSchema ) ;:==:var t:==:new test ( ) ;
var min = Math . min ( value [ 0 ] , value [ 1 ] ) ;:==:var max:==:Math . max ( value [ 0 ] , value [ 1 ] ) ;
var touches = ev . touches & & ev . touches . length ? ev . touches : [ ev ] ;:==:var e:==:ev . changedTouches & & ev . changedTouches [ 0 ]  |  |  touches [ 0 ] ;
var When = this . When = ;:==:var Then:==:this . Then    ;
var i d = this . i d = rawParams [ 0 ] ;:==:var params:==:this . params    rawParams . slice ( 1 ) ;
var Hero = require ( ' Hero ' ) ;:==:var metadataBlog:==:require ( ' metadataBlog ' ) ;
var message = obj . message  |  |  '' ;:==:var program:==:obj . program  |  |  '' ;
var line = cursor . line ;:==:var ch:==:cursor . ch ;
var warn = sharedUtil . warn ;:==:var isDict:==:corePrimitives . isDict ;
var shareController = _ appJsControllersShareController [ ' default ' ] ;:==:var appView:==:_ appJsViewsAppView [ ' default ' ] ;
var height = this . viewport . height ;:==:var div:==:this . div ;
var groupId = groupIds [ i ] ;:==:var group:==:this . groups [ groupId ] ;
var open = document . getElementById ( ' open ' ) ;:==:var opensave:==:document . getElementById ( ' opensave ' ) ;
var startRadius = locModeb . startRadius + locModeb . startRadiusVar * locRandomMinus11 ( ) ;:==:var endRadius:==:locModeb . endRadius + locModeb . endRadiusVar * locRandomMinus11 ( ) ;
var del = require ( ' del ' ) ;:==:var glob:==:require ( ' glob ' ) ;
var circle = _ props . circle ;:==:var rounded:==:_ props . rounded ;
var maxSize = math . max ( minSize , math . min ( 9999 , powerbi . dataViewObjects . getValue ( objects , properties [ ' maxSize ' ] , defaultSettings . maxSize ) ) ) ;:==:var size:==:math . max ( minSize , math . min ( maxSize , powerbi . dataViewObjects . getValue ( objects , properties [ ' size ' ] , defaultSettings . size ) ) ) ;
var longitudeOfPerigee = longitudeOfPerigeeConstant + longitudeOfPerigeeSecPart * radiansPerArcSecond ;:==:var meanLongitude:==:meanLongitudeConstant + meanLongitudeSecPart * radiansPerArcSecond ;
var face = faces [ i ] ;:==:var edge:==:face . edge ;
var dataViewAnalysis = powerbi . dataViewAnalysis ;:==:var textMeasurementService:==:powerbi . textMeasurementService ;
var orderId = track . orderId ( ) ;:==:var products:==:track . products ( )  |  |  [ ] ;
var image = U . XML . getNodeText ( node )  |  |  node . getAttribute ( ' image ' ) ;:==:var height:==:node . getAttribute ( ' height ' ) ;
var _ strlen = Module [ ' _ strlen ' ] = asm [ ' _ strlen ' ] ;:==:var _ exitRecog:==:module [ ' _ exitRecog ' ]    asm [ ' _ exitRecog ' ] ;
var supportConstant = exports . supportConstant = ' absolute | after - edge | after | all - scroll | all | alphabetic | always | antialiased | armenian | auto | avoid - column | avoid - page | avoid | balance | baseline | before - edge | before | below | bidi - override | block - line - height | block | bold | bolder | border - box | both | bottom | box | break - all | break - word | capitalize | caps - height | caption | center | central | char | circle | cjk - ideographic | clone | close - quote | col - resize | collapse | column | consider - shifts | contain | content - box | cover | crosshair | cubic - bezier | dashed | decimal - leading - zero | decimal | default | disabled | disc | disregard - shifts | distribute - all - lines | distribute - letter | distribute - space | distribute | dotted | double | e - resize | ease - in | ease - in - out | ease - out | ease | ellipsis | end | exclude - ruby | fill | fixed | georgian | glyphs | grid - height | groove | hand | hanging | hebrew | help | hidden | hiragana - iroha | hiragana | horizontal | icon | ideograph - alpha | ideograph - numeric | ideograph - parenthesis | ideograph - space | ideographic | inactive | include - ruby | inherit | initial | inline - block | inline - box | inline - line - height | inline - table | inline | inset | inside | inter - ideograph | inter - word | invert | italic | justify | katakana - iroha | katakana | keep - all | last | left | lighter | line - edge | line - through | line | linear | list - item | local | loose | lower - alpha | lower - greek | lower - latin | lower - roman | lowercase | lr - tb | ltr | mathematical | max - height | max - size | medium | menu | message - box | middle | move | n - resize | ne - resize | newspaper | no - change | no - close - quote | no - drop | no - open - quote | no - repeat | none | normal | not - allowed | nowrap | nw - resize | oblique | open - quote | outset | outside | overline | padding - box | page | pointer | pre - line | pre - wrap | pre | preserve-3d | progress | relative | repeat - x | repeat - y | repeat | replaced | reset - size | ridge | right | round | row - resize | rtl | s - resize | scroll | se - resize | separate | slice | small - caps | small - caption | solid | space | square | start | static | status - bar | step - end | step - start | steps | stretch | strict | sub | super | sw - resize | table - caption | table - cell | table - column - group | table - column | table - footer - group | table - header - group | table - row - group | table - row | table | tb - rl | text - after - edge | text - before - edge | text - bottom | text - size | text - top | text | thick | thin | transparent | underline | upper - alpha | upper - latin | upper - roman | uppercase | use - script | vertical - ideographic | vertical - text | visible | w - resize | wait | whitespace | z - index | zero ' ;:==:var supportConstantColor:==:exports . supportConstantColor    ' aqua | black | blue | fuchsia | gray | green | lime | maroon | navy | olive | orange | purple | red | silver | teal | white | yellow ' ;
var attribute = attributes . get ( geometryAttribute ) ;:==:var buffer:==:attribute . buffer ;
var re = redirect ;:==:var name:==:re . name ;
var maxErrors = options . maxErrors ;:==:var errorMessages:==:this . errorMessages    blocks . observable ( [ ] ) ;
var parseDdocFunctionName = pouchdb . utils . parseDdocFunctionName ;:==:var createError:==:pouchdb . utils . createError ;
var mouse = e . type . indexOf ( ' mouse ' ) = = = 0 ;:==:var pointer:==:e . type . indexOf ( ' pointer ' )      0 ;
var commands = imports . commands ;:==:var tabManager:==:imports . tabManager ;
var selection = selections [ clientId ] ;:==:var user:==:workspace . users [ selection . uid ] ;
var ui = app . ns ( ' ui ' ) ;:==:var ut:==:app . ns ( ' ut ' ) ;
var Recording = require ( ' nativeModules ' ) . recording ;:==:var react:==:require ( ' react ' ) ;
var cyan500 = exports . cyan500 = ' # 00bcd4 ' ;:==:var cyan600:==:exports . cyan600    ' # 00acc1 ' ;
var target = d3 . event . target ;:==:var d:==:d3 . select ( target ) . datum ( ) ;
var END_TO_START = node . ownerDocument . defaultView . range . end_to_start  |  |  window . range . end_to_start ;:==:var start_to_end:==:node . ownerDocument . defaultView . range . start_to_end  |  |  window . range . start_to_end ;
var tildify = require ( ' tildify ' ) ;:==:var Transform:==:require ( ' stream ' ) . Transform ;
var head = document . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var s:==:document . createElement ( ' script ' ) ;
var engine = instanceInfo . owner . owner . engine ;:==:var effect:==:context . useInstancing ? this . effectInstanced : this . effect ;
var char = text [ charNum ] ;:==:var charWidth:==:charWidths [ charNum ] ;
var Plugin = imports . Plugin ;:==:var ui:==:imports . ui ;
var React = require ( ' React ' ) ;:==:var fixedDataTableRowBuffer:==:require ( ' fixedDataTableRowBuffer ' ) ;
var length = options . length ;:==:var topRadius:==:options . topRadius ;
var clone = utils . clone ;:==:var isMongooseObject:==:utils . isMongooseObject ;
var options = this . options ( ) ;:==:var buildDir:==:options . buildDir ;
var index = rectangle . _ index ;:==:var custom:==:rectangle . custom  |  |  ;
var h = $ cont . css ( ' overflow','hidden ' ) . height ( ) ;:==:var w:==:$ cont . width ( ) ;
var template = this . _ templateResolver . resolve ( component ) ;:==:var componentUrl:==:this . _ componentUrlMapper . getUrl ( component ) ;
var coord = coords [ i ] ;:==:var i d:==:this . _ tileClippingMaskiDs [ coord . i d ]    ( idNext++ ) < < 3 ;
var Assertion = chai . Assertion ;:==:var assert:==:chai . assert ;
var focusedOption = _ ref8 . focusedOption ;:==:var focusOption:==:_ ref8 . focusOption ;
var snap = this . options . snap  |  |  null ;:==:var item:==:this . itemFromTarget ( event ) ;
var getViewportDimensions = require ( ' getViewportDimensions ' ) ;:==:var reactComponentExpect:==:require ( ' reactComponentExpect ' ) ;
var positionWorld = vertex . positionWorld ;:==:var positionScreen:==:vertex . positionScreen ;
var editorState = require ( ' editorState ' ) ;:==:var unicodeUtils:==:require ( ' unicodeUtils ' ) ;
var x = _ vector3 . x * _ svgWidthHalf ;:==:var y:==:- _ vector3 . y * _ svgHeightHalf ;
var controls = this . _ reduceControls ( controlsConfig ) ;:==:var optionals:==:isPresent ( extra ) ? stringMapWrapper . get ( extra , ' optionals ' ) : null ;
var ish = this . ish ;:==:var destination:==:this . destination ;
var command = commandArg . toLowerCase ( ) ;:==:var showUi:==:showUiArg ;
var width = flyoutRect . width ;:==:var height:==:flyoutRect . height ;
var blueGrey400 = exports . blueGrey400 = ' # 78909c ' ;:==:var blueGrey500:==:exports . blueGrey500    ' # 607d8b ' ;
var moduleExpression = this . transformAny ( tree . moduleExpression ) ;:==:var specifierSet:==:this . transformAny ( tree . specifierSet ) ;
var isPrime = math . isPrime ;:==:var bignumber:==:math . bignumber ;
var defaultTooltip = ' defaultTooltip ' ;:==:var parentTooltip:==:' parentTooltip ' ;
var x = ( ( ( value1 . x * part1 ) + ( value2 . x * part2 ) ) + ( tangent1 . x * part3 ) ) + ( tangent2 . x * part4 ) ;:==:var y:==:( ( ( value1 . y * part1 ) + ( value2 . y * part2 ) ) + ( tangent1 . y * part3 ) ) + ( tangent2 . y * part4 ) ;
var cos = Math . cos ;:==:var sin:==:Math . sin ;
var classname = subDict [ ' classname ' ] ;:==:var act:==:ccs . objectFactory . createObject ( classname ) ;
var escaped = this . _ escapedAttributes ;:==:var prev:==:this . _ previousAttributes  |  |  ;
var self = compressor . self ( ) ;:==:var multiple_if_returns:==:has_multiple_if_returns ( statements ) ;
var switchAndroid = require ( ' switchAndroid ' ) ;:==:var toolbarAndroid:==:require ( ' toolbarAndroid ' ) ;
var net = require ( ' net ' ) ;:==:var util:==:require ( ' util ' ) ;
var domain = sortedCookieSizes [ i ] . domain ;:==:var avgCookieSize:==:sortedCookieSizes [ i ] . avgCookieSize ;
var windows = this . windows ;:==:var len:==:windows . length ;
var allowEscape = this . _ allowEscape ;:==:var ignorejsx:==:this . _ ignorejsx ;
var hasNext = ( this . get ( ' visible ' ) & & this . get ( ' showControls ' ) & & this . hasNext ( ) ) ;:==:var hasPrev:==:( this . get ( ' visible ' ) & & this . get ( ' showControls ' ) & & this . hasPrev ( ) ) ;
var focus = props . focus ;:==:var focusStyle:==:props . focusStyle ;
var Divider = imports . Divider ;:==:var fs:==:imports . fs ;
var Loader = scope . Loader ;:==:var Observer:==:scope . Observer ;
var createDisplayNameGetter = powerbi . data . createDisplayNameGetter ;:==:var legendPosition:==:powerbi . visuals . legendPosition ;
var height = defaultValue ( options . height , gl . drawingBufferHeight ) ;:==:var framebuffer:==:options . framebuffer ;
var headers = resp . httpResponse . headers  |  |  ;:==:var region:==:headers [ ' x - amz - bucket - region ' ]  |  |  null ;
var Element = db . model ( ' Element ' , el ) ;:==:var Some:==:db . model ( ' Some ' , so ) ;
var orphan = params . orphan = = = true ;:==:var prune:==:params . prune      true ;
var foo = ' foo ' ;:==:var bar:==:' bar ' ;
var def = goog . dom . getElement ( ' def-5 ' ) ;:==:var jkl:==:goog . dom . getElement ( ' jkl-5 ' ) ;
var pooledClass = require ( ' pooledClass ' ) ;:==:var reactdomComponentTree:==:require ( ' reactdomComponentTree ' ) ;
var doc = opt_doc  |  |  document ;:==:var cache:==:doc [ bot . inject . cache . CACHE_KEY _ ] ;
var daysBetween = calc . daysBetween ;:==:var daysInWeek:==:calc . daysInWeek ;
var fs = Npm . require ( ' fs ' ) ;:==:var child_process:==:Npm . require ( ' child_process ' ) ;
var textOperation = firepad . textOperation ;:==:var cursor:==:firepad . cursor ;
var h1 = this . h1 ;:==:var h2:==:this . h2 ;
var records = $ ( ' # grid_'+ this . name + ' _ records ' ) ;:==:var frecords:==:$ ( ' # grid_'+ this . name + ' _ frecords ' ) ;
var isArrayWhere = logic . _ isArrayWhere ;:==:var isFormulaOrTerm:==:logic . _ isFormulaOrTerm ;
var offsetX = event . offsetX = = = undefined ? event . layerX : event . offsetX ;:==:var offsetY:==:event . offsetY      undefined ? event . layerY : event . offsetY ;
var operation = req . service . api . operations [ req . operation ] ;:==:var authtype:==:operation ? operation . authtype : '' ;
var entryTotalTimes = timelineData . entryTotalTimes ;:==:var entryStartTimes:==:timelineData . entryStartTimes ;
var timeInexact = obj . timeInexact ;:==:var level:==:obj . level  |  |  ' info ' ;
var once = PouchDB . utils . once ;:==:var toPromise:==:pouchdb . utils . toPromise ;
var features = this . features ;:==:var len:==:features . length ;
var Parser = coreParser . parser ;:==:var iseof:==:coreParser . iseof ;
var direction = ( params . direction  |  |  1 ) < 0 ? -1 : 1 ;:==:var paintStyle:==:params . paintStyle  |  |  lineWidth : 1 ;
var b = a . nextSibling ;:==:var c:==:document . createElement ( ' c ' ) ;
var util = require ( ' util ' ) ;:==:var detectBinary:==:promise . denodeify ( mozrunner . detectBinary ) ;
var contactEmailKind = contacts . contactEmailKind ;:==:var contactPhone:==:contacts . contactPhone ;
var Line = firepad . Line ;:==:var Text:==:firepad . Text ;
var index = math . index ;:==:var Matrix:==:math . type . Matrix ;
var module = buildMap [ moduleName ] ;:==:var deps:==:module . deps ;
var ngModel = scope . ngModel = ctrls [ 1 ] ;:==:var $ selectMultiple:==:scope . $ selectMultiple ;
var STATUS_OUT_OF_SYNC = exports . STATUS_OUT_OF_SYNC = 4 ;:==:var STATUS_SYNC_ERROR:==:exports . STATUS_SYNC_ERROR     5 ;
var now = Date . now ( ) ;:==:var target:==:ev . domEvent . target ;
var triangles = intersectTrimesh_triangles ;:==:var treeTransform:==:intersecttrimesh_treetransform ;
var Schema = mongoose . Schema ;:==:var objectId:==:mongoose . types . objectId ;
var createClassAndSelector = jsCommon . cssConstants . createClassAndSelector ;:==:var createDataViewScopeIdentity:==:powerbi . data . createDataViewScopeIdentity ;
var commander = require ( ' commander ' ) ;:==:var argv:==:require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;
var scrollOffset = priv . scrollOffset ;:==:var totalColumns:==:priv . totalColumns ;
var node = child . node ;:==:var width:==:( widthArray [ i ] . triggerWidth ) + 15 ;
var cullingVolume = frameState . cullingVolume ;:==:var planes:==:scratchCullingVolume . planes ;
var doWhileStatement = traceur . syntax . trees . doWhileStatement ;:==:var forOfStatement:==:traceur . syntax . trees . forOfStatement ;
var Breakpoint = debug . Breakpoint ;:==:var Variable:==:debug . Variable ;
var path = require ( ' path ' ) ;:==:var bunyan:==:require ( ' bunyan ' ) ;
var Node = math . expression . node . Node ;:==:var parenthesisNode:==:math . expression . node . parenthesisNode ;
var COLON    = C . COLON    = 0x5 ;:==:var COMMA:==:C . COMMA      0x6 ;
var drag_line = drag_lines [ 0 ] ;:==:var src:==:null , dst , src_port ;
var pixelFormat = defaultValue ( options . pixelFormat , pixelFormat . rgba ) ;:==:var pixelDatatype:==:defaultValue ( options . pixelDatatype , pixelDatatype . unsigned_byte ) ;
var customValidators = configuration . customValidators  |  |  [ ] ;:==:var skipUndeclared:==:configuration . skipUndeclared  |  |  false ;
var startIndex = _ ref . startIndex ;:==:var stopIndex:==:_ ref . stopIndex ;
var remote = new PouchDB ( dbs . remote ) ;:==:var db:==:new PouchDB ( dbs . name ) ;
var createCallCall = parseTreeFactory . createCallCall ;:==:var createCallExpression:==:parseTreeFactory . createCallExpression ;
var restoreOptions = that . restoreOptions ;:==:var doc:==:$ ( document ) ;
var indigo200 = exports . indigo200 = ' # 9fa8da ' ;:==:var indigo300:==:exports . indigo300    ' # 7986cb ' ;
var x = math . complex ( 2 , 3 ) ;:==:var a:==:math . matrix ( [ x ] ) ;
var d = opts . direction  |  |  ' left ' ;:==:var w:==:$ cont . css ( ' overflow','hidden ' ) . width ( ) ;
var index = tile . index ;:==:var set:==:tilesets [ index ] ;
var children = _ props4 . children ;:==:var fixedHeight:==:_ props4 . fixedHeight ;
var groupId = this . groupIds [ i ] ;:==:var group:==:this . groups [ groupId ] ;
var tr = $ ( ' < tr > ' ) ;:==:var select:==:$ ( ' < select > ' ) . attr ( ' class','pe_selectabletime ' ) . attr ( ' id','pe_targetbg_from_'+i ) ;
var scrollResponder = require ( ' scrollResponder ' ) ;:==:var staticRenderer:==:require ( ' staticRenderer ' ) ;
var _ require = _ _ webpack_require _ _ ( 39 ) ;:==:var eventEmitter:==:_ require . eventEmitter ;
var clipboard = imports . clipboard ;:==:var commands:==:imports . commands ;
var type = capabilities . objects [ objectKey ] . properties [ propKey ] . type ;:==:var getValueFn:==:this . getValueFnByType ( type ) ;
var map = ctx . config . category_map  |  |  ;:==:var name:==:this . name ;
var actual = escape ? escapeInvisibles ( err . actual )   : err . actual ;:==:var expected:==:escape ? escapeInvisibles ( err . expected ) : err . expected ;
var x = xScale ( dp . x ) ;:==:var y:==:yScale ( dp . y ) ;
var item = result . rows . item ( i ) ;:==:var metadata:==:safeJsonParse ( item . metadata ) ;
var coordinates = readCoordinates ( coordinatesNode ) ;:==:var polyline:==:styleEntity . polyline ;
var ip = connectionIndicator . getip ( this . transport [ i ] . ip ) ;:==:var port:==:connectionIndicator . getPort ( this . transport [ i ] . ip ) ;
var IMPORTED_BINDING = ' IMPORTED_BINDING ' ;:==:var INDEX_SIGNATURE:==:' INDEX_SIGNATURE ' ;
var variables = variableUtil . variablesInScope ( context ) ;:==:var variable:==:variableUtil . getVariable ( variables , ' createElement ' ) ;
var footer = callbacks . footer . apply ( me , arguments ) ;:==:var afterFooter:==:callbacks . afterFooter . apply ( me , arguments ) ;
var createMicrosoftUnsafeLocalFunction = require ( ' createMicrosoftUnsafeLocalFunction ' ) ;:==:var setTextContent:==:require ( ' setTextContent ' ) ;
var paymentProviderId = identify . proxy ( ' traits . paymentProviderId ' ) ;:==:var accountStatus:==:identify . proxy ( ' traits . accountStatus ' ) ;
var http = require ( ' http ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var amber700 = exports . amber700 = ' # ffa000 ' ;:==:var amber800:==:exports . amber800    ' # ff8f00 ' ;
var metaDataColumn = this . metaDataColumn ;:==:var labelSettings:==:this . cardFormatSetting . labelSettings ;
var opts = loadData . opts  |  |  ;:==:var models:==:_ _ alloyId5 . models ;
var scrollHeight = this . container . scrollHeight ;:==:var clientHeight:==:this . container . clientHeight ;
var fs = require ( ' graceful - fs ' ) ;:==:var path:==:require ( ' path ' ) ;
var nodeFrom = graph . getNode ( adj . nodeFrom . i d ) ;:==:var nodeTo:==:graph . getNode ( adj . nodeTo . i d ) ;
var o = this . options ;:==:var capt:==:this . element . children ( ' . window - caption ' ) ;
var a = new functionNode ( new symbolNode ( ' add ' ) , [ new constantNode ( 2 ) , new constantNode ( 3 ) ] ) ;:==:var b:==:new functionNode ( new symbolNode ( ' add ' ) , [ new constantNode ( 2 ) , new constantNode ( 3 ) ] ) ;
var method = req . method ;:==:var path:==:req . path ;
var sineSquared = math . max ( 1 . 0 - cosineSquared , 0 . 0 ) ;:==:var sine:==:math . sqrt ( sineSquared ) ;
var sqrt = Math . sqrt ;:==:var asin:==:Math . asin ;
var events = expandoStore & & expandoStore . events ;:==:var handle:==:expandoStore & & expandoStore . handle ;
var surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj ;:==:var wheelInfos:==:this . wheelInfos ;
var concat = require ( ' gulp - concat ' ) ;:==:var insert:==:require ( ' gulp - insert ' ) ;
var moment = require ( ' moment ' ) ;:==:var util:==:require ( ' util ' ) ;
var ssl = keystone . get ( ' ssl ' ) ;:==:var host:==:keystone . get ( ' ssl host ' )  |  |  keystone . get ( ' host ' ) ;
var flags = scope . flags ;:==:var forSubtree:==:scope . forSubtree ;
var currentdomNode = this . _ currentdomNode ;:==:var crumbs:==:this . crumbsElement ;
var rule = options . allrules [ errorSelector ] ;:==:var extraData:==:rule . extraData ;
var clone = require ( ' lodash . clone ' ) ;:==:var defaults:==:require ( ' lodash . defaultsdeep ' ) ;
var formatDate = fc . formatDate ;:==:var parseiso8601:==:fc . parseiso8601 ;
var orderby = options . orderby  |  |  ' date ' ;:==:var order:==:options . order  |  |  -1 ;
var reactNativeViewAttributes = require ( ' reactNativeViewAttributes ' ) ;:==:var scrollView:==:require ( ' scrollView ' ) ;
var MINDRAG = cartesianConstants . mindrag * plot . pixelRatio ;:==:var minzoom:==:cartesianConstants . minzoom * plot . pixelRatio ;
var canvas = this . canvas ;:==:var antialias:==:this . getAttribute ( ' antialias ' )      ' true ' ;
var renderBuffer = options . renderBuffer ;:==:var scope:==:options . scope ;
var afterLeave = data . afterLeave ;:==:var leaveCancelled:==:data . leaveCancelled ;
var Utility = jsCommon . utility ;:==:var createSolidFillDefinition:==:powerbi . fillDefinitionHelpers . createSolidFillDefinition ;
var moduleDefinition = traceur . syntax . trees . moduleDefinition ;:==:var moduleExpression:==:traceur . syntax . trees . moduleExpression ;
var numSuccessful = this . _ sendingFilesQueue [ 0 ] . numSuccessful ;:==:var numUnsuccessful:==:this . _ sendingFilesQueue [ 0 ] . numUnsuccessful ;
var selection = this . selection = options . selection ;:==:var clearCatcher:==:options . clearCatcher ;
var pathName = options . pathName  |  |  relation . options . path  |  |  relationName ;:==:var paramName:==:options . paramName  |  |  ' nk ' ;
var lat = scratchCartographic . latitude ;:==:var lon:==:scratchCartographic . longitude ;
var isCharacterDataNode = dom . isCharacterDataNode ;:==:var getNodeIndex:==:dom . getNodeIndex ;
var b = new jsbn ( params . b ) ;:==:var n:==:new jsbn ( params . n ) ;
var util = require ( ' util ' ) ;:==:var htmlsafe:==:helper . htmlsafe ;
var boolean = ' boolean ' ;:==:var number:==:' number ' ;
var blue50 = exports . blue50 = ' # e3f2fd ' ;:==:var blue100:==:exports . blue100    ' # bbdefb ' ;
var setTimeout = this . setTimeout ;:==:var setInterval:==:this . setInterval ;
var isArray = nv . utils . isArray ( dst [ key ] ) ;:==:var isObject:==:nv . utils . isObject ( dst [ key ] ) ;
var processDecelerationRate = require ( ' processDecelerationRate ' ) ;:==:var requireNativeComponent:==:require ( ' requireNativeComponent ' ) ;
var fs      = require ( ' fs - extra ' ) ;:==:var path:==:require ( ' path ' ) ;
var value = this . value ;:==:var type:==:( this . type     ' auto ' ) ? util . type ( value ) : this . type ;
var position = camera . position ;:==:var direction:==:camera . direction ;
var denseMatrix = math . type . denseMatrix ;:==:var unit:==:math . type . unit ;
var left = elemOffset . left ;:==:var top:==:elemOffset . top ;
var dismissKeyboard = require ( ' dismissKeyboard ' ) ;:==:var requireNativeComponent:==:require ( ' requireNativeComponent ' ) ;
var applicationData = windows . storage . applicationData ;:==:var cameraRotationHelper:==:sdkSample . cameraRotationHelper ;
var document = this . X . document ;:==:var div:==:document . createElement ( ' div ' ) ;
var Y = this . YW * g ( M ) ;:==:var Z:==:this . ZW * g ( N ) ;
var renderingQueue = options . renderingQueue ;:==:var textLayerFactory:==:options . textLayerFactory ;
var _ characterRecognize = module [ ' _ characterRecognize ' ] = asm [ ' _ characterRecognize ' ] ;:==:var _ bitshift64Shl:==:module [ ' _ bitshift64Shl ' ]    asm [ ' _ bitshift64Shl ' ] ;
var start = new Date ( value . start ) ;:==:var end:==:new Date ( value . end ) ;
var createParenExpression = parseTreeFactory . createParenExpression ;:==:var createReturnStatement:==:parseTreeFactory . createReturnStatement ;
var indices = this . indices = ;:==:var types:==:this . types    ;
var hovermode = opts . hovermode ;:==:var container:==:opts . container ;
var x = d . horizontal ? d3 . event . x : d3 . event . y ;:==:var y:==:d . horizontal ? d3 . event . y : d3 . event . x ;
var masterCallback = jasmine . createSpy ( ' masterCallback ' ) ;:==:var topCallback:==:jasmine . createSpy ( ' topCallback ' ) ;
var rect = params . options . rect ;:==:var w:==:rect . width ;
var fs = require ( ' fs ' ) ;:==:var readline:==:require ( ' readline ' ) ;
var rcon = this . rcon ;:==:var invSubMix:==:this . invSubMix ;
var channels = animation . channels ;:==:var parameters:==:animation . parameters ;
var rate = document . getElementById ( ' rate ' ) ;:==:var text:==:document . getElementById ( ' srctext ' ) ;
var insert = authorAttributes . insert ;:==:var remove:==:authorAttributes . remove ;
var rotationAux = this . rotationAux = this . rotationAux  |  |  x : 0 , y : 0 , z : 0 ;:==:var rotation:==:el . getAttribute ( ' rotation ' ) ;
var overflow = _ style . overflow ;:==:var overflowX:==:_ style . overflowX ;
var dy2 = mxUtils . getValue ( this . style , ' dy2 ' , ' 0 ' ) ;:==:var dx3:==:mxUtils . getValue ( this . style , ' dx3 ' , ' 0 ' ) ;
var area = coverageAreas [ areaIndex ] ;:==:var bbox:==:area . bbox ;
var doc = tab . document ;:==:var path:==:options . path  |  |  tab . path ;
var concat = require ( ' gulp - concat ' ) ;:==:var header:==:require ( ' gulp - header ' ) ;
var _ bitshift64Shl = module [ ' _ bitshift64Shl ' ] = asm [ ' _ bitshift64Shl ' ] ;:==:var _ _ global__i_a:==:module [ ' _ _ global__i_a ' ]    asm [ ' _ _ global__i_a ' ] ;
var referee = require ( ' referee ' ) ;:==:var samsam:==:require ( ' samsam ' ) ;
var points = this [ ' points ' ] ;:==:var edges:==:this [ ' edges ' ] ;
var filterArea = filterBlock . target . filterArea ;:==:var x:==:filterArea . x - offsetx ;
var texture = textureAtlas . getTexture ( fullName ) ;:==:var region:==:texture . region ;
var Map = Immutable . Map ;:==:var Record:==:Immutable . Record ;
var Unit = math . type . Unit ;:==:var sum:==:math . sum ;
var a = this . _ rand ( n2 ) ;:==:var g:==:n . gcd ( a ) ;
var nodeCodeType = this . _ nodeCodeType ;:==:var nodeConsStringType:==:this . _ nodeConsStringType ;
var context = options . context ;:==:var geometry:==:defaultValue ( options . geometry , defaultValue . empty_object ) ;
var offset = this . offset ;:==:var bone:==:slot . bone ;
var manifest = JSON . parse ( fs . readFileSync ( path . join ( templatePath , ' manifest . json ' ) ) ) ;:==:var messages:==:json . parse ( fs . readFileSync ( path . join ( templatePath , ' _ locales ' , ' en ' , ' messages . json ' ) ) ) ;
var scrollPositionChangeReason = _ state . scrollPositionChangeReason ;:==:var scrollToAlignment:==:_ state . scrollToAlignment ;
var acc = _ acc ;:==:var k:==:_ k ;
var sunday = alarmEdit . element . querySelector ( ' # repeat - select - sunday ' ) ;:==:var parent:==:sunday . parentElement ;
var get = classUtil . get ;:==:var encodehtml:==:formatUtil . encodehtml ;
var contentState = require ( ' contentState ' ) ;:==:var editorBidiService:==:require ( ' editorBidiService ' ) ;
var fun = this . fun ;:==:var array:==:this . array ;
var oCol = oSettings . aoColumns [ iCol ] ;:==:var oClasses:==:oSettings . oClasses ;
var postData   = method . postData ;:==:var httpHeaders:==:method . httpHeaders ;
var oldIndex = ev . detail . oldIndex ;:==:var newIndex:==:ev . detail . newIndex ;
var center = options . center ;:==:var semiMajorAxis:==:options . semiMajorAxis ;
var enterDelay = _ props . enterDelay ;:==:var maxScale:==:_ props . maxScale ;
var mongoose = require ( ' mongoose ' ) ;:==:var passport:==:require ( ' passport ' ) ;
var createReturnStatement = parseTreeFactory . createReturnStatement ;:==:var createTrueLiteral:==:parseTreeFactory . createTrueLiteral ;
var fcolumns = $ ( ' # grid_'+ this . name + ' _ fcolumns ' ) ;:==:var records:==:$ ( ' # grid_'+ this . name + ' _ records ' ) ;
var extend = require ( ' extend ' ) ;:==:var autoprefixer:==:require ( ' autoprefixer ' ) ;
var li = document . createElement ( ' li ' ) ;:==:var a:==:document . createElement ( ' a ' ) ;
var left = ref . style . left ;:==:var right:==:ref . style . right ;
var validateIndex = localUtils . validateIndex ;:==:var massageIndexDef:==:localUtils . massageIndexDef ;
var supportConstantColor = exports . supportConstantColor = ' aqua | black | blue | fuchsia | gray | green | lime | maroon | navy | olive | orange | purple | red | silver | teal | white | yellow ' ;:==:var supportConstantFonts:==:exports . supportConstantFonts    ' arial | century | comic | courier | garamond | georgia | helvetica | impact | lucida | symbol | system | tahoma | times | trebuchet | utopia | verdana | webdings | sans - serif | serif | monospace ' ;
var height = defaultValue ( options . height , 0 ) ;:==:var pressure:==:defaultValue ( options . pressure , 0 ) ;
var option = target . dataset . option ;:==:var index:==:target . dataset . index ;
var priv = privatePool . get ( this ) ;:==:var coords:==:priv . target . coords ;
var ascii85Stream = coreStream . ascii85Stream ;:==:var asciiHexStream:==:coreStream . asciiHexStream ;
var webChannelDebug = goog . labs . net . webChannel . webChannelDebug ;:==:var webChannelRequest:==:goog . labs . net . webChannel . webChannelRequest ;
var ws = require ( ' ws ' ) ;:==:var when:==:require ( ' when ' ) ;
var models = _ _ alloyId9 . models ;:==:var len:==:models . length ;
var assert = require ( ' assert ' ) ;:==:var glob:==:require ( ' glob ' ) ;
var subarg = require ( ' subarg ' ) ;:==:var glob:==:require ( ' glob ' ) ;
var windowTimeSpan = state . windowTimeSpan ;:==:var window:==:state . window ;
var parentGlobalTransform = result ? result . parentGlobalTransform : null ;:==:var parentGlobalTransformMatrix:==:result ? result . parentGlobalTransformMatrix : null ;
var mixin = scope . mixin ;:==:var registerWrapper:==:scope . registerWrapper ;
var width = areaPixelSize . width ;:==:var height:==:areaPixelSize . height ;
var initialValue = inst . _ wrapperState . initialChecked  |  |  inst . _ wrapperState . initialValue ;:==:var defaultValue:==:props . defaultChecked  |  |  props . defaultValue ;
var request = require ( ' request ' ) ;:==:var iconv:==:require ( ' iconv - lite ' ) ;
var window = global$1 . window ;:==:var console:==:global$1 . console ;
var e = c . redAdd ( d ) ;:==:var h:==:this . curve . _ mulc ( this . c . redMul ( this . z ) ) . redSqr ( ) ;
var Plugin = imports . Plugin ;:==:var bridge:==:imports . bridge ;
var sin = Math . sin ( angle ) ;:==:var cos:==:Math . cos ( angle ) ;
var sub_port = opts & & opts . sub_port  |  |  cst . DAEMON_PUB_PORT ;:==:var rpc_port:==:opts & & opts . rpc_port  |  |  cst . DAEMON_RPC_PORT ;
var Person = db . model ( ' gh4263 ' , personSchema ) ;:==:var blogPost:==:db . model ( ' gh4263_0 ' , blogPostSchema ) ;
var path = e . path ;:==:var progress:==:e . progress ;
var utils = mocha . utils ;:==:var Runnable:==:mocha . Runnable ;
var async = require ( ' async ' ) ;:==:var client:==:marionette . client ( ) ;
var _ i64Add = module [ ' _ i64Add ' ] = asm [ ' _ i64Add ' ] ;:==:var _ memmove:==:module [ ' _ memmove ' ]    asm [ ' _ memmove ' ] ;
var shape = options . shape ;:==:var scale:==:options . scale  |  |  1 ;
var clamp = require ( ' clamp ' ) ;:==:var cx:==:require ( ' cx ' ) ;
var position = Cartesian3 . clone ( camera . position ) ;:==:var direction:==:Cartesian3 . clone ( camera . direction ) ;
var picker = document . getElementById ( ' picker ' ) ;:==:var values:==:document . getElementById ( ' values ' ) ;
var overflowX = this . overflowX ;:==:var overflowY:==:this . overflowY ;
var x = 0x345678 ;:==:var len:==:this . v . length ;
var Metadata = require ( ' Metadata ' ) ;:==:var React:==:require ( ' React ' ) ;
var layouts   = require ( ' metalsmith - layouts ' ) ;:==:var permalinks:==:require ( ' metalsmith - permalinks ' ) ;
var dt = settings . dt ;:==:var t:==:dt . table ( ) ;
var mm = require ( ' mm ' ) ;:==:var nock:==:require ( ' nock ' ) ;
var grey700 = exports . grey700 = ' # 616161 ' ;:==:var grey800:==:exports . grey800    ' # 424242 ' ;
var row = grid . rows [ 0 ] ;:==:var col:==:grid . columns [ 1 ] ;
var emberGenerate = blueprintHelpers . emberGenerate ;:==:var emberDestroy:==:blueprintHelpers . emberDestroy ;
var ARRAY_LITERAL_EXPRESSION = ' ARRAY_LITERAL_EXPRESSION ' ;:==:var ARRAY_PATTERN:==:' ARRAY_PATTERN ' ;
var skeleton = this . skeleton ;:==:var premultipliedAlpha:==:this . config . premultipliedAlpha ;
var async   = require ( ' async ' ) ;:==:var path:==:require ( ' path ' ) ;
var owners = yield eventStore . ownersOf ( record . event ) ;:==:var provider:==:core . providerFactory . get ( owners . account . providerType ) ;
var left = Math . round ( this . el_init_offset . left + diff_x - this . baseX ) ;:==:var top:==:Math . round ( this . el_init_offset . top + diff_y - this . baseY + this . scrollOffset ) ;
var caption = options . caption ;:==:var width:==:options . width ;
var query = require ( ' component - query ' ) ;:==:var after:==:require ( ' after - transition ' ) ;
var _ im_search = Module [ ' _ im_search ' ] = asm [ ' _ im_search ' ] ;:==:var _ memcpy:==:Module [ ' _ memcpy ' ]    asm [ ' _ memcpy ' ] ;
var requirejs = require ( ' requirejs ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var coefficentsMagnitude = this . coefficentsMagnitude ;:==:var coefficentsSign:==:this . coefficentsSign ;
var fontSize = helpers . getValueOrDefault ( pointLabelOptions . fontSize , globalDefaults . defaultFontSize ) ;:==:var fontStyle:==:helpers . getValueOrDefault ( pointLabelOptions . fontStyle , globalDefaults . defaultFontStyle ) ;
var to = ray . to ;:==:var direction:==:ray . direction ;
var r0 = this . r0 ;:==:var r1:==:this . r1 ;
var nullStream = coreStream . nullStream ;:==:var predictorStream:==:coreStream . predictorStream ;
var node = drag . get ( ' node ' ) ;:==:var helper:==:instance . get ( ' helper ' ) ;
var db = new PouchDB ( dbs . name , auto_compaction : false ) ;:==:var doc:==:_ i d : ' doc1 ' ;
var filter = req . query . filter  |  |  '' ;:==:var page:==:Math . max ( 1 , req . query . page  |  |  1 ) ;
var name = this . transformAny ( tree . name ) ;:==:var value:==:this . transformAny ( tree . value ) ;
var ariadomPropertyConfig = require ( ' ariadomPropertyConfig ' ) ;:==:var beforeInputEventPlugin:==:require ( ' beforeInputEventPlugin ' ) ;
var TRANSLUCENCY_BY_DISTANCE_INDEX = Billboard . TRANSLUCENCY_BY_DISTANCE_INDEX ;:==:var PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX:==:Billboard . PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX ;
var name = param . name ;:==:var value:==:applyScaleFactor ( param . value , scaleFactor , param . scale ) ;
var col = db . collection ( ' update_many_with_generators ' ) ;:==:var r:==:yield col . insertMany ( [ a : 1 , a : 1 ] ) ;
var def = $ firebaseUtils . defer ( ) ;:==:var batch:==:$ firebaseUtils . batch ( ) ;
var material = this . material ;:==:var envMap:==:data . envMap ;
var sourcemaps = require ( ' gulp - sourcemaps ' ) ;:==:var through:==:require ( ' through2 ' ) ;
var node = Parsers . node ;:==:var or:==:Parsers . or ;
var plato = require ( ' plato ' ) ;:==:var plug:==:require ( ' gulp - load - plugins ' ) ( ) ;
var ui_locales = _ ref . ui_locales ;:==:var acr_values:==:_ ref . acr_values ;
var Void = new primitiveType ( ' void ' , 0 , ' v ' ) ;:==:var bool:==:new primitiveType ( ' bool ' , 1 , ' i ' ) ;
var nodebackForPromise = promiseResolver . _ nodebackForPromise ;:==:var errorObj:==:util . errorObj ;
var width = this . ctx . canvas . width ;:==:var height:==:this . ctx . canvas . height ;
var rightCalendar = this . rightCalendar ;:==:var startDate:==:this . startDate ;
var rootId = this . tabId2Txid [ ' ' + tabId ] . rootId ;:==:var server:==:this . tabId2Txid [ ' ' + tabId ] . server ;
var createEmptyParameterList = parseTreeFactory . createEmptyParameterList ;:==:var createForOfStatement:==:parseTreeFactory . createForOfStatement ;
var escapeOnly = settings . escapeOnly ;:==:var omit:==:settings . omitOptionalSemicolons ;
var semver = require ( ' semver ' ) ;:==:var which:==:require ( ' which ' ) ;
var width = Service . query ( ' layoutManager . width ' ) ;:==:var height:==:service . query ( ' layoutManager . height ' ) ;
var c = a . colorspace ;:==:var d:==:a . width ;
var searchPromptText = _ props2 . searchPromptText ;:==:var isLoading:==:this . state . isLoading ;
var setInnerhtml = require ( ' setInnerhtml ' ) ;:==:var domNamespaces:==:require ( ' domNamespaces ' ) ;
var selectedCategories = userGesture ? : this . _ selectedCategoriesSetting . get ( ) ;:==:var childNodes:==:this . _ categoriesElement . childNodes ;
var tab = e . tab ;:==:var session:==:e . session ;
var identifierExpression = traceur . syntax . trees . identifierExpression ;:==:var identifierToken:==:traceur . syntax . identifierToken ;
var traceurLoader = traceur . loader . traceurLoader ;:==:var inlineLoaderCompiler:==:traceur . loader . inlineLoaderCompiler ;
var ellipsoid = defaultValue ( scene . mapProjection . ellipsoid , ellipsoid . wgs84 ) ;:==:var creditDisplay:==:scene . frameState . creditDisplay ;
var functionDeclaration = traceur . syntax . trees . functionDeclaration ;:==:var objectPatternField:==:traceur . syntax . trees . objectPatternField ;
var keyMap = this . _ keyMap ;:==:var data:==:this . _ data ;
var repulsion = forceModel . get ( ' repulsion ' ) ;:==:var edgeLength:==:forceModel . get ( ' edgeLength ' ) ;
var call = functionPrototype . call ;:==:var max:==:math . max ;
var content = request . content ;:==:var metadata:==:request . metadata ;
var Plugin = imports . Plugin ;:==:var save:==:imports . save ;
var links = cluster . links ( nodes ) ;:==:var diagonal:==:diagonalCluster ;
var handler = progression . handler ;:==:var promise:==:progression . promise ;
var transaction = db . transaction ( ' search_engines ' ) ;:==:var objectStore:==:transaction . objectStore ( ' search_engines ' ) ;
var panels = imports . panels ;:==:var alert:==:imports [ ' dialog . alert ' ] . show ;
var object = this . _ extended . object ;:==:var methods:==:this . _ extended . methods ;
var removeAttribute = htmlElement . prototype . removeAttribute ;:==:var setAttribute:==:htmlElement . prototype . setAttribute ;
var width = contentBox . width ;:==:var height:==:contentBox . height ;
var f8SpeakerProfile = require ( ' f8SpeakerProfile ' ) ;:==:var image:==:require ( ' image ' ) ;
var cacheFunctionsCrc32 = options [ ' cacheFunctionsCrc32 ' ] = = null ? false : options [ ' cacheFunctionsCrc32 ' ] ;:==:var fieldsAsRaw:==:options [ ' fieldsAsRaw ' ]     null ? null : options [ ' fieldsAsRaw ' ] ;
var STATUS_CONNECTING   = exports . STATUS_CONNECTING = 1 ;:==:var STATUS_LOADING_AGENTS:==:exports . STATUS_LOADING_AGENTS    2 ;
var getIsCellAllDay = t . getIsCellAllDay ;:==:var colContentLeft:==:t . colContentLeft ;
var event = track . event ( ) ;:==:var properties:==:track . properties ( mapping ) ;
var node = nodes [ i ] ;:==:var c:==:projection ( node . loc ) ;
var extendDirectory = path . normalize ( options . extendDirectory  |  |  ' ' ) ;:==:var extendOptions:==:options . extendOptions  |  |  ;
var extendFlat = extendModule . extendFlat ;:==:var extendDeep:==:extendModule . extendDeep ;
var uploadImgParams = config . uploadImgParams  |  |  ;:==:var uploadImgHeaders:==:config . uploadImgHeaders  |  |  ;
var caseFirst = getOption ( options , ' caseFirst ' , ' string ' , [ ' upper ' , ' lower ' , ' false ' ] , undefined ) ;:==:var numeric:==:getOption ( options , ' numeric ' , ' boolean ' , [ true , false ] , undefined ) ;
var layout = imports . layout ;:==:var workspace:==:imports [ ' collab . workspace ' ] ;
var deltaY = this . _ deltaY + normalizedEvent . pixely ;:==:var handleScrollx:==:this . _ handleScrollx ( deltax , deltay ) ;
var path = require ( ' path ' ) ;:==:var intercept:==:require ( ' intercept - stdout ' ) ;
var DOCUMENT_POSITION_CONTAINED_BY = Node . DOCUMENT_POSITION_CONTAINED_BY ;:==:var DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC:==:Node . DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var path:==:require ( ' path ' ) ;
var name = child . getChildNode ( ' name ' ) ;:==:var age:==:child . getChildNode ( ' age ' ) ;
var runPostSets = module [ ' runPostSets ' ] = asm [ ' runPostSets ' ] ;:==:var dyncall_viiiii:==:module [ ' dyncall_viiiii ' ]    asm [ ' dyncall_viiiii ' ] ;
var type = ref . type ;:==:var leaveClass:==:ref . leaveClass ;
var caller = $ super . caller ;:==:var nom:==:caller . nom ;
var combineUrl = sharedUtil . combineUrl ;:==:var error:==:sharedUtil . error ;
var ngModel = sfBuilderProvider . builders . ngModel ;:==:var sfField:==:sfBuilderProvider . builders . sfField ;
var cx = require ( ' cx ' ) ;:==:var debounceCore:==:require ( ' debounceCore ' ) ;
var path = require ( ' path ' ) ;:==:var mongo:==:require ( ' mongodb ' ) . mongoClient ;
var c9 = imports . c9 ;:==:var membersPanel:==:imports . membersPanel ;
var moduleInfo = this . moduleInfoMap _ [ moduleId ] ;:==:var d:==:new goog . async . deferred ( ) ;
var path = require ( ' path ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var rowContainer = $ scope . rowContainer ;:==:var colContainer:==:$ scope . colContainer ;
var coastline = d3 . select ( ' . coastline ' ) ;:==:var lakes:==:d3 . select ( ' . lakes ' ) ;
var group = groups [ o ] ;:==:var start:==:group . start ;
var isNew = params . isNew  |  |  false ;:==:var start:==:params . hasOwnProperty ( ' start ' ) ? params . start : 0 ;
var scale = ruler . scale ;:==:var isCombo:==:me . chart . isCombo ;
var watcher = imports . watcher ;:==:var model:==:fsCache . model ;
var first = lc ? chars . first : chars . FIRST ;:==:var middle:==:lc ? chars . middle : chars . MIDDLE ;
var width = rect . width + leftMargin + rightMargin ;:==:var height:==:rect . height + topMargin + bottomMargin ;
var shareService = _ appJsServicesShareService [ ' default ' ] ;:==:var wifiService:==:_ appJsServicesWifiService [ ' default ' ] ;
var option = _ props . option ;:==:var instancePrefix:==:_ props . instancePrefix ;
var reason = event . args [ ' data ' ] [ ' reason ' ] ;:==:var stackTrace:==:event . args [ ' data ' ] [ ' stackTrace ' ] ;
var superClass = this . transformAny ( tree . superClass ) ;:==:var elements:==:this . transformList ( tree . elements ) ;
var neighborsSignificance = this . neighborsSignificance ;:==:var width:==:this . width , height    this . height ;
var tvEventHandler = require ( ' tvEventHandler ' ) ;:==:var view:==:require ( ' view ' ) ;
var foo3 = exports . foo3 = function ( ) ;:==:var foo4:==:exports . foo4    undefined ;
var url = validator . trim ( req . body . url ) ;:==:var location:==:validator . trim ( req . body . location ) ;
var MCC_SETTINGS_KEY = apnConst . mcc_settings_key ;:==:var mnc_settings_key:==:apnConst . mnc_settings_key ;
var lifetime = options . lifetime ! = = undefined ? options . lifetime : 5 ;:==:var size:==:options . size !    undefined ? options . size : 10 ;
var text = data . text ;:==:var userId:==:userIds . userId ;
var name = enc ( elm . name ) ;:==:var type:==:elm . type . toLowerCase ( ) ;
var concat = require ( ' gulp - concat ' ) ;:==:var series:==:require ( ' stream - series ' ) ;
var proxyB = input . proxyB ;:==:var transformA:==:input . transformA ;
var url = require ( ' url ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var fs = require ( ' fs ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' keystone : core : importer ' ) ;
var attributes = options . attributes ;:==:var indexBuffer:==:options . indexBuffer ;
var componentsPerAttribute = attribute . componentsPerAttribute ;:==:var functionName:==:attribute . functionName ;
var row = rowCache [ i ] ;:==:var screenRow:==:this . $ screenRowCache [ i ] ;
var host = keystone . get ( ' ssl host ' )  |  |  keystone . get ( ' host ' ) ;:==:var port:==:keystone . get ( ' ssl port ' ) ;
var height = options [ ' height ' ] ! = null ? options [ ' height ' ] : 0 ;:==:var x:==:options [ ' x ' ] !   null ? options [ ' x ' ] : 0 ;
var rule = this . $ rules . no_regex [ i ] ;:==:var token:==:String ( rule . token ) ;
var identifierToken = traceur . syntax . identifierToken ;:==:var ifStatement:==:traceur . syntax . trees . ifStatement ;
var error = require ( ' http - error ' ) ;:==:var path:==:require ( ' path ' ) ;
var t = this . trigger . getTop ( ) ;:==:var h:==:this . trigger . getHeight ( ) ;
var x = workspace . startScrollx + dx ;:==:var y:==:workspace . startScrolly + dy ;
var xhr = goog . labs . net . xhr ;:==:var httpStatus:==:goog . net . httpStatus ;
var canvas = context & & context . canvas ;:==:var height:==:canvas & & canvas . height ;
var duration = eventBox . event_duration ;:==:var i d:==:eventBox . i d ;
var ty = wt . ty ;:==:var colors:==:this . colors ;
var valueScale = axisOptions . valueScale ;:==:var maxScore:==:axisOptions . maxScore ;
var x0 = Number ( configNode . getAttribute ( ' x0 ' )  |  |  0 ) ;:==:var y0:==:number ( configNode . getAttribute ( ' y0 ' )  |  |  0 ) ;
var calendarPane = this . calendarPane ;:==:var body:==:document . body ;
var separator = options . separator  |  |  ' . ' ;:==:var precision:==:options . precision ;
var s = this . view . scale ;:==:var t:==:this . view . translate ;
var sinon = require ( ' sinon ' ) ;:==:var expect:==:chai . expect ;
var extractCurrencySymbols = closurei18nExtractor . extractCurrencySymbols ;:==:var extractDateTimeSymbols:==:closurei18nExtractor . extractDateTimeSymbols ;
var a = ( tubularSegments + 1 ) * j + i - 1 ;:==:var b:==:( tubularSegments + 1 ) * ( j - 1 ) + i - 1 ;
var yiewd = require ( ' yiewd ' ) ;:==:var chai:==:require ( ' chai ' ) ;
var commands = imports . commands ;:==:var async:==:require ( ' async ' ) ;
var builtinObjs = wordRegexp ( builtinObjsWords ) ;:==:var known:==:wordRegexp ( knownWords ) ;
var o = this . options ;:==:var item:==:$ ( event . target ) . parents ( ' . ui - portlet - item ' ) ;
var vertices = data . vertices ;:==:var primitives:==:data . primitives ;
var ctrlKey = e . ctrlKey ;:==:var shiftKey:==:e . shiftKey ;
var streamParser = goog . require ( ' goog . net . streams . streamParser ' ) ;:==:var asserts:==:goog . require ( ' goog . asserts ' ) ;
var getLabelFormattedText = powerbi . visuals . dataLabelUtils . getLabelFormattedText ;:==:var fontSize:==:labelPoint . fontSize ;
var Gradient = reactCanvas . gradient ;:==:var surface:==:reactCanvas . surface ;
var min = me . min ;:==:var max:==:me . max ;
var chart = me . chart ;:==:var chartArea:==:chart . chartArea ;
var https = require ( ' use - https ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var r0 = Math . max ( shape . r0  |  |  0 , 0 ) ;:==:var r:==:Math . max ( shape . r , 0 ) ;
var c9 = imports . c9 ;:==:var commands:==:imports . commands ;
var denseMatrix = type . denseMatrix ;:==:var spa:==:type . spa ;
var entryStartTimes = timelineData . entryStartTimes ;:==:var entryLevels:==:timelineData . entryLevels ;
var octophant = require ( ' octophant ' ) ;:==:var sequence:==:require ( ' run - sequence ' ) ;
var key = element . key ;:==:var value:==:element . value ;
var baseDict = preEvaluatedFont . baseDict ;:==:var dict:==:preEvaluatedFont . dict ;
var isStopIncluded = options . isStopIncluded ;:==:var intervals:==:this . _ intervals ;
var max = data . max ;:==:var min:==:data . min ;
var ALL = ' ALL ' ;:==:var RACE:==:' RACE ' ;
var stream = config . stream ;:==:var interval:==:config . interval  |  |  3000 ;
var other = _ other ;:==:var self:==:_ self ;
var s = start . clone ( ) . clearTime ( ) ;:==:var e:==:end . clone ( ) . clearTime ( ) ;
var Parent = Parse . Object . extend ( ' parentObject ' ) ;:==:var child:==:parse . object . extend ( ' childObject ' ) ;
var shorthandLast = configuration . shorthandLast  |  |  false ;:==:var noSortAlphabetically:==:configuration . noSortAlphabetically  |  |  false ;
var ReactDOM = require ( ' ReactDOM ' ) ;:==:var userAgent:==:require ( ' userAgent ' ) ;
var util = api . util ;:==:var domPosition:==:dom . domPosition ;
var CONSTRUCTOR_TYPE = ' CONSTRUCTOR_TYPE ' ;:==:var CONTINUE_STATEMENT:==:' CONTINUE_STATEMENT ' ;
var rectangle = Rectangle . clone ( rectangleGeometry . _ rectangle , rectangleScratch ) ;:==:var ellipsoid:==:rectangleGeometry . _ ellipsoid ;
var library = require ( ' library ' ) ;:==:var framework:==:require ( ' framework ' ) ;
var dynCall_iiii = Module [ ' dynCall_iiii ' ] = asm [ ' dynCall_iiii ' ] ;:==:var dynCall_iiiddiiiiiiiiiii:==:Module [ ' dynCall_iiiddiiiiiiiiiii ' ]    asm [ ' dynCall_iiiddiiiiiiiiiii ' ] ;
var tagList = multiselect . tagList ;:==:var tag:==:tagList . children ( ' : first ' ) ;
var decodeStream = coreStream . decodeStream ;:==:var stream:==:coreStream . stream ;
var type = params . route_params . type ;:==:var value:==:params . route_params . value ;
var invalidVersionError = errors . invalidVersionError ;:==:var methodNotAllowedError:==:errors . methodNotAllowedError ;
var includeCordovaUnibuild = options . includeCordovaUnibuild ;:==:var pluginWatchSet:==:packageSource . pluginWatchSet . clone ( ) ;
var matches = ed . $ tabCycle . matches ;:==:var index:==:ed . $ tabCycle . index ;
var observer = this . observer = new _ events4 . default ( ) ;:==:var config:==:hls . config ;
var len = str . length ;:==:var n:==:fromIndex  |  |  0 ;
var events = require ( ' events ' ) ;:==:var mockery:==:require ( ' mockery ' ) ;
var text = this . getAttribute ( ' text',this . parseTreeNode . text  |  |  ' ' ) ;:==:var displayMode:==:this . getAttribute ( ' displayMode',this . parseTreeNode . displayMode  |  |  ' false ' )      ' true ' ;
var east = rectangleScratch . east ;:==:var south:==:rectangleScratch . south ;
var name = api_result . name . trim ( ) . toLowerCase ( ) ;:==:var created_at:==:new date ( api_result . created_at ) ;
var conditionalExpression = traceur . syntax . trees . conditionalExpression ;:==:var continueStatement:==:traceur . syntax . trees . continueStatement ;
var tx = opts . ctx ;:==:var digest:==:attachment . digest ;
var setup = setupPutStringTests ( ' string data ' , mockTask ) ;:==:var ref:==:setup . ref ;
var cellSize = _ ref . cellSize ;:==:var cellSizeAndPositionManager:==:_ ref . cellSizeAndPositionManager ;
var objectOrFunction = _ _ dependency4 _ _ . objectOrFunction ;:==:var isFunction:==:_ _ dependency4 _ _ . isFunction ;
var express = require ( ' express ' ) ;:==:var compression:==:require ( ' compression ' ) ;
var hour = parseInt ( cal . find ( ' . hourselect ' ) . val ( ) , 10 ) ;:==:var minute:==:parseInt ( cal . find ( ' . minuteselect ' ) . val ( ) , 10 ) ;
var doc = ( document . documentElement |  |  ) ;:==:var h:==:window . innerHeight  |  |  doc . clientHeight  |  |  doc . scrollHeight  |  |  0 ;
var assert   = require ( ' chai ' ) . assert ;:==:var connect:==:require ( ' connect ' ) ;
var EXPORT_SPECIFIER_SET = ' EXPORT_SPECIFIER_SET ' ;:==:var EXPORT_STAR:==:' EXPORT_STAR ' ;
var exec = require ( ' child_process ' ) . exec ;:==:var execSync:==:require ( ' child_process ' ) . execSync ;
var scene = this . scene ;:==:var audio:==:document . createElement ( ' audio ' ) ;
var assert   = require ( ' assert ' ) ;:==:var Buffer:==:require ( ' safe - buffer ' ) . Buffer ;
var fri = $ ( ' . fc - day - header . fc - fri ' ) [ 0 ] ;:==:var we d:==:$ ( ' . fc - day - header . fc - wed ' ) [ 0 ] ;
var type = feature . get ( ' type ' ) ;:==:var scalerank:==:feature . get ( ' scalerank ' ) ;
var length = cylinderGeometry . _ length ;:==:var topRadius:==:cylinderGeometry . _ topRadius ;
var dependencies = splitArgs ( deps ) . dependencies ;:==:var constraints:==:splitArgs ( deps ) . constraints ;
var crypto = require ( ' crypto ' ) ;:==:var uuid:==:require ( ' hap - nodejs ' ) . uuid ;
var should = require ( ' should ' ) ;:==:var p:==:require ( ' path ' ) ;
var jnAcc = con . jnAcc ;:==:var jtAcc:==:con . jtAcc ;
var visitedMarker = this . _ nodeFlags . visitedMarker ;:==:var visitedMarkerMask:==:this . _ nodeFlags . visitedMarkerMask ;
var faces = this . faces ;:==:var vertices:==:this . vertices ;
var Node = math . expression . node . Node ;:==:var constantNode:==:math . expression . node . constantNode ;
var context = event . context ;:==:var pixelRatio:==:event . frameState . pixelRatio ;
var suspension_stack = repl . sk_debugger . get_suspension_stack ( ) ;:==:var active_suspension:==:repl . sk_debugger . get_active_suspension ( ) ;
var del = require ( ' del ' ) ;:==:var derequire:==:require ( ' gulp - derequire ' ) ;
var commands = imports . commands ;:==:var settings:==:imports . settings ;
var tab = tabs . focussedTab ;:==:var editor:==:tab & & tab . editor ;
var condition = this . transformAny ( tree . condition ) ;:==:var body:==:this . transformToBlockOrStatement ( tree . body ) ;
var keys = require ( ' object ' ) . keys ;:==:var len:==:require ( ' object ' ) . length ;
var program = obj . program  |  |  '' ;:==:var satellite:==:obj . satellite ;
var obj = getobj ( ) ;:==:var length:==:arguments . length ;
var isStream = corePrimitives . isStream ;:==:var pdfFunction:==:coreFunction . pdfFunction ;
var dynCall_iiiiiiiiii = Module [ ' dynCall_iiiiiiiiii ' ] = asm [ ' dynCall_iiiiiiiiii ' ] ;:==:var dynCall_viii:==:Module [ ' dynCall_viii ' ]    asm [ ' dynCall_viii ' ] ;
var editorState = require ( ' editorState ' ) ;:==:var getEntityKeyForSelection:==:require ( ' getEntityKeyForSelection ' ) ;
var allowAllCaps = configuration . allowAllCaps  |  |  false ;:==:var ignore:==:configuration . ignore  |  |  [ ] ;
var TRY_ENV = utils . getEnv ( ' try_env ' ) ;:==:var test_files:==:utils . getEnv ( ' test_files ' ) ;
var path = require ( ' path ' ) ;:==:var codeFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' codeFieldTestObject ' ) ) ;
var installer = imports . installer ;:==:var commands:==:imports . commands ;
var _ im_reset_search = Module [ ' _ im_reset_search ' ] = asm [ ' _ im_reset_search ' ] ;:==:var _ im_flush_cache:==:Module [ ' _ im_flush_cache ' ]    asm [ ' _ im_flush_cache ' ] ;
var dataType = $ ( this ) . attr ( ' dataType ' ) ;:==:var dataLink:==:$ ( this ) . attr ( ' dataLink ' ) ;
var alice = name : ' alice ' ;:==:var bob:==:name : ' bob ' ;
var postCategory = ctx . model ( ' postCategory ' ) ;:==:var category:==:ctx . model ( ' category ' ) ;
var bind = zrUtil . bind ;:==:var group:==:graphic . group ;
var options = this . options ;:==:var selected:==:$ ( this . el ) . data ( ' selected ' ) ;
var proc = imports . proc ;:==:var Plugin:==:imports . Plugin ;
var options = this . options ;:==:var drift:==:options . drift ;
var domException = api . domException ;:==:var domPosition:==:dom . domPosition ;
var scale = this . view . scale ;:==:var tr:==:this . view . translate ;
var _ rand = Module [ ' _ rand ' ] = asm [ ' _ rand ' ] ;:==:var _ bitshift64Shl:==:module [ ' _ bitshift64Shl ' ]    asm [ ' _ bitshift64Shl ' ] ;
var key = keys [ i ] ;:==:var r:==:result [ key ] ;
var unserialize = require ( ' unserialize ' ) ;:==:var each:==:require ( ' each ' ) ;
var async   = require ( ' async ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' pm2 : cli ' ) ;
var sets = metrics . sets ;:==:var counter_rates:==:metrics . counter_rates ;
var exaggeration = parameters . exaggeration ;:==:var minimumHeight:==:parameters . minimumHeight * exaggeration ;
var period = state . period ;:==:var subscriber:==:state . subscriber ;
var indicConfig = plan . indicConfig ;:==:var features:==:font . _ layoutEngine . engine . gsubProcessor . features ;
var c2 = c1 . comments . create ( title : ' c2 ' ) ;:==:var c3:==:c2 . comments . create ( title : ' c3 ' ) ;
var pathname = decodeuriComponent ( document . location . pathname ) ;:==:var p:==:pathname . indexOf ( ' ? ' ) ;
var c = p . cos ( angle ) ;:==:var s:==:p . sin ( angle ) ;
var viewStyle = [ styles . view , this . state . viewStyle ] ;:==:var textLayout:==:this . state . textLayout  |  |  width : ' ? ' , height : ' ? ' ;
var isSafeProperty = _ _ webpack_require _ _ ( 17 ) . isSafeProperty ;:==:var hasOwnProperty:==:_ _ webpack_require _ _ ( 5 ) . hasOwnProperty ;
var update_title = options . update_title  |  |  typeof options . update_title = = = ' undefined ' ;:==:var update_active:==:options . update_active  |  |  typeof options . update_active      ' undefined ' ;
var debug = require ( ' debug ' ) ( ' calypso : me : form - base ' ) ;:==:var notices:==:require ( ' notices ' ) ;
var hsl = ntc . hsl ( color ) ;:==:var h:==:hsl [ 0 ] , s    hsl [ 1 ] , l    hsl [ 2 ] ;
var tokenType = traceur . syntax . tokenType ;:==:var expandMemberExpression:==:traceur . codegeneration . expandMemberExpression ;
var i d = sub1 . i d ;:==:var a:==:new mongooseDocumentArray ( [ sub1 ] ) ;
var supportConstantFonts = exports . supportConstantFonts = ' arial | century | comic | courier | garamond | georgia | helvetica | impact | lucida | symbol | system | tahoma | times | trebuchet | utopia | verdana | webdings | sans - serif | serif | monospace ' ;:==:var numRe:==:exports . numRe    ' \\- ? ( ? : ( ? : [ 0 - 9 ] + )  |  ( ? : [ 0 - 9 ] * \\ . [ 0 - 9 ] + ) ) ' ;
var y = wc . y ;:==:var z:==:wc . z ;
var key = keys [ i ] ;:==:var param:==:params [ key ] ;
var pitch = camera . pitch ;:==:var positionCartographic:==:camera . positionCartographic ;
var inj = this . injectorStrategy ;:==:var p:==:inj . protoStrategy ;
var workspace = Blockly . Workspace . getById ( this . workspaceId ) ;:==:var block:==:workspace . getBlockById ( this . blockId ) ;
var cellRangeRenderer = props . cellRangeRenderer ;:==:var cellStyle:==:props . cellStyle ;
var title = this . _ titleForFile ( uiSourceCode ) ;:==:var tooltip:==:this . _ tooltipForFile ( uiSourceCode ) ;
var select = selects [ selectIdx ] ;:==:var aggregateSources:==:select & & select . aggregateSources ;
var el = this . el ;:==:var material:==:el . getObject3d ( ' mesh ' ) . material ;
var offsetY = parseInt ( dom . offsety . value , 10 ) ;:==:var weight:==:dom . weight . value ;
var ellipsoid = corridorGeometry . _ ellipsoid ;:==:var minHeight:==:minHeightFunc ( granularity , ellipsoid ) ;
var body = client . findElement ( ' body ' ) ;:==:var child:==:client . findElement ( ' . child ' ) ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var cssmin:==:require ( ' cssmin ' ) ;
var resolution = component . resolutions [ r ] ;:==:var numprecincts:==:resolution . precinctParameters . numprecincts ;
var updatable = options . updatable ;:==:var sideOrientation:==:meshBuilder . updateSideOrientation ( options . sideOrientation , scene ) ;
var d = a . scaled_width ;:==:var e:==:a . scaled_height ;
var stdout = process . stdout . write . getCall ( 0 ) ? process . stdout . write . getCall ( 0 ) . args [ 0 ] : '' ;:==:var stderr:==:process . stderr . write . getCall ( 0 ) ? process . stderr . write . getCall ( 0 ) . args [ 0 ] : '' ;
var precision = option . precision ;:==:var dataBound:==:this . dataBound ;
var sparseMatrix = math . type . sparseMatrix ;:==:var denseMatrix:==:math . type . denseMatrix ;
var timePosition = t . timePosition ;:==:var getIsCellAllDay:==:t . getIsCellAllDay ;
var Evaluator = imports . Evaluator ;:==:var ui:==:imports . ui ;
var keyValue = keyValuePairs [ i ] ;:==:var split:==:keyValue . split ( ' ' ) ;
var timeslider = imports . timeslider ;:==:var cursorLayer:==:imports . cursorLayer ;
var util = require ( ' gulp - util ' ) ;:==:var clean:==:require ( ' gulp - clean ' ) ;
var createSpreadExpression = parseTreeFactory . createSpreadExpression ;:==:var createVariableStatement:==:parseTreeFactory . createVariableStatement ;
var newParent = this . getNodeData ( change . newParent ) ;:==:var parent:==:this . getNodeData ( node . parent ) ;
var link = angular . element ( links [ i ] ) ;:==:var href:==:link . attr ( ' href ' ) ;
var sIcon = parameters . _ getThemeImage ( ' _ sap_ui_ux3_feed_toolsiconurl ' ) ;:==:var sIconHover:==:parameters . _ getThemeImage ( ' _ sap_ui_ux3_feed_toolsiconhoverurl ' ) ;
var colorPropType = require ( ' colorPropType ' ) ;:==:var react:==:require ( ' react ' ) ;
var release = require ( ' gulp - github - release ' ) ;:==:var sequence:==:require ( ' run - sequence ' ) ;
var splitbox = new ui [ vertically ? ' vsplitbox ' : ' hsplitbox ' ] ( opt ) ;:==:var parent:==:split . parentNode ;
var column = columns_1 [ _ i ] ;:==:var roles:==:column . source . roles ;
var promise = this . promise ;:==:var scheduler:==:this . scheduler ;
var annotationType = sharedUtil . annotationType ;:==:var ops:==:sharedUtil . ops ;
var ACTION_CHANNEL = ' ACTION_CHANNEL ' ;:==:var CANCELLED:==:' CANCELLED ' ;
var left = getPropertyAsFloat ( style , ' border - left - width ' ) ;:==:var right:==:getPropertyAsFloat ( style , ' border - right - width ' ) ;
var destPath = ref . destPath ;:==:var filename:==:ref . filename ;
var win = window ;:==:var doc:==:win . document ;
var TWILIO_ACCOUNT_SID = process . env [ ' TWILIO_ACCOUNT_SID ' ] ;:==:var TWILIO_AUTH_TOKEN:==:process . env [ ' TWILIO_AUTH_TOKEN ' ] ;
var LOG2E = stdlib . Math . LOG2E ;:==:var LOG10E:==:stdlib . Math . LOG10E ;
var nodeNativeType = this . _ nodeNativeType ;:==:var dominatedNodes:==:this . _ dominatedNodes ;
var latlng = list [ idFolders ] [ ' bkmrk ' ] [ idBkmrks ] . latlng . split ( ' , ' ) ;:==:var guid:==:list [ idFolders ] [ ' bkmrk ' ] [ idBkmrks ] . guid ;
var dynCall_viiiiiiiiiii = Module [ ' dynCall_viiiiiiiiiii ' ] = asm [ ' dynCall_viiiiiiiiiii ' ] ;:==:var dynCall_iiii:==:Module [ ' dynCall_iiii ' ]    asm [ ' dynCall_iiii ' ] ;
var height = node . getData ( ' height ' ) ;:==:var border:==:node . getData ( ' border ' ) ;
var EXTRA = 6 ;:==:var NAME:==:7 ;
var limit = Number ( req . query . limit )  |  |  config . list_topic_count ;:==:var mdrender:==:req . query . mdrender      ' false ' ? false : true ;
var dstArea = gridpanellayoutengine_1 . dstArea ;:==:var dstAreaPos:==:gridpanellayoutengine_1 . dstAreaPos ;
var options = this . options ;:==:var stiffness:==:options . stiffness ;
var needInfo_start = $ ( ' . needInfo_start ' ) ;:==:var needInfo_end:==:$ ( ' . needInfo_end ' ) ;
var s = memento & & memento . substring ( 1 ) ;:==:var t:==:s ? s . capitalize ( ) : ' All ' ;
var rows = api . rows ( target ) ;:==:var settings:==:rows . settings ( ) [ 0 ] ;
var http   = require ( ' http ' ) ;:==:var express:==:require ( ' express ' ) ;
var row = this . selection . getCursor ( ) . row ;:==:var column:==:this . selection . getCursor ( ) . column ;
var label = field . label ( )  |  |  field . name ( ) ;:==:var type:==:field . type ( ) ;
var force = _ ref10$force = = = undefined ? false : _ ref10$force ;:==:var value:==:_ ref10 . value ;
var hour12 = hour ? getOption ( options , ' hour12 ' , ' boolean ' , undefined , undefined ) : undefined ;:==:var formatMatcher:==:getOption ( options , ' formatMatcher ' , ' string ' , [ ' basic ' , ' best fit ' ] , ' best fit ' ) ;
var Keywords = traceur . syntax . Keywords ;:==:var predefinedName:==:traceur . syntax . predefinedName ;
var settings = imports . settings ;:==:var nw:==:nativeRequire ( ' nw . gui ' ) ;
var timeout = this . _ timeout ;:==:var data:==:this . _ formData  |  |  this . _ data ;
var Surface = reactCanvas . surface ;:==:var group:==:reactCanvas . group ;
var through2 = require ( ' through2 ' ) ;:==:var series:==:require ( ' stream - series ' ) ;
var needInfo_end = $ ( ' . needInfo_end ' ) ;:==:var needInfo_text:==:$ ( ' . needInfo_text ' ) ;
var rowOverscanStopIndex = _ ref6 . rowOverscanStopIndex ;:==:var rowStartIndex:==:_ ref6 . rowStartIndex ;
var orange700 = exports . orange700 = ' # f57c00 ' ;:==:var orange800:==:exports . orange800    ' # ef6c00 ' ;
var camera = scene . camera ;:==:var start:==:camera . getPickRay ( movement . startPosition , translate2dStart ) . origin ;
var debug = utils . debug ( ' core : a - entity : debug ' ) ;:==:var warn:==:utils . debug ( ' core : a - entity : warn ' ) ;
var list = this . _ list ;:==:var length:==:list . length ;
var bodyA = j . m_bodyA ;:==:var bodyB:==:j . m_bodyB ;
var voicemail = group . voicemail ;:==:var status:==:group . status  |  |  '' ;
var preferencePanel = imports . preferencePanel ;:==:var ui:==:imports . ui ;
var TEMPLATE_LITERAL_EXPRESSION = ' TEMPLATE_LITERAL_EXPRESSION ' ;:==:var TEMPLATE_LITERAL_PORTION:==:' TEMPLATE_LITERAL_PORTION ' ;
var setup = setupPutTests ( ' file ' , mockTask ) ;:==:var ref:==:setup . ref ;
var readlink = require ( ' graceful - readlink ' ) . readlinkSync ;:==:var path:==:require ( ' path ' ) ;
var Post = hexo . model ( ' Post ' ) ;:==:var postTag:==:hexo . model ( ' postTag ' ) ;
var body = this . transformAny ( tree . body ) ;:==:var condition:==:this . transformAny ( tree . condition ) ;
var alias = require ( ' alias ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var handler = _ bindings$event$i . handler ;:==:var ctx:==:_ bindings$event$i . ctx ;
var href = link . href ;:==:var extensions:==:link . extensions ;
var endsWith = _ _ webpack_require _ _ ( 11 ) . endsWith ;:==:var clone:==:_ _ webpack_require _ _ ( 5 ) . clone ;
var css = $ . extend ( , $ . blockUI . defaults . css , opts . css  |  |  ) ;:==:var themedCSS:==:$ . extend ( , $ . blockUI . defaults . themedCSS , opts . themedCSS  |  |  ) ;
var invalidpdfException = sharedUtil . invalidpdfException ;:==:var messageHandler:==:sharedUtil . messageHandler ;
var startSpan = dh . getElement ( startSpanId ) ;:==:var endSpan:==:dh . getElement ( endSpanId ) ;
var axe2 = obj . axe2  |  |  [ 1 , 0 , 0 ] ;:==:var pos1:==:obj . pos1  |  |  [ 0 , 0 , 0 ] ;
var bottom = parsePercent ( positionInfo . bottom , containerHeight ) ;:==:var width:==:parsePercent ( positionInfo . width , containerWidth ) ;
var identifierExpression = traceur . syntax . trees . identifierExpression ;:==:var bindingIdentifier:==:traceur . syntax . trees . bindingIdentifier ;
var frame = this . props . frame ;:==:var style:==:this . props . style ;
var allowMime = getMimeRegex ( this . settings . allowMime ) ;:==:var denyMime:==:getMimeRegex ( this . settings . denyMime ) ;
var dataViewMatrixUtils = powerbi . data . dataViewMatrixUtils ;:==:var sqExprBuilder:==:powerbi . data . sqExprBuilder ;
var from = iterator . from ;:==:var to:==:iterator . to ;
var channel = root . channel ;:==:var userid:==:root . userid  |  |  getToken ( ) ;
var use = this . _ use ;:==:var location:==:this . _ location ;
var attrs = current . attrs ( ) ;:==:var classList:==:current . classList ( ) ;
var x = Math . max ( frame . x , otherFrame . x ) ;:==:var width:==:math . min ( frame . x + frame . width , otherFrame . x + otherFrame . width ) ;
var uy = this . _ uy ;:==:var len:==:this . _ len ;
var left = _ left  |  |  function ( x ) return x ;:==:var right:==:_ right  |  |  function ( x ) return x ;
var _ kmq = _ kmq  |  |  [ ] ;:==:var _ kmk:==:_ kmk  |  |  ' d945f04ff5e68057c85f5323b46f185efb3826b3 ' ;
var n = doc . nums . shift ( ) ;:==:var s:==:doc . strs . shift ( ) ;
var tmp = require ( ' tmp ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' ssh ' ) ;
var height = this . gaugeVisualProperties . height ;:==:var width:==:this . gaugeVisualProperties . width ;
var hand = game . player . hand ;:==:var steps:==:game . player . steps ;
var data = this . data ;:==:var len:==:data . length ;
var Page = Facade . Page ;:==:var Track:==:Facade . Track ;
var monthDay = app . monthDay ;:==:var date:==:monthDay . date ;
var groupSize = groupSizes [ base ] ;:==:var groupBase:==:groupBases [ base ] ;
var state = states [ stateIdx ] ;:==:var object:==:objects [ state . objectIdRef ] ;
var backgroundTaskRegistration = background . backgroundTaskRegistration ;:==:var backgroundAccessStatus:==:background . backgroundAccessStatus ;
var debug = require ( ' debug ' ) ( ' appserver : child ' ) ;:==:var http:==:require ( ' http ' ) ;
var enterToClass = data . enterToClass ;:==:var enterActiveClass:==:data . enterActiveClass ;
var createFinally = parseTreeFactory . createFinally ;:==:var createForInStatement:==:parseTreeFactory . createForInStatement ;
var Plugin = imports . Plugin ;:==:var c9:==:imports . c9 ;
var buffer = context . buffer ;:==:var subscription:==:context . subscription ;
var gridVertexShader = loadShader ( gl , gridVertexShaderProg , gl . vertex_shader ) ;:==:var gridFragmentShader:==:loadShader ( gl , gridFragmentShaderProg , gl . fragment_shader ) ;
var propTypes = _ require . propTypes ;:==:var children:==:_ require . children ;
var blueGrey500 = exports . blueGrey500 = ' # 607d8b ' ;:==:var blueGrey600:==:exports . blueGrey600    ' # 546e7a ' ;
var mainGroup = this . _ mainGroup ;:==:var labelGroup:==:this . _ labelGroup ;
var path   = require ( ' path ' ) ;:==:var connect:==:require ( ' connect ' ) ;
var panels = imports . panels ;:==:var util:==:imports . util ;
var is = require ( ' is ' ) ;:==:var load:==:require ( ' load - script ' ) ;
var createArgumentList = parseTreeFactory . createArgumentList ;:==:var createAssignmentExpression:==:parseTreeFactory . createAssignmentExpression ;
var good = getRangeValue ( categoricalValues . good , settings . values . goodPercent ) ;:==:var veryGood:==:getRangeValue ( categoricalValues . veryGood , settings . values . veryGoodPercent ) ;
var oLang = oSettings . oLanguage . oPaginate ;:==:var oClasses:==:oSettings . oClasses ;
var measureNode = this . $ measureNode = dom . createElement ( ' div ' ) ;:==:var style:==:measureNode . style ;
var path = require ( ' path ' ) ;:==:var specReporter:==:require ( ' jasmine - spec - reporter ' ) . specReporter ;
var delta = opt_delta  |  |  0 ;:==:var order:==:opt_order  |  |  Blockly . PHP . ORDER_NONE ;
var ifClause = this . transformAny ( tree . ifClause ) ;:==:var elseClause:==:this . transformAny ( tree . elseClause ) ;
var path = require ( ' path ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var Bool = new primitiveType ( ' bool ' , 1 , ' i ' ) ;:==:var i8:==:new primitiveType ( ' i8 ' , 1 , ' i ' , -128 , 127 ) ;
var labelColor = powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . labelColor , visuals . legendData . defaultLegendLabelFillColor ) ;:==:var fontSize:==:powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . fontSize , this . layerLegendData & & this . layerLegendData . fontSize ? this . layerLegendData . fontSize : visuals . svgLegend . defaultFontSizeInPt ) ;
var json = this . json ;:==:var extensions:==:this . extensions ;
var conf = App . conf ;:==:var tpl:==:conf . tpl ;
var v = particle . velocity ;:==:var p:==:particle . position ;
var dataLabelText = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . dataLabelText , visuals . labelText . value ) ;:==:var dataLabelHorizontalPosition:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . dataLabelHorizontalPosition , visuals . referenceLineDataLabelHorizontalPosition . left ) ;
var output = candidate . output ;:==:var multiplier:==:candidate . multiplier ;
var Plugin = imports . Plugin ;:==:var Tree:==:imports . Tree ;
var placeholder = element [ 0 ] . placeholder , noevent = ;:==:var type:==:lowercase ( element [ 0 ] . type ) ;
var width = root . width ;:==:var height:==:root . height ;
var observable = ko . observable ( ) ;:==:var notifySpy:==:jasmine . createSpy ( ' notifySpy ' ) ;
var vertexFormat = defaultValue ( options . vertexFormat , vertexFormat . default ) ;:==:var slices:==:defaultValue ( options . slices , 128 ) ;
var isInteger = number . isInteger ;:==:var isString:==:string . isString ;
var g = d3 . select ( ' g . ' + className ) ;:==:var path:==:g . select ( ' path ' ) ;
var noSleep = obj . noSleep  |  |  false ;:==:var p:==:obj . pos  |  |  [ 0,0,0 ] ;
var item = levelData . items [ i ] ;:==:var div:==:document . createElement ( ' div ' ) ;
var debug = require ( ' debug ' ) ( ' jsbin : upgrade ' ) ;:==:var request:==:require ( ' request ' ) ;
var moduleDeclaration = traceur . syntax . trees . moduleDeclaration ;:==:var moduleDefinition:==:traceur . syntax . trees . moduleDefinition ;
var r = shape . r0 ;:==:var d:==:shape . d ;
var service = req . service ;:==:var operation:==:req . operation ;
var currency = getOption ( options , ' currency ' , ' string ' , undefined , undefined ) ;:==:var currencyDisplay:==:getOption ( options , ' currencyDisplay ' , ' string ' , [ ' code ' , ' symbol ' , ' name ' ] , ' symbol ' ) ;
var path = d3 . select ( ' g . hovertext ' ) . select ( ' path ' ) ;:==:var text:==:d3 . select ( ' g . hovertext ' ) . select ( ' text . nums ' ) ;
var target = event . target ;:==:var checked:==:target . checked ;
var s = allChars ( ) ;:==:var re:==:new regExp ( ' ^ ' + goog . string . regExpEscape ( s ) + ' $ ' ) ;
var inputValueTracking = require ( ' inputValueTracking ' ) ;:==:var isCustomComponent:==:require ( ' isCustomComponent ' ) ;
var Unit = math . type . Unit ;:==:var mean:==:math . mean ;
var realRoot = options . realRoot ;:==:var alwaysScope:==:options . alwaysScope ;
var resolution = renderSession . resolution ;:==:var tx:==:( transform . tx * renderSession . resolution ) + renderSession . shakex ;
var MODULE_DECLARATION = parseTreeType . module_declaration ;:==:var module_definition:==:parseTreeType . module_definition ;
var Rect = powerbi . visuals . shapes . Rect ;:==:var newDataLabelUtils:==:powerbi . visuals . newDataLabelUtils ;
var p = data . position ;:==:var r:==:data . rotation ;
var surface = context [ ' surface ' ] ;:==:var curve:==:context [ ' curve ' ] ;
var a = this . form . reader . read ( b ) ;:==:var c:==:a . records & & a . records [ 0 ] ? a . records [ 0 ] . data : null ;
var container = document . getElementById ( ' container ' ) ;:==:var controlPanel:==:document . getElementById ( ' controlPanel ' ) ;
var ep = _ jsPlumb . addEndpoint ( d18 ) , ep2 = _ jsPlumb . addEndpoint ( d18 ) ;:==:var c:==:_ jsPlumb . connect ( source : ' d16 ' , target : d17 ) ;
var l = this . left ;:==:var n:==:this . near ;
var shareService = _ appJsServicesShareService [ ' default ' ] ;:==:var shareSettingsView:==:_ appJsViewsShareSettingsView [ ' default ' ] ;
var nodeId = nodeIds [ i ] ;:==:var node:==:this . _ nodes [ nodeId ] ;
var command = commands [ i ] ;:==:var boundingVolume:==:command . boundingVolume ;
var Encodings = nativeFileSystem . encodings ;:==:var _ fsEncodings:==:nativeFileSystem . _ fsEncodings ;
var path = require ( ' path ' ) ;:==:var panino:==:require ( ' panino ' ) ;
var delayLeave = data . delayLeave ;:==:var duration:==:data . duration ;
var callFrame = callFrames [ i ] ;:==:var script:==:target . debuggerModel . scriptForId ( callFrame . location . scriptId ) ;
var rotation = frameState . viewState . rotation ;:==:var skippedFeatureUids:==:frameState . skippedFeatureUids ;
var bignumber = math . bignumber ;:==:var subtract:==:math . subtract ;
var eslint = require ( ' gulp - eslint ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var texture = _ batchedInfo . texture ;:==:var shader:==:_ batchedInfo . shader ;
var deepPurple50 = exports . deepPurple50 = ' # ede7f6 ' ;:==:var deepPurple100:==:exports . deepPurple100    ' # d1c4e9 ' ;
var light = _ lightShadows [ i ] ;:==:var shadow:==:light . shadow ;
var _ memmove = Module [ ' _ memmove ' ] = asm [ ' _ memmove ' ] ;:==:var _ i64Subtract:==:module [ ' _ i64Subtract ' ]    asm [ ' _ i64Subtract ' ] ;
var labelKey = _ ref3 . labelKey ;:==:var valueKey:==:_ ref3 . valueKey ;
var h = hsva [ 0 ] ;:==:var s:==:hsva [ 1 ] ;
var username = $ ( ' # weui - prompt - username ' ) . val ( ) ;:==:var password:==:$ ( ' # weui - prompt - password ' ) . val ( ) ;
var env = plug . util . env ;:==:var log:==:plug . util . log ;
var tmp = new THREE . Vector3 ( ) , tmp2 = new THREE . Vector3 ( ) ;:==:var n:==:new THREE . Vector3 ( ) , n2    new THREE . Vector3 ( ) ;
var list = view . owner . list ;:==:var length:==:list . length ;
var createAssignmentStatement = parseTreeFactory . createAssignmentStatement ;:==:var createAssignStateStatement:==:parseTreeFactory . createAssignStateStatement ;
var a = aChildren [ aIndex ] ;:==:var b:==:bChildren [ bIndex ] ;
var formatDate = calendar . formatDate ;:==:var calculateWeekNumber:==:calendar . calculateWeekNumber ;
var times = this . times ;:==:var length:==:times . length ;
var xScale3 = chart . scales . xScale3 ;:==:var xScale4:==:chart . scales . xScale4 ;
var dx3 = mxUtils . getValue ( this . style , ' dx3 ' , ' 0 ' ) ;:==:var dy3:==:mxUtils . getValue ( this . style , ' dy3 ' , ' 0 ' ) ;
var path = require ( ' path ' ) ;:==:var serialize:==:require ( ' serialize - javascript ' ) ;
var widget = this . widget ;:==:var options:==:widget . options ;
var p = a . opaque ;:==:var b:==:a . mb_w ;
var minimumSignificantDigits = options . minimumSignificantDigits ;:==:var maximumSignificantDigits:==:options . maximumSignificantDigits ;
var url = require ( ' url ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' socket . io : socket ' ) ;
var logPrefix = bs . options . get ( ' logPrefix ' ) ;:==:var logLevel:==:bs . options . get ( ' logLevel ' ) ;
var d1 = _ addDiv ( ' d1 ' ) ;:==:var d2:==:_ addDiv ( ' d2 ' , d1 ) ;
var margin = this . _ root . _ margin ;:==:var is:==:this . _ initialSize ;
var question = imports [ ' dialog . question ' ] ;:==:var error:==:imports [ ' dialog . error ' ] ;
var minDistNormal = intersectconvex_mindistnormal ;:==:var normal:==:intersectconvex_normal ;
var tagName = el . tagName  |  |  ' ( no tag ) ' ;:==:var s:==:' < ' + tagName . toLowerCase ( ) ;
var unwrap = scope . unwrap ;:==:var wrap:==:scope . wrap ;
var camera = frameState . camera ;:==:var positionCartographic:==:camera . positionCartographic ;
var capt = this . element . children ( ' . window - caption ' ) ;:==:var icon:==:capt . find ( ' . window - caption - icon ' ) ;
var solver = self . _ solver ;:==:var ignoreUnknownVariables:==:self . _ ignoreUnknownVariables ;
var width = Base . window . width * 0 . 75  |  0 ;:==:var nyanCatWidth:==:this . nyanCatWidth    11 ;
var def = $ ( ' def-2 ' ) ;:==:var jkl:==:$ ( ' jkl-2 ' ) ;
var type = options & & options . type  |  |  this . _ options . type ;:==:var filter:==:options & & options . filter ;
var consequent = self . consequent ;:==:var alternative:==:self . alternative ;
var decoder = this . decoder ;:==:var width:==:this . width , height    this . height ;
var debug = require ( ' debug ' ) ( ' connect : dispatcher ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var events = require ( ' events ' ) ;:==:var http:==:require ( ' http ' ) ;
var duration = durationInput . value ;:==:var gap:==:gapInput . value ;
var fs = require ( ' fs ' ) ;:==:var keys:==:Object . keys ;
var entity = component . entity ;:==:var data:==:component . data ;
var container = caretPosition . container ( ) ;:==:var offset:==:caretPosition . offset ( ) ;
var options = this . get ( ' options ' ) ;:==:var selected:==:this . selected ( ) ;
var path = api . path ;:==:var operations:==:api . operations ;
var constantinople = require ( ' constantinople ' ) ;:==:var walk:==:require ( ' pug - walk ' ) ;
var w = Math . floor ( this . width * this . pixelRatio ) ;:==:var h:==:math . floor ( this . height * this . pixelRatio ) ;
var extrudedHeight = params . extrudedHeight ;:==:var attributes:==:attr . attributes ;
var tokenType = traceur . syntax . tokenType ;:==:var is:==:traceur . syntax . predefinedName . is ;
var splitNumber = this . get ( ' splitNumber ' ) ;:==:var scale:==:this . get ( ' scale ' ) ;
var tab2 = new goog . ui . Tab ( ' tab2 ' ) ;:==:var tab3:==:new goog . ui . Tab ( ' tab3 ' ) ;
var conn = conns [ cardIndex ] ;:==:var iccId:==:conn . iccId ;
var options = $ . options ;:==:var subpages:==:options . subpages  |  |  [ ] ;
var w = m . wrapper ;:==:var f:==:w . f ;
var shadows = this . _ geometryUpdater . shadowsProperty . getValue ( time ) ;:==:var distanceDisplayCondition:==:this . _ geometryUpdater . distanceDisplayConditionProperty . getValue ( time ) ;
var forEach = array . prototype . forEach . call . bind ( array . prototype . forEach ) ;:==:var map:==:array . prototype . map . call . bind ( array . prototype . map ) ;
var path   = require ( ' path ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var onHeightChange = _ props . onHeightChange ;:==:var rows:==:_ props . rows ;
var parent = el . parents ( ' . input - row ' ) ;:==:var help:==:parent . children ( ' . help - text ' ) ;
var asyncStorage = require ( ' asyncStorage ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' dcf ' ) ;
var url = require ( ' url ' ) ;:==:var async:==:require ( ' async ' ) ;
var annotationFlag = sharedUtil . annotationFlag ;:==:var annotationType:==:sharedUtil . annotationType ;
var maskError = error_createclass ( ' maskError ' , , stack_slice ) ;:==:var maskWarn:==:error_createclass ( ' maskWarn ' , , stack_slice ) ;
var contained2 = document . getElementById ( ' contained2 ' ) ;:==:var not_container:==:document . getElementById ( ' not_container ' ) ;
var attributes = geometry . attributes ;:==:var index:==:attributes [ ' index ' ] ;
var clamp = require ( ' clamp ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var render = imports [ ' connect . render ' ] ;:==:var analytics:==:imports [ ' analytics ' ] ;
var color = colorHelper . getColorForMeasure ( objects , ' ' ) ;:==:var minSize:==:math . max ( 0 , math . min ( 9999 , powerbi . dataViewObjects . getValue ( objects , properties [ ' minSize ' ] , defaultSettings . minSize ) ) ) ;
var getBounds = _ tetherBase$Utils . getBounds ;:==:var updateClasses:==:_ tetherBase$Utils . updateClasses ;
var isChromeApp = platformInfo . isChromeApp ;:==:var isCordova:==:platformInfo . isCordova ;
var targets = this . morph . _ targets ;:==:var weights:==:this . _ weights ;
var w = this . width  |  |  ( canvas & & canvas . width )  |  |  1000 ;:==:var h:==:this . height  |  |  ( canvas & & canvas . height )  |  |  1000 ;
var bindShapeMatrix = node . bindShapeMatrix ;:==:var inverseBindMatrices:==:node . inverseBindMatrices ;
var jsonResultsAdapter = breeze . jsonResultsAdapter ;:==:var dataProperty:==:breeze . dataProperty ;
var labelKey = _ ref8 . labelKey ;:==:var option:==:_ ref8 . option ;
var store = new datastore ( data : items : arrayOfItems ) ;:==:var d:==:new doh . deferred ( ) ;
var anchorPointx = options [ ' anchorPointx ' ] ;:==:var anchorPointy:==:options [ ' anchorPointy ' ] ;
var imageContainer = ' cesium - credit - imageContainer ' ;:==:var textContainer:==:' cesium - credit - textContainer ' ;
var View = require ( ' View ' ) ;:==:var Platform:==:require ( ' Platform ' ) ;
var nodes = this . nodes ;:==:var edges:==:this . edges ;
var nthRoot = math . nthRoot ;:==:var big:==:math . bignumber ;
var objectMap = traceur . util . objectMap ;:==:var arrayMap:==:traceur . util . arrayMap ;
var Agent = smith . Agent ;:==:var Stream:==:require ( ' stream ' ) . Stream ;
var missspelling = ' missspelling ' ;:==:var iggnore:==:' iggnore ' ;
var parentFrame = parentFrameId ? this . _ frames [ parentFrameId ] : null ;:==:var frame:==:new webInspector . resourceTreeFrame ( this , parentFrame , frameId ) ;
var path = require ( ' path ' ) ;:==:var hbs:==:require ( ' express - hbs ' ) ;
var one = subject . client . findElement ( selectors . one ) ;:==:var two:==:subject . client . findElement ( selectors . two ) ;
var c = cities . ordered ( ) ;:==:var index:==:c . indexOf ( getCurrentCity ( ) ) ;
var fs = require ( ' fs ' ) ;:==:var through:==:require ( ' through ' ) ;
var c = cache [ trackId ] ;:==:var arr:==:c . arr  |  |  ( c . arr    [ ] ) ;
var path = require ( ' path ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var objectEnumerationBuilder = powerbi . visuals . objectEnumerationBuilder ;:==:var appendClearCatcher:==:powerbi . visuals . appendClearCatcher ;
var expectations = this . expectations & & this . expectations [ method ] ;:==:var length:==:expectations & & expectations . length  |  |  0 ;
var scripts = this . scripts ;:==:var stacks:==:this . stacks ;
var moment = require ( ' moment ' ) ;:==:var utils:==:require ( ' keystone - utils ' ) ;
var uvs = this . uvs ;:==:var colors:==:this . colors ;
var lastPaintRect = this . _ lastPaintRectByLayerId [ layerId ] ;:==:var layer:==:layerTree . layerById ( layerId ) ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var program:==:traceur . syntax . trees . program ;
var events = require ( ' events ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var reactMultiChild = require ( ' reactMultiChild ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var serviceName = data [ ' serviceName ' ] ;:==:var payload:==:data [ ' payload ' ] ;
var conn = options . connection ;:==:var readmeInfo:==:options . readmeInfo ;
var Size = goog . math . Size ;:==:var setContentBoxSize:==:goog . style . setContentBoxSize ;
var sourcemaps = require ( ' gulp - sourcemaps ' ) ;:==:var del:==:require ( ' del ' ) ;
var heading = ' markup . heading ' ;:==:var singleLineHeadingRe:==:this . singleLineHeadingRe ;
var xml2js = require ( ' xml2js ' ) ;:==:var rewire:==:require ( ' rewire ' ) ;
var keyCommandBackspaceToStartOfLine = require ( ' keyCommandBackspaceToStartOfLine ' ) ;:==:var keyCommandBackspaceWord:==:require ( ' keyCommandBackspaceWord ' ) ;
var yamljs = require ( ' yamljs ' ) ;:==:var vm:==:require ( ' vm ' ) ;
var col = this . colCoordCache . getHorizontalIndex ( leftOffset ) ;:==:var row:==:this . rowCoordCache . getVerticalIndex ( topOffset ) ;
var assert = require ( ' assert ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var maxCol = config . maxCol  |  |  80 ;:==:var minHelpCol:==:config . minHelpCol  |  |  20 ;
var Matrix = math . type . Matrix ;:==:var Unit:==:math . type . Unit ;
var fs = require ( ' fs ' ) ;:==:var selectxPath:==:require ( ' casper ' ) . selectxPath ;
var p = result . pathname  |  |  '' ;:==:var s:==:result . search  |  |  '' ;
var d1 = _ addDiv ( ' d1 ' ) , d2 = _ addDiv ( ' d2 ' ) , d3 = _ addDiv ( ' d3 ' ) ;:==:var conn:==:_ jsPlumb . connect ( source : d1 , target : d2 , overlays : [ ' arrow ' ] ) ;
var rotation = options . rotation ;:==:var center:==:options . center ;
var pink900 = exports . pink900 = ' # 880e4f ' ;:==:var pinkA100:==:exports . pinkA100    ' # ff80ab ' ;
var name = this . _ formatParameter ( params [ i ] . name + ' : ' , ' header - name ' , this . _ decodeRequestParameters ) ;:==:var value:==:this . _ formatParameter ( params [ i ] . value , ' header - value source - code ' , this . _ decodeRequestParameters ) ;
var get = Ember . get ;:==:var resolve:==:Ember . RSVP . resolve ;
var c9 = imports . c9 ;:==:var async:==:require ( ' async ' ) ;
var listContainer = require ( ' listContainer ' ) ;:==:var navigator:==:require ( ' navigator ' ) ;
var htmlMediaElement = scope . wrappers . htmlMediaElement ;:==:var registerWrapper:==:scope . registerWrapper ;
var c = rejectBuiltInSoon ( ' rejected - c ' , 10 ) ;:==:var d:==:createThrowingThenable ( ' rejected - d ' ) ;
var responderSyntheticEvent = require ( ' responderSyntheticEvent ' ) ;:==:var responderTouchHistoryStore:==:require ( ' responderTouchHistoryStore ' ) ;
var edgeToNodeOffset = this . _ edgeToNodeOffset ;:==:var edgeShortcutType:==:this . _ edgeShortcutType ;
var iframe = $ ( ' # iframe ' ) ;:==:var header:==:$ ( ' . header ' ) ;
var legacy = options . legacy ;:==:var protect:==:options . protect ;
var path = doc . $ _ _ fullPath ( this . path ) ;:==:var owner:==:doc . ownerDocument ? doc . ownerDocument ( ) : doc ;
var proc = imports . proc ;:==:var fs:==:imports . fs ;
var left = bounds . left  |  |  0 ;:==:var right:==:bounds . right  |  |  0 ;
var input = element . find ( ' input ' ) ;:==:var placeholder:==:element . find ( ' . placeholder ' ) ;
var type = data . params . type ;:==:var key:==:data . params . key ;
var center = touch . center ;:==:var offset:==:session . offsetDelta  |  |  ;
var generateRandomKey = require ( ' generateRandomKey ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var frameState = scene . _ frameState ;:==:var environmentState:==:scene . _ environmentState ;
var createParenExpression = parseTreeFactory . createParenExpression ;:==:var createPropertyNameAssignment:==:parseTreeFactory . createPropertyNameAssignment ;
var dataViewTransform = powerbi . data . dataViewTransform ;:==:var sqExprBuilder:==:powerbi . data . sqExprBuilder ;
var dynCall_iiiii = Module [ ' dynCall_iiiii ' ] = asm [ ' dynCall_iiiii ' ] ;:==:var dynCall_ii:==:Module [ ' dynCall_ii ' ]    asm [ ' dynCall_ii ' ] ;
var definition = descriptor . definition ;:==:var models:==:descriptor . models ;
var showMinLabel = axisModel . get ( ' axisLabel . showMinLabel ' ) ;:==:var showMaxLabel:==:axisModel . get ( ' axisLabel . showMaxLabel ' ) ;
var uglify   = require ( ' gulp - uglify ' ) ;:==:var sequence:==:require ( ' run - sequence ' ) ;
var FUNCTION_DECLARATION = parseTreeType . function_declaration ;:==:var identifier_expression:==:parseTreeType . identifier_expression ;
var icon = _ props . icon ;:==:var src:==:_ props . src ;
var isPopup = this . isPopup ;:==:var width:==:options . width ;
var contactCardOptions = contacts . contactCardOptions ;:==:var contactCardTabKind:==:contacts . contactCardTabKind ;
var winston = require ( ' winston ' ) ;:==:var async:==:require ( ' async ' ) ;
var form = field . closest ( ' form , . validationEngineContainer ' ) ;:==:var name:==:field . attr ( ' name ' ) ;
var oLang = oSettings . oLanguage ;:==:var iInitDisplayStart:==:oSettings . iInitDisplayStart ;
var style = el . style ;:==:var svgEl:==:el . _ _ svgEl ;
var transitionDuration = tooltipModel . get ( ' transitionDuration ' ) ;:==:var backgroundColor:==:tooltipModel . get ( ' backgroundColor ' ) ;
var role = opts . role  |  |  ' initiator ' ;:==:var direction:==:opts . direction  |  |  ' outgoing ' ;
var srsName = context [ ' srsName ' ] ;:==:var surface:==:context [ ' surface ' ] ;
var assert = require ( ' assert ' ) ;:==:var Parser:==:common . Parser ;
var times = sinon . timesInWords ;:==:var slice:==:array . prototype . slice ;
var graph = st . graph ;:==:var values:==:json . values ;
var Element = scope . wrappers . Element ;:==:var defineGetter:==:scope . defineGetter ;
var save = imports . save ;:==:var proc:==:imports . proc ;
var init = docSet . getByLongname ( ' person#initialize ' ) ;:==:var name:==:docSet . getByLongname ( ' person#name ' ) ;
var message = _ ref . message ;:==:var assert:==:_ ref . assert ;
var atLeast = options . atLeast ;:==:var atMost:==:options . atMost ;
var dynCall_vii = Module [ ' dynCall_vii ' ] = asm [ ' dynCall_vii ' ] ;:==:var dynCall_iiiiiii:==:Module [ ' dynCall_iiiiiii ' ]    asm [ ' dynCall_iiiiiii ' ] ;
var noResultsText = _ props2 . noResultsText ;:==:var searchPromptText:==:_ props2 . searchPromptText ;
var setAccessor = traceur . syntax . trees . setAccessor ;:==:var parseTreeTransformer:==:traceur . codegeneration . parseTreeTransformer ;
var del = require ( ' obj - case ' ) . del ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var target = ast . target . visit ( this ) ;:==:var args:==:this . _ visitAll ( ast . args ) ;
var fill = state . fillStyle ! = = undefined ;:==:var stroke:==:state . strokeStyle !   undefined ;
var transformA = input . transformA ;:==:var transformB:==:input . transformB ;
var name = this . transformAny ( tree . name ) ;:==:var parameterList:==:this . transformAny ( tree . parameterList ) ;
var offset3D = this . _ offset3D ;:==:var camera:==:scene . camera ;
var fixedRowsBottom = wot . getSetting ( ' fixedRowsBottom ' ) ;:==:var fixedColumnsLeft:==:wot . getSetting ( ' fixedColumnsLeft ' ) ;
var assert = require ( ' assert ' ) ;:==:var util:==:require ( ' util ' ) ;
var iceTransport = transceiver . iceTransport ;:==:var dtlsTransport:==:transceiver . dtlsTransport ;
var createMemberExpression = parseTreeFactory . createMemberExpression ;:==:var createVariableDeclaration:==:parseTreeFactory . createVariableDeclaration ;
var el = this . el ;:==:var savedPose:==:this . savedPose ;
var losslessResults = document . getElementById ( ' losslessResults ' ) ;:==:var losslessToggle:==:document . getElementById ( ' losslessToggle ' ) ;
var mode = o . mode ;:==:var buffer:==:o . buffer ;
var each = zrUtil . each ;:==:var curry:==:zrUtil . curry ;
var offset = file_ids [ file_id ] . offset ;:==:var buffer:==:file_ids [ file_id ] . buffer ;
var fs = require ( ' fs ' ) ;:==:var ini:==:require ( ' ini ' ) ;
var path = require ( ' path ' ) ;:==:var expect:==:require ( ' expect . js ' ) ;
var width = options . width  |  |  1 ;:==:var height:==:options . height  |  |  1 ;
var decimal = ( config . decimal = = = false ) ? ' ' : config . decimal  |  |  ' . ' ;:==:var negative:==:( config . negative      true ) ? true : false ;
var keyPrefix = bookKeeping . keyPrefix ;:==:var func:==:bookKeeping . func ;
var asin = Math . asin ;:==:var atan2:==:Math . atan2 ;
var input = that . input ;:==:var active:==:activeElement ( ) ;
var remote = electron . remote ;:==:var dialog:==:remote . dialog ;
var index = geometry . index ;:==:var attributes:==:geometry . attributes ;
var k = keys [ i ] ;:==:var initials:==:scores [ k ] . initials ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactdomContainerInfo:==:require ( ' reactdomContainerInfo ' ) ;
var tooltipBuilder = powerbi . visuals . tooltipBuilder ;:==:var animatorCommon:==:powerbi . visuals . animatorCommon ;
var finalhandler = require ( ' finalhandler ' ) ;:==:var http:==:require ( ' http ' ) ;
var fftSamples = this . fftSamples ;:==:var buffer:==:this . buffer    this . wavesurfer . backend . buffer ;
var _ strcat = Module [ ' _ strcat ' ] = asm [ ' _ strcat ' ] ;:==:var _ free:==:Module [ ' _ free ' ]    asm [ ' _ free ' ] ;
var store = pendingRequest . store ;:==:var type:==:pendingRequest . type ;
var never = verification . never ;:==:var times:==:verification . times ;
var Interpolation = require ( ' Interpolation ' ) ;:==:var Easing:==:require ( ' Easing ' ) ;
var Picker = require ( ' Picker ' ) ;:==:var View:==:require ( ' View ' ) ;
var name = plugin . name ;:==:var version:==:plugin . version ;
var style = el . style ;:==:var image:==:style . image ;
var defaults = require ( ' defaults ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var a = m . observable ( 0 ) ;:==:var b:==:m . observable ( 0 ) ;
var m = matrices [ 0 ] ;:==:var s:==:cs_sqr ( 0 , m , false ) ;
var nullthrows = require ( ' nullthrows ' ) ;:==:var setImmediate:==:require ( ' setImmediate ' ) ;
var slice = arr . slice ;:==:var concat:==:arr . concat ;
var m = math . matrix ( [ [ 1,2,3 ] , [ 4,5,6 ] ] ) ;:==:var t:==:transpose ( m ) ;
var f8Header = require ( ' f8Header ' ) ;:==:var statusBar:==:require ( ' statusBar ' ) ;
var events = monthDay . events ;:==:var event:==:events [ 0 ] ;
var formButton = docSet . getByLongname ( ' formButton ' ) [ 0 ] ;:==:var myClass:==:docSet . getByLongname ( ' myClass ' ) [ 0 ] ;
var el = this . el = document . createElement ( ' div ' ) ;:==:var el1:==:this . el1    document . createElement ( ' div ' ) ;
var doc = win . document ;:==:var style:==:doc . createElement ( ' style ' ) ;
var boundingBox = instance . get ( ' boundingBox ' ) ;:==:var contentBox:==:instance . get ( ' contentBox ' ) ;
var options = this . options ;:==:var props:==:this . props ;
var each = require ( ' each ' ) ;:==:var events:==:require ( ' analytics - events ' ) ;
var path = require ( ' path ' ) ;:==:var mkdirp:==:Promise . promisify ( require ( ' mkdirp ' ) ) ;
var scrollToCell = _ props2 . scrollToCell ;:==:var width:==:_ props2 . width ;
var assets = this . system . app . assets ;:==:var i d:==:isNan ( asset ) ? asset . i d : asset ;
var onlyStrict = onlyStrictPattern . test ( src ) ;:==:var noStrict:==:noStrictPattern . test ( src ) ;
var uniformsLib = three . uniformsLib ;:==:var shaderLib:==:three . shaderLib ;
var o3 = foo : foo3 , that3 : ' that3 ' ;:==:var o4:==:foo : foo4 , that4 : ' that4 ' ;
var finder = imports . finder ;:==:var util:==:imports . util ;
var diameterBottom = options . diameterBottom  |  |  options . diameter  |  |  1 ;:==:var tessellation:==:options . tessellation  |  |  24 ;
var dynCall_ii = Module [ ' dynCall_ii ' ] = asm [ ' dynCall_ii ' ] ;:==:var dynCall_iiiii:==:Module [ ' dynCall_iiiii ' ]    asm [ ' dynCall_iiiii ' ] ;
var fs = imports . fs ;:==:var auth:==:imports . auth ;
var dynamic = ref . dynamic ;:==:var styleResult:==:ref . styleResult ;
var left = offset . left - ( origin ? origin . left : 0 ) ;:==:var top:==:offset . top - ( origin ? origin . top : 0 ) ;
var arg = _ arg ;:==:var cmd:==:_ cmd ;
var Data = docSet . getByLongname ( ' mathlib . data ' ) [ 0 ] ;:==:var point:==:docSet . getByLongname ( ' mathlib . data#point ' ) [ 0 ] ;
var execSync = require ( ' child_process ' ) . execSync ;:==:var fs:==:require ( ' fs ' ) ;
var Menu = imports . Menu ;:==:var Datagrid:==:imports . Datagrid ;
var through2 = require ( ' through2 ' ) ;:==:var request:==:bbPromise . promisify ( require ( ' request ' ) ) ;
var y = radiusy * Math . sin ( phi ) ;:==:var z:==:radiusz * Math . cos ( phi ) * Math . cos ( theta ) ;
var after = parseInt ( afterEl . attr ( ' data - index ' ) , 10 )  |  |  0 ;:==:var tid:==:ajaxify . data . tid ;
var form = document . querySelector ( ' form ' ) ;:==:var embedAppId:==:document . querySelector ( ' # embedAppId ' ) ;
var precision = config . precision  |  |  2 ;:==:var multiplier:==:config . multiplier  |  |  100 ;
var CALL = ' CALL ' ;:==:var CPS:==:' CPS ' ;
var w = parseFloat ( s . width ) ;:==:var h:==:parseFloat ( s . height ) ;
var decimals = cfg . decimals  |  |  8 ;:==:var continuity:==:cfg . continuity  |  |  1 ;
var serialize = xhrOptions . serialize = isjsonp ? identity : xhrOptions . serialize  |  |  json . stringify ;:==:var deserialize:==:xhrOptions . deserialize    isjsonp ? identity : xhrOptions . deserialize  |  |  json . parse ;
var readonly = options . readonly ;:==:var dashboardUrl:==:options . dashboardUrl ;
var assert = require ( ' power - assert ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var dateToDayOffset = t . dateToDayOffset ;:==:var dayOffsetToCellOffset:==:t . dayOffsetToCellOffset ;
var colorPropType = require ( ' colorPropType ' ) ;:==:var pickerios:==:require ( ' pickerios ' ) ;
var parseuri = require ( ' parseuri ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' socket . io - client : url ' ) ;
var parameters = technique . parameters ;:==:var uniforms:==:technique . uniforms ;
var ux = app . ns ( ' ux ' ) ;:==:var extend:==:ux . Observable . extend ;
var proc = imports . proc ;:==:var bashBin:==:options . bashBin  |  |  ' bash ' ;
var code = options . code ;:==:var baseUrl:==:options . baseUrl ;
var min = this . min ;:==:var max:==:this . max ;
var account = this . options . account ;:==:var dataset:==:this . options . dataset ;
var element = info . element ;:==:var data:==:info . data ;
var start = options . start ;:==:var stop:==:options . stop ;
var libs = grunt . option ( ' libs ' ) ;:==:var specs:==:grunt . option ( ' specs ' ) ;
var OBJECT = C . OBJECT = 0x81 ;:==:var ARRAY:==:C . ARRAY    0x82 ;
var normalSymbolDraw = this . _ normalSymbolDraw ;:==:var group:==:this . group ;
var fs = require ( ' fs ' ) ;:==:var chevrotain:==:require ( ' chevrotain ' ) ;
var uiManager = require ( ' uiManager ' ) ;:==:var deepFreezeAndThrowOnMutationInDev:==:require ( ' deepFreezeAndThrowOnMutationInDev ' ) ;
var greenA200 = exports . greenA200 = ' # 69f0ae ' ;:==:var greenA400:==:exports . greenA400    ' # 00e676 ' ;
var notification = require ( ' notification ' ) ;:==:var responder:==:exports . responder    new Responder ( ) ;
var source = require ( ' vinyl - source - stream ' ) ;:==:var merge:==:require ( ' merge - stream ' ) ;
var element = _ angular . element ;:==:var isElement:==:_ angular . isElement ;
var info = sharedUtil . info ;:==:var warn:==:sharedUtil . warn ;
var callback = obj . callback ;:==:var limit:==:obj . limit ;
var value = e . currentTarget . value ;:==:var path:==:this . file . get ( ' path ' ) ;
var event = e  |  |  window . event ;:==:var keyCode:==:event . which  |  |  event . keyCode ;
var imageryProviderViewModels = defaultValue ( options . imageryProviderViewModels , createDefaultImageryProviderViewModels ( ) ) ;:==:var terrainProviderViewModels:==:defaultValue ( options . terrainProviderViewModels , createDefaultTerrainProviderViewModels ( ) ) ;
var setWrapper = scope . setWrapper ;:==:var unsafeUnwrap:==:scope . unsafeUnwrap ;
var WireV8 = goog . labs . net . webChannel . wirev8 ;:==:var wire:==:goog . labs . net . webChannel . wire ;
var Catalog = coreObj . catalog ;:==:var objectLoader:==:coreObj . objectLoader ;
var isElement = nodeType . isElement ;:==:var isText:==:nodeType . isText ;
var POINTER_PEN = gestureDetector . pointer_pen = ' pen ' ;:==:var event_start:==:gestureDetector . event_start    ' start ' ;
var promise = promiseData [ i ] ;:==:var status:==:createElementWithClass ( ' div ' , ' status ' ) ;
var blobBuilder = window . blobBuilder ;:==:var url:==:window . url ;
var fs = require ( ' fs ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var dataLabelsSettings = this . data . streamGraphSettings . dataLabelsSettings ;:==:var fontSize:==:pixelConverter . fromPoint ( dataLabelsSettings . fontSize ) ;
var panels = imports . panels ;:==:var Panel:==:imports . Panel ;
var index = target . dataset . index ;:==:var option:==:target . dataset . option ;
var util = imports . util ;:==:var watcher:==:imports . watcher ;
var opacity = context . opacity ;:==:var size:==:context . size ;
var graph = editorUi . editor . graph ;:==:var div:==:document . createElement ( ' div ' ) ;
var billboards = billboardCollection . _ billboards ;:==:var billboardsToUpdate:==:billboardCollection . _ billboardsToUpdate ;
var toObject = schema . options . toObject ;:==:var _ i d:==:schema . options . _ i d ;
var objectPatternField = traceur . syntax . trees . objectPatternField ;:==:var parseTree:==:traceur . syntax . trees . parseTree ;
var debug = opts . debug  |  |  false ;:==:var tolerance:==:opts . tolerance      undefined ? 0 . 001 : opts . tolerance ;
var render = _ props4 . render ;:==:var props:==:_ objectWithoutProperties ( _ props4 , [ ' createElement ' , ' render ' ] ) ;
var oneOverRadii = defined ( ellipsoid ) ? ellipsoid . oneOverRadii : wgs84OneOverRadii ;:==:var oneOverRadiiSquared:==:defined ( ellipsoid ) ? ellipsoid . oneOverRadiiSquared : wgs84OneOverRadiiSquared ;
var depth = this . depth ;:==:var left:==:typeof leftOrRbp      ' number ' ? null : leftOrRbp ;
var p2 = [ cp2x , cp2y ] ;:==:var p3:==:[ p3x , p3y ] ;
var title = $ this . attr ( ' title ' )  |  |  $ this . text ( ) ;:==:var rel:==:$ this . attr ( ' rel ' )  |  |  ' _ blank ' ;
var secret = this . req . secret ;:==:var signed:==:opts . signed ;
var props = assign ( , element . props ) ;:==:var key:==:element . key ;
var w = image . width  |  |  data [ 0 ] . length ;:==:var h:==:image . height  |  |  data . length ;
var directive = listWrapper . get ( directives , directiveIndex ) ;:==:var annotation:==:directive . annotation ;
var node = nodes [ i ] ;:==:var sourceIndex:==:node . sourceIndex ;
var settings = imports . settings ;:==:var editors:==:imports . editors ;
var base = this . base ;:==:var Cache:==:this . Cache ;
var email = document . getElementById ( ' create - user - email ' ) . value ;:==:var password:==:document . getElementById ( ' create - user - password ' ) . value ;
var operation = retry . operation ( ) ;:==:var error:==:new Error ( ' some error ' ) ;
var aria = goog . a11y . aria ;:==:var Role:==:goog . a11y . aria . Role ;
var b = Ext . lib . Dom . getViewWidth ( ) ;:==:var p:==:this . ddm . getScrollTop ( ) ;
var eip = this . eip ;:==:var gmdl:==:this . gmdl ;
var network = options . network ;:==:var networkStatus:==:options . networkStatus ;
var cm   = this . cm ;:==:var editor:==:this . editor ;
var which = evt . which ;:==:var altKey:==:evt . altKey ;
var failure = data . failure ;:==:var snapshot:==:data . snapshot ;
var t = true ;:==:var f:==:false ;
var clientHeight = _ ref7 . clientHeight ;:==:var scrollHeight:==:_ ref7 . scrollHeight ;
var Navigator = require ( ' Navigator ' ) ;:==:var Switch:==:require ( ' Switch ' ) ;
var descriptor = descriptors [ i ] ;:==:var decorators:==:descriptor . decorators ;
var overrideFn = priv . overrideFn ;:==:var scrollOffset:==:priv . scrollOffset ;
var Plugin = imports . Plugin ;:==:var general:==:imports [ ' preferences . general ' ] ;
var fallThroughState = traceur . codegeneration . generator . fallThroughState ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var find = imports . find ;:==:var settings:==:imports . settings ;
var scrollTop = _ ref7 . scrollTop ;:==:var onScroll:==:this . props . onScroll ;
var s = graph . view . scale ;:==:var tr:==:graph . view . translate ;
var monday = selector . querySelector ( ' . monday ' ) ;:==:var sunday:==:selector . querySelector ( ' . sunday ' ) ;
var contentBlock = require ( ' contentBlock ' ) ;:==:var applyEntityToContentBlock:==:require ( ' applyEntityToContentBlock ' ) ;
var controller = this . controller ;:==:var pose:==:controller . pose ;
var handler = ctx . handler ;:==:var promise:==:ctx . promise ;
var settings = options . settings ;:==:var appName:==:options . appName  |  |  testUtils . randomAppName ( ) ;
var React = require ( ' React ' ) ;:==:var blogPostHeader:==:require ( ' blogPostHeader ' ) ;
var a = game . physics . arcade . angleBetween ( arrow , target ) ;:==:var t:==:game . math . rotateToAngle ( arrow . rotation , a , 0 . 01 ) ;
var b = this . document . body ;:==:var clientWidth:==:b . clientWidth ;
var setEndOfMicrotask = scope . setEndOfMicrotask ;:==:var wrapIfNeeded:==:scope . wrapIfNeeded ;
var stats = data . stats = ;:==:var results:==:data . results ;
var generateMatchList = stringMatch . _ generateMatchList ;:==:var specialMatch:==:stringMatch . _ specialMatch ;
var GENTICS = window . GENTICS ;:==:var Aloha:==:window . Aloha ;
var images = loader . parseImages ( json . images ) ;:==:var textures:==:loader . parseTextures ( json . textures , images ) ;
var message = evt . detail . message  |  |  '' ;:==:var title:==:evt . detail . title  |  |  '' ;
var diff = utils . diff ;:==:var deepEqual:==:utils . deepEqual ;
var force = this . force ;:==:var disp:==:this . disp ;
var colContentRight = t . colContentRight ;:==:var getDaySegmentContainer:==:t . getDaySegmentContainer ;
var $ tip = $ ( this . $ tip ) ;:==:var e:==:$ . Event ( ' hide . bs . ' + this . type ) ;
var older = slot . older ;:==:var newer:==:slot . newer ;
var type = fiber . type ;:==:var key:==:fiber . key ;
var Plugin = imports . Plugin ;:==:var clipboard:==:imports . clipboard ;
var isConditional = flow . isConditional ;:==:var isHighLighted:==:flow . isHighLighted ;
var spriteSize = this . _ sizeFromString ( frameDict [ ' spriteSize ' ] ) ;:==:var textureRect:==:this . _ rectFromString ( frameDict [ ' textureRect ' ] ) ;
var scrollLeft = viewportElement . scrollLeft ;:==:var scrollTop:==:viewportElement . scrollTop ;
var utc = transport . utc ;:==:var offset:==:transport . offset ;
var content = this . getDom ( ' content ' ) ;:==:var iframe:==:this . getDom ( ' iframe ' ) ;
var p = body . position ;:==:var v:==:body . velocity ;
var err = edata . errors [ e ] ;:==:var opt:==:$ . extend ( ' class ' : ' w2ui - error ' , err . options ) ;
var map = _ _ webpack_require _ _ ( 3 ) . map ;:==:var join:==:_ _ webpack_require _ _ ( 3 ) . join ;
var proto = this . proto ;:==:var target:==:this . target ;
var breakpoints = this . _ breakpointsForPrimaryuiSourceCode . get ( uiSourceCode )  |  |  [ ] ;:==:var sourceFileId:==:this . _ sourceFileId ( uiSourceCode ) ;
var currentStyle = _ state . currentStyle ;:==:var currentVelocity:==:_ state . currentVelocity ;
var ctx = scale . ctx ;:==:var getValueOrDefault:==:helpers . getValueOrDefault ;
var contentPos = this . state . contentPos ;:==:var contentWidth:==:this . state . contentWidth ;
var pkg = grunt . config . get ( ' pkg ' ) ;:==:var version:==:grunt . option ( ' crafty - version ' ) ;
var dynCall_ii = Module [ ' dynCall_ii ' ] = asm [ ' dynCall_ii ' ] ;:==:var dynCall_vi:==:Module [ ' dynCall_vi ' ]    asm [ ' dynCall_vi ' ] ;
var post = env . store . peekRecord ( ' post ' , 1 ) ;:==:var comment:==:env . store . peekRecord ( ' comment ' , 2 ) ;
var cookie = require ( ' cookie ' ) ;:==:var send:==:require ( ' send ' ) ;
var endContainer = rangeObject . endContainer ;:==:var endOffset:==:rangeObject . endOffset ;
var os = require ( ' os ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var dateTimeFormatter = dateTimeFormatting . dateTimeFormatter ;:==:var calendarIdentifiers:==:windows . globalization . calendarIdentifiers ;
var Class = Hilo . Class ;:==:var Renderer:==:Hilo . Renderer ;
var assert = require ( ' assert ' ) ;:==:var profile:==:require ( ' mozilla - profile - builder ' ) ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var omit:==:require ( ' omit ' ) ;
var enclosingScope = enclosingScopeContext . getScope ( ) ;:==:var pos:==:enclosingScopeContext . pos - enclosingScopeContext . getScriptFragmentPosition ( ) ;
var scrollToIndex = _ ref . scrollToIndex ;:==:var size:==:_ ref . size ;
var node = e . node ;:==:var value:==:e . value ;
var red800 = exports . red800 = ' # c62828 ' ;:==:var red900:==:exports . red900    ' # b71c1c ' ;
var brown800 = exports . brown800 = ' # 4e342e ' ;:==:var brown900:==:exports . brown900    ' # 3e2723 ' ;
var col = this . placeholder_grid_data . col ;:==:var row:==:this . placeholder_grid_data . row ;
var iter = icalEvent . iterator ( ) ;:==:var next:==:iter . next ( ) ;
var escapeTextContentForBrowser = require ( ' escapeTextContentForBrowser ' ) ;:==:var inputValueTracking:==:require ( ' inputValueTracking ' ) ;
var fontSizeUnit = fontSizeUnit  |  |  ' 10px ' ;:==:var fontType:==:fontType  |  |  ' helvetica ' ;
var depth = options . depth ? parseInt ( options . depth , 10 ) : 0 ;:==:var orderby:==:options . orderby  |  |  ' name ' ;
var dateToCell = t . dateToCell ;:==:var getDaySegmentContainer:==:t . getDaySegmentContainer ;
var source = channelManager . currentTuners . tuner1 . sources . source1 ;:==:var channel:==:source . channels [ 0 ] ;
var colorizer = require ( ' colorizer ' ) ;:==:var events:==:require ( ' events ' ) ;
var scrollLeft = parallax . scrollLeft ;:==:var overScroll:==:this . overScrollFix ? parallax . overScroll : 0 ;
var p = readmpInt ( der , ' p ' ) ;:==:var q:==:readmpInt ( der , ' q ' ) ;
var inner = document . getElementById ( setup . inner ) ;:==:var outer:==:document . getElementById ( setup . outer ) ;
var p1 = $ ( ' p1 ' ) ;:==:var p2:==:$ ( ' p2 ' ) ;
var amberA700 = exports . amberA700 = ' # ffab00 ' ;:==:var orange50:==:exports . orange50    ' # fff3e0 ' ;
var tagName = activeElement . attr ( ' tagName ' ) . toLowerCase ( ) ;:==:var type:==:activeElement . attr ( ' type ' ) . toLowerCase ( ) ;
var stylenodes = DOM . getNodeArray ( options . stylenodes ) ;:==:var objects:==:dom . getNodeArray ( options . objects ) ;
var x = shape . cx ;:==:var y:==:shape . cy ;
var drawWidth = this . drawWidth ;:==:var drawHeight:==:this . drawHeight ;
var editor = e . editor ;:==:var range:==:new CKEDITOR . dom . range ( editor . document ) ;
var setup = setupPutTests ( ' file ' , mockTask ) ;:==:var task:==:setup . task ;
var document = window . document ;:==:var getProto:==:object . getPrototypeOf ;
var anims = imports . anims ;:==:var layout:==:imports . layout ;
var gltfNode = n . gltfNode ;:==:var runtimeNode:==:runtimeNodes [ n . i d ] ;
var rimraf = require ( ' rimraf ' ) ;:==:var spawnSync:==:child_process . spawnSync ;
var value = that . listView . value ( ) [ 0 ] ;:==:var optionLabel:==:that . _ optionLabelDataItem ( ) ;
var ARROWTYPE = Diagram . ARROWTYPE ;:==:var PLACEMENT:==:Diagram . PLACEMENT ;
var dx = Math . max ( 0 , Math . min ( bounds . width , parseFloat ( mxUtils . getValue ( this . state . style , ' dx ' , this . dx ) ) ) ) ;:==:var arrowHead:==:math . max ( 0 , math . min ( math . min ( bounds . height , bounds . width ) - dx , parseFloat ( mxUtils . getValue ( this . state . style , ' arrowHead ' , this . arrowHead ) ) ) ) ;
var layoutVertexArray = group . layoutVertexArray ;:==:var angle:==:-collisionTile . angle ;
var Color = jsCommon . color ;:==:var pixelConverter:==:jsCommon . pixelConverter ;
var x = xys . x + eop . xPoleOffset ;:==:var y:==:xys . y + eop . yPoleOffset ;
var ui = imports . ui ;:==:var async:==:require ( ' async ' ) ;
var port = options . port  |  |  process . env . PORT  |  |  3000 ;:==:var hostname:==:options . hostname  |  |  process . env . NODE_HOSTNAME  |  |  undefined ;
var x = evaluate ( this . controlPoints [ 0 ] . x , this . controlPoints [ 1 ] . x , t ) ;:==:var y:==:evaluate ( this . controlPoints [ 0 ] . y , this . controlPoints [ 1 ] . y , t ) ;
var options = me . options ;:==:var scales:==:me . scales    ;
var type = msg . type ;:==:var docId:==:data . docId ;
var opts = opts  |  |  ;:==:var walletId:==:wallet . credentials . walletId ;
var keyCode = this . target . keyCode ;:==:var keyCodeUpper:==:this . target . keyCodeUpper ;
var child = scope . child ;:==:var input:==:child . inputA ;
var skip = options & & options . skip ;:==:var limit:==:options & & options . limit ;
var head = cm . getCursor ( ' head ' ) ;:==:var anchor:==:cm . getCursor ( ' anchor ' ) ;
var DELEGATES = api . DELEGATES ;:==:var EVENT_PREFIX:==:api . EVENT_PREFIX ;
var group = groups [ j ] ;:==:var start:==:group . start ;
var options = opt_options ? opt_options : ;:==:var className:==:options . className !    undefined ? options . className : ' ol - scale - line ' ;
var style = this . style ;:==:var image:==:style . image ;
var root = this . root ;:==:var system:==:root . system    root . system  |  |  ;
var bind = utils . bind ;:==:var checkHasPositionalTracking:==:utils . device . checkHasPositionalTracking ;
var showAnim = this . _ get ( inst , ' showAnim ' ) ;:==:var duration:==:this . _ get ( inst , ' duration ' ) ;
var bind = _ angular . bind ;:==:var copy:==:_ angular . copy ;
var settings = imports . settings ;:==:var proc:==:imports . proc ;
var timeago = require ( ' timeago ' ) ;:==:var staticPrefix:==:options . staticPrefix ;
var isDefined = leafletHelpers . isDefined ;:==:var defaultTo:==:leafletHelpers . defaultTo ;
var url = _ ref . url ;:==:var headers:==:_ ref . headers ;
var action = delta . action ;:==:var start:==:delta . start ;
var merge = require ( ' gulp - merge ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var assert = require ( ' assert ' ) ;:==:var path:==:require ( ' path ' ) ;
var billboardsToUpdate = billboardCollection . _ billboardsToUpdate ;:==:var modelMatrix:==:billboardCollection . _ modelMatrix ;
var options = animationDetails . options ;:==:var classes:==:animationDetails . classes ;
var CLASS_DECLARATION = ' CLASS_DECLARATION ' ;:==:var CLASS_EXPRESSION:==:' CLASS_EXPRESSION ' ;
var selectionStart = el . selectionStart ;:==:var selectionEnd:==:el . selectionEnd ;
var c = tree . c = div . firstChild ;:==:var d:==:tree . d    div . lastChild ;
var net = require ( ' net ' ) ;:==:var inspector:==:require ( ' node - inspector ' ) ;
var operand = this . transformAny ( tree . left . operand ) ;:==:var memberExpression:==:this . transformAny ( tree . left . memberExpression ) ;
var choiceContext = this . choiceContext ;:==:var forkContext:==:this . forkContext ;
var model = this . X . lookup ( e . getAttribute ( ' model ' )  |  |  p . subType ) ;:==:var children:==:e . children ;
var rename = require ( ' gulp - rename ' ) ;:==:var rimraf:==:require ( ' gulp - rimraf ' ) ;
var w = hasLayout ? ( this . layoutAreaPos . x + this . layoutArea . width ) : ( marginh + actualSize . width ) ;:==:var h:==:hasLayout ? ( this . layoutAreaPos . y + this . layoutArea . height ) : ( marginv + actualSize . height ) ;
var visualMax = nodeModel . get ( ' visualMax ' ) ;:==:var dataExtent:==:nodeLayout . dataExtent . slice ( ) ;
var assert = require ( ' assert ' ) ;:==:var express:==:require ( ' express ' ) ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var argumentList:==:traceur . syntax . trees . argumentList ;
var width = _ props . width ;:==:var style:==:_ props . style ;
var object = _ react$PropTypes . object ;:==:var string:==:_ react$PropTypes . string ;
var value = this . value ;:==:var error:==:[ this . error ] ;
var ensurePositiveDelayProps = require ( ' ensurePositiveDelayProps ' ) ;:==:var flattenStyle:==:require ( ' flattenStyle ' ) ;
var ii1 = this . ii1 . elements ;:==:var ii2:==:this . ii2 . elements ;
var Signal = Tone_signal_Signal ;:==:var Add:==:Tone_signal_Add ;
var os = require ( ' os ' ) ;:==:var url:==:require ( ' url ' ) ;
var pets = _ getFormattedItemReference ( ' items . pets ' , _ . keys ( content . petInfo ) , ' -1 : owns mount , 0 : not owned , 1 - 49 : progress to mount ' ) ;:==:var special:==:_ getFormattedItemReference ( ' items . special ' , _ . keys ( content . special ) , ' numeric quantity ' ) ;
var counterTitle = lineDotChart . defaultSettings . counterTitle ;:==:var isanimated:==:lineDotChart . defaultSettings . isanimated ;
var p = camera . pickEllipsoid ( windowCoord , ellipsoid ) ;:==:var c:==:ellipsoid . cartesianToCartographic ( p ) ;
var dialog = event . data . dialog ;:==:var $ button:==:event . data . $ button ;
var beforeAppear = data . beforeAppear ;:==:var appear:==:data . appear ;
var granularity = ellipse . granularity ;:==:var stRotation:==:ellipse . stRotation ;
var options = _ ref . options ;:==:var valueArray:==:_ ref . valueArray ;
var x = eventPosition . x ;:==:var y:==:eventPosition . y ;
var layout = options . layout ;:==:var hasSelection:==:options . interactivityService ? options . interactivityService . hasSelection ( ) : false ;
var mesh = this . el . getOrCreateObject3d ( ' mesh ' , three . mesh ) ;:==:var system:==:this . system ;
var doc = this . buttonWindow . document ;:==:var button:==:doc . createElement ( ' button ' ) ;
var cesiumWidget = this . _ cesiumWidget ;:==:var container:==:this . _ container ;
var element = cssSelector . element ;:==:var classNames:==:cssSelector . classNames ;
var baseTestChannel = goog . labs . net . webChannel . baseTestChannel ;:==:var channelRequest:==:goog . labs . net . webChannel . channelRequest ;
var L = new _ cg ( 0 , 1 , ' L ' ) ;:==:var M:==:new _ cg ( 1 , 0 , ' M ' ) ;
var missingDataException = sharedUtil . missingDataException ;:==:var util:==:sharedUtil . util ;
var el = this . el ;:==:var animationFrameid:==:el . animationFrameid ;
var desc = $ ( ' # description ' , Events . eventPanel ( ) ) ;:==:var lootButtons:==:$ ( ' < div > ' ) . attr ( ' i d ' : ' lootButtons ' , ' data - legend ' : _ ( ' take : ' ) ) ;
var parseTreeWriter = traceur . outputgeneration . parseTreeWriter ;:==:var parseTreeMapWriter:==:traceur . outputgeneration . parseTreeMapWriter ;
var a3 = expected [ i ] . locals . a3 ;:==:var b3:==:expected [ i ] . locals . b3 ;
var vim = cm . state . vim ;:==:var lastSel:==:vim . lastSelection ;
var gulp = require ( ' gulp ' ) ;:==:var del:==:require ( ' del ' ) ;
var d16 = _ addDiv ( ' d16 ' ) , d17 = _ addDiv ( ' d17 ' ) ;:==:var conn:==:_ jsPlumb . connect ( source : d16 , target : d17 , connector : ' straight ' ) ;
var hash = file . hash ;:==:var contents:==:file . contents ;
var width = image . width , height = image . height ;:==:var maskCanvas:==:cachedCanvases . getCanvas ( ' maskCanvas ' , width , height ) ;
var colorHelper = powerbi . visuals . colorHelper ;:==:var valueFormatter:==:powerbi . visuals . valueFormatter ;
var begin = taskData . begin ;:==:var end:==:taskData . end ;
var setName = docSet . getByLongname ( ' setName ' ) [ 0 ] ;:==:var setPizzaToppings:==:docSet . getByLongname ( ' setPizzaToppings ' ) [ 0 ] ;
var options = options  |  |  ;:==:var zindex:==:options . zindex  |  |  50 ;
var rowStyle = _ props . rowStyle ;:==:var scrollToIndex:==:_ props . scrollToIndex ;
var removeHandler = this . removeHandler ;:==:var selector:==:this . selector ;
var Plugin = imports . Plugin ;:==:var notification:==:imports [ ' dialog . notification ' ] ;
var newIndex = event . detail . newIndex ;:==:var list:==:this . _ list ;
var b = observable ( 3 ) ;:==:var c:==:computed ( function ( ) return a . get ( ) * b . get ( ) ) ;
var dx1 = Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx1 ' , this . dx1 ) ) ) ) ;:==:var dy2:==:math . max ( 0 , math . min ( h , parseFloat ( mxUtils . getValue ( this . style , ' dy2 ' , this . dy2 ) ) ) ) ;
var w = this . width - xs ;:==:var h:==:this . height - xs ;
var STATUS_RELOADING   = exports . STATUS_RELOADING   = 5 ;:==:var STATUS_RESTARTING:==:exports . STATUS_RESTARTING     6 ;
var b = this . _ bone2Length ;:==:var c:==:babylon . vector3 . distance ( bonePos , target ) ;
var start = Math . min ( range . start , this . start ) ;:==:var end:==:Math . max ( range . end , this . end ) ;
var col = this . columns [ col_ind ] ;:==:var rec:==:this . records [ ind ] ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var dateFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' dateFieldTestObject ' ) ) ;
var dynCall_iff = Module [ ' dynCall_iff ' ] = asm [ ' dynCall_iff ' ] ;:==:var dynCall_iiii:==:Module [ ' dynCall_iiii ' ]    asm [ ' dynCall_iiii ' ] ;
var keyCommandInsertNewline = require ( ' keyCommandInsertNewline ' ) ;:==:var keyCommandPlainBackspace:==:require ( ' keyCommandPlainBackspace ' ) ;
var zlevel = this . _ singleCanvas ? 0 : el . zlevel ;:==:var layer:==:layers [ zlevel ] ;
var scrollParent = this . scrollParent ( elem , false , true ) ;:==:var scrollbarWidth:==:this . scrollbarWidth ( body_regex . test ( scrollParent . tagName ) ) ;
var data = stringifyData ( options . data  |  |  ) ;:==:var type:==:( options . type  |  |  ' get ' ) . toUpperCase ( ) ;
var instance = instances [ i ] ;:==:var geometry:==:instance [ geometryName ] ;
var assert = require ( ' assert ' ) ;:==:var uid:==:require ( ' uid2 ' ) ;
var predefinedName = traceur . syntax . predefinedName ;:==:var tokenType:==:traceur . syntax . tokenType ;
var iterator = this . iterator ;:==:var start:==:this . start ;
var should = require ( ' should ' ) ;:==:var nssocket:==:require ( ' nssocket ' ) ;
var access = env . opts . access ;:==:var priv:==:! ! env . opts . private ;
var option = _ ref7 . option ;:==:var optionHeight:==:this . props . optionHeight ;
var Util = sharedUtil . util ;:==:var createPromiseCapability:==:sharedUtil . createPromiseCapability ;
var angle = -collisionTile . angle ;:==:var yStretch:==:collisionTile . yStretch ;
var x = screenSpacePosition . x - halfSize ;:==:var y:==:screenSpacePosition . y - halfSize ;
var reactNative = require ( ' reactNative ' ) ;:==:var set:==:require ( ' set ' ) ;
var subtitleColor = this . context . muiTheme . cardMedia . subtitleColor ;:==:var color:==:this . context . muiTheme . cardMedia . color ;
var data = evt . data ;:==:var listener:==:listeners [ data . type ] ;
var context = scene . context ;:==:var frameState:==:scene . frameState ;
var up = scratchCalculateCartesian . up ;:==:var east:==:scratchCalculateCartesian . east ;
var aliases = this . aliases = ;:==:var indices:==:this . indices    ;
var r = resourceManager . getResource ( shape . resourceId ) ;:==:var serialize:==:shape . serialize ( ) ;
var vertices = polygon . m_vertices ;:==:var normals:==:polygon . m_normals ;
var isNumber = _ _ webpack_require _ _ ( 2 ) . isNumber ;:==:var flatten:==:_ _ webpack_require _ _ ( 3 ) . flatten ;
var test = require ( ' tap ' ) . test ;:==:var path:==:require ( ' path ' ) ;
var global = exports . global ;:==:var href:==:global . location . href ;
var PREDEFINED_TYPE = ' PREDEFINED_TYPE ' ;:==:var PROPERTY_NAME_ASSIGNMENT:==:' PROPERTY_NAME_ASSIGNMENT ' ;
var type = color . type ;:==:var values:==:color . values ;
var order = $ scope . order [ type ] ;:==:var second_currency:==:$ scope . order . second_currency  |  |  Currency . from_json ( ' XRP ' ) ;
var x = localPosition . x - viewport . x ;:==:var y:==:localPosition . y - viewport . y ;
var extra = that . stat_desc . extra_bits ;:==:var base:==:that . stat_desc . extra_base ;
var eventEmitter = require ( ' eventEmitter ' ) ;:==:var platform:==:require ( ' platform ' ) ;
var mimetype = mimetypeNode . value ;:==:var filePath:==:( filePathNode & & filePathNode . value ) ;
var format = definition . format ;:==:var xml:==:definition . xml  |  |  ;
var lineNumber = options . lineNumber ;:==:var actual:==:options . actual ;
var names = util . getArg ( sourceMap , ' names ' ) ;:==:var sourceRoot:==:util . getArg ( sourceMap , ' sourceRoot ' , null ) ;
var prompt = require ( ' prompt ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var startCount = startCountParser . parseuShort ( ) ;:==:var idDelta:==:idDeltaParser . parseShort ( ) ;
var index = name . indexOf ( keyword ) ;:==:var items:==:node . items  |  |  node . children ;
var width = options [ ' width ' ] ! = null ? options [ ' width ' ] : 0 ;:==:var height:==:options [ ' height ' ] !   null ? options [ ' height ' ] : 0 ;
var buffer = options . buffer  |  |  1 ;:==:var callback:==:options . callback  |  |  function ( ) ;
var defaultValue = options . defaultValue ;:==:var exclusionGroup:==:options . exclusionGroup ;
var installer = imports . installer ;:==:var ui:==:imports . ui ;
var offset = config . offset ;:==:var width:==:node . getData ( ' width ' ) ;
var scalerank = feature . get ( ' scalerank ' ) ;:==:var labelrank:==:feature . get ( ' labelrank ' ) ;
var height = options . height  |  |  1 ;:==:var subdivisionsX:==:options . subdivisionsX  |  |  options . subdivisions  |  |  1 ;
var fill = defaultValue ( options . fill , true ) ;:==:var strokeWidth:==:defaultValue ( options . strokeWidth , 1 ) ;
var bind = require ( ' component - bind ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' socket . io - client : manager ' ) ;
var dynCall_viid = Module [ ' dynCall_viid ' ] = asm [ ' dynCall_viid ' ] ;:==:var dynCall_viiii:==:Module [ ' dynCall_viiii ' ]    asm [ ' dynCall_viiii ' ] ;
var util    = require ( ' util ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var defaultsqExprVisitor = powerbi . data . defaultsqExprVisitor ;:==:var semanticFilter:==:powerbi . data . semanticFilter ;
var ano = config . ano ;:==:var success:==:config . success ;
var fileExtension = defaultValue ( options . fileExtension , format . getAttribute ( ' extension ' ) ) ;:==:var tileWidth:==:defaultValue ( options . tileWidth , parseInt ( format . getAttribute ( ' width ' ) , 10 ) ) ;
var Plugin = imports . Plugin ;:==:var upload:==:imports . upload ;
var parameterList = this . transformAny ( alphaRenamed . parameterList ) ;:==:var body:==:this . transformAny ( alphaRenamed . body ) ;
var pos = this [ ' pos ' ] ;:==:var w:==:this [ ' w ' ] ;
var slice = ( options . slice < = 0 ) ? 1 . 0 : options . slice  |  |  1 . 0 ;:==:var sideOrientation:==:( options . sideOrientation      0 ) ? 0 : options . sideOrientation  |  |  babylon . mesh . defaultside ;
var gulp = require ( ' gulp ' ) ;:==:var browser:==:require ( ' browser - sync ' ) ;
var fontColor = new visuals . colorHelper ( colors , properties [ ' fontColor ' ] , defaultSettings . fontColor ) . getColorForMeasure ( objects , ' ' ) ;:==:var show:==:powerbi . dataViewObjects . getValue ( objects , properties [ ' show ' ] , defaultSettings . show ) ;
var array = util . array ;:==:var object:==:util . object ;
var unsafeUnwrap = scope . unsafeUnwrap ;:==:var wrappers:==:scope . wrappers ;
var subscribable = new ko . subscribable ( ) . extend ( rateLimit : method : ' notifyWhenChangesStop ' , timeout : 50 ) ;:==:var notifySpy:==:jasmine . createSpy ( ' notifySpy ' ) ;
var color = data . getItemVisual ( idx , ' color ' ) ;:==:var borderColor:==:data . getItemVisual ( idx , ' borderColor ' )  |  |  color ;
var nodeTypeOffset = this . _ nodeTypeOffset ;:==:var nodeNativeType:==:this . _ nodeNativeType ;
var Parser = traceur . syntax . Parser ;:==:var sourceFile:==:traceur . syntax . sourceFile ;
var assert = require ( ' power - assert ' ) ;:==:var bluebird:==:require ( ' bluebird ' ) ;
var b = parseInt ( req . params . b , 10 ) ;:==:var format:==:req . params . format ;
var w = + width ( ) - stroke ( ) - leftPadding ;:==:var h:==:+ height ( ) - stroke ( ) - bottomPadding ;
var el = this . el ;:==:var start:==:this . start ;
var document = this . document ;:==:var $:==:this . $ ;
var KINEMATIC = Body . KINEMATIC ;:==:var STATIC:==:Body . STATIC ;
var onBlur = _ props3 . onBlur ;:==:var onClick:==:_ props3 . onClick ;
var titleText = powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . titleText , this . layerLegendData ? this . layerLegendData . title : '' ) ;:==:var labelColor:==:powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . labelColor , visuals . legendData . defaultLegendLabelFillColor ) ;
var colContentRight = t . colContentRight ;:==:var dateToCell:==:t . dateToCell ;
var d16 = _ addDiv ( ' d16 ' ) , d17 = _ addDiv ( ' d17 ' ) ;:==:var conn:==:_ jsPlumb . connect ( source : d16 , target : d17 , connector : [ ' bezier ' , curviness : 200 ] ) ;
var pDiff   = this . pDiff ;:==:var vDiff:==:this . vDiff ;
var bind = require ( ' bind ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var timezone = comp . getFirstSubcomponent ( ' vtimezone ' ) ;:==:var tzid:==:timezone . getFirstPropertyValue ( ' tzid ' ) ;
var size = data [ ' size ' ] ;:==:var size_human:==:data [ ' size_human ' ] ;
var url = require ( ' url ' ) ;:==:var cson:==:require ( ' cson ' ) ;
var maxNodeId = nodeFilter . maxNodeId ;:==:var allocationNodeId:==:nodeFilter . allocationNodeId ;
var wall = options . wall ;:==:var top:==:options . top  |  |  wall ;
var path = require ( ' path ' ) ;:==:var closure:==:require ( ' closure - util ' ) ;
var button = $ compile ( ' < md - button > ' ) ( $ rootScope . $ new ( ) ) ;:==:var body:==:angular . element ( document . body ) ;
var minimatch = require ( ' minimatch ' ) ;:==:var lodash:==:require ( ' lodash ' ) ;
var bindToAddress = document . getElementById ( ' bindToAddress ' ) . checked ;:==:var bindToAdapter:==:document . getElementById ( ' bindToAdapter ' ) . checked ;
var algoliaDocSearch = require ( ' algoliaDocSearch ' ) ;:==:var react:==:require ( ' react ' ) ;
var ATTRIBUTE_NODE     = nodeType . attribute_node     = 2 ;:==:var text_node:==:nodeType . text_node        3 ;
var scope = options . scope ;:==:var scrollView:==:options . scrollView ;
var colorG = options [ ' colorG ' ] ;:==:var colorB:==:options [ ' colorB ' ] ;
var O_RDONLY = constants . O_RDONLY  |  |  0 ;:==:var O_RDWR:==:constants . O_RDWR  |  |  0 ;
var session = this . session ;:==:var selection:==:this . selection ;
var createAssignmentExpression = parseTreeFactory . createAssignmentExpression ;:==:var createBinaryOperator:==:parseTreeFactory . createBinaryOperator ;
var path = require ( ' path ' ) ;:==:var bencode:==:require ( ' bencode ' ) ;
var source = this . source ( ) ;:==:var start:==:r . start ;
var metadataNode = metadataNodes [ i ] ;:==:var name:==:metadataNode . getAttribute ( ' name ' ) ;
var edgeFieldsCount = this . _ edgeFieldsCount ;:==:var edgeInternalType:==:this . _ edgeInternalType ;
var objects = sourceDataView . metadata . objects ;:==:var defaultColor:==:powerbi . dataViewObjects . getFillColor ( objects , objectName : ' dataPoint ' , propertyName : ' defaultColor ' ) ;
var verticalOverscanSize = _ props3 . verticalOverscanSize ;:==:var width:==:_ props3 . width ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var http:==:require ( ' http ' ) ;
var fieldExpr = this . fieldExpr ? nodeToString ( this . fieldExpr ) : ' bitField ' ;:==:var mask:==:this . mask ;
var concat = require ( ' concat - stream ' ) ;:==:var inherits:==:require ( ' inherits ' ) ;
var blur = layer . paint [ ' line - blur ' ] + antialiasing ;:==:var color:==:layer . paint [ ' line - color ' ] ;
var left = subject . left ;:==:var right:==:subject . right ;
var comparePoints = dom . comparePoints ;:==:var splitDataNode:==:dom . splitDataNode ;
var banner = this . _ banner ;:==:var title:==:$ ( ' notification - title ' ) ;
var v = literalToken . value ;:==:var location:==:literalToken . location ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var each:==:require ( ' each ' ) ;
var options = $ datepicker . $ options ;:==:var scope:==:$ datepicker . $ scope ;
var getRowAction = window . getRowAction ;:==:var iNumberOfRows:==:window . iNumberOfRows ;
var util = require ( ' util ' ) ;:==:var domain:==:require ( ' domain ' ) ;
var yellowA200 = exports . yellowA200 = ' # ffff00 ' ;:==:var yellowA400:==:exports . yellowA400    ' # ffea00 ' ;
var l = Object . keys ( msg . payload ) . length ;:==:var pay:==:msg . payload ;
var expand = Utils . makeButtonElement ( ' class ' : ' aloha - ui - menubutton - expand ' ) ;:==:var menu:==:$ ( ' < ul > ' , ' class ' : ' aloha - ui - menubutton - menu ' ) ;
var x = Math . floor ( bb . x1 ) ;:==:var y:==:Math . floor ( bb . y1 ) ;
var app = require ( ' app ' ) ;:==:var core:==:require ( ' core ' ) ;
var camera = frameState . camera ;:==:var mode:==:frameState . mode ;
var Element = window . Element ;:==:var mutationObserver:==:window . mutationObserver ;
var pluginError = gutil . pluginError ;:==:var path:==:require ( ' path ' ) ;
var unit = math . unit ;:==:var acsc:==:math . acsc ;
var Data = hexo . model ( ' Data ' ) ;:==:var route:==:hexo . route ;
var buttoncssClass = options . buttoncssClass ;:==:var panelcssClass:==:options . panelcssClass ;
var show = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . show , false ) ;:==:var displayName:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . displayName , undefined ) ;
var w = this . cacheCanvas . width ;:==:var h:==:this . cacheCanvas . height ;
var util = require ( ' util ' ) ;:==:var mqtt:==:require ( ' mqtt ' ) ;
var buttonText = this . _ get ( inst , ' buttonText ' ) ;:==:var buttonImage:==:this . _ get ( inst , ' buttonImage ' ) ;
var params = this . params ;:==:var keys:==:layer . keys ;
var labelStyle = _ props . labelStyle ;:==:var primary:==:_ props . primary ;
var translate = client . translate ;:==:var report:==:$ ( ' # hourlystats - report ' ) ;
var Restaurant = Parse . Object . extend ( ' Restaurant ' ) ;:==:var Person:==:Parse . Object . extend ( ' Person ' ) ;
var    LEN _ = 20 ;:==:var    LEN:==:21 ;
var lock = $ ( ' # form_'+ obj . name + ' _ lock ' ) ;:==:var status:==:$ ( ' # form_'+ obj . name + ' _ status ' ) ;
var forEach = createIterator ( baseIteratorOptions , forEachIteratorOptions ) ;:==:var map:==:createIterator ( baseIteratorOptions , mapIteratorOptions ) ;
var url = server . url ( ' sample . html ' ) ;:==:var link:==:client . helper . waitForElement ( ' # page2-link ' ) ;
var noContentRenderer = _ props3 . noContentRenderer ;:==:var style:==:_ props3 . style ;
var async = require ( ' async ' ) ;:==:var log:==:require ( dirs . core + ' log ' ) ;
var moment = window . moment ;:==:var Nightscout:==:window . Nightscout ;
var previousSize = _ ref . previousSize ;:==:var scrollOffset:==:_ ref . scrollOffset ;
var alt = page . alt = page . alt  |  |  ;:==:var upperCase:==:page . upperCase    page . upperCase  |  |  ;
var state = this . props . node . get ( ' state ' ) ;:==:var context:==:this . props . node . get ( ' context ' ) ;
var location = event . location  |  |  false ;:==:var geo:==:event . geo  |  |  false ;
var annotations = this . transformList ( tree . annotations ) ;:==:var initializer:==:this . transformAny ( tree . initializer ) ;
var chalk = require ( ' chalk ' ) ;:==:var util:==:require ( ' util ' ) ;
var y = readmpInt ( der , ' y ' ) ;:==:var p:==:readmpInt ( der , ' p ' ) ;
var colResize = that . tablePlugin . colResize ;:==:var rowResize:==:that . tablePlugin . rowResize ;
var el = this . $ element ;:==:var body:==:el . querySelector ( ' gui - tree - view - body ' ) ;
var r = goog . color . hexToRgb ( testColors [ i ] [ 0 ] ) ;:==:var t:==:testColors [ i ] [ 1 ] ;
var r = range . create2 ( this . range . _ contentStart + 1 , this . range . end - 1 ) ;:==:var source:==:this . source ( ) ;
var abs = stdlib . Math . abs ;:==:var fround:==:stdlib . Math . fround ;
var v3pool = this . v3pool ;:==:var sides:==:sphereBox_sides ;
var Terminal = imports . Terminal ;:==:var async:==:require ( ' async ' ) ;
var deepOrange700 = exports . deepOrange700 = ' # e64a19 ' ;:==:var deepOrange800:==:exports . deepOrange800    ' # d84315 ' ;
var supportType = exports . supportType = ' align - content | align - items | align - self | all | animation | animation - delay | animation - direction | animation - duration | animation - fill - mode | animation - iteration - count | animation - name | animation - play - state | animation - timing - function | backface - visibility | background | background - attachment | background - blend - mode | background - clip | background - color | background - image | background - origin | background - position | background - repeat | background - size | border | border - bottom | border - bottom - color | border - bottom - left - radius | border - bottom - right - radius | border - bottom - style | border - bottom - width | border - collapse | border - color | border - image | border - image - outset | border - image - repeat | border - image - slice | border - image - source | border - image - width | border - left | border - left - color | border - left - style | border - left - width | border - radius | border - right | border - right - color | border - right - style | border - right - width | border - spacing | border - style | border - top | border - top - color | border - top - left - radius | border - top - right - radius | border - top - style | border - top - width | border - width | bottom | box - shadow | box - sizing | caption - side | clear | clip | color | column - count | column - fill | column - gap | column - rule | column - rule - color | column - rule - style | column - rule - width | column - span | column - width | columns | content | counter - increment | counter - reset | cursor | direction | display | empty - cells | filter | flex | flex - basis | flex - direction | flex - flow | flex - grow | flex - shrink | flex - wrap | float | font | font - family | font - size | font - size - adjust | font - stretch | font - style | font - variant | font - weight | hanging - punctuation | height | justify - content | left | letter - spacing | line - height | list - style | list - style - image | list - style - position | list - style - type | margin | margin - bottom | margin - left | margin - right | margin - top | max - height | max - width | min - height | min - width | nav - down | nav - index | nav - left | nav - right | nav - up | opacity | order | outline | outline - color | outline - offset | outline - style | outline - width | overflow | overflow - x | overflow - y | padding | padding - bottom | padding - left | padding - right | padding - top | page - break - after | page - break - before | page - break - inside | perspective | perspective - origin | position | quotes | resize | right | tab - size | table - layout | text - align | text - align - last | text - decoration | text - decoration - color | text - decoration - line | text - decoration - style | text - indent | text - justify | text - overflow | text - shadow | text - transform | top | transform | transform - origin | transform - style | transition | transition - delay | transition - duration | transition - property | transition - timing - function | unicode - bidi | vertical - align | visibility | white - space | width | word - break | word - spacing | word - wrap | z - index ' ;:==:var supportFunction:==:exports . supportFunction    ' rgb | rgba | url | attr | counter | counters ' ;
var jison = require ( ' jison ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var callback = $ ( this ) . attr ( ' gs_callback ' ) ;:==:var op:==:$ ( this ) . attr ( ' gs_op ' ) ;
var events = require ( ' events - mixin ' ) ;:==:var matches:==:require ( ' matches - selector ' ) ;
var width = document . querySelectorAll ( ' . clusters rect ' ) [ 0 ] . width . baseVal . value ;:==:var cluster:==:d3 . selectAll ( ' . cluster ' ) ;
var aoData = oSettings . aoData ;:==:var aiDisplay:==:oSettings . aiDisplay ;
var functionDeclaration = traceur . syntax . trees . functionDeclaration ;:==:var generatorComprehension:==:traceur . syntax . trees . generatorComprehension ;
var appendClearCatcher = powerbi . visuals . appendClearCatcher ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var rimraf = require ( ' rimraf ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var _ require = _ _ webpack_require _ _ ( 1 ) ;:==:var Component:==:_ require . Component ;
var username = req . param ( ' username ' ) ;:==:var email:==:req . param ( ' email ' ) . trim ( ) ;
var TNS_PREFIX = utils . TNS_PREFIX ;:==:var findPrefix:==:utils . findPrefix ;
var width = this . _ currentMeasure . width ;:==:var height:==:this . _ currentMeasure . height ;
var amdPath = contents . amdPath ;:==:var amdClassName:==:contents . amdClassName ;
var lower = aabb . lowerBound [ axis ] ;:==:var upper:==:aabb . upperBound [ axis ] ;
var MIDLETTER = ci . MIDLETTER ;:==:var MIDNUM:==:ci . MIDNUM ;
var translate = interp ( fromM . translate , toM . translate , f ) ;:==:var scale:==:interp ( fromM . scale , toM . scale , f ) ;
var end = content . cursor_end ;:==:var matches:==:content . matches ;
var STRING1 = C . STRING1 = 0x61 ;:==:var STRING2:==:C . STRING2    0x62 ;
var api = scope . api . instance . attributes ;:==:var PUBLISHED:==:api . PUBLISHED ;
var prev = record . _ prev ;:==:var next:==:record . _ next ;
var Pos = codeMirror . pos ;:==:var cmp:==:codeMirror . cmpPos ;
var indigo100 = exports . indigo100 = ' # c5cae9 ' ;:==:var indigo200:==:exports . indigo200    ' # 9fa8da ' ;
var floatingLabelFixed = _ props2 . floatingLabelFixed ;:==:var floatingLabelFocusStyle:==:_ props2 . floatingLabelFocusStyle ;
var fs = imports . fs ;:==:var style:==:document . createElement ( ' style ' ) ;
var show = new showGeometryInstanceAttribute ( isAvailable & & entity . isShowing & & this . _ showProperty . getValue ( time ) & & this . _ fillProperty . getValue ( time ) ) ;:==:var distanceDisplayCondition:==:distanceDisplayConditionGeometryInstanceAttribute . fromDistanceDisplayCondition ( this . _ distanceDisplayCondition . getValue ( time ) ) ;
var location = ref . location ;:==:var route:==:ref . route ;
var layout = page . layout ;:==:var path:==:page . path ;
var lang = supportedLanguages [ langIndex ] ;:==:var option:==:document . createElement ( ' option ' ) ;
var node = nodeList [ numNodesProcessed++ ] ;:==:var nodeName:==:node . nodeName ;
var clearTimeout = global$1 . clearTimeout ;:==:var document:==:window & & window . document ;
var properties = item . properties ;:==:var loggedIn:==:data . config ? data . config . loggedIn : false ;
var near = shadowFrustum . near ;:==:var far:==:shadowFrustum . far ;
var theme = this . context . theme ;:==:var data:==:this . props . data ;
var altDecimal = ( config . altDecimal = = = false ) ? ' ' : config . altDecimal  |  |  decimal ;:==:var negative:==:( config . negative      true ) ? true : false ;
var outer = goog . dom . getElement ( ' outer ' ) ;:==:var inner:==:goog . dom . getElement ( ' inner ' ) ;
var charging = document . getElementById ( ' charging ' ) ;:==:var level:==:document . getElementById ( ' level ' ) ;
var valueDim = opt . valueDim ;:==:var symbolBoundingData:==:itemModel . get ( ' symbolBoundingData ' ) ;
var indent = settings . indent  |  |  [ ] ;:==:var length:==:value . length ;
var nock = require ( ' nock ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var eventStartPosition = aggregator . _ eventStartPosition ;:==:var pressTime:==:aggregator . _ pressTime ;
var word = Sk . builtin . list . prototype [ ' list_subscript _ ' ] . call ( words , i ) ;:==:var cap:==:Sk . misceval . callsim ( mod . capitalize , word ) ;
var lang = this . page . lang  |  |  this . page . language  |  |  config . language ;:==:var format:==:options . format ;
var parenthesis = ( options & & options . parenthesis ) ? options . parenthesis : ' keep ' ;:==:var expr:==:this . expr . toTex ( options ) ;
var reactEmptyComponent = require ( ' reactEmptyComponent ' ) ;:==:var reactMultiChild:==:require ( ' reactMultiChild ' ) ;
var func = _ react$PropTypes . func ;:==:var object:==:_ react$PropTypes . object ;
var className = _ ref . className ;:==:var columns:==:_ ref . columns ;
var e = extensions [ key ] ;:==:var o:==:Object . assign ( , options ) ;
var paddingRight = this . parseStyle ( elemStyle . paddingRight ) ;:==:var paddingBottom:==:this . parseStyle ( elemStyle . paddingBottom ) ;
var containerSize = _ ref7 . containerSize ;:==:var offset:==:_ ref7 . offset ;
var assert = require ( ' assert ' ) ;:==:var through:==:require ( ' through2 ' ) ;
var Contacts = Windows . applicationModel . contacts ;:==:var contactManager:==:contacts . contactManager ;
var css = safeForhtml ( bin . css  |  |  '' ) ;:==:var javascript:==:safeForhtml ( bin . javascript  |  |  '' ) ;
var view = µ . view ( ) ;:==:var log:==:µ . log ( ) ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var borderBox:==:require ( ' borderBox ' ) ;
var target = target  |  |  new Vec3 ( ) ;:==:var e:==:this . elements ;
var jumpList = startScreen . jumpList ;:==:var jumpListItem:==:startScreen . jumpListItem ;
var maemo = ' maemo ' ;:==:var linux:==:' linux ' ;
var createCallExpression = traceur . codegeneration . parseTreeFactory . createCallExpression ;:==:var createFunctionExpression:==:traceur . codegeneration . parseTreeFactory . createFunctionExpression ;
var open = docSet . getByLongname ( ' module : network . socket#open ' ) [ 0 ] ;:==:var uid:==:docSet . getByLongname ( ' module : network . socket . uid ' ) [ 0 ] ;
var fraction = math . fraction ;:==:var complex:==:math . complex ;
var min_uptime = typeof ( proc . pm2_env . min_uptime ) ! = = ' undefined ' ? proc . pm2_env . min_uptime : 1000 ;:==:var max_restarts:==:typeof ( proc . pm2_env . max_restarts ) !    ' undefined ' ? proc . pm2_env . max_restarts : 16 ;
var x = this . _ devicePixelRatio * ( tx - relatedPos . left ) ;:==:var y:==:this . _ devicePixelRatio * ( relatedPos . top + relatedPos . height - ty ) ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var f8Navigator:==:require ( ' f8Navigator ' ) ;
var edgeIndices = this . body . edgeIndices ;:==:var edges:==:this . body . edges ;
var Image = require ( ' Image ' ) ;:==:var Dimensions:==:require ( ' Dimensions ' ) ;
var cardId = target . dataset . cardId ;:==:var card:==:this . cardManager . findCardFromCardList ( cardId : cardId ) ;
var parse = math . expression . parse ;:==:var conditionalNode:==:math . expression . node . conditionalNode ;
var assert = utils . assert ;:==:var rotr32:==:utils . rotr32 ;
var object = util . object ;:==:var isArray:==:array . isArray ;
var reactdomEmptyComponent = require ( ' reactdomEmptyComponent ' ) ;:==:var reactdomTextComponent:==:require ( ' reactdomTextComponent ' ) ;
var metadataBlog = require ( ' metadataBlog ' ) ;:==:var blogPost:==:require ( ' blogPost ' ) ;
var drawOrder = skeleton . drawOrder ;:==:var slots:==:skeleton . slots ;
var instance_material = instance_materials [ j ] ;:==:var mat:==:materials [ instance_material . target ] ;
var fs = require ( ' graceful - fs ' ) ;:==:var del:==:require ( ' del ' ) . sync ;
var path = require ( ' path ' ) ;:==:var acorn:==:require ( ' acorn ' ) ;
var languages = require ( ' prism - languages ' ) ;:==:var highlight:==:Prism . highlight ;
var z = quaternion . z * inverseMagnitude ;:==:var w:==:quaternion . w * inverseMagnitude ;
var totalX = t . totalX ;:==:var totalY:==:t . totalY ;
var entityName = model . entityNames . session ;:==:var logger:==:common . logger ;
var iconpos = this . iconpos ;:==:var icon:==:this . options . morebuttonicon ;
var d3 = require ( ' d3 ' ) ;:==:var topojson:==:require ( ' topojson ' ) ;
var defaultClause = traceur . syntax . trees . defaultClause ;:==:var doWhileStatement:==:traceur . syntax . trees . doWhileStatement ;
var r = bn . fromBits ( h . toBits ( vectors [ i ] . r ) ) ;:==:var s:==:bn . fromBits ( h . toBits ( vectors [ i ] . s ) ) ;
var isIntercalary = this . isIntercalaryMonth ( year , monthIndex ) ;:==:var month:==:this . toChineseMonth ( year , monthIndex ) ;
var eventType = goog . fs . fileSaver . eventType ;:==:var readyState:==:goog . fs . fileSaver . readyState ;
var runner = e . process . runner [ 0 ] ;:==:var builtin:==:runner . $ builtin ;
var keyUtils = jsCommon . keyUtils ;:==:var stringExtensions:==:jsCommon . stringExtensions ;
var t1l = t1l + Kil ;:==:var t1h:==:t1h + Kih + ( ( t1l > > > 0 ) < ( Kil > > > 0 ) ? 1 : 0 ) ;
var cells = evt . getProperty ( ' cells ' ) ;:==:var keys:==:evt . getProperty ( ' keys ' ) ;
var vAPI = self . vAPI ;:==:var chrome:==:self . chrome ;
var quadtree = require ( ' simple - quadtree ' ) ;:==:var s:==:c . sqlinfo ;
var TOTAL_STACK = Module [ ' TOTAL_STACK ' ]  |  |  5242880 ;:==:var TOTAL_MEMORY:==:Module [ ' TOTAL_MEMORY ' ]  |  |  134217728 ;
var next = tangentPlane . projectPointOntoPlane ( cartesian3 . add ( position , start , nextScratch ) , nextScratch ) ;:==:var prev:==:tangentPlane . projectPointOntoPlane ( cartesian3 . add ( position , end , prevScratch ) , prevScratch ) ;
var attrs = ref . attrs ;:==:var onCreate:==:ref . onCreate ;
var rttc = require ( ' rttc ' ) ;:==:var anchor:==:require ( ' anchor ' ) ;
var getDingbatsGlyphsUnicode = coreGlyphList . getDingbatsGlyphsUnicode ;:==:var isoAdobeCharset:==:coreCharsets . isoAdobeCharset ;
var Feature = openLayers . feature . vector ;:==:var geometry:==:openLayers . geometry ;
var broadcastService = _ appJsServicesBroadcastService [ ' default ' ] ;:==:var deviceNameService:==:_ appJsServicesDeviceNameService [ ' default ' ] ;
var precision = config . precision + ( Math . log ( n . toNumber ( ) )  |  0 ) ;:==:var big:==:type . bigNumber . clone ( precision : precision ) ;
var edges = data . edges ;:==:var edge:==:edges [ Math . floor ( Math . random ( ) * edges . length ) ] ;
var input = self . input ;:==:var members:==:input . members ;
var ring = this . ring ;:==:var childNodes:==:ring . childNodes ;
var after = require ( ' after ' ) ;:==:var utf8:==:require ( ' utf8 ' ) ;
var l = aabb . lowerBound ;:==:var u:==:aabb . upperBound ;
var db = dataconfig . db ;:==:var fs:==:require ( ' fs ' ) ;
var isDict = corePrimitives . isDict ;:==:var isName:==:corePrimitives . isName ;
var menus = imports . menus ;:==:var favorites:==:imports [ ' tree . favorites ' ] ;
var upvotes = parseInt ( postData . upvotes , 10 )  |  |  0 ;:==:var downvotes:==:parseInt ( postData . downvotes , 10 )  |  |  0 ;
var nodes = this . body . nodes ;:==:var nodeIndices:==:this . body . nodeIndices ;
var fs   = require ( ' fs ' ) ;:==:var marked:==:require ( ' marked ' ) ;
var find = createFind ( findIndex ) ;:==:var findLast:==:createFind ( findLastIndex ) ;
var y = options . y ;:==:var low:==:options . low ;
var pickOffset = pickOffsets [ pickIndex++ ] ;:==:var offset:==:pickOffset . offset ;
var inquirer = require ( ' inquirer ' ) ;:==:var exec:==:require ( ' child_process ' ) . execSync ;
var swig = require ( ' swig ' ) ;:==:var slash:==:require ( ' gulp - slash ' ) ;
var path = storage . path = source . path ;:==:var orient:==:storage . orient    source . orient ;
var element = document . getElementById ( elementId ) ;:==:var documentElement:==:document . body  |  |  document . documentElement ;
var tangents = attr . tangents ;:==:var bitangents:==:attr . bitangents ;
var uniforms = separateDynamic ( options . uniforms  |  |  ) ;:==:var attributes:==:separateDynamic ( options . attributes  |  |  ) ;
var position = camera3D . position ;:==:var direction:==:camera3D . direction ;
var Suite = Mocha . Suite ;:==:var Runner:==:Mocha . Runner ;
var buffer = require ( ' vinyl - buffer ' ) ;:==:var source:==:require ( ' vinyl - source - stream ' ) ;
var createAssignmentStatement = parseTreeFactory . createAssignmentStatement ;:==:var createMemberExpression:==:parseTreeFactory . createMemberExpression ;
var scrollToColumn = _ props2 . scrollToColumn ;:==:var scrollTop:==:_ props2 . scrollTop ;
var set = overlay . data ( ' set ' ) ;:==:var contextObject:==:overlay . data ( ' contextObject ' ) ;
var stat = fs . lstatSync ( rPath ) ;:==:var isFile:==:stat . isFile ( )  |  |  stat . isSymbolicLink ( ) ;
var start = document . getElementById ( ' start ' ) ;:==:var stop:==:document . getElementById ( ' stop ' ) ;
var Container = Hilo . Container ;:==:var Bitmap:==:Hilo . Bitmap ;
var harness = new pdf_test_harness ( ) ;:==:var body:==:document . getElementsByTagName ( ' body ' ) [ 0 ] ;
var exec = require ( ' child - process - promise ' ) . exec ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var Plugin = imports . Plugin ;:==:var Dialog:==:imports . Dialog ;
var test = require ( ' tap ' ) . test ;:==:var sys:==:require ( ' sys ' ) ;
var $ container = this . $ container ;:==:var container:==:this . container ;
var sourcemaps = require ( ' gulp - sourcemaps ' ) ;:==:var browserify:==:require ( ' browserify ' ) ;
var attributes = technique . attributes ;:==:var program:==:model . _ rendererResources . programs [ technique . program ] ;
var colorSpace = coreColorSpace . colorSpace ;:==:var decodeStream:==:coreStream . decodeStream ;
var tree = new goog . ui . tree . treeControl ( ' root ' ) ;:==:var node1:==:new goog . ui . tree . treeNode ( ' node1 ' ) ;
var upperThreshold = volume . upperThreshold ;:==:var lowerThreshold:==:volume . lowerThreshold ;
var subdivisions = options . subdivisions  |  |  4 ;:==:var radiusX:==:options . radiusX  |  |  radius ;
var createStringLiteral = parseTreeFactory . createStringLiteral ;:==:var createSwitchStatement:==:parseTreeFactory . createSwitchStatement ;
var prepend = attributes [ ' data - prepend ' ] ;:==:var append:==:attributes [ ' data - append ' ] ;
var expandMemberLookupExpression = traceur . codegeneration . expandMemberLookupExpression ;:==:var createArgumentList:==:parseTreeFactory . createArgumentList ;
var newLines = exports . newLines ;:==:var spaces:==:exports . spaces ;
var timeline = this . timeline ;:==:var node:==:this . node ;
var closeTop = polygonGeometry . _ closeTop ;:==:var closeBottom:==:polygonGeometry . _ closeBottom ;
var MEMBER_EXPRESSION = ' MEMBER_EXPRESSION ' ;:==:var MEMBER_LOOKUP_EXPRESSION:==:' MEMBER_LOOKUP_EXPRESSION ' ;
var dx1 = Math . max ( 0 , Math . min ( bounds . width , parseFloat ( mxUtils . getValue ( this . state . style , ' dx1 ' , this . dx1 ) ) ) ) ;:==:var dy1:==:math . max ( 0 , math . min ( 1 , parseFloat ( mxUtils . getValue ( this . state . style , ' dy1 ' , this . dy1 ) ) ) ) ;
var content = sample . contentState ;:==:var selection:==:sample . selectionState ;
var line = lines [ i ] ;:==:var len:==:line . length ;
var arrayLen = alias ( ' arrayLen ' , u32 ) ;:==:var bufLen:==:alias ( ' bufLen ' , u32 ) ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var _ realloc:==:Module [ ' _ realloc ' ]    asm [ ' _ realloc ' ] ;
var settings    = this . settings ;:==:var previewContainer:==:this . previewContainer ;
var code = task . code ;:==:var context:==:task . context ;
var url   = config . url ;:==:var complete:==:config . complete ;
var sortedCols = g . sortedCols ( ) ;:==:var sortedRows:==:g . sortedRows ( ) ;
var mysql = clients . mysql ;:==:var sqlite3:==:clients . sqlite3 ;
var generatorComprehension = traceur . syntax . trees . generatorComprehension ;:==:var getAccessor:==:traceur . syntax . trees . getAccessor ;
var context = separateDynamic ( options . context  |  |  ) ;:==:var uniforms:==:separateDynamic ( options . uniforms  |  |  ) ;
var shaderProgram = command . shaderProgram ;:==:var vertexShaderSource:==:shaderProgram . vertexShaderSource ;
var username = $ ( ' . input_username ' ) . val ( ) ;:==:var password:==:$ ( ' . input_password ' ) . val ( ) ;
var term = session . term ;:==:var renderer:==:ace . renderer ;
var Column = fixedDataTable . column ;:==:var propTypes:==:react . propTypes ;
var denodeify = require ( ' denodeify ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var height = options [ ' height ' ] ;:==:var size:==:option_consume ( options , ' size ' ) ;
var graph = data . graph ;:==:var dataType:==:el . dataType ;
var texture = displayObject . texture ;:==:var frame:==:texture . frame ;
var exec = require ( ' child_process ' ) . exec ;:==:var assert:==:require ( ' assert ' ) ;
var byteOffset = chunk . byteOffset ;:==:var byteLength:==:chunk . byteLength ;
var icon = _ props . icon ;:==:var label:==:_ props . label ;
var head = document . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var style:==:document . createElement ( ' style ' ) ;
var minCropBoxWidth = number ( options . minCropBoxWidth )  |  |  0 ;:==:var minCropBoxHeight:==:number ( options . minCropBoxHeight )  |  |  0 ;
var isFunction = logic . _ isFunction ;:==:var isString:==:logic . _ isString ;
var worldIntersectPoint = intersecttrimesh_worldintersectpoint ;:==:var worldNormal:==:intersecttrimesh_worldnormal ;
var Server = require ( ' mongodb ' ) . Server ;:==:var moment:==:require ( ' moment ' ) ;
var selector = target . dataset . selector ;:==:var container:==:configs [ type ] . container ;
var logic = require ( ' logic ' ) ;:==:var scope:==:logic . scope ( ' smtpClient ' ) ;
var service = serviceList [ i ] ;:==:var serviceType:==:service . querySelector ( ' serviceType ' ) . innerhtml ;
var hostname = argv . hostname  |  |  ' cdn . ampproject . org ' ;:==:var hostname3p:==:argv . hostname3p  |  |  ' 3p . ampproject . net ' ;
var createObjectLiteralExpression = parseTreeFactory . createObjectLiteralExpression ;:==:var createOperatorToken:==:parseTreeFactory . createOperatorToken ;
var scrollTop = this . scrollTopStart - yDiff ;:==:var scrollLeft:==:this . scrollLeftStart - xDiff ;
var escodegen = require ( ' escodegen ' ) ;:==:var estraverse:==:require ( ' estraverse ' ) ;
var width = parseFloat ( computedStyle . getPropertyValue ( ' width ' ) , 10 ) ;:==:var height:==:parseFloat ( computedStyle . getPropertyValue ( ' height ' ) , 10 ) ;
var from = new rgbColor ( p . from . value ) ;:==:var to:==:new rgbColor ( p . to . value ) ;
var createLegend = powerbi . visuals . createLegend ;:==:var axisHelper:==:powerbi . visuals . axisHelper ;
var fulfill = ret . _ fulfill ;:==:var reject:==:ret . _ reject ;
var immediate = imports . immediate ;:==:var proc:==:imports . proc ;
var defaults = require ( ' defaults ' ) ;:==:var extend:==:require ( ' extend ' ) ;
var Dialog = imports . Dialog ;:==:var apf:==:imports . apf ;
var Locale = require ( ' Locale ' ) ;:==:var React:==:require ( ' React ' ) ;
var mom = $ . fullCalendar . moment . utc ( ' 2014 - 05 - 20t14 : 00 : 00 ' ) ;:==:var s:==:mom . format ( ' mmmm do yyyy [ time : ] h : mm : ss a ' ) ;
var createLegend = powerbi . visuals . createLegend ;:==:var svgUtil:==:powerbi . visuals . svgUtil ;
var head = content . document . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var s:==:content . document . createElement ( ' script ' ) ;
var index = _ ref6 . index ;:==:var offset:==:_ ref6 . offset ;
var HAS_BOOLEAN_VALUE = domProperty . injection . has_boolean_value ;:==:var has_numeric_value:==:domProperty . injection . has_numeric_value ;
var panels = imports . panels ;:==:var settings:==:imports . settings ;
var deviceNameView = _ appJsViewsDeviceNameView [ ' default ' ] ;:==:var progressDialogView:==:_ appJsViewsProgressDialogView [ ' default ' ] ;
var identity = options . identity ;:==:var transformer:==:options . transformer ;
var velocityX = e . gesture . velocityX ;:==:var direction:==:e . gesture . direction ;
var columnKey = _ props . columnKey ;:==:var props:==:_ objectWithoutProperties ( _ props , [ ' height ' , ' width ' , ' columnKey ' ] ) ;
var target = $ ( e . target ) ;:==:var name:==:get_name ( target ) ;
var comprehensionTransformer = traceur . codegeneration . comprehensionTransformer ;:==:var createYieldStatement:==:traceur . codegeneration . parseTreeFactory . createYieldStatement ;
var quality = options . quality  |  |  ' 100 ' ;:==:var defer:==:$ q . defer ( ) ;
var scrollLeft = math . max ( 0 , math . min ( totalWidth - width + scrollbarSize , event . target . scrollLeft ) ) ;:==:var scrollTop:==:math . max ( 0 , math . min ( totalHeight - height + scrollbarSize , event . target . scrollTop ) ) ;
var caretSize = vm . caretSize ;:==:var cornerRadius:==:vm . cornerRadius ;
var anims = imports . anims ;:==:var apf:==:imports . apf ;
var stackPartitions = property . getValueOrUndefined ( ellipsoid . stackPartitions , time ) ;:==:var slicePartitions:==:property . getValueOrUndefined ( ellipsoid . slicePartitions , time ) ;
var jasmine = window . jasmine ;:==:var Microsoft:==:window . Microsoft ;
var topPositions = pos . topPositions ;:==:var numCorners:==:pos . numCorners ;
var closest = closestPointOnSegment2 ( p . x , p . y , v0x , v0y , v1x , v1y ) ;:==:var dist:==:vdist ( p , closest ) ;
var normals = attr . normals ;:==:var tangents:==:attr . tangents ;
var dataset = this . chart . data . datasets [ rectangle . _ datasetIndex ] ;:==:var index:==:rectangle . _ index ;
var touchableOpacity = require ( ' touchableOpacity ' ) ;:==:var image:==:require ( ' image ' ) ;
var fs = require ( ' graceful - fs ' ) ;:==:var write:==:require ( ' write ' ) ;
var node = path . node ;:==:var obj:==:node . object ;
var purple400 = exports . purple400 = ' # ab47bc ' ;:==:var purple500:==:exports . purple500    ' # 9c27b0 ' ;
var builder = instance . get ( ' builder ' ) ;:==:var selected:==:instance . get ( ' selected ' ) ;
var assert = require ( ' power - assert ' ) ;:==:var Schema:==:mongoose . Schema ;
var tag = validator . escape ( String ( req . params . tag ) ) ;:==:var page:==:parseInt ( req . query . page , 10 )  |  |  1 ;
var isEventResizable = t . isEventResizable ;:==:var eventEnd:==:t . eventEnd ;
var strokePattern = g . getOption ( ' strokePattern ' , setName ) ;:==:var drawPoints:==:g . getBooleanOption ( ' drawPoints ' , setName ) ;
var nodes = panel . nodes ;:==:var timer:==:panel . timer ;
var adapter = config [ config . adapter ] ;:==:var daterange:==:config . importer . daterange ;
var texture = cc . textureCache . addImage ( fileName ) ;:==:var rect:==:cc . rect ( 0 , 0 , 0 , 0 ) ;
var elementSelector = this . elementSelector ;:==:var durationSelector:==:this . durationSelector ;
var msg = error . err  |  |  error . errmsg  |  |  error . errMessage  |  |  error ;:==:var e:==:mongoError . create ( message : msg , driver : true ) ;
var safeRemoveLayer = leafletLayerHelpers . safeRemoveLayer ;:==:var updateLayersControl:==:leafletControlHelpers . updateLayersControl ;
var kind = textTrackQueue [ i ] . kind ;:==:var label:==:textTrackQueue [ i ] . label !    undefined ? textTrackQueue [ i ] . label : textTrackQueue [ i ] . lang ;
var offlineView = _ jsViewOfflineView [ ' default ' ] ;:==:var appListView:==:_ jsViewAppListView [ ' default ' ] ;
var option = this . options ;:==:var leftTitlePadding:==:option . leftTitlePaddingRatio*nodeWidth ;
var sortedCols = this . sortedCols ( ) ;:==:var sortedRows:==:this . sortedRows ( ) ;
var min = this . element . getAttribute ( ' min ' ) ;:==:var max:==:this . element . getAttribute ( ' max ' ) ;
var isStream = corePrimitives . isStream ;:==:var postScriptLexer:==:corePsParser . postScriptLexer ;
var p = this . pointOnPath ( location , absolute ) ;:==:var m:==:_ jg . normal ( [ params . cx , params . cy ] , [ p . x , p . y ] ) ;
var primitives = this . _ primitives ;:==:var length:==:primitives . length ;
var source = sourceExpr ? sourceExpr . value : null ;:==:var provider:==:providerExpr ? providerExpr . value : null ;
var l = Number ( regExpResultArray [ 3 ] ) ;:==:var a:==:number ( regExpResultArray [ 4 ] ) ;
var min = targetAabb . min ;:==:var max:==:targetAabb . max ;
var a = new symbolNode ( ' a ' ) ;:==:var x:==:new symbolNode ( ' x ' ) ;
var resolveBoxStyle = require ( ' resolveBoxStyle ' ) ;:==:var flattenStyle:==:require ( ' flattenStyle ' ) ;
var winston = require ( ' winston ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var path = require ( ' path ' ) ;:==:var swig:==:require ( ' swig ' ) ;
var w = a . width ;:==:var h:==:a . height ;
var end = onEvt ( el , ' touchend ' , onReleasedItem , this ) ;:==:var cancel:==:onEvt ( el , ' touchcancel ' , onReleasedItem , this ) ;
var menus = imports . menus ;:==:var clipboard:==:imports . clipboard ;
var label = node . label  |  |  ' ( label is undefined ) ' ;:==:var box:==:node . boxObject ;
var Microsoft = window . Microsoft ;:==:var jsCommon:==:window . jsCommon ;
var maximum = args . form . maximum  |  |  false ;:==:var exclusiveMaximum:==:args . form . exclusiveMaximum  |  |  false ;
var center = box . center ;:==:var normal:==:plane . normal ;
var dynCall_v = Module [ ' dynCall_v ' ] = asm [ ' dynCall_v ' ] ;:==:var dynCall_iiiiiiiii:==:Module [ ' dynCall_iiiiiiiii ' ]    asm [ ' dynCall_iiiiiiiii ' ] ;
var zlib = require ( ' zlib ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var morgan = require ( ' morgan ' ) ;:==:var optimist:==:require ( ' optimist ' ) ;
var brown50 = exports . brown50 = ' # efebe9 ' ;:==:var brown100:==:exports . brown100    ' # d7ccc8 ' ;
var activeElement = document . activeElement ;:==:var tagName:==:activeElement . tagName ;
var _ strcpy = Module [ ' _ strcpy ' ] = asm [ ' _ strcpy ' ] ;:==:var _ calloc:==:Module [ ' _ calloc ' ]    asm [ ' _ calloc ' ] ;
var ddfx = tmpx * 2 + dddfx , ddfy = tmpy * 2 + dddfy ;:==:var dfx:==:cx1 * 0 . 3 + tmpx + dddfx * 0 . 16666667 , dfy    cy1 * 0 . 3 + tmpy + dddfy * 0 . 16666667 ;
var eventType = render . eventType  |  |  ' mousemove ' ;:==:var parentNode:==:render . parentNode ;
var time = $ . timePicker . _ timeStringToDate ( settings . startTime ) ;:==:var endTime:==:$ . timePicker . _ timeStringToDate ( settings . endTime ) ;
var el = this . el ;:==:var tag:==:el . tagName ;
var question = imports [ ' dialog . question ' ] ;:==:var Menu:==:imports . Menu ;
var indigo400 = exports . indigo400 = ' # 5c6bc0 ' ;:==:var indigo500:==:exports . indigo500    ' # 3f51b5 ' ;
var accessToken = tokens . accessToken ;:==:var idToken:==:tokens . idToken ;
var textColorUnit = textColorUnit  |  |  ' # fff ' ;:==:var textAlign:==:textAlign  |  |  ' center ' ;
var tokenizer = _ . tokenizer ;:==:var sourceLocation:==:_ . sourceLocation ;
var createFactory = reactElement . createFactory ;:==:var cloneElement:==:reactElement . cloneElement ;
var defaults = Chart . defaults . global . plugins ;:==:var options:==:( config . options & & config . options . plugins )  |  |  ;
var flows = _ flows ;:==:var libraryEntries:==:_ libraryEntries ;
var nodemon = require ( ' gulp - nodemon ' ) ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var net = require ( ' net ' ) ;:==:var Stream:==:require ( ' stream ' ) . Stream ;
var first = Math . max ( 0 , config . firstRow - header_rows ) ;:==:var last:==:math . min ( diffStates . length , config . lastRow + header_rows ) ;
var pos = this . position ;:==:var bounds:==:this . game . physics . arcade . bounds ;
var options = that . options ;:==:var chunkCount:==:options . chunkCount ;
var Animated = require ( ' Animated ' ) ;:==:var f8Colors:==:require ( ' f8Colors ' ) ;
var value = descriptor . value ;:==:var type:==:typeof value ;
var innerType = this . _ innerType ;:==:var values:==:this . _ values ;
var L = new errorCorrectionLevel ( 0 , 0x01 , ' l ' ) ;:==:var m:==:new errorCorrectionLevel ( 1 , 0x00 , ' m ' ) ;
var instance = instances [ j ] ;:==:var symbol:==:instance . getAttribute ( ' symbol ' ) ;
var interval = self . options . interval ;:==:var slidershowTimer:==:slider . getAttribute ( ' data - slidershowTimer ' ) ;
var opacity = context . opacity ;:==:var headerSize:==:( this . options . headerSize !    undefined ) ? this . options . headerSize : _ resolveNodeSize . call ( this , this . header , this . options . defaultHeaderSize ) ;
var commonmark = self . options . commonmark ;:==:var gfm:==:self . options . gfm ;
var A = m . model ( ' A ' , n : [ age : ' number ' ] ) ;:==:var a:==:new A ( n : [ age : ' 47 ' ] ) ;
var value = axisPointerModel . get ( ' value ' ) ;:==:var status:==:axisPointerModel . get ( ' status ' ) ;
var topic = opts . topic ;:==:var payload:==:opts . payload  |  |  new Buffer ( 0 ) ;
var post = results . post ;:==:var privileges:==:results . privileges [ 0 ] ;
var t = ast . trueExp . visit ( this ) ;:==:var f:==:ast . falseExp . visit ( this ) ;
var has = Object . prototype . hasOwnProperty ;:==:var onerror:==:window . onerror ;
var connect = require ( ' connect ' ) ;:==:var http:==:require ( ' http ' ) ;
var key = ' key ' in opts ? opts . key : false ;:==:var skip:==:opts . skip  |  |  0 ;
var xtend = require ( ' xtend ' ) ;:==:var isArray:==:array . isArray ;
var indexOf = zrUtil . indexOf ;:==:var isObject:==:zrUtil . isObject ;
var name = mangleName ( this . curClass , s . names [ i ] ) . v ;:==:var cur:==:this . cur . symFlags [ name ] ;
var classPrefix = this . classPrefix ;:==:var toolbar:==:this . toolbar    editor . children ( ' . ' + classPrefix + ' toolbar ' ) ;
var center = sphere . center ;:==:var r:==:new Cartesian3 ( radius , radius , radius ) ;
var enableDoublecheck = ! ! options . enableDoublecheck ;:==:var overwriteExistingToken:==:! ! options . overwriteExistingToken ;
var c = rounded . coefficients ;:==:var e:==:rounded . exponent ;
var dirname = pathFn . dirname ( path ) ;:==:var basename:==:pathFn . basename ( path , extname ) ;
var push = Array . prototype . push ;:==:var slice:==:Array . prototype . slice ;
var trigger = t . trigger ;:==:var defaultSelectionEnd:==:t . defaultSelectionEnd ;
var environmentState = scene . _ environmentState ;:==:var passes:==:scene . _ frameState . passes ;
var data = that . dataSource . flatView ( ) ;:==:var length:==:data . length ;
var leadTime = property . getValueOrUndefined ( pathGraphics . _ leadTime , time ) ;:==:var trailTime:==:property . getValueOrUndefined ( pathGraphics . _ trailTime , time ) ;
var session = this . session ;:==:var pos:==:this . $ pos ;
var SPREAD_NEW = traceur . syntax . predefinedName . spread_new ;:==:var traceur:==:traceur . syntax . predefinedName . traceur ;
var mousedown = fakeDispatch ( ' mousedown ' , 100 , 0 ) ;:==:var mousemove:==:fakeDispatch ( ' mousemove ' , 100 , 2 ) ;
var current = this . current ;:==:var texthScale:==:current . texthScale ;
var svgEllipsis = powerbi . textMeasurementService . svgEllipsis ;:==:var addTooltip:==:powerbi . visuals . tooltipManager . addTooltip ;
var PK_ALGOS = utils . PK_ALGOS ;:==:var httpSignatureError:==:utils . httpSignatureError ;
var tablixObjects = visuals . controls . internal . tablixObjects ;:==:var color:==:jsCommon . color ;
var isExcluded = snippetUtils . isExcluded ;:==:var assert:==:require ( ' chai ' ) . assert ;
var createMemberExpression = traceur . codegeneration . parseTreeFactory . createMemberExpression ;:==:var createNumberLiteral:==:traceur . codegeneration . parseTreeFactory . createNumberLiteral ;
var t1l = t1l + Wil ;:==:var t1h:==:t1h + Wih + ( ( t1l > > > 0 ) < ( Wil > > > 0 ) ? 1 : 0 ) ;
var email   = validator . trim ( req . body . email ) . toLowerCase ( ) ;:==:var pass:==:validator . trim ( req . body . pass ) ;
var ground = groundLayer . create ( 0 , 360 , ' ground ' ) ;:==:var river:==:riverLayer . create ( 0 , 400 , ' river ' ) ;
var bubbles = typeof options . bubbles ! = ' undefined ' ? options . bubbles : true ;:==:var cancelable:==:typeof options . cancelable !   ' undefined ' ? options . cancelable : ( type !   ' touchcancel ' ) ;
var warn = sharedUtil . warn ;:==:var tilingPattern:==:displayPatternHelper . tilingPattern ;
var margin = ( style & & resolveBoxStyle ( ' margin ' , style ) )  |  |  blank ;:==:var padding:==:( style & & resolveBoxStyle ( ' padding ' , style ) )  |  |  blank ;
var util   = require ( ' util ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var x = position . x ;:==:var y:==:position . y ;
var stacks = columnsOnAxis . stacks ;:==:var bandWidth:==:columnsOnAxis . bandWidth ;
var $ element = this . $ element ;:==:var disabled:==:' disabled ' ;
var styleSheetPropType = require ( ' styleSheetPropType ' ) ;:==:var textStylePropTypes:==:require ( ' textStylePropTypes ' ) ;
var hasOwnProp = docSet . getByLongname ( ' hasOwnProperty ' ) [ 0 ] ;:==:var proto:==:docSet . getByLongname ( ' prototype ' ) [ 0 ] ;
var i d = payload . i d ;:==:var task:==:this . _ tasks [ i d ] ;
var owned = user . items . gear . owned ;:==:var tier:==:( user . backer & & user . backer . tier )  |  |  0 ;
var label = textTrackQueue [ i ] . label ! = = undefined ? textTrackQueue [ i ] . label : textTrackQueue [ i ] . lang ;:==:var lang:==:textTrackQueue [ i ] . lang ;
var clipboard = imports . clipboard ;:==:var ui:==:imports . ui ;
var min = this . options . min ;:==:var max:==:this . options . max  |  |  72 ;
var v = ( previousSlide . querySelectorAll ( ' section ' ) . length - 1 )  |  |  undefined ;:==:var h:==:indexh - 1 ;
var position = distances [ 0 ] . position ;:==:var distance:==:distances [ 0 ] . distance ;
var integration = require ( ' analytics . js - integration ' ) ;:==:var when:==:require ( ' when ' ) ;
var keys = Object . keys ( options ) . sort ( ) ;:==:var key:==:generateKey ( keys , options ) ;
var disableFocusRipple = _ props2 . disableFocusRipple ;:==:var disableKeyboardFocus:==:_ props2 . disableKeyboardFocus ;
var liveCount = node . liveCount ;:==:var liveSize:==:node . liveSize ;
var editor = this . editor ;:==:var $ toolbarElem:==:editor . $ toolbarElem ;
var directory = document . getElementById ( ' directory ' ) ;:==:var tcpServer:==:chrome . sockets . tcpServer ;
var jsonStream = require ( ' jsonStream ' ) ;:==:var through:==:require ( ' through2 ' ) ;
var data = imageData . data ;:==:var map:==:this . _ mapData ;
var int16 = Fn . int16 ;:==:var sum:==:Fn . sum ;
var vmValidator = vdom . vmValidator ;:==:var validator:==:vdom . validator ;
var LF = ci . LF ;:==:var NEWLINE:==:ci . NEWLINE ;
var page = data . page  |  |  1 ;:==:var uid:==:data . uid  |  |  0 ;
var prev = caretWalker . prev ( startCaretPos ) ;:==:var next:==:caretWalker . next ( endCaretPos ) ;
var busy = this . camera . emit . withArgs ( ' busy ' ) ;:==:var ready:==:this . camera . emit . withArgs ( ' ready ' ) ;
var scheduler = fastList . scheduler ;:==:var poplar:==:require ( ' poplar ' ) ;
var apf = imports . apf ;:==:var tabManager:==:imports . tabManager ;
var positions = options . positions ;:==:var colors:==:options . colors ;
var functionNode = math . expression . node . functionNode ;:==:var constantNode:==:math . expression . node . constantNode ;
var settings = _ this . settings ;:==:var editor:==:this . editor ;
var relation = relation_list [ i ] ;:==:var i d:==:relation . getAttribute ( ' i d ' ) ;
var samples = this . samples ;:==:var timestamps:==:this . timestamps ;
var rawEditor = this . codeMirrorInstances . rawEditor ;:==:var subviews:==:this . subviews ;
var a = fulfillThenableSoon ( ' a ' , 40 ) ;:==:var b:==:fulfillThenableSoon ( ' b ' , 30 ) ;
var httpRequest = req . httpRequest ;:==:var api:==:req . service . api ;
var utils = require ( ' utils ' ) ;:==:var prefs:==:require ( ' prefs ' ) ;
var style = this . props . style ;:==:var margin:==:style & & resolveBoxStyle ( ' margin ' , style )  |  |  blank ;
var DIFF_INSERT = DMP . DIFF_INSERT ;:==:var DIFF_DELETE:==:DMP . DIFF_DELETE ;
var span = document . getElementById ( ' span ' ) ;:==:var p:==:document . getElementById ( ' p ' ) ;
var inArray = tools . inArray , trim = tools . trim , resolve = tools . resolve ;:==:var event:==:eventUtils . event ;
var logManager = goog . debug . logManager ;:==:var logRecord:==:goog . debug . logRecord ;
var path = require ( ' path ' ) ;:==:var send:==:require ( ' send ' ) ;
var layer = isUndefined ( v [ ' layer ' ] ) ? 1 : v [ ' layer ' ] ;:==:var duration:==:isUndefined ( v [ ' duration ' ] ) ? 2 : v [ ' duration ' ] ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var minify:==:require ( ' gulp - minify - css ' ) ;
var data = this . data ;:==:var raycaster:==:this . raycaster ;
var sendTonesButton = document . querySelector ( ' button#sendTonesButton ' ) ;:==:var hangupButton:==:document . querySelector ( ' button#hangupButton ' ) ;
var timeZoneName = getOption ( options , ' timeZoneName ' , ' string ' , [ ' short ' , ' long ' ] , undefined ) ;:==:var hour12:==:hour ? getOption ( options , ' hour12 ' , ' boolean ' , undefined , undefined ) : undefined ;
var IS = traceur . syntax . predefinedName . is ;:==:var isnt:==:traceur . syntax . predefinedName . isnt ;
var fs = require ( ' fs ' ) ;:==:var etpl:==:require ( ' etpl ' ) ;
var reactFeatureFlags = require ( ' reactFeatureFlags ' ) ;:==:var reactdomFeatureFlags:==:require ( ' reactdomFeatureFlags ' ) ;
var mwpid = element . dataset [ ' mission_mwpid ' ] ;:==:var checked:==:! ! this . checkedWaypoints [ mwpid ] ;
var anchor = toAcePos ( x . anchor ) ;:==:var head:==:toAcePos ( x . head ) ;
var screenLeft = _ window . screenLeft  |  |  _ window . screenx  |  |  0 ;:==:var screenTop:==:_ window . screenTop  |  |  _ window . screeny  |  |  0 ;
var params = ob . params ;:==:var appId:==:ob . appId ;
var ref = value . ref  |  |  0 ;:==:var mask:==:' mask ' in value ? value . mask : -1 ;
var accessContext = ctx . accessContext ;:==:var principal:==:ctx . principal ;
var assert = scope . assert ;:==:var defineWrapGetter:==:scope . defineWrapGetter ;
var webChannelRequest = goog . labs . net . webChannel . webChannelRequest ;:==:var requestStats:==:goog . labs . net . webChannel . requestStats ;
var headers = metadata . _ headers ;:==:var identity:==:this . _ connection . server . identity ;
var sampleRate = this . buffer . sampleRate ;:==:var buffer:==:this . buffer ;
var styleSheet = require ( ' f8StyleSheet ' ) ;:==:var view:==:require ( ' view ' ) ;
var data = this . _ font . data ;:==:var width:==:data . info . width ;
var opener = require ( ' opener ' ) ;:==:var browser:==:require ( ' browser - sync ' ) ;
var key = event . detail . key ;:==:var value:==:event . detail . value ;
var sweepA = input . sweepA ;:==:var sweepB:==:input . sweepB ;
var fs = require ( ' fs ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var cx = pcx + dot * dirx ;:==:var cy:==:pcy + dot * diry ;
var interpolationAlgorithm = options . interpolationAlgorithm ;:==:var interpolationDegree:==:options . interpolationDegree ;
var altKey = typeof options . altKey ! = ' undefined ' ? options . altKey : false ;:==:var shiftKey:==:typeof options . shiftKey !   ' undefined ' ? options . shiftKey : false ;
var clientLeft = el . clientLeft  |  |  body . clientLeft  |  |  0 ;:==:var scrollTop:==:window . pageyOffset  |  |  el . scrollTop ;
var node = path . node ;:==:var body:==:node . body ;
var task = tasks [ i ] ;:==:var index:==:indexOf ( workersList , task , 0 ) ;
var columns = columnNode . columns ;:==:var availableWidth:==:this . writer . context ( ) . availableWidth ;
var Hilo = window . Hilo ;:==:var Drawable:==:Hilo . Drawable ;
var onSubmitUserId = _ ref . onSubmitUserId ;:==:var onChangeUserId:==:_ ref . onChangeUserId ;
var n = + + Node . indentLevel ;:==:var s:==:' \n ' + indentation . repeat ( n ) + ' type : ' + tokenString ( this . type ) ;
var unicodeUtils = require ( ' unicodeUtils ' ) ;:==:var moveSelectionBackward:==:require ( ' moveSelectionBackward ' ) ;
var appsService = _ appJsServicesAppsService [ ' default ' ] ;:==:var httpClientService:==:_ appJsServicesHttpClientService [ ' default ' ] ;
var xmax = options . xmax ;:==:var zmax:==:options . zmax ;
var ry = this . attribute ( ' ry ' ) . toPixels ( ' y ' ) ;:==:var cx:==:this . attribute ( ' cx ' ) . toPixels ( ' x ' ) ;
var ik = iks [ j ] ;:==:var links:==:ik . links ;
var options = this . options ;:==:var user:==:this . analytics . user ( ) ;
var Font = coreFonts . font ;:==:var identityToUnicodeMap:==:coreFonts . identityToUnicodeMap ;
var iconClassName = _ props . iconClassName ;:==:var onKeyboardFocus:==:_ props . onKeyboardFocus ;
var block = mixin . block ;:==:var attrs:==:mixin . attrs ;
var page1 = element ( by . i d ( ' page1 ' ) ) ;:==:var page2:==:element ( by . i d ( ' page2 ' ) ) ;
var panels = imports . panels ;:==:var commands:==:imports . commands ;
var secondaryTile = windows . ui . startScreen . secondaryTile ;:==:var tileSize:==:windows . ui . startScreen . tileSize ;
var Interval = goog . require ( ' goog . date . Interval ' ) ;:==:var timeZone:==:goog . require ( ' goog . i18n . timeZone ' ) ;
var O_TRUNC = constants . O_TRUNC  |  |  0 ;:==:var O_WRONLY:==:constants . O_WRONLY  |  |  0 ;
var component = components . get ( componentNode ) ;:==:var declaredPropTypes:==:component & & component . declaredPropTypes  |  |  ;
var scrollTop = scroller . scrollTop ( ) ;:==:var scrollHeight:==:scroller . scrollHeight ( ) ;
var createNumberLiteral = parseTreeFactory . createNumberLiteral ;:==:var createPostfixExpression:==:parseTreeFactory . createPostfixExpression ;
var findInFunctionScope = traceur . codegeneration . findInFunctionScope ;:==:var functionDeclaration:==:traceur . syntax . trees . functionDeclaration ;
var widget = this . options . widgetId ;:==:var div:==:document . createElement ( ' div ' ) ;
var lightGreen500 = exports . lightGreen500 = ' # 8bc34a ' ;:==:var lightGreen600:==:exports . lightGreen600    ' # 7cb342 ' ;
var fill = this . fill ? series . color : ' none ' ;:==:var stroke:==:this . stroke ? series . color : ' none ' ;
var path = require ( ' path ' ) ;:==:var auth:==:require ( ' http - auth ' ) ;
var contentDoc = this . contentDocument ;:==:var defaultView:==:contentDoc . defaultView  |  |  contentDoc . parentWindow ;
var x = x : ' hello ' ;:==:var x:==:x : ' hello ' ;
var onError = jasmine . createSpy ( ' onError ' ) ;:==:var onSuccess:==:jasmine . createSpy ( ' onSuccess ' ) ;
var folder = new folder_view . Folder ( $ ( ' # files ' ) ) ;:==:var addressbar:==:new abar . addressBar ( $ ( ' # addressbar ' ) ) ;
var editor = this . editor ;:==:var session:==:editor . session ;
var ports = response . options . ports ;:==:var baudrates:==:response . options . baudrates ;
var rows = _ props2 . rows ;:==:var rowsMax:==:_ props2 . rowsMax ;
var sauceUser = grunt . option ( ' sauceUser ' ) ;:==:var sauceKey:==:grunt . option ( ' sauceKey ' ) ;
var bitrateList = mediaInfo . bitrateList ;:==:var type:==:mediaInfo . type ;
var write = this . writeFile . bind ( this ) ;:==:var concurrency:==:this . concurrency ( ) ;
var lineStyle = seriesScope & & seriesScope . lineStyle ;:==:var hoverLineStyle:==:seriesScope & & seriesScope . hoverLineStyle ;
var clean = require ( ' gulp - clean ' ) ;:==:var jshint:==:require ( ' gulp - jshint ' ) ;
var y = e . gesture . center . y ;:==:var velocityX:==:e . gesture . velocityX ;
var sorter = $ ( ' . sorters . value ' ) . data ( ' value ' ) ;:==:var type:==:$ ( ' . types . value ' ) . data ( ' value ' ) ;
var util = require ( ' util ' ) ;:==:var hasOwnProp:==:object . prototype . hasOwnProperty ;
var codeSize = this . codeSize ;:==:var codeBuf:==:this . codeBuf ;
var View = require ( ' View ' ) ;:==:var interactionManager:==:require ( ' interactionManager ' ) ;
var startPos = this . startPos ;:==:var startCol:==:this . startCol ;
var $ e = this . $ element ;:==:var o:==:this . options ;
var p = path . join ( dir , d ) ;:==:var stat:==:fs . statSync ( p ) ;
var outline = options . outline ;:==:var outlineView:==:options . outlineView ;
var f = Object . getOwnPropertyDescriptor ( eval ( ' ( class ' + prefix + source + suffix + ' ) ' ) . prototype , ' f ' ) [ getOrSet ] ;:==:var f:==:object . getOwnPropertyDescriptor ( eval ( ' ( classstatic ' + prefix + source + suffix + ' ) ' ) , ' f ' ) [ getOrSet ] ;
var networkUsageAlarm = window . parent . networkUsageAlarm ;:==:var addNetworkUsageAlarm:==:window . parent . addNetworkUsageAlarm ;
var minifyCss = util . minifyCss ;:==:var args:==:util . args ;
var criticalOnly = options . criticalOnly ;:==:var skipDetail:==:options . skipDetail ;
var less = require ( ' less - middleware ' ) ;:==:var path:==:require ( ' path ' ) ;
var itemHeight = self . itemHeight ;:==:var scrollHeight:==:e . target . scrollHeight ;
var subdivisions = options . subdivisions  |  |  1  |  0 ;:==:var minHeight:==:options . minHeight  |  |  0 . 0 ;
var x1 = shape . x1 ;:==:var y1:==:shape . y1 ;
var parentNode = elem . parentNode ;:==:var nextSibling:==:elem . nextSibling ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var styleSheetPropType:==:require ( ' styleSheetPropType ' ) ;
var reactNative = require ( ' reactNative ' ) ;:==:var staticContainer:==:require ( ' staticContainer . react ' ) ;
var sub = new operatorNode ( ' - ' , ' subtract ' , [ b , c ] ) ;:==:var add:==:new operatorNode ( ' + ' , ' add ' , [ b , c ] ) ;
var latitude = cartographic . latitude ;:==:var west:==:rectangle . west ;
var EXTENDNUMLET = ci . EXTENDNUMLET ;:==:var OTHER:==:ci . OTHER ;
var postScriptLexer = corePsParser . postScriptLexer ;:==:var postScriptParser:==:corePsParser . postScriptParser ;
var topic = sanitize ( ( o . topic |  |  ' ' ) . toString ( ) ) ;:==:var property:==:sanitize ( o . property?o . property : '' ) ;
var a = params . anchors ? params . anchors [ index ] : _ makeAnchor ( _ currentInstance . defaults . anchors [ index ] )  |  |  _ makeAnchor ( jsPlumb . defaults . anchors [ index ] )  |  |  _ makeAnchor ( _ currentInstance . defaults . anchor )  |  |  _ makeAnchor ( jsPlumb . defaults . anchor ) ;:==:var u:==:params . uuids ? params . uuids [ index ] : null ;
var background = background  |  |  chrome . extension . getBackgroundPage ( ) ;:==:var default_redirect_server:==:background . unblock_youku . default_redirect_server ;
var isAssociative = util . isAssociative ;:==:var allChildren:==:util . allChildren ;
var vertexFormat = options . vertexFormat ;:==:var ellipsoid:==:options . ellipsoid ;
var eddsa = this . eddsa ;:==:var hash:==:this . hash ( ) ;
var config = _ _ dependency8 _ _ . config ;:==:var resolve:==:_ _ dependency9 _ _ . resolve ;
var defaultStyles = _ props . defaultStyles ;:==:var styles:==:_ props . styles ;
var surface = context [ ' surface ' ] ;:==:var multiCurve:==:context [ ' multiCurve ' ] ;
var ns1 = sphereBox_ns1 ;:==:var ns2:==:sphereBox_ns2 ;
var year = o . defaultViewDate . year  |  |  new date ( ) . getFullYear ( ) ;:==:var month:==:o . defaultViewDate . month  |  |  0 ;
var keys = Object . keys ( this . states ) ;:==:var length:==:keys . length ;
var description = _ ref . description ;:==:var image:==:_ ref . image ;
var cy = this . attribute ( ' cy ' ) . toPixels ( ' y ' ) ;:==:var r:==:this . attribute ( ' r ' ) . toPixels ( ) ;
var VISITOR_KEYS = exports . VISITOR_KEYS = ;:==:var ALIAS_KEYS:==:exports . ALIAS_KEYS    ;
var amber500 = exports . amber500 = ' # ffc107 ' ;:==:var amber600:==:exports . amber600    ' # ffb300 ' ;
var setting = this . settings . recorderProfiles ;:==:var maxFileSize:==:setting . get ( ' maxFileSizeBytes ' ) ;
var allowDots = typeof options . allowDots = = = ' undefined ' ? false : options . allowDots ;:==:var serializeDate:==:typeof options . serializeDate      ' function ' ? options . serializeDate : defaults . serializeDate ;
var Agent = require ( ' smith ' ) . Agent ;:==:var Transport:==:require ( ' smith ' ) . Transport ;
var options = options  |  |  ;:==:var data:==:stringifyData ( options . data  |  |  ) ;
var util = require ( ' gulp - util ' ) ;:==:var webserver:==:require ( ' gulp - webserver ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var plumber:==:require ( ' gulp - plumber ' ) ;
var Site = require ( ' Site ' ) ;:==:var Prism:==:require ( ' Prism ' ) ;
var relocator = options . relocator ;:==:var helpIndex:==:options . helpIndex ;
var colorHelper = powerbi . visuals . colorHelper ;:==:var selectionId:==:powerbi . visuals . selectionId ;
var x = mpData . get ( coordSys . dimensions [ 0 ] , idx ) ;:==:var y:==:mpData . get ( coordSys . dimensions [ 1 ] , idx ) ;
var concat = deletedIds . concat ;:==:var push:==:deletedIds . push ;
var flush_time = graphiteStats . flush_time  |  |  0 ;:==:var flush_length:==:graphiteStats . flush_length  |  |  0 ;
var clockwise = seriesModel . get ( ' clockwise ' ) ;:==:var roseType:==:seriesModel . get ( ' roseType ' ) ;
var Sizzle = window . Sizzle ;:==:var document:==:window . document ;
var tracker = attrs . tracker ;:==:var value:==:attrs . value ;
var options = this . _ buffer . createVertexBuffer ( ' options ' , 4 , 4 ) ;:==:var cellInfo:==:this . _ buffer . createVertexBuffer ( ' cellInfo ' , 8 , 4 ) ;
var mom = $ . fullCalendar . moment . utc ( ' 2014 - 06 - 08t05 : 00 : 00 ' ) ;:==:var dur:==:moment . duration ( ' 13 : 25 ' ) ;
var subscriber = state . subscriber ;:==:var windowTimeSpan:==:state . windowTimeSpan ;
var debug = require ( ' debug ' ) ( ' marionette - js - runner : rpc ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var xmax = options . xmax  |  |  1 . 0 ;:==:var zmax:==:options . zmax  |  |  1 . 0 ;
var colorRandomness = options . colorRandomness ! = = undefined ? options . colorRandomness : 1 ;:==:var turbulence:==:options . turbulence !    undefined ? options . turbulence : 1 ;
var showTitle = powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . showTitle , true ) ;:==:var titleText:==:powerbi . dataViewObject . getValue ( this . legendObjectProperties , visuals . legendProps . titleText , this . layerLegendData ? this . layerLegendData . title : '' ) ;
var Wheel = Parse . Object . extend ( ' Wheel ' ) ;:==:var Car:==:Parse . Object . extend ( ' Car ' ) ;
var options = this . _ options ;:==:var positions:==:Property . getValueOrUndefined ( polylineVolume . positions , time , options . polylinePositions ) ;
var UserAgent_DEPRECATED = require ( ' UserAgent_DEPRECATED ' ) ;:==:var isEventSupported:==:require ( ' isEventSupported ' ) ;
var arg = process . argv [ i ] ;:==:var a:==:arg . split ( ' ' ) ;
var layers = this . addCheckbox ( div , mxResources . get ( ' layers ' ) , true ) ;:==:var lightbox:==:this . addCheckbox ( div , mxResources . get ( ' lightbox ' ) , true ) ;
var a = ' ab\n\ncd ' ;:==:var b:==:' print ( ' b ' ) ' ;
var activeElement = _ global . document . activeElement ;:==:var lastTarget:==:_ lastTarget ;
var a = new constantNode ( 1 ) ;:==:var b:==:new symbolNode ( ' x ' ) ;
var a = [ ' foo ' , ' bar ' , boo ( ) , ' baz ' , ' x ' , ' y ' ] . join ( ' ' ) ;:==:var b:==:[ ' foo ' , ' bar ' , boo ( ) , ' baz ' , ' x ' , ' y ' ] . join ( ' - ' ) ;
var rewrap = scope . rewrap ;:==:var setInnerhtml:==:scope . setInnerhtml ;
var dim = options . dim  |  |  ;:==:var h:==:dim . h  |  |  0 ;
var cell = mobileConnection . voice . cell ;:==:var net:==:mobileConnection . voice . network ;
var Change = Model . getChangeModel ( ) ;:==:var rev:==:current ? change . revisionForInst ( current ) : null ;
var parallaxBackground = require ( ' parallaxBackground ' ) ;:==:var react:==:require ( ' react ' ) ;
var scrollElement = this . scrollElement ;:==:var parentElement:==:scrollElement . parentElement ;
var log = window . logFlags  |  |  ;:==:var api:==:scope . api . instance . styles ;
var multiStep = this . multiStep ;:==:var fullBuildTimeout:==:this . fullBuildTimeout ;
var selection = selections [ 0 ] ;:==:var token:==:this . tokenAtTextPosition ( selection . startLine , selection . startColumn ) ;
var svg = new window . Chartist . Svg ( ' svg ' ) ;:==:var text:==:svg . elem ( ' text ' ) ;
var config = this . collection . config ;:==:var content:==:p . content ;
var loader = linkSet . loader ;:==:var loads:==:linkSet . loads . concat ( [ ] ) ;
var mainGroup = this . _ createGroup ( ' mainGroup ' ) ;:==:var labelGroup:==:this . _ createGroup ( ' labelGroup ' ) ;
var collection = db . collection ( ' simple_document_insert_with_function_safe_with_promise ' ) ;:==:var o:==:configuration . writeConcernMax ( ) ;
var cellRenderer = _ column$props . cellRenderer ;:==:var className:==:_ column$props . className ;
var y2 = shape . y2 ;:==:var cpx1:==:shape . cpx1 ;
var el = setupSelect ( ' ng - required='isRequired ' md - no - asterisk ng - model='someModel ' ' ) ;:==:var select:==:el . find ( ' md - select ' ) ;
var tobi = name : ' tobi ' , age : 2 ;:==:var loki:==:name : ' loki ' , age : 1 ;
var ownerID = _ treeSnapshot$instanc3 . ownerid ;:==:var owner:==:treeSnapshot [ ownerid ] ;
var perPositionHeight = polygon . perPositionHeight ;:==:var closeTop:==:polygon . closeTop ;
var each = options . each ;:==:var invert:==:options . invert ;
var gulp = require ( ' gulp ' ) ;:==:var typedoc:==:require ( ' gulp - typedoc ' ) ;
var style = _ props . style ;:==:var containerStyle:==:_ props . containerStyle ;
var wrap    = options . utils . wrapPattern ;:==:var assert:==:require ( ' chai ' ) . assert ;
var slot = skeleton . slots [ this . slotIndex ] ;:==:var frames:==:this . frames ;
var t = this ;:==:var duration:==:t . media . duration ;
var head = document . getElementsByTagNamens ( xmlns . xhtml , ' head ' ) [ 0 ] ;:==:var s:==:document . createElementns ( xmlns . xhtml , ' script ' ) ;
var blue200 = exports . blue200 = ' # 90caf9 ' ;:==:var blue300:==:exports . blue300    ' # 64b5f6 ' ;
var browserify = require ( ' browserify ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var nodes = this . body . nodes ;:==:var reference:==:this . referenceState ;
var offsetHeight = b . offsetHeight ;:==:var offsetLeft:==:b . offsetLeft ;
var type = $ ( this ) . data ( ' type ' ) ;:==:var index:==:$ ( this ) . find ( ' [ data - index ] ' ) . data ( ' index ' ) ;
var $ rootScope = this . $ injector . get ( ' $ rootScope ' ) ;:==:var $ rootElement:==:this . $ injector . get ( ' $ rootElement ' ) ;
var key = keys [ i ] ;:==:var state:==:addState ( key , states [ key ] ) ;
var PI = stdlib . Math . PI ;:==:var SQRT1_2:==:stdlib . Math . SQRT1_2 ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var readlink:==:require ( ' graceful - readlink ' ) . readlinkSync ;
var test = new Test ( ' a test ' , noop ) ;:==:var err:==:new Error ( ' an error message ' ) ;
var scale = source . el . _ scale  |  |  ;:==:var fill:==:source . fill ;
var fs = require ( ' fs ' ) ;:==:var wrench:==:require ( ' wrench ' ) ;
var Person = db . model ( ' gh4284_a ' , personSchema ) ;:==:var blogPost:==:db . model ( ' gh4284_a0 ' , blogPostSchema ) ;
var receiver = ctx . receiver ;:==:var value:==:ctx . value ;
var b = parseInt ( hexColor . substr ( 5 , 2 ) , 16 ) ;:==:var a:==:parseInt ( hexColor . substr ( 7 , 2 ) , 16 ) ;
var texture = sprite . texture ;:==:var baseTexture:==:texture . baseTexture ;
var elements = params . elements ;:==:var inputs:==:params . inputs ;
var transparency = powerbi . dataViewObject . getValue ( forecastObject , forecastPropertyNames . transparency , forecastHelper . defaults . transparency ) ;:==:var style:==:powerbi . dataViewObject . getValue ( forecastObject , forecastPropertyNames . style , forecastHelper . defaults . style ) ;
var tx = ( wt . tx * resolution ) + renderSession . shakex ;:==:var ty:==:( wt . ty * resolution ) + renderSession . shakey ;
var preferencePanel = imports . preferencePanel ;:==:var settings:==:imports . settings ;
var x = v1 . x + v2 . x ;:==:var y:==:v1 . y + v2 . y ;
var a = representation . adaptation . period . mpd . manifest . Period_asArray [ representation . adaptation . period . index ] . AdaptationSet_asArray [ representation . adaptation . index ] ;:==:var r:==:dashManifestModel . getRepresentationFor ( representation . index , a ) ;
var width = this . getParentSvg ( ) . getAttribute ( ' width ' ) ;:==:var height:==:this . getParentSvg ( ) . getAttribute ( ' height ' ) ;
var value = result . value ;:==:var done:==:result . done ;
var origin = app . origin ;:==:var activities:==:app . manifest . activities ;
var INUSE_ATTRIBUTE_ERR    = exceptionCode . inuse_attribute_err    = ( ( exceptionMessage [ 10 ] = ' attribute in use ' ) , 10 ) ;:==:var invalid_state_err:==:exceptionCode . invalid_state_err      ( ( exceptionMessage [ 11 ]   ' invalid state ' ) , 11 ) ;
var Characteristic = require ( ' hap - nodejs ' ) . Characteristic ;:==:var inherits:==:require ( ' util ' ) . inherits ;
var x = parseInt ( centerNode . position ( ) . x + math . sin ( angle ) * options . radius ) ;:==:var y:==:parseInt ( centerNode . position ( ) . y - math . cos ( angle ) * options . radius ) ;
var acoth = math . acoth ;:==:var coth:==:math . coth ;
var domain = opts . domain ;:==:var enhanced:==:opts . enhancedLinkAttribution ;
var webrtc = util . Module ( ' webrtc ' ) ;:==:var assert:==:util . assert ;
var reactNativeComponentTree = require ( ' reactNativeComponentTree ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var fullWidth = _ props . fullWidth ;:==:var icon:==:_ props . icon ;
var workspace = imports [ ' collab . workspace ' ] ;:==:var info:==:imports . info ;
var baudrates = response . options . baudrates ;:==:var portPreference:==:response . options . portPreference ;
var div = $ ( ' div#cd ' + d . comment_id ) ;:==:var data:==:div . data ( ' comment ' ) ;
var row = itemPosition . row ;:==:var column:==:itemPosition . column ;
var surface = surfaces [ s ] ;:==:var corners:==:surface . corners ;
var p = extendsModel . instance _ . properties _ [ i ] ;:==:var name:==:constantize ( p . name ) ;
var keyCommandTransposeCharacters = require ( ' keyCommandTransposeCharacters ' ) ;:==:var keyCommandUndo:==:require ( ' keyCommandUndo ' ) ;
var hoverItemStyle = seriesScope & & seriesScope . hoverItemStyle ;:==:var symbolRotate:==:seriesScope & & seriesScope . symbolRotate ;
var EQUALITY_BINARY_OPERATORS = exports . EQUALITY_BINARY_OPERATORS = [ ' = = ' , ' = = = ' , ' ! = ' , ' ! = = ' ] ;:==:var COMPARISON_BINARY_OPERATORS:==:exports . COMPARISON_BINARY_OPERATORS    [ ] . concat ( EQUALITY_BINARY_OPERATORS , [ ' in ' , ' instanceof ' ] ) ;
var docs = dojo . docs ;:==:var getCache:==:docs . _ getCache ;
var purple300 = exports . purple300 = ' # ba68c8 ' ;:==:var purple400:==:exports . purple400    ' # ab47bc ' ;
var a = this . params [ i ]  |  |  ( aLast . varArgs ? aLast : null ) ;:==:var b:==:params [ i ]    |  |  ( bLast . varArgs ? bLast : null ) ;
var fs = require ( ' fs ' ) ;:==:var expect:==:require ( ' chai ' ) . expect ;
var JSX_PLACEHOLDER = ' JSX_PLACEHOLDER ' ;:==:var JSX_SPREAD_ATTRIBUTE:==:' JSX_SPREAD_ATTRIBUTE ' ;
var template = options . template  |  |  '' ;:==:var controller:==:options . controller ;
var controls = this . app . controllers . controls ;:==:var camera:==:this . app . controllers . camera ;
var entity = geometryUpdater . _ entity ;:==:var box:==:entity . box ;
var linearMap = numberUtil . linearMap ;:==:var noop:==:zrUtil . noop ;
var crypto = require ( ' crypto ' ) ;:==:var randomBytes:==:require ( ' bluebird ' ) . promisify ( require ( ' crypto ' ) . randomBytes ) ;
var predefinedName = traceur . syntax . predefinedName ;:==:var state:==:traceur . codegeneration . generator . state ;
var every = createIterator ( baseIteratorOptions , everyIteratorOptions ) ;:==:var filter:==:createIterator ( baseIteratorOptions , filterIteratorOptions ) ;
var isSameCenterOnMap = leafletHelpers . isSameCenterOnMap ;:==:var safeApply:==:leafletHelpers . safeApply ;
var del = require ( ' del ' ) ;:==:var gulp:==:require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;
var unit = math . unit ;:==:var range:==:math . range ;
var eslint = require ( ' gulp - eslint ' ) ;:==:var file:==:require ( ' gulp - file ' ) ;
var gl = this . _ gl ;:==:var program:==:this . _ program ;
var LOST = ' LOST ' ;:==:var EMPTY_ARRAY:==:' EMPTY_ARRAY ' ;
var sx = style . sx ;:==:var sy:==:style . sy ;
var auth = imports . auth ;:==:var settings:==:imports . settings ;
var helperNode1 = helper . getNode ( ' helperNode1 ' ) ;:==:var helperNode2:==:helper . getNode ( ' helperNode2 ' ) ;
var camera = options . camera ;:==:var canvas:==:options . canvas ;
var taskDefaults = common . taskDefaults ;:==:var mongoClient:==:mongodb . mongoClient ;
var dot = numeric . dot , inv = numeric . inv , sub = numeric . sub , add = numeric . add , ten = numeric . tensor , div = numeric . div , mul = numeric . mul ;:==:var all:==:numeric . all , isfinite    numeric . isFinite , neg    numeric . neg ;
var prune = params . prune = = = true ;:==:var dropOverride:==:params . dropOverride      true ;
var transaction = db . transaction ( placesHelper . sites_store , ' readwrite ' ) ;:==:var objectStore:==:transaction . objectStore ( placesHelper . sites_store ) ;
var url = options . url ;:==:var i d:==:options . i d  |  |  url ;
var rimraf = require ( ' rimraf ' ) ;:==:var wiredep:==:require ( ' wiredep ' ) . stream ;
var utils = emmet . utils . common ;:==:var htmlMatcher:==:emmet . htmlMatcher ;
var min = boundingBox . minimum ;:==:var max:==:boundingBox . maximum ;
var findVisitor = traceur . codegeneration . findVisitor ;:==:var formalParameterList:==:traceur . syntax . trees . formalParameterList ;
var mantissa_23_bits = this . mantissa_23_bits + ( 1 < < 23 ) ;:==:var round:==:( ( mantissa_23_bits & round_mask ) !   0 )  |  0 ;
var tsb = require ( ' gulp - tsb ' ) ;:==:var gulp:==:require ( ' gulp ' ) ;
var deepOrange300 = exports . deepOrange300 = ' # ff8a65 ' ;:==:var deepOrange400:==:exports . deepOrange400    ' # ff7043 ' ;
var now = performance . now ( ) ;:==:var retryDate:==:this . retryDate ;
var data = $ tr . data ( ) ;:==:var url:==:jsbin . root + data . url ;
var va = sphereTrimesh_va ;:==:var vb:==:sphereTrimesh_vb ;
var dataViewObjects = powerbi . dataViewObjects ;:==:var textMeasurementService:==:powerbi . textMeasurementService ;
var forInTransformPass = traceur . codegeneration . generator . forInTransformPass ;:==:var state:==:traceur . codegeneration . generator . state ;
var pids = this . pids ;:==:var cisco:==:this . cisco ;
var events = require ( ' events ' ) ;:==:var inherits:==:_ interopDefault ( require ( ' inherits ' ) ) ;
var item = this . itemSet . itemFromTarget ( event ) ;:==:var group:==:this . itemSet . groupFromTarget ( event ) ;
var d = new Tracker . Dependency ;:==:var e:==:new Tracker . Dependency ;
var group = formatData . group ;:==:var neg:==:formatData . neg ;
var name = arg . name ;:==:var constant:==:constants [ name ] ;
var pooledClass = require ( ' pooledClass ' ) ;:==:var transaction:==:require ( ' transaction ' ) ;
var keys = eventData . keys ;:==:var x:==:eventData . x ;
var indexedDB = window . mozIndexeddb  |  |  window . webkitIndexeddb  |  |  window . msIndexeddb  |  |  window . indexeddb ;:==:var idbKeyRange:==:window . idbKeyRange  |  |  window . webkitidbKeyRange ;
var newValue = event . detail . newValue ;:==:var oldValue:==:event . detail . oldValue ;
var onlyBlockscoped = options & & options . onlyBlockscoped ;:==:var excludeParams:==:options & & options . excludeParams ;
var tokenUrl = security . tokenUrl ;:==:var scopes:==:security . scopes ;
var n2 = new redNode ( i d : ' n2',type : ' abc ' ) ;:==:var n3:==:new redNode ( i d : ' n3',type : ' abc ' ) ;
var minimatch    = require ( ' minimatch ' ) ;:==:var htmlparser:==:require ( ' htmlparser2 ' ) ;
var d = goog . dom . $ dom ( ' p ' , null , ' A paragraph ' ) ;:==:var t:==:d . firstChild ;
var hash = hashingFunction ( key ) , bucketIndex , oldValue = null ;:==:var bucket:==:getBucketForHash ( bucketsByHash , hash ) ;
var RUNTIME = traceur . syntax . predefinedName . runtime ;:==:var set_property:==:traceur . syntax . predefinedName . set_property ;
var parentGlobalTransform = output . parentGlobalTransform ;:==:var x:==:this . _ global . x ;
var granularity = geometry . _ granularity ;:==:var ellipsoid:==:geometry . _ ellipsoid ;
var height = opts & & opts . height ! = = undefined ? opts . height : 1 . 0 ;:==:var heightSegments:==:opts & & opts . heightSegments !    undefined ? opts . heightSegments : 5 ;
var timeline = vis . timeline ;:==:var Range:==:timeline . Range ;
var position = geometry . attributes . position ;:==:var uv:==:geometry . attributes . uv ;
var g = Math . round ( this . hueTorgb ( p , q , tg ) * 255 ) ;:==:var b:==:math . round ( this . hueTorgb ( p , q , tb ) * 255 ) ;
var i d = room . i d ;:==:var password:==:room . password ;
var phones = dom . querySelector ( ' # contacts - form - phones ' ) ;:==:var emails:==:dom . querySelector ( ' # contacts - form - emails ' ) ;
var dynCall_iddddiii = Module [ ' dynCall_iddddiii ' ] = asm [ ' dynCall_iddddiii ' ] ;:==:var dynCall_iiiiiiiiiiii:==:Module [ ' dynCall_iiiiiiiiiiii ' ]    asm [ ' dynCall_iiiiiiiiiiii ' ] ;
var refreshMode = queryStringValue ( link , ' refreshMode ' , namespaces . kml ) ;:==:var refreshInterval:==:defaultValue ( queryNumericValue ( link , ' refreshInterval ' , namespaces . kml ) , 0 ) ;
var dates = dom . querySelector ( ' # contacts - form - dates ' ) ;:==:var notes:==:dom . querySelector ( ' # contacts - form - notes ' ) ;
var chalk = require ( ' chalk ' ) ;:==:var eventEmitter:==:require ( ' events ' ) . eventEmitter ;
var disableRangeRequests = this . disableRangeRequests ;:==:var cacheExpirationTime:==:this . cacheExpirationTime ;
var chromeBinary = options . chromeBinary ;:==:var keyFile:==:options . keyFile ;
var timeWindowRight = this . _ timeWindowRight ;:==:var timeWindowLeft:==:this . _ timeWindowLeft ;
var offset = pickOffset . offset ;:==:var count:==:pickOffset . count ;
var radius = this . radius ;:==:var previousRadius:==:this . previousRadius ;
var eventSink = declareInterfaceClass ( eventSinkImpl ) ;:==:var extensionPanel:==:declareInterfaceClass ( extensionPanelImpl ) ;
var baseTheme = _ context$muiTheme . baseTheme ;:==:var paper:==:_ context$muiTheme . paper ;
var compression = require ( ' compression ' ) ;:==:var url:==:require ( ' url ' ) ;
var Group = graphic . Group ;:==:var Rect:==:graphic . Rect ;
var majorTicks = this . majorTicks _ ;:==:var minorTicks:==:this . minorTicks _ ;
var name = options . name ;:==:var number:==:options . number ;
var box = this . dom . box ;:==:var line:==:this . dom . line ;
var autoType = angular . isDefined ( $ attrs . autoType ) ? $ scope . $ eval ( $ attrs . autoType ) : progressConfig . autoType ;:==:var stackedTypes:==:angular . isDefined ( $ attrs . stackedTypes ) ? $ scope . $ eval ( ' [ ' + $ attrs . stackedTypes + ' ] ' ) : progressConfig . stackedTypes ;
var s = group . create ( 250 , 300 , ' disk ' ) ;:==:var r:==:game . make . sprite ( 32 , 16 , ' squad ' ) ;
var p    = require ( ' path ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var eventType = goog . net . streams . nodeReadableStream . eventType ;:==:var status:==:goog . net . streams . xhrStreamReader . status ;
var omittedCloseTags = require ( ' omittedCloseTags ' ) ;:==:var validatedomNesting:==:require ( ' validatedomNesting ' ) ;
var algorithmName = args . detail . continuationData [ ' algorithmName ' ] ;:==:var file:==:args . detail . files [ 0 ] ;
var numRe = exports . numRe = ' \\- ? ( ? : ( ? : [ 0 - 9 ] + )  |  ( ? : [ 0 - 9 ] * \\ . [ 0 - 9 ] + ) ) ' ;:==:var pseudoElements:==:exports . pseudoElements    ' ( \\ : + ) \\b ( after | before | first - letter | first - line | moz - selection | selection ) \\b ' ;
var Date = global . Date ;:==:var setTimeout:==:global . setTimeout ;
var argv = require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;:==:var child_process:==:require ( ' child_process ' ) ;
var indentUnit = config . indentUnit ;:==:var keywords:==:parserConfig . keywords  |  |  ;
var URL = window . URL  |  |  window . webkitURL  |  |  window . mozURL ;:==:var Worker:==:window . Worker ;
var n = con . n ;:==:var r1:==:con . r1 ;
var extension = this . _ extensionForPath ( name ) ;:==:var contentType:==:this . _ contentTypeForExtension ( extension ) ;
var load = stdlib . Atomics . load ;:==:var fround:==:stdlib . Math . fround ;
var keyCode = e . keyCode ;:==:var volume:==:media . volume ;
var targetbgHigh = record . targetbgHigh ;:==:var isf:==:record . isf ;
var y = cartesian3 . y ;:==:var z:==:cartesian3 . z ;
var _ memmove = Module [ ' _ memmove ' ] = asm [ ' _ memmove ' ] ;:==:var _ malloc:==:Module [ ' _ malloc ' ]    asm [ ' _ malloc ' ] ;
var async = require ( ' async ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' pm2 : worker ' ) ;
var a = new objectNode ( a : new symbolNode ( ' a ' ) , b : new constantNode ( 2 ) ) ;:==:var b:==:new objectNode ( a : new symbolNode ( ' a ' ) , b : new constantNode ( 2 ) ) ;
var q = $ q . defer ( ) ;:==:var fields:==:options . fields  |  |  [ ' i d ' , ' displayName ' ] ;
var item = result . rows . item ( i ) ;:==:var metadata:==:JSON . parse ( item . metadata ) ;
var chart = tooltip . _ chart ;:==:var chartArea:==:tooltip . _ chart . chartArea ;
var createReturnStatement = parseTreeFactory . createReturnStatement ;:==:var createScopedExpression:==:parseTreeFactory . createScopedExpression ;
var g = this . grid ;:==:var cols:==:g . cols . groups ;
var g = e . dygraph ;:==:var stepPlot:==:g . getBooleanOption ( ' stepPlot ' , e . setName ) ;
var events = require ( ' events ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var api = imports . api ;:==:var info:==:imports . info ;
var fs = require ( ' fs ' ) ;:==:var uuid:==:require ( ' hap - nodejs ' ) . uuid ;
var url = urlTemplates [ ( x + tmsy + level ) % urlTemplates . length ] . replace ( ' z ' , level ) . replace ( ' x ' , x ) . replace ( ' y ' , tmsy ) ;:==:var proxy:==:this . _ proxy ;
var child_process = require ( ' child_process ' ) ;:==:var _ files:==:path . join ( _ _ dirname , ' _ files ' ) ;
var key = arr . $ keyAt ( 1 ) ;:==:var ref:==:arr . $ ref ( ) . child ( key ) ;
var styles = this . _ textContent . styles ;:==:var textDivs:==:this . _ textDivs ;
var haveOwnPropsChanged = this . haveOwnPropsChanged ;:==:var hasStoreStateChanged:==:this . hasStoreStateChanged ;
var scrollToIndex = _ props . scrollToIndex ;:==:var width:==:_ props . width ;
var provider = this . provider ;:==:var columns:==:provider . columns ;
var hash = hashingFunction ( key ) ;:==:var bucket:==:getBucketForHash ( bucketsByHash , hash ) ;
var impulse1   = this . impulse1 ;:==:var impulse2:==:this . impulse2 ;
var mcc = this . _ iccCard . iccInfo . mcc  |  |  ' 000 ' ;:==:var mnc:==:this . _ iccCard . iccInfo . mnc  |  |  ' 00 ' ;
var delaunay = require ( ' delaunay - fast ' ) ;:==:var seedrandom:==:require ( ' seedrandom ' ) ;
var sync = Backbone . sync ;:==:var ajax:==:Backbone . ajax ;
var change = changes [ i ] ;:==:var line:==:change . from . line , ch    change . from . ch ;
var db = BrowserDB . db . _ db ;:==:var transaction:==:db . transaction ( ' settings ' , ' readwrite ' ) ;
var h2 = listItem . querySelector ( ' h2 ' ) ;:==:var a:==:listItem . querySelector ( ' a ' ) ;
var wrap = scope . wrap ;:==:var wrappers:==:scope . wrappers ;
var selected = el . getAttribute ( ' data - selected ' ) ;:==:var select:==:document . createElement ( ' select ' ) ;
var renderSelection = t . renderSelection ;:==:var clearSelection:==:t . clearSelection ;
var debugShowBoundingVolume = model . debugShowBoundingVolume ;:==:var nodeCommands:==:model . _ nodeCommands ;
var terminal = imports . terminal ;:==:var commands:==:imports . commands ;
var isValidUrl = sharedUtil . isValidUrl ;:==:var stringToBytes:==:sharedUtil . stringToBytes ;
var s = hsva [ 1 ] ;:==:var v:==:hsva [ 2 ] ;
var w = Math . max ( doc . body . scrollWidth , viewSize . width ) ;:==:var h:==:math . max ( doc . body . scrollHeight , viewSize . height ) ;
var minimumHeight = parameters . minimumHeight * exaggeration ;:==:var maximumHeight:==:parameters . maximumHeight * exaggeration ;
var hypot = math . hypot ;:==:var bignumber:==:math . bignumber ;
var top = options . top ;:==:var width:==:options . width  |  |  512 ;
var reactEventEmitterMixin = require ( ' reactEventEmitterMixin ' ) ;:==:var isEventSupported:==:require ( ' isEventSupported ' ) ;
var instance = instances [ instanceId ] ;:==:var timer:==:moduleGetter ( ' timer ' ) ;
var x = vec [ 0 ] * this . fromPoint . x + vec [ 1 ] * via1 . x + vec [ 2 ] * via2 . x + vec [ 3 ] * this . toPoint . x ;:==:var y:==:vec [ 0 ] * this . fromPoint . y + vec [ 1 ] * via1 . y + vec [ 2 ] * via2 . y + vec [ 3 ] * this . toPoint . y ;
var target = event . target ;:==:var value:==:target . value ;
var createArgumentList = traceur . codegeneration . parseTreeFactory . createArgumentList ;:==:var createBinaryOperator:==:traceur . codegeneration . parseTreeFactory . createBinaryOperator ;
var startTime = _ lifeCycleTimerStack$ . startTime ;:==:var nestedFlushStartTime:==:_ lifeCycleTimerStack$ . nestedFlushStartTime ;
var debuggerStatement = traceur . syntax . trees . debuggerStatement ;:==:var defaultClause:==:traceur . syntax . trees . defaultClause ;
var gl = context . _ gl ;:==:var attributes:==:options . attributes ;
var exclude = $ testFn ( options . exclude ) ;:==:var include:==:$ testFn ( options . include ) ;
var is = ( this . indices  |  |  $ R ( 0,tspans . length-1 ) . toArray ( ) ) ;:==:var length:==:is . length ;
var nunjucks = require ( ' nunjucks ' ) ;:==:var marked:==:require ( ' marked ' ) ;
var minute = parseInt ( cal . find ( ' . minuteselect ' ) . val ( ) , 10 ) ;:==:var second:==:this . timePickerSeconds ? parseInt ( cal . find ( ' . secondselect ' ) . val ( ) , 10 ) : 0 ;
var expect = chai . expect ;:==:var file:==:chai . file ;
var e = this . node , b = e . attributes ;:==:var d:==:e . parentNode ? e . parentNode . ui . getContainer ( ) : e . ownerTree . innerCt . dom ;
var path    = require ( ' path ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var ann = anns [ i ] ;:==:var severity:==:ann . severity ;
var font = this . font _ ;:==:var actors:==:diagram . actors ;
var Grouping = sap . ui . table . tableUtils . grouping ;:==:var tableUtils:==:sap . ui . table . tableUtils ;
var offset = this . options . offset ;:==:var fixedTop:==:this . options . fixedTop ;
var extra    = desc . stat_desc . extra_bits ;:==:var base:==:desc . stat_desc . extra_base ;
var fs = require ( ' fs ' ) ;:==:var xml2js:==:require ( ' xml2js ' ) ;
var modifyBlockForContentState = require ( ' modifyBlockForContentState ' ) ;:==:var removeEntitiesAtEdges:==:require ( ' removeEntitiesAtEdges ' ) ;
var createThrowStatement = parseTreeFactory . createThrowStatement ;:==:var createTrueLiteral:==:parseTreeFactory . createTrueLiteral ;
var dt = this . s . dt ;:==:var columns:==:this . s . columns ;
var parser = require ( ' engine . io - parser ' ) ;:==:var parseuri:==:require ( ' parseuri ' ) ;
var selenium = require ( ' selenium - standalone ' ) ;:==:var ngrok:==:require ( ' ngrok ' ) ;
var $ textContainerElem = editor . $ textContainerElem ;:==:var opt:==:this . opt ;
var createSwitchStatement = parseTreeFactory . createSwitchStatement ;:==:var createThisExpression:==:parseTreeFactory . createThisExpression ;
var rx = this . attribute ( ' rx ' ) . Length . toPixels ( ' x ' ) ;:==:var ry:==:this . attribute ( ' ry ' ) . length . toPixels ( ' y ' ) ;
var h = a . alpha_data_size _ ;:==:var i:==:e * a . pic_hdr _ . height _ ;
var content = document . getElementById ( ' popup - content ' ) ;:==:var closer:==:document . getElementById ( ' popup - closer ' ) ;
var nconf = require ( ' nconf ' ) ;:==:var os:==:require ( ' os ' ) ;
var menu = this . menu ;:==:var speed:==:this . speed ;
var range = math . range ;:==:var cube:==:math . cube ;
var cyan600 = exports . cyan600 = ' # 00acc1 ' ;:==:var cyan700:==:exports . cyan700    ' # 0097a7 ' ;
var di = require ( ' asyncdi ' ) ;:==:var marked:==:require ( ' marked ' ) ;
var workers = parameters . workers ;:==:var blockSize:==:parameters . blockSize  |  |  64 ;
var child_process = require ( ' child_process ' ) ;:==:var crypto:==:require ( ' crypto ' ) ;
var assert = _ dereq _ ( ' minimalistic - assert ' ) ;:==:var inherits:==:_ dereq _ ( ' inherits ' ) ;
var align = _ ref$align = = = undefined ? ' auto ' : _ ref$align ;:==:var cellOffset:==:_ ref . cellOffset ;
var POSITION_INDEX = Polyline . POSITION_INDEX = 0 ;:==:var SHOW_INDEX:==:Polyline . SHOW_INDEX    1 ;
var wtViewport = wot . wtViewport ;:==:var totalRows:==:wot . getSetting ( ' totalRows ' ) ;
var pixelsToCheck = this . _ pixelsToCheck ;:==:var missingImagePixels:==:this . _ missingImagePixels ;
var reactNativeMount = require ( ' reactNativeMount ' ) ;:==:var reactNativeStackInjection:==:require ( ' reactNativeStackInjection ' ) ;
var request = require ( ' request ' ) ;:==:var validator:==:require ( ' validator ' ) ;
var setLastName = docSet . getByLongname ( ' setLastName ' ) [ 0 ] ;:==:var setManager:==:docSet . getByLongname ( ' setManager ' ) [ 0 ] ;
var optionClassName = _ ref . optionClassName ;:==:var optionComponent:==:_ ref . optionComponent ;
var menus = imports . menus ;:==:var layout:==:imports . layout ;
var sc = frame . scale*this . _ scale ;:==:var rect:==:frame . rect ;
var raygun = require ( ' raygun ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var blockMapBuilder = require ( ' blockMapBuilder ' ) ;:==:var contentBlock:==:require ( ' contentBlock ' ) ;
var layer = this . layers [ i ] ;:==:var b:==:layer . glyph . bbox ;
var length = this . operatorList . fnArray . length ;:==:var operatorList:==:this . operatorList ;
var circle = s . circle ( 10 , 20 , 30 ) ;:==:var r:==:circle . attr ( ' r ' ) ;
var rotation = node . rotation  |  |  [ 0 , 0 , 0 , 1 ] ;:==:var scale:==:node . scale  |  |  [ 1 , 1 , 1 ] ;
var requirejs = require ( ' requirejs ' ) ;:==:var path:==:require ( ' path ' ) ;
var RETURN_STATEMENT = ' RETURN_STATEMENT ' ;:==:var SCRIPT:==:' SCRIPT ' ;
var a = require ( ' aaa ' ) ;:==:var b:==:require ( ' bbb ' ) ;
var NAMED_EXPORT = ' NAMED_EXPORT ' ;:==:var NEW_EXPRESSION:==:' NEW_EXPRESSION ' ;
var engine = require ( ' engine . io ' ) ;:==:var client:==:require ( ' engine . io - client ' ) ;
var flow = this . flow _ ;:==:var executor:==:this . executor _ ;
var query = _ props . query ;:==:var hash:==:_ props . hash ;
var exceptFunctions = this . _ exceptFunctions ;:==:var checkOpen:==:this . _ checkOpen ;
var dynCall_viiidi = Module [ ' dynCall_viiidi ' ] = asm [ ' dynCall_viiidi ' ] ;:==:var dynCall_iid:==:Module [ ' dynCall_iid ' ]    asm [ ' dynCall_iid ' ] ;
var c = document . createElement ( ' canvas ' ) ;:==:var w:==:c . width    img . width ;
var viewport = this . viewport ;:==:var div:==:this . div ;
var children = element . _ children ;:==:var headers:==:element . _ headers ;
var current = instance . current ;:==:var x:==:self . endPoints [ 0 ] . x ;
var isPlainObject = lib . isPlainObject ;:==:var isArray:==:array . isArray ;
var start = $ . fullCalendar . formatDate ( event . start , ' yyyy - mm - dd hh : mm : ss ' ) ;:==:var end:==:$ . fullCalendar . formatDate ( event . end , ' yyyy - mm - dd hh : mm : ss ' ) ;
var textOperation = firepad . textOperation ;:==:var utils:==:firepad . utils ;
var posConnectionTypes = windows . devices . pointOfService . posConnectionTypes ;:==:var lineDisplay:==:windows . devices . pointOfService . lineDisplay ;
var attributes = this . attributes ;:==:var groups:==:this . groups ;
var declar = build . declar ;:==:var loop:==:build . loop ;
var focusedOption = _ ref . focusedOption ;:==:var instancePrefix:==:_ ref . instancePrefix ;
var destination = this . destination ;:==:var index:==:this . index++ ;
var custom = point . custom  |  |  ;:==:var index:==:point . _ index ;
var type = event . data [ ' type ' ] ;:==:var payload:==:event . data [ ' payload ' ] ;
var width = style . width ;:==:var height:==:style . height ;
var colspan = widget . colspan ;:==:var rowspan:==:widget . rowspan ;
var x2 = x + box . x2 ;:==:var y2:==:y + box . y2 * yStretch ;
var parenthesis = ( options & & options . parenthesis ) ? options . parenthesis : ' keep ' ;:==:var implicit:==:( options & & options . implicit ) ? options . implicit : ' hide ' ;
var setHeight = t . setHeight ;:==:var getDaySegmentContainer:==:t . getDaySegmentContainer ;
var slugize = util . slugize ;:==:var escapeRegExp:==:util . escapeRegExp ;
var d3 = require ( ' d3 ' ) ;:==:var tinycolor:==:require ( ' tinycolor2 ' ) ;
var React = require ( ' React ' ) ;:==:var Recording:==:require ( ' nativeModules ' ) . recording ;
var path = require ( ' path ' ) ;:==:var dest:==:grunt . template . process ( data . dest ) ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var typescript:==:require ( ' gulp - typescript ' ) ;
var hash = _ ref . hash ;:==:var state:==:_ ref . state ;
var webDriver = require ( ' selenium - webdriver ' ) . webDriver ;:==:var webElement:==:require ( ' selenium - webdriver ' ) . webElement ;
var gulp = require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var ext = imports . ext ;:==:var vfs:==:imports . vfs ;
var i d = node . getAttribute ( ' i d ' ) ;:==:var src:==:node . getAttribute ( ' src ' ) ;
var axis = ( data . axis ! = = undefined ) ? data . axis : 1 ;:==:var radius:==:( data . radius !    undefined ) ? data . radius : 0 . 5 ;
var width = _ undef ( styles . width , '' ) ;:==:var height:==:_ undef ( styles . height , '' ) ;
var commonjs = require ( ' rollup - plugin - commonjs ' ) ;:==:var json:==:require ( ' rollup - plugin - json ' ) ;
var listView = that . listView ;:==:var dataSource:==:that . dataSource ;
var order = fallback_order [ this . _ placement ] ;:==:var length:==:order . length ;
var fs      = require ( ' fs ' ) ;:==:var os:==:require ( ' os ' ) ;
var values = b . _ values ;:==:var index:==:b . _ index ;
var continuous = opts . continuous  |  |  false ;:==:var doc_ids:==:opts . doc_ids ;
var zIndex = _ context$muiTheme . zIndex ;:==:var tooltip:==:_ context$muiTheme . tooltip ;
var sin = OIMO . sin ( rad * 0 . 5 ) ;:==:var cos:==:OIMO . cos ( rad * 0 . 5 ) ;
var r = imGet ( srcData . data , x , y , width , height , 0 ) ;:==:var g:==:imGet ( srcData . data , x , y , width , height , 1 ) ;
var first_issuer = $ scope . order . first_issuer ;:==:var second_currency:==:$ scope . order . second_currency ;
var parseTree = traceur . syntax . trees . parseTree ;:==:var parseTreeType:==:traceur . syntax . trees . parseTreeType ;
var parser = _ dereq _ ( ' engine . io - parser ' ) ;:==:var parseuri:==:_ dereq _ ( ' parseuri ' ) ;
var x = xOff + p . map ( h , 0 , hAligns . length - 1 , padding , 400 - padding ) ;:==:var y:==:yOff + p . map ( v , 0 , vAligns . length - 1 , padding , 200 - padding ) ;
var style = _ props2 . style ;:==:var type:==:_ props2 . type ;
var nonce = req . query . nonce ;:==:var cryptor:==:req . cryptor  |  |  that . cryptor ;
var fs = imports . fs ;:==:var vfs:==:imports . vfs ;
var pos = data . pos ;:==:var session:==:doc . getSession ( ) . session ;
var pathArray = options . pathArray ;:==:var closeArray:==:options . closeArray  |  |  false ;
var macroModeState = vimGlobalState . macroModeState ;:==:var isPlaying:==:macroModeState . isPlaying ;
var xAxis = this . _ xAxis ;:==:var yAxis:==:this . _ yAxis ;
var createInteractivityService = powerbi . visuals . createInteractivityService ;:==:var isCategoryColumnSelected:==:powerbi . visuals . isCategoryColumnSelected ;
var doc = window . document . documentElement ;:==:var body:==:window . document . body ;
var frontendClient = this . _ frontendClient ;:==:var breakEventHandler:==:this . _ breakEventHandler ;
var Heap = require ( ' Heap ' ) ;:==:var invariant:==:require ( ' invariant ' ) ;
var data = node . data ( ) ;:==:var fillcolor:==:( ( ( data [ 0 ]  |  |  [ ] ) [ 0 ]  |  |  ) . trace  |  |  ) . fillcolor ;
var lime100 = exports . lime100 = ' # f0f4c3 ' ;:==:var lime200:==:exports . lime200    ' # e6ee9c ' ;
var stringExtensions = jsCommon . stringExtensions ;:==:var urlUtils:==:jsCommon . urlUtils ;
var url = _ ref . url ;:==:var id_token_hint:==:_ ref . id_token_hint ;
var cdn_subdomain = option_consume ( options , ' cdn_subdomain ' , $ . cloudinary . config ( ) . cdn_subdomain ) ;:==:var shorten:==:option_consume ( options , ' shorten ' , $ . cloudinary . config ( ) . shorten ) ;
var index = this . index ;:==:var attributes:==:this . attributes ;
var book = docSet . getByLongname ( ' module : bookshelf . book ' ) [ 0 ] ;:==:var title:==:docSet . getByLongname ( ' module : bookshelf . book#title ' ) [ 0 ] ;
var attributes = this . _ attributes ;:==:var state:==:this . _ state ;
var method = options . method ;:==:var samples:==:options . samples ;
var percent = Math . min ( this . percent , 100 ) ;:==:var size:==:this . _ size ;
var valueDim = opt . valueDim ;:==:var categoryDim:==:opt . categoryDim ;
var pseudoElements = exports . pseudoElements = ' ( \\ : + ) \\b ( after | before | first - letter | first - line | moz - selection | selection ) \\b ' ;:==:var pseudoClasses:==:exports . pseudoClasses    ' ( : ) \\b ( active | checked | disabled | empty | enabled | first - child | first - of - type | focus | hover | indeterminate | invalid | last - child | last - of - type | link | not | nth - child | nth - last - child | nth - last - of - type | nth - of - type | only - child | only - of - type | required | root | target | valid | visited ) \\b ' ;
var ui = imports . ui ;:==:var save:==:imports . save ;
var url = entries [ currentIndex ] . url ;:==:var match:==:url . match ( webInspector . screencastView . _ httpRegex ) ;
var allShadows = scope . targetFinding . allShadows . bind ( scope . targetFinding ) ;:==:var pointermap:==:dispatcher . pointermap ;
var group = this . createVmlElement ( ' group ' ) ;:==:var style:==:group . style ;
var isDefined = leafletHelpers . isDefined ;:==:var isNumber:==:leafletHelpers . isNumber ;
var vfs = imports . vfs ;:==:var save:==:imports . save ;
var reactdomComponentTree = require ( ' reactdomComponentTree ' ) ;:==:var reactdomInjection:==:require ( ' reactdomInjection ' ) ;
var validateIndex = _ _ webpack_require _ _ ( 3 ) . validateIndex ;:==:var getSafeProperty:==:_ _ webpack_require _ _ ( 17 ) . getSafeProperty ;
var c = new objectNode ( a : a , b : b ) ;:==:var d:==:new constantNode ( 3 ) ;
var width = scope . size . width ;:==:var height:==:scope . size . height ;
var recognizeDates = defined ( context . recognizeDates , handler . recognizeDates ) ;:==:var inferJsonLightFeedAsObject:==:defined ( context . inferJsonLightFeedAsObject , handler . inferJsonLightFeedAsObject ) ;
var node = e . node ;:==:var config:==:model . session . config ;
var intro = this . getHtmlRenderer ( ' intro ' , rowType ) ( row  |  |  0 ) ;:==:var outro:==:this . getHtmlRenderer ( ' outro ' , rowType ) ( row  |  |  0 ) ;
var firstRow = this . $ changedLines . firstRow ;:==:var lastRow:==:this . $ changedLines . lastRow ;
var cache = flatCache . load ( cacheId , _ path ) ;:==:var assign:==:require ( ' object - assign ' ) ;
var g = ref . g ;:==:var b:==:ref . b ;
var containerSize = _ ref . containerSize ;:==:var currentOffset:==:_ ref . currentOffset ;
var hasOwn = class2type . hasOwnProperty ;:==:var trim:==:' ' . trim ;
var opts = clone ( _ opts  |  |  ) ;:==:var prefix:==:_ opts . prefix  |  |  [ ] ;
var jsesc = require ( ' jsesc ' ) ;:==:var isArray:==:array . isArray ;
var mocha = require ( ' gulp - mocha ' ) ;:==:var todo:==:require ( ' gulp - todo ' ) ;
var slot = filterChoice . slot ;:==:var filters:==:filterChoice . filters ;
var loopback = require ( ' loopback ' ) ;:==:var express:==:require ( ' express ' ) ;
var w = image . width ;:==:var h:==:image . height ;
var start = Math . min ( offsets . start , length ) ;:==:var end:==:offsets . end      undefined ? start : Math . min ( offsets . end , length ) ;
var flatCoordinates = this . flatCoordinates ;:==:var layout:==:this . layout ;
var reactInputSelection = require ( ' reactInputSelection ' ) ;:==:var reactInstanceMap:==:require ( ' reactInstanceMap ' ) ;
var core = require ( ' core ' ) ;:==:var router:==:require ( ' router ' ) ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var dateArrayFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' dateArrayFieldTestObject ' ) ) ;
var previoushmdPosition = this . previoushmdPosition ;:==:var sceneEl:==:this . el . sceneEl ;
var reactdomFiberSelect = require ( ' reactdomFiberSelect ' ) ;:==:var reactdomFiberTextarea:==:require ( ' reactdomFiberTextarea ' ) ;
var rimraf = require ( ' rimraf ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var edge = ! ( options & & options . edge = = = false ) ;:==:var tolerance:==:options & & options . tolerance ;
var apply = authorAttributes . apply ;:==:var traverse:==:authorAttributes . traverse ;
var d1 = _ addDiv ( ' d1 ' ) , d2 = _ addDiv ( ' d2 ' ) ;:==:var c:==:_ jsPlumb . connect ( source : d1 , target : d2 , cssClass : ' css ' ) ;
var fontSize = textDiv . style . fontSize ;:==:var fontFamily:==:textDiv . style . fontFamily ;
var dataSet = vis . dataSet ;:==:var queue:==:vis . queue ;
var asyncForEach = util . asyncForEach ;:==:var addLinkTargets:==:util . addLinkTargets ;
var retrieve = _ _ webpack_require _ _ ( 4 ) . retrieve ;:==:var parsePercent:==:_ _ webpack_require _ _ ( 7 ) . parsePercent ;
var keepCollapsedContent = _ props . keepCollapsedContent ;:==:var onHeightReady:==:_ props . onHeightReady ;
var _ testSetjmp = module [ ' _ testSetjmp ' ] = asm [ ' _ testSetjmp ' ] ;:==:var runPostSets:==:module [ ' runPostSets ' ]    asm [ ' runPostSets ' ] ;
var webserver = require ( ' gulp - webserver ' ) ;:==:var selenium:==:require ( ' selenium - standalone ' ) ;
var intervals = this . _ intervals ;:==:var length:==:intervals . length ;
var source = require ( ' function - source ' ) ;:==:var proc:==:require ( ' child_process ' ) ;
var command = event . detail . command ;:==:var direction:==:event . detail . direction ;
var backgroundColor = _ context$muiTheme$tex . backgroundColor ;:==:var hintColor:==:_ context$muiTheme$tex . hintColor ;
var center = boundingSphere . center ;:==:var radius:==:boundingSphere . radius ;
var all = imports [ ' test . all ' ] ;:==:var ui:==:imports . ui ;
var rgb = this . rgb . build ( builder , ' v3 ' ) ;:==:var adjustment:==:this . adjustment . build ( builder , ' fv1 ' ) ;
var hideEvents = t . hideEvents ;:==:var eventDrop:==:t . eventDrop ;
var style = picker . getSelectedRow ( 0 ) . style ;:==:var presentation:==:picker . getSelectedRow ( 1 ) . presentation ;
var spacing = ' spacing ' ;:==:var textord:==:' textord ' ;
var ONEDAY = constants . ONEDAY ;:==:var ONEHOUR:==:constants . ONEHOUR ;
var filename = options . filename  |  |  ' freemind . mm ' ;:==:var form:==:document . createElement ( ' form ' ) ;
var getEntityKeyForSelection = require ( ' getEntityKeyForSelection ' ) ;:==:var isSelectionAtLeafStart:==:require ( ' isSelectionAtLeafStart ' ) ;
var getRowCnt = t . getRowCnt ;:==:var getColCnt:==:t . getColCnt ;
var specs = grunt . option ( ' specs ' ) ;:==:var seleniumAddress:==:grunt . option ( ' seleniumAddress ' ) ;
var errorObj = util . errorObj ;:==:var async:==:promise . _ async ;
var xScale = data . xScale , yScales = data . yScales , node = pulseChart . tooltip , nodeParent = pulseChart . tooltipContainer ;:==:var rootSelection:==:this . rootSelection ;
var twilio = require ( ' twilio ' ) ;:==:var async:==:require ( ' async ' ) ;
var lime600 = exports . lime600 = ' # c0ca33 ' ;:==:var lime700:==:exports . lime700    ' # afb42b ' ;
var main = document . getElementById ( ' main ' ) ;:==:var footer:==:document . getElementById ( ' footer ' ) ;
var save = imports . save ;:==:var watcher:==:imports . watcher ;
var removedObjects = this . _ removedObjects ;:==:var changedObjects:==:this . _ changedObjects ;
var connect = imports . connect ;:==:var render:==:imports [ ' connect . render ' ] ;
var work = this . _ work ;:==:var denom:==:this . _ denominators ;
var pos = dayLabel . get ( ' position ' ) ;:==:var nameMap:==:dayLabel . get ( ' nameMap ' ) ;
var canvas = this . canvas ;:==:var x:==:this . x ;
var names = namesAndValues . names , values = namesAndValues . values ;:==:var length:==:names . length ;
var scrollToIndex = _ ref . scrollToIndex ;:==:var updateScrollOffsetForScrollToIndex:==:_ ref . updateScrollOffsetForScrollToIndex ;
var child_process = require ( ' child_process ' ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var receiver = ast . receiver . visit ( this ) ;:==:var value:==:ast . value . visit ( this ) ;
var lon = trace . lon [ i ] ;:==:var lat:==:trace . lat [ i ] ;
var show = _ props . show ;:==:var touch:==:_ props . touch ;
var ip = require ( ' ip ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var from = docSet . getByLongname ( ' < anonymous>~headers . from ' ) ;:==:var cache:==:docSet . getByLongname ( ' < anonymous>~headers . cache ' ) ;
var restParameter = traceur . syntax . trees . restParameter ;:==:var returnStatement:==:traceur . syntax . trees . returnStatement ;
var should = chai . should ( ) ;:==:var expect:==:chai . expect ;
var f = ' f ' ;:==:var b:==:' b ' ;
var radius = options . radius  |  |  2 ;:==:var tube:==:options . tube  |  |  0 . 5 ;
var a = ( this . tubularSegments + 1 ) * j + i - 1 ;:==:var b:==:( this . tubularSegments + 1 ) * ( j - 1 ) + i - 1 ;
var createDefaultClause = parseTreeFactory . createDefaultClause ;:==:var createEmptyParameterList:==:parseTreeFactory . createEmptyParameterList ;
var Identify = require ( ' facade ' ) . Identify ;:==:var alias:==:require ( ' alias ' ) ;
var w = ( this . _ bRtlMode ? this . originalRectangle . width - deltax : this . originalRectangle . width + deltax )  |  |  0 ;:==:var h:==:this . originalRectangle . height + deltay  |  |  0 ;
var device = argv . device  |  |  ' iPhone6 + ' ;:==:var verbose:==:( argv . verbose  |  |  argv . v ) ;
var drift = this . options . drift ;:==:var slop:==:-this . options . slop ;
var isDown = aggregator . _ isDown ;:==:var eventStartPosition:==:aggregator . _ eventStartPosition ;
var value = event . detail . value ;:==:var item:==:event . detail . item ;
var v = bi . vectorsWorld ;:==:var cam:==:this . scene . cameraToUseForPointers  |  |  this . scene . activeCamera ;
var textColorFreq = textColorFreq  |  |  ' # fff ' ;:==:var textColorUnit:==:textColorUnit  |  |  ' # fff ' ;
var net = imports . net ;:==:var proc:==:imports . proc ;
var suc = options . success  |  |  emptyFn ;:==:var error:==:options . error  |  |  emptyFn ;
var pose = controller . pose ;:==:var controllerQuaternion:==:this . controllerQuaternion ;
var i = [ ' foo ' + bar , null , baz + ' moo ' ] . join ( ' ' ) ;:==:var j:==:[ foo + ' bar ' , baz ] . join ( ' ' ) ;
var v11 = b2Collision . s_v11 ;:==:var v12:==:b2Collision . s_v12 ;
var open = options . get ( ' open ' ) ;:==:var browser:==:options . get ( ' browser ' ) ;
var sshpk = require ( ' sshpk ' ) ;:==:var jsprim:==:require ( ' jsprim ' ) ;
var parentNode = tabThis . parentNode ;:==:var active:==:tabThis . className . indexOf ( ' active ' ) !    -1 ;
var matchesInterface = scope . matchesInterface ;:==:var addWrapNodeListMethod:==:scope . addWrapNodeListMethod ;
var ceil = Math . ceil ;:==:var exp:==:Math . exp ;
var el = this . el ;:==:var position:==:el . getAttribute ( ' position ' ) ;
var app = detail . app ;:==:var i d:==:detail . i d ;
var crypto = require ( ' crypto ' ) ;:==:var stream:==:require ( ' stream ' ) ;
var async = require ( ' async ' ) ;:==:var collab:==:imports . collab ;
var $ container = self . $ container ;:==:var $ cropper:==:self . $ cropper ;
var format = property . format ;:==:var type:==:property . type ;
var Observable = Rx . Observable ;:==:var Challenge:==:app . models . Challenge ;
var wallet = walletClient ;:==:var walletId:==:wallet . credentials . walletId ;
var collection = supportedCollections [ data . collection ] ;:==:var check:==:checkConditions ( ' dbUpdate ' , data ) ;
var popup = this . _ _ popup ;:==:var current:==:Popup . current ;
var floatingLabelStyle = _ props2 . floatingLabelStyle ;:==:var floatingLabelText:==:_ props2 . floatingLabelText ;
var superExpression = traceur . syntax . trees . superExpression ;:==:var switchStatement:==:traceur . syntax . trees . switchStatement ;
var g = hue2rgb ( p , q , tg ) ;:==:var b:==:hue2rgb ( p , q , tb ) ;
var editor = this . editor ;:==:var toolbar:==:this . toolbar ;
var name = tag . name ? ' name= ' ' + tag . name + ' ' ' : '' ;:==:var property:==:tag . property ? ' property ' ' + tag . property + ' ' ' : '' ;
var mapId = messageQueue [ i ] . mapId ;:==:var map:==:messageQueue [ i ] . map ;
var op = ' op ' ;:==:var open:==:' open ' ;
var Range = math . type . Range ;:==:var Matrix:==:math . type . Matrix ;
var Unit = math . type . Unit ;:==:var std:==:math . std ;
var stencil = this . stencil ;:==:var resourceId:==:shape . resourceId ;
var type = typeof options = = = ' function ' , rskin = ready . config . skin ;:==:var skin:==:( rskin ? rskin + ' ' + rskin + ' -msg ' : '' )  |  | 'layui - layer - msg ' ;
var context = passState . context ;:==:var viewport:==:passState . viewport ;
var glob = require ( ' glob ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var util = require ( ' util ' ) ;:==:var open:==:require ( ' biased - opener ' ) ;
var c = this . m_constraints [ i ] ;:==:var m:==:c . manifold ;
var os = require ( ' os ' ) ;:==:var admin:==:require ( ' pomelo - admin ' ) ;
var warn = sharedUtil . warn ;:==:var arithmeticDecoder:==:coreArithmeticDecoder . arithmeticDecoder ;
var floor = Math . floor ;:==:var sqrt:==:Math . sqrt ;
var duration = scheduledAnimation . _ duration ;:==:var stopTime:==:scheduledAnimation . stopTime ;
var watcher = imports . watcher ;:==:var tabManager:==:imports . tabManager ;
var rightBoundary = this . _ rightBoundary ;:==:var topBoundary:==:this . _ topBoundary ;
var d = document & & document . documentElement ;:==:var b:==:document & & document . getElementsByTagName ( ' body ' ) [ 0 ] ;
var glob = require ( ' glob ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var channelService = self . app . get ( ' channelService ' ) ;:==:var sessionService:==:self . app . get ( ' sessionService ' ) ;
var regionFlag = cmd . _ regionFlag ;:==:var oldRegion:==:cmd . _ oldRegion ;
var csv = require ( ' csv ' ) ;:==:var assert:==:require ( ' assert - plus ' ) ;
var isArray = leafletHelpers . isArray ;:==:var isDefined:==:leafletHelpers . isDefined ;
var inline1 = options . _ _ inline1 _ _ ;:==:var inline2:==:options . _ _ inline2 _ _ ;
var editor = this . jsoneditor . getEditorClass ( schema_copy , this . jsoneditor ) ;:==:var row:==:this . row_holder . appendChild ( this . theme . getTableRow ( ) ) ;
var capture = _ props . capture ;:==:var target:==:_ props . target ;
var rec = obj . records [ index ] ;:==:var col:==:obj . columns [ column ] ;
var Unit = math . type . Unit ;:==:var min:==:math . min ;
var rejected = adapter . rejected ;:==:var pending:==:adapter . pending ;
var relationship = snapshot . record . relationshipFor ( ' comments ' ) ;:==:var key:==:relationship . key ;
var ignore = this . ignore ;:==:var context:==:this . context ;
var edges = option . edges  |  |  option . links ;:==:var nodes:==:option . data  |  |  option . nodes ;
var catchBlock = this . transformAny ( tree . catchBlock ) ;:==:var finallyBlock:==:this . transformAny ( tree . finallyBlock ) ;
var d = new conditionalNode ( new constantNode ( 1 ) , new constantNode ( 5 ) , new constantNode ( 3 ) ) ;:==:var e:==:new conditionalNode ( new constantNode ( 1 ) , new constantNode ( 2 ) , new constantNode ( 55 ) ) ;
var toBinaryTable = this . toBinaryTable ;:==:var base64Pad:==:this . base64Pad ;
var boneName = skin . boneNames [ j ] ;:==:var bone:==:cloneGraph . findByName ( boneName ) ;
var context = this . context ;:==:var wordWrapWidth:==:this . style . wordWrapWidth ;
var _ memmove = Module [ ' _ memmove ' ] = asm [ ' _ memmove ' ] ;:==:var _ _ GLOBAL__I_a:==:Module [ ' _ _ GLOBAL__I_a ' ]    asm [ ' _ _ GLOBAL__I_a ' ] ;
var value = element ( by . binding ( ' value  |  date : ' HH : mm ' ' ) ) ;:==:var valid:==:element ( by . binding ( ' myForm . input . $ valid ' ) ) ;
var db = new PouchDB ( dbs . name ) ;:==:var ajax:==:db . _ ajax ;
var feature = new this . featureClass _ ( ) ;:==:var i d:==:rawFeature . i d ;
var resolution = coerce ( ' resolution ' ) ;:==:var projType:==:coerce ( ' projection . type ' , scopeParams . projType ) ;
var far = shadowFrustum . far ;:==:var position:==:shadowMapCamera . positionwc ;
var JS_CHECK_TIMEOUT = process . env . JS_CHECK_TIMEOUT  |  |  300 ;:==:var JS_TIMEOUT:==:process . env . JS_TIMEOUT  |  |  10 * 1000 ;
var e = a . max_code ;:==:var g:==:a . max_length ;
var doc = win . document ;:==:var sel:==:doc . selection ;
var start = group . start ;:==:var count:==:group . count ;
var doc = this . win . document ;:==:var div:==:doc . createElement ( ' div ' ) ;
var pixelConverter = jsCommon . pixelConverter ;:==:var createClassAndSelector:==:jsCommon . cssConstants . createClassAndSelector ;
var fs = require ( ' fs ' ) ;:==:var acorn:==:require ( ' acorn ' ) ;
var isSelectionAtLeafStart = require ( ' isSelectionAtLeafStart ' ) ;:==:var nullthrows:==:require ( ' nullthrows ' ) ;
var contactManager = contacts . contactManager ;:==:var contactCardOptions:==:contacts . contactCardOptions ;
var marginTop = pulseChart . defaultTooltipSettings . marginTop ;:==:var width:==:this . data . settings . popup . width ;
var seg = this . segments _ [ i ] ;:==:var n:==:goog . math . Path . segmentArgCounts _ [ seg ] * this . count _ [ i ] ;
var offset = _ ref5 . offset ;:==:var totalSize:==:_ ref5 . totalSize ;
var cache = openLayers . layer . google . cache [ this . map . i d ] ;:==:var map:==:this . map ;
var skip = options . data . skip ;:==:var take:==:options . data . take ;
var binaryOperator = traceur . syntax . trees . binaryOperator ;:==:var bindingElement:==:traceur . syntax . trees . bindingElement ;
var uid = data . uid ;:==:var content:==:data . content ;
var m = matrix ( a ) ;:==:var r:==:_ denseForwardSubstitution ( m , b ) ;
var innerHTML = Object . getOwnPropertyDescriptor ( element . prototype , ' innerhtml ' ) ;:==:var removeAttribute:==:element . prototype . removeAttribute ;
var tileLoadQueueMedium = primitive . _ tileLoadQueueMedium ;:==:var tileLoadQueueLow:==:primitive . _ tileLoadQueueLow ;
var helper = instance . get ( ' helper ' ) ;:==:var placeholder:==:instance . get ( ' placeholder ' ) ;
var c = ec * 8 ;:==:var d:==:dB - du ;
var Text = require ( ' Text ' ) ;:==:var panResponder:==:require ( ' panResponder ' ) ;
var _ malloc = Module [ ' _ malloc ' ] = asm [ ' _ malloc ' ] ;:==:var _ memcpy:==:Module [ ' _ memcpy ' ]    asm [ ' _ memcpy ' ] ;
var parseTree = traceur . syntax . trees . parseTree ;:==:var tokenType:==:traceur . syntax . tokenType ;
var yellow100 = exports . yellow100 = ' # fff9c4 ' ;:==:var yellow200:==:exports . yellow200    ' # fff59d ' ;
var t = this . height - pbottom . size ;:==:var w:==:this . width ;
var ownerDocument = anchor . ownerDocument ;:==:var defaultView:==:ownerDocument . defaultView  |  |  ownerDocument . parentWindow ;
var force = options . force ;:==:var src:==:options . src ;
var maxValue = e . data . maxValue ;:==:var fieldName:==:e . data . fieldName ;
var recorder = util . Module ( ' recorder ' ) ;:==:var assert:==:util . assert ;
var onMouseenter = jasmine . createSpy ( ' onMouseenter ' ) ;:==:var onMouseleave:==:jasmine . createSpy ( ' onMouseleave ' ) ;
var getTreeScope = scope . getTreeScope ;:==:var unsafeUnwrap:==:scope . unsafeUnwrap ;
var response = evt . response ;:==:var request:==:evt . request ;
var moment = require ( ' moment ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var host = managers [ 0 ] . host ;:==:var port:==:managers [ 0 ] . port ;
var quatWithoutYaw = orbitCamera . quatWithoutYaw ;:==:var yawOffset:==:orbitCamera . yawOffset ;
var redA700 = exports . redA700 = ' # d50000 ' ;:==:var pink50:==:exports . pink50    ' # fce4ec ' ;
var radius = parseFloat ( e . radius ) ;:==:var distance:==:parseFloat ( e . distance ) ;
var sx = t . sx ;:==:var sy:==:t . sy ;
var request = evt . request ;:==:var response:==:evt . response ;
var pdfFunction = coreFunction . pdfFunction ;:==:var colorSpace:==:coreColorSpace . colorSpace ;
var memberName = this . props . memberName ;:==:var def:==:this . props . def ;
var styleSpec = options . styleSpec ;:==:var value:==:options . value ;
var rejected = adapter . rejected ;:==:var dummy:==:dummy : ' dummy ' ;
var x = this . x , y = this . y ;:==:var sq:==:pos . squaredNorm ( ) ;
var moment = require ( ' moment ' ) ;:==:var mongoose:==:require ( ' mongoose ' ) ;
var _ memcpy = Module [ ' _ memcpy ' ] = asm [ ' _ memcpy ' ] ;:==:var runPostSets:==:module [ ' runPostSets ' ]    asm [ ' runPostSets ' ] ;
var getTailoredTextOrDefault = powerbi . textMeasurementService . getTailoredTextOrDefault ;:==:var legendData:==:powerbi . visuals . legendData ;
var from = svg . toNumberArray ( p . from . value ) ;:==:var to:==:svg . toNumberArray ( p . to . value ) ;
var writeWrap = process . binding ( ' stream_wrap ' ) . writeWrap ;:==:var port:==:common . port ;
var minX = origin [ 0 ] + tileRange . minx * tileSize [ 0 ] * resolution ;:==:var maxx:==:origin [ 0 ] + ( tileRange . maxx + 1 ) * tileSize [ 0 ] * resolution ;
var isEastChild = parameters . isEastChild ;:==:var isNorthChild:==:parameters . isNorthChild ;
var data = that . dataSource . flatView ( ) ;:==:var skip:==:that . listView . skip ( ) ;
var localStore = require ( ' olives ' ) . localStore ;:==:var store:==:require ( ' emily ' ) . store ;
var l = p . length - 2 ;:==:var tp:==:PolyK . _ tp ;
var disabled = ' disabled ' ;:==:var data:==:$ element . data ( ) ;
var m = math . sparse ( [ [ 1,2,3 ] , [ 4,5,6 ] ] ) ;:==:var t:==:transpose ( m ) ;
var content = tree . content = d . firstChild ;:==:var sr2:==:tree . sr2    d . createShadowRoot ( ) ;
var firstChild = domFragment . firstChild ;:==:var lastChild:==:domFragment . lastChild ;
var scale = scaleResult . scale ;:==:var bestTickCount:==:scaleResult . bestTickCount ;
var Range = math . type . Range ;:==:var immutableDenseMatrix:==:math . type . immutableDenseMatrix ;
var nMass = con . nMass ;:==:var n:==:con . n ;
var debug = _ dereq _ ( ' debug ' ) ( ' engine . io - client : socket ' ) ;:==:var index:==:_ dereq _ ( ' indexof ' ) ;
var reactdomInput = require ( ' reactdomInput ' ) ;:==:var reactdomOption:==:require ( ' reactdomOption ' ) ;
var isComingSoon = ! ! challengeSpec . isComingSoon ;:==:var fileName:==:challengeSpec . fileName ;
var opt = this . opt ;:==:var axisModel:==:this . axisModel ;
var texthScale = current . texthScale ;:==:var fontMatrix:==:current . fontMatrix  |  |  identity_matrix ;
var register = load ( _ _ webpack_require _ _ ( 7 ) ) . register ;:==:var compile:==:load ( _ _ webpack_require _ _ ( 7 ) ) . compile ;
var slot = slots [ i ] ;:==:var attachment:==:slot . attachment ;
var index = $ ( this ) . attr ( ' index ' ) ;:==:var findex:==:$ ( this ) . attr ( ' findex ' ) ;
var onRowMouseOut = _ props3 . onRowMouseOut ;:==:var rowClassName:==:_ props3 . rowClassName ;
var defer = _ tetherBase$Utils . defer ;:==:var flush:==:_ tetherBase$Utils . flush ;
var i2 = opt_i2 ? opt_i2 : this . size _ . height - 1 ;:==:var j2:==:opt_j2 ? opt_j2 : this . size _ . width - 1 ;
var pdfImage = coreImage . pdfImage ;:==:var colorSpace:==:coreColorSpace . colorSpace ;
var rename   = require ( ' gulp - rename ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var metadataStore = breeze . metadataStore ;:==:var jsonResultsAdapter:==:breeze . jsonResultsAdapter ;
var w = w _  |  0 ;:==:var h:==:( h _  |  0 )  |  |  w ;
var base_url = this . base_url ;:==:var w:==:window . open ( '' , iPython . _ target ) ;
var blue500 = exports . blue500 = ' # 2196f3 ' ;:==:var blue600:==:exports . blue600    ' # 1e88e5 ' ;
var throughput = conditions . throughput ;:==:var latency:==:conditions . latency ;
var protocol = window . location . protocol ;:==:var host:==:window . location . host ;
var webpack = require ( ' webpack ' ) ;:==:var cssnext:==:require ( ' postcss - cssnext ' ) ;
var d = a . preds _ ;:==:var e:==:a . preds_off - 1 ;
var width = _ props . width ;:==:var scrollbarWidth:==:this . state . scrollbarWidth ;
var offsetX = parseInt ( dom . offsetx . value , 10 ) ;:==:var offsety:==:parseInt ( dom . offsety . value , 10 ) ;
var dynCall_vi = Module [ ' dynCall_vi ' ] = asm [ ' dynCall_vi ' ] ;:==:var dynCall_vii:==:Module [ ' dynCall_vii ' ]    asm [ ' dynCall_vii ' ] ;
var reactComponentBrowserEnvironment = require ( ' reactComponentBrowserEnvironment ' ) ;:==:var reactdomComponent:==:require ( ' reactdomComponent ' ) ;
var origin = addNodeTo ( base , options . cssClasses . origin ) ;:==:var handle:==:addNodeTo ( origin , options . cssClasses . handle ) ;
var inner = dom . createDom ( ' div ' , goog . getCssName ( baseClass , ' inner - edge ' ) ) ;:==:var outer:==:dom . createDom ( ' div ' , goog . getCssName ( baseClass , ' outer - edge ' ) ) ;
var tempMax = forecast [ 0 ] [ ' tempMax ' + temp ] ;:==:var tempMin:==:forecast [ 0 ] [ ' tempMin ' + temp ] ;
var layer = layui [ ' layer - mobile ' ] ;:==:var device:==:layui . device ( ) ;
var lowPriorityWarning = require ( ' lowPriorityWarning ' ) ;:==:var reactDebugCurrentFrame:==:require ( ' reactDebugCurrentFrame ' ) ;
var distance = parseFloat ( e . distance ) ;:==:var i d:==:e . i d ;
var component = components . get ( node ) ;:==:var declaredPropTypes:==:component & & component . declaredPropTypes  |  |  [ ] ;
var copyWithin = ' local copyWithin ' ;:==:var entries:==:' local entries ' ;
var DELETE_PROPERTY = traceur . syntax . predefinedName . delete_property ;:==:var get_property:==:traceur . syntax . predefinedName . get_property ;
var nodes = this . nodes ;:==:var nodeFieldCount:==:this . _ nodeFieldCount ;
var parameterList = this . transformAny ( tree . parameterList ) ;:==:var body:==:this . transformSuperInFunctionBody _ ( tree . body , homeObject , internalName ) ;
var activeItemdom = options . activeItemdom ;:==:var network:==:options . network ;
var INVALID_STATE_ERR    = exceptionCode . invalid_state_err    = ( ( exceptionMessage [ 11 ] = ' invalid state ' ) , 11 ) ;:==:var syntax_err:==:exceptionCode . syntax_err       ( ( exceptionMessage [ 12 ]   ' syntax error ' ) , 12 ) ;
var extensionSidebarPane = declareInterfaceClass ( extensionSidebarPaneImpl ) ;:==:var panelWithSidebar:==:declareInterfaceClass ( panelWithSidebarImpl ) ;
var fixture = document . getElementById ( ' fixture ' ) ;:==:var modal:==:document . getElementById ( ' modal ' ) ;
var view = typeof options . view ! = ' undefined ' ? options . view : window ;:==:var detail:==:typeof options . detail !   ' undefined ' ? options . detail : 0 ;
var columnCount = props . columnCount ;:==:var height:==:props . height ;
var c9 = imports . c9 ;:==:var metadata:==:imports . metadata ;
var r = Math . round ( Garden . random ( rmin , rmax ) ) ;:==:var g:==:Math . round ( Garden . random ( gmin , gmax ) ) ;
var Uri = Windows . Foundation . Uri ;:==:var startScreen:==:windows . ui . startScreen ;
var image = self . image ;:==:var canvas:==:self . canvas ;
var i = _ i ;:==:var previous:==:_ previous ;
var sheet = json . sheet ;:==:var topic:==:utils . isArray ( sheet ) ? sheet [ 0 ] . topic : sheet . topic ;
var y = vm . y ;:==:var color:==:Chart . helpers . color ;
var ACL = loopback . ACL ;:==:var Change:==:loopback . Change ;
var tab   = req . query . tab  |  |  ' all ' ;:==:var limit:==:Number ( req . query . limit )  |  |  config . list_topic_count ;
var parent = goog . dom . getElement ( ' offset - parent ' ) ;:==:var child:==:goog . dom . getElement ( ' offset - child ' ) ;
var next = cb . next ;:==:var nextContext:==:cb . nextContext ;
var container = createElementWithClass ( ' div ' , ' object - popover - container ' ) ;:==:var title:==:container . createChild ( ' div ' , ' function - popover - title source - code ' ) ;
var attachments = options . attachments ;:==:var attachmentsView:==:options . attachmentsView ;
var operatorNode = math . expression . node . operatorNode ;:==:var functionNode:==:math . expression . node . functionNode ;
var modules = projectJson . modules  |  |  [ ' core ' ] ;:==:var renderMode:==:projectJson . renderMode  |  |  0 ;
var width = Math . floor ( widthFactor * contentWidth ) ;:==:var height:==:math . floor ( heightFactor * contentHeight ) ;
var log = stdlib . Math . log ;:==:var sqrt:==:stdlib . Math . sqrt ;
var DEBUG = DEBUG  |  |  false ;:==:var GLOBAL:==:GLOBAL  |  |  this ;
var value = valueAccessor ( ) ;:==:var allBindings:==:allBindingsAccessor ( ) ;
var bpc = this . bpc ;:==:var numComps:==:this . numComps ;
var socketTimeout = red . settings . socketTimeout |  | null ;:==:var net:==:require ( ' net ' ) ;
var Menu = imports . Menu ;:==:var Divider:==:imports . Divider ;
var width = this . _ opaqueTexture . width ;:==:var height:==:this . _ opaqueTexture . height ;
var c = processDiagramCanvas . g . path ( ' m'+targetx+','+targety+'l'+ax+','+ay ) . attr ( stroke : color . get ( 255 , 153 , 51 ) , ' stroke - dasharray ' : ' - ' ) ;:==:var c:==:processDiagramCanvas . g . path ( ' m'+nextSrcx+','+nextSrcy+'l'+bx+','+by ) . attr ( stroke : color . get ( 255 , 153 , 51 ) , ' stroke - dasharray ' : ' - ' ) ;
var reactTestUtils = require ( ' reactTestUtils ' ) ;:==:var sampleDraftInlineStyle:==:require ( ' sampleDraftInlineStyle ' ) ;
var width = a . hasOwnProperty ( ' width ' ) ? a . width : 16 ;:==:var height:==:a . hasOwnProperty ( ' height ' ) ? a . height : 16 ;
var scene = controller . _ scene ;:==:var camera:==:scene . camera ;
var selectionId = powerbi . visuals . selectionId ;:==:var dataViewObjects:==:powerbi . dataViewObjects ;
var state = this . $ store . state ;:==:var getters:==:this . $ store . getters ;
var nodeCount = this . nodeCount ;:==:var nodes:==:this . nodes ;
var seenUnicodeChar = this . seenUnicodeChar ;:==:var seenUnicodeCharInComment:==:this . seenUnicodeCharInComment ;
var reactdomEventListener = require ( ' reactdomEventListener ' ) ;:==:var reactEventEmitterMixin:==:require ( ' reactEventEmitterMixin ' ) ;
var isArray = _ _ dependency3 _ _ . isArray ;:==:var isFunction:==:_ _ dependency3 _ _ . isFunction ;
var remainedWidth = columnsOnAxis . remainedWidth ;:==:var autoWidthCount:==:columnsOnAxis . autoWidthCount ;
var props = vm . _ props ;:==:var propKeys:==:vm . $ options . _ propKeys  |  |  [ ] ;
var config = descriptor . config ;:==:var models:==:descriptor . models ;
var done = self . _ done ( resolve , self ) ;:==:var onDomAdded:==:self . config [ ' onDomAdded ' ]  |  |  angular . noop ;
var isanimated = lineDotChart . defaultSettings . isanimated ;:==:var isstopped:==:lineDotChart . defaultSettings . isstopped ;
var path = require ( ' path ' ) ;:==:var chalk:==:require ( ' chalk ' ) ;
var geo = event . geo  |  |  false ;:==:var description:==:event . description  |  |  false ;
var reactReconciler = require ( ' reactReconciler ' ) ;:==:var reactChildReconciler:==:require ( ' reactChildReconciler ' ) ;
var crossOrigin = getCrossOrigin ( this . crossOrigin ) ;:==:var url:==:crossOrigin ? this . crossOriginUrl : this . url ;
var treeScope = scope . treeScope ;:==:var assert:==:scope . assert ;
var getCustomerByStripeId = denodeify ( customer . getCustomerByStripeId ) . bind ( customer ) ;:==:var setActive:==:denodeify ( customer . setActive ) . bind ( customer ) ;
var downloadPreference = this . _ model . downloadPreference ;:==:var dataConnectionDialog:==:this . childViews . dataConnectionDialog ;
var fork = require ( ' child_process ' ) . fork ;:==:var fs:==:require ( ' fs ' ) ;
var state = this . state ;:==:var eventType:==:input . eventType ;
var vows = require ( ' vows ' ) ;:==:var path:==:require ( ' path ' ) ;
var extrudedHeight = options . extrudedHeight ;:==:var extrude:==:defined ( extrudedHeight ) ;
var charCode = evt . charCode ;:==:var keyCode:==:evt . keyCode ;
var api = hello . api ;:==:var utils:==:hello . utils ;
var frameState = scene . _ frameState ;:==:var boundingVolume:==:command . boundingVolume ;
var session = $ . gestures . session ;:==:var last:==:session . lastInterval  |  |  touch ;
var sourcemaps = require ( ' gulp - sourcemaps ' ) ;:==:var stylish:==:require ( ' jshint - stylish ' ) ;
var frustumCommandsList = scene . _ frustumCommandsList ;:==:var length:==:frustumCommandsList . length ;
var targetState = ' targetState ' ;:==:var realState:==:' realState ' ;
var anchor = document . getElementById ( ' anchor9 ' ) ;:==:var popup:==:document . getElementById ( ' popup9 ' ) ;
var lineHeight = getStyleProperty ( item , styleContextStack , ' lineHeight ' , 1 ) ;:==:var characterSpacing:==:getStyleProperty ( item , styleContextStack , ' characterSpacing ' , 0 ) ;
var technique = techniques [ material . technique ] ;:==:var parameters:==:technique . parameters ;
var dataRoles = options . dataRoles ;:==:var objectDescriptors:==:options . objectDescriptors ;
var registrationType = meta . config . registrationType  |  |  ' normal ' ;:==:var allowLoginWith:==:( meta . config . allowLoginWith  |  |  ' username - email ' ) ;
var state = this . state ;:==:var props:==:this . props ;
var element = this . element , o = this . options , colors = this . colorsDim ;:==:var bar:==:element . children ( ' . bar : last - child ' ) ;
var chalk = require ( ' chalk ' ) ;:==:var portfinder:==:require ( ' portfinder ' ) ;
var filename = add instanceof window . File ? add . name : add . filename ;:==:var type:==:add instanceof window . File ? ' file ' : ( add . type  |  |  ' file ' ) ;
var browserify = require ( ' browserify ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var templateFile = required ( options , ' templateFile ' ) ;:==:var outputDir:==:required ( options , ' outputDir ' ) ;
var tab = tabs . focussedTab ;:==:var ace:==:tab & & tab . editor & & tab . editor . ace ;
var option = gRequire ( ' option ' ) ;:==:var config:==:gRequire ( ' config ' ) ;
var enter = data . enter ;:==:var afterEnter:==:data . afterEnter ;
var type = ( spec . type = = undefined ) ? ' menu ' : spec . type ;:==:var waitFor:==:( spec . waitFor     undefined ) ? true : spec . waitFor ;
var uri = setup . uri ;:==:var assert:==:require ( ' assert ' ) ;
var project = state . project ;:==:var iterator:==:state . iterator ;
var search = conf . search ;:==:var encoding:==:conf . encoding ;
var flipY = defaultValue ( options . flipy , true ) ;:==:var gl:==:context . _ gl ;
var prefix = obj . prefix ;:==:var value:==:obj . value ;
var head = document . head  |  |  document . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var link:==:document . createElement ( ' link ' ) ;
var validity = element . prop ( ' validity ' ) ;:==:var placeholder:==:element [ 0 ] . placeholder , noevent    ;
var path = require ( ' path ' ) ;:==:var readFile:==:promise . promisify ( require ( ' fs ' ) . readFile ) ;
var drawPoints = g . getBooleanOption ( ' drawPoints ' , setName ) ;:==:var pointSize:==:g . getNumericOption ( ' pointSize ' , setName ) ;
var async = require ( ' async ' ) ;:==:var mkdirp:==:require ( ' mkdirp ' ) ;
var config = configService . getSync ( ) . wallet . settings ;:==:var opts:==:opts  |  |  ;
var capt = this . element . children ( ' . window - caption ' ) ;:==:var title:==:capt . find ( ' . window - caption - title ' ) ;
var huffmanCode = _ _ webpack_require _ _ ( 281 ) . huffmanCode ;:==:var brotliBuildHuffmanTable:==:_ _ webpack_require _ _ ( 281 ) . brotliBuildHuffmanTable ;
var params = ob . params ;:==:var dbAppUser:==:ob . dbAppUser ;
var once = require ( ' once ' ) ;:==:var extend:==:require ( ' extend ' ) ;
var _ bitshift64Ashr = module [ ' _ bitshift64Ashr ' ] = asm [ ' _ bitshift64Ashr ' ] ;:==:var _ memcpy:==:module [ ' _ memcpy ' ]    asm [ ' _ memcpy ' ] ;
var d = vlength2 ( deltax , deltay ) ;:==:var r:==:this . r ;
var alias = require ( ' alias ' ) ;:==:var dates:==:require ( ' convert - dates ' ) ;
var label = el [ 0 ] . querySelector ( ' label ' ) ;:==:var input:==:el [ 0 ] . querySelector ( ' input ' ) ;
var data = this . _ data ;:==:var headers:==:this . _ metadata . _ headers ;
var argv = require ( ' minimist ' ) ( process . argv . slice ( 2 ) ) ;:==:var dirname:==:require ( ' path ' ) . dirname ;
var entryStartTime = timelineData . entryStartTimes [ entryIndex ] ;:==:var entryTotalTime:==:timelineData . entryTotalTimes [ entryIndex ] ;
var translateX = options . translateX ;:==:var translateY:==:options . translateY ;
var start = this . clippedPos ( row , startColumn ) ;:==:var end:==:this . clippedPos ( row , endColumn ) ;
var width = options . width , height = options . height ;:==:var x:==:options . x  |  |  0 , y    options . y  |  |  0 ;
var util = require ( ' util ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' marionette - js - runner : rpc ' ) ;
var http = require ( ' http ' ) ;:==:var mouse:==:require ( ' mouse ' ) ;
var t = this ;:==:var time:==:this . factory . time . getTime ( false , this . showSeconds ) ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var confirm:==:require ( ' gulp - prompt ' ) . confirm ;
var escapePrettyMode = this . escapePrettyMode ;:==:var pp:==:this . pp ;
var polyline = entity . polyline ;:==:var line:==:this . _ line ;
var createNumberLiteral = traceur . codegeneration . parseTreeFactory . createNumberLiteral ;:==:var createVariableStatement:==:traceur . codegeneration . parseTreeFactory . createVariableStatement ;
var dir = old . dir ;:==:var target:==:Trig . angleDeg ( old . x , old . y , old . targetx , old . targety ) ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var shell:==:require ( ' gulp - shell ' ) ;
var focusOption = _ ref . focusOption ;:==:var labelKey:==:_ ref . labelKey ;
var label = document . createElement ( ' label ' ) ;:==:var input:==:document . createElement ( ' input ' ) ;
var stackPartitions = ellipsoidGeometry . _ stackPartitions ;:==:var slicePartitions:==:ellipsoidGeometry . _ slicePartitions ;
var firstBracket = brackets . firstBracket ;:==:var lastBracket:==:brackets . lastBracket ;
var readUint16 = sharedUtil . readUint16 ;:==:var readUint32:==:sharedUtil . readUint32 ;
var prevDelta = session . prevDelta  |  |  ;:==:var prevTouch:==:session . prevTouch  |  |  ;
var IMAGE_INDEX_INDEX = Billboard . IMAGE_INDEX_INDEX = 7 ;:==:var COLOR_INDEX:==:Billboard . COLOR_INDEX    8 ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var fs:==:require ( ' fs ' ) ;
var textContent = object . getOwnPropertyDescriptor ( node . prototype , ' textContent ' ) ;:==:var innerhtml:==:object . getOwnPropertyDescriptor ( element . prototype , ' innerhtml ' ) ;
var maxDuration = data . maxDuration ;:==:var activeClassName:==:data . activeClassName ;
var lazy = ref . lazy ;:==:var number:==:ref . number ;
var Value = values . Value ;:==:var valueCollection:==:values . valueCollection ;
var g = Ca . alpha * Ca . rgb . g + ( 1 - Ca . alpha ) * Cb . rgb . g ;:==:var b:==:Ca . alpha * Ca . rgb . b + ( 1 - Ca . alpha ) * Cb . rgb . b ;
var resultSelector = this . resultSelector ;:==:var index:==:this . index++ ;
var Vue = exports . Vue ;:==:var instance:==:instances [ instanceId ] ;
var port = server . port  |  |  server . clientPort ;:==:var host:==:server . host ;
var readmeInfo = options . readmeInfo ;:==:var name:==:packageSource . name ;
var style = style  |  |  node . _ style ;:==:var rotation:==:style . rotation  |  |  0 ;
var selectionIdBuilder = powerbi . visuals . selectionIdBuilder ;:==:var createInteractivityService:==:powerbi . visuals . createInteractivityService ;
var index = options . index  |  |  100 ;:==:var height:==:options . height  |  |  ' ' ;
var cancellationError = subError ( ' cancellationError ' , ' cancellation error ' ) ;:==:var timeoutError:==:subError ( ' timeoutError ' , ' timeout error ' ) ;
var path = this . path  |  |  pathProxyForDraw ;:==:var hasStroke:==:style . hasStroke ( ) ;
var Flags = reactdomComponentFlags ;:==:var getNode:==:reactdomComponentTree . getNodeFromInstance ;
var el = prepSettings . el ;:==:var flags:==:prepSettings . flags ;
var env = process . env ;:==:var execSync:==:require ( ' child_process ' ) . execSync ;
var edgeWeakType = this . _ edgeWeakType ;:==:var noDistance:==:this . _ noDistance ;
var ROTATION_INDEX = Billboard . ROTATION_INDEX = 9 ;:==:var ALIGNED_AXIS_INDEX:==:Billboard . ALIGNED_AXIS_INDEX    10 ;
var history = cliCmd . history  |  |  this . history ;:==:var index:==:history . index ;
var g = d3 . select ( this ) . style ( ' pointer - events ' , ' all ' ) . style ( ' -webkit - tap - highlight - color ' , ' rgba ( 0,0,0,0 ) ' ) . on ( ' mousedown . brush ' , brushstart ) . on ( ' touchstart . brush ' , brushstart ) ;:==:var background:==:g . selectAll ( ' . background ' ) . data ( [ 0 ] ) ;
var iconClassNameLeft = _ props . iconClassNameLeft ;:==:var iconClassNameRight:==:_ props . iconClassNameRight ;
var getJSF = utils . getJSF ;:==:var assert:==:utils . assert ;
var onChange = _ props . onChange ;:==:var onHeightChange:==:_ props . onHeightChange ;
var pet = data . params . pet ;:==:var food:==:data . params . food ;
var transform = painter . transform ;:==:var color:==:layer . paint [ ' background - color ' ] ;
var warn = sharedUtil . warn ;:==:var customStyle:==:displaydomUtils . customStyle ;
var rightBuffers = config . rightBuffers . slice ( 0 ) ;:==:var sampleRate:==:config . sampleRate ;
var vertexFormat = defaultValue ( options . vertexFormat , vertexFormat . default ) ;:==:var ellipsoid:==:defaultValue ( options . ellipsoid , ellipsoid . wgs84 ) ;
var util = require ( ' util ' ) ;:==:var protocol:==:require ( ' pomelo - protocol ' ) ;
var services = require ( ' services ' ) ;:==:var cards:==:require ( ' cards ' ) ;
var commonLabelOpts = opts . commonLabelOpts  |  |  ;:==:var fontFamily:==:opts . fontFamily  |  |  constants . hoverfont ;
var appController = _ appJsControllersAppController [ ' default ' ] ;:==:var confirmDownloadController:==:_ appJsControllersConfirmDownloadController [ ' default ' ] ;
var projection = this . renderSession . projection ;:==:var offset:==:this . renderSession . offset ;
var logger = require ( ' gulp - logger ' ) ;:==:var util:==:require ( ' gulp - util ' ) ;
var deepOrangea400 = exports . deepOrangea400 = ' # ff3d00 ' ;:==:var deepOrangea700:==:exports . deepOrangea700    ' # dd2c00 ' ;
var STRING_UNARY_OPERATORS = exports . STRING_UNARY_OPERATORS = [ ' typeof ' ] ;:==:var UNARY_OPERATORS:==:exports . UNARY_OPERATORS    [ ' void ' ] . concat ( BOOLEAN_UNARY_OPERATORS , NUMBER_UNARY_OPERATORS , STRING_UNARY_OPERATORS ) ;
var c = rejectSoon ( ' rejected - c ' , 10 ) ;:==:var d:==:rejectSoon ( ' rejected - d ' , 20 ) ;
var http = require ( ' http ' ) ;:==:var assert:==:require ( ' assert ' ) ;
var displayOrientations = windows . graphics . display . displayOrientations ;:==:var photoOrientation:==:windows . storage . fileProperties . photoOrientation ;
var readFile = promise . promisify ( fs . readFile ) ;:==:var gzip:==:promise . promisify ( zlib . gzip ) ;
var year = calendar . month . year ( ) ;:==:var hour:==:calendar . month . hour ( ) ;
var name = this . transformAny ( tree . name ) ;:==:var callSignature:==:this . transformAny ( tree . callSignature ) ;
var normalScale = this . normalScale & & this . normal ? this . normalScale . buildCode ( builder , ' v2 ' ) : undefined ;:==:var light:==:this . light ? this . light . buildCode ( builder , ' v3 ' , cache : ' light ' ) : undefined ;
var formalParameterList = this . transformAny ( tree . formalParameterList ) ;:==:var functionBody:==:this . transformFunctionBody ( tree . functionBody ) ;
var parent = firstNode . parent ;:==:var editor:==:firstNode . editor ;
var show = powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . show , false ) ;:==:var displayName:==:powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . displayName ) ;
var image = this . image ;:==:var rotate:==:image . rotate ;
var os    = require ( ' os ' ) ;:==:var p:==:require ( ' path ' ) ;
var step = stepResult . step ;:==:var scenario:==:step . scenario ;
var opacity = context . opacity ;:==:var origin:==:context . origin ;
var isDefined = leafletHelpers . isDefined ;:==:var helpers:==:leafletHelpers ;
var mode = oFromPageInfo . mode ;:==:var oFromPage:==:this . getPage ( oFromPageInfo . i d ) ;
var dependencies = this . dependencies ;:==:var ignore:==:this . ignore ;
var extraMarkersPlugin = leafletHelpers . extraMarkersPlugin ;:==:var domMarkersPlugin:==:leafletHelpers . domMarkersPlugin ;
var noop = testUtils . noop ;:==:var isStrictModeSupported:==:testUtils . isStrictModeSupported ;
var droplist = menu . droplist ;:==:var panel:==:menu . panel ;
var cityB = points [ citybIndex ] ;:==:var d:==:dist ( citya . x , citya . y , cityb . x , cityb . y ) ;
var middle = lc ? chars . middle : chars . MIDDLE ;:==:var last:==:lc ? chars . last : chars . LAST ;
var findAncestorOffsetKey = require ( ' findAncestorOffsetKey ' ) ;:==:var nullthrows:==:require ( ' nullthrows ' ) ;
var outlineColor = property . getValueOrClonedDefault ( rectangle . outlineColor , time , color . black , scratchColor ) ;:==:var outlineWidth:==:property . getValueOrDefault ( rectangle . outlineWidth , time , 1 . 0 ) ;
var yieldStatement = traceur . syntax . trees . yieldStatement ;:==:var getTreeNameForType:==:traceur . syntax . trees . getTreeNameForType ;
var spawn = require ( ' child_process ' ) . spawn ;:==:var phantomjs:==:require ( ' phantomjs - prebuilt ' ) ;
var colorizer = require ( ' colorizer ' ) ;:==:var utils:==:require ( ' utils ' ) ;
var textStylePropTypes = require ( ' textStylePropTypes ' ) ;:==:var viewStylePropTypes:==:require ( ' viewStylePropTypes ' ) ;
var c = numberOfVertices + ( ix + 1 ) + gridx1 * ( iy + 1 ) ;:==:var d:==:numberOfVertices + ( ix + 1 ) + gridx1 * iy ;
var dx = w * Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx ' , this . dx ) ) ) ) ;:==:var fillColor:==:mxUtils . getValue ( this . style , ' fillColor ' , ' # ffffff ' ) ;
var name = path . node . name ;:==:var remap:==:this . remaps [ name ] ;
var axisKey = seriesInfo . axisKey ;:==:var bandWidth:==:seriesInfo . bandWidth ;
var has     = _ _ webpack_require _ _ ( 1023 ) . has ;:==:var isValidEntityCode:==:_ _ webpack_require _ _ ( 1023 ) . isValidEntityCode ;
var doc = this . doc ;:==:var session:==:this . session ;
var join = require ( ' path ' ) . join ;:==:var extend:==:require ( ' util ' ) . _ extend ;
var layerStatesArray = frameState . layerStatesArray ;:==:var attributions:==:ol . obj . assign ( , frameState . attributions ) ;
var menus = imports . menus ;:==:var fs:==:imports . fs ;
var addMarkerToGroup = leafletMarkersHelpers . addMarkerToGroup ;:==:var createMarker:==:leafletMarkersHelpers . createMarker ;
var type = event . type ;:==:var fn:==:event . fn  |  |  emptyFn ;
var maxRows = this . instance . getSettings ( ) . maxRows ;:==:var maxCols:==:this . instance . getSettings ( ) . maxCols ;
var request = webInspector . remoteObject . fromLocalObject ( json . parse ( dataEntries [ i ] . request ) ) ;:==:var response:==:webInspector . remoteObject . fromLocalObject ( json . parse ( dataEntries [ i ] . response ) ) ;
var currentSequence = lzwState . currentSequence ;:==:var currentSequenceLength:==:lzwState . currentSequenceLength ;
var tab = tabs . focussedTab ;:==:var toggle:==:args . toggle  |  |  args . source     ' click ' ;
var overlayContainerStyle = _ props . overlayContainerStyle ;:==:var overlayContentStyle:==:_ props . overlayContentStyle ;
var tokenType = traceur . syntax . tokenType ;:==:var stringBuilder:==:traceur . util . stringBuilder ;
var start = Math . min ( offsets . start , length ) ;:==:var end:==:typeof offsets . end      ' undefined ' ? start : Math . min ( offsets . end , length ) ;
var map = this . _ map ;:==:var length:==:map . length ;
var reactReconciler = require ( ' reactReconciler ' ) ;:==:var reactServerBatchingStrategy:==:require ( ' reactServerBatchingStrategy ' ) ;
var bodies = this . bodies ;:==:var constraints:==:this . constraints ;
var brown200 = exports . brown200 = ' # bcaaa4 ' ;:==:var brown300:==:exports . brown300    ' # a1887f ' ;
var pageX = ev . pageX ;:==:var pageY:==:ev . pageY ;
var O_EXCL = constants . O_EXCL  |  |  0 ;:==:var O_NOCTTY:==:constants . O_NOCTTY  |  |  0 ;
var velocityX = e . gesture . velocityX ;:==:var velocityY:==:e . gesture . velocityY ;
var hostname = hosts . hosts [ key ] . hostname ;:==:var type:==:hosts . hosts [ key ] . type ;
var w = imageElement . width ;:==:var h:==:imageElement . height ;
var util = require ( ' util ' ) ;:==:var q:==:require ( ' qq ' ) ;
var tanImp = c . tanImp ;:==:var binImp:==:c . binImp ;
var val2 = w2utils . isDateTime ( val2 , w2utils . settings . datetimeFormat , true ) ;:==:var val3:==:w2utils . isDateTime ( val3 , w2utils . settings . datetimeFormat , true ) ;
var extend = require ( ' util ' ) . _ extend ;:==:var git:==:require ( ' gulp - git ' ) ;
var enable = getAndPrepare ( ' enable ' ) ;:==:var disable:==:getAndPrepare ( ' disable ' ) ;
var r = int ( random ( 0 , spots . length ) ) ;:==:var spot:==:spots [ r ] ;
var max_size_x = this . resize_max_size_x ;:==:var min_size_x:==:this . resize_min_size_x ;
var client = helper . client ( ) ;:==:var query:==:client . query ( ' select name from person order by name ' ) ;
var uglify = require ( ' gulp - uglify ' ) ;:==:var yaml:==:require ( ' js - yaml ' ) . safeLoad ;
var key = value . key ;:==:var channel:==:value . channel ;
var catalogItems = response . catalogItems ;:==:var catalogItemVisibilities:==:response . catalogItemVisibilities ;
var Writable = stream . Writable ;:==:var assert:==:require ( ' assert ' ) ;
var reactBrowserEventEmitter = require ( ' reactBrowserEventEmitter ' ) ;:==:var reactdomFiberInput:==:require ( ' reactdomFiberInput ' ) ;
var nextProp = nextProps [ propKey ] ;:==:var lastProp:==:lastProps [ propKey ] ;
var inObjectPattern = this . inObjectPattern _ ;:==:var binding:==:this . transformAny ( tree . binding ) ;
var n2 = helper . getNode ( ' n2 ' ) ;:==:var n3:==:helper . getNode ( ' n3 ' ) ;
var parseqs = _ dereq _ ( ' parseqs ' ) ;:==:var parser:==:_ dereq _ ( ' engine . io - parser ' ) ;
var zmax = options . zmax ;:==:var subdivisions:==:options . subdivisions  |  |  w : 1 , h : 1 ;
var frameBuffer = this . frameBuffer ;:==:var swizzledFrame:==:this . swizzledFrame ;
var WITH_STATEMENT = ' WITH_STATEMENT ' ;:==:var YIELD_EXPRESSION:==:' YIELD_EXPRESSION ' ;
var multiTestRunner = goog . require ( ' goog . testing . multiTestRunner ' ) ;:==:var propertyReplacer:==:goog . require ( ' goog . testing . propertyReplacer ' ) ;
var cache = this . cache ;:==:var queue:==:_ queue [ url ] ;
var dnode = require ( ' dnode ' ) ;:==:var net:==:require ( ' net ' ) ;
var watcher = imports . watcher ;:==:var query:==:options . query ;
var db = this . _ db ;:==:var transaction:==:this . _ db . transaction ( [ objType ] , ' readwrite ' ) ;
var banner = find ( ' . jasmine - banner ' ) ;:==:var alert:==:find ( ' . jasmine - alert ' ) ;
var cellLayoutManager = _ props7 . cellLayoutManager ;:==:var height:==:_ props7 . height ;
var menus = imports . menus ;:==:var panels:==:imports . panels ;
var ecModel = this . ecModel ;:==:var color:==:colorPaletteMixin . getColorFromPalette . call ( this , name , scope ) ;
var loader = require ( ' @loader ' ) ;:==:var dep1:==:require ( ' dep1 ' ) ;
var c = m . c ;:==:var d:==:m . d ;
var isBeta = ! ! challengeSpec . isBeta ;:==:var isComingSoon:==:! ! challengeSpec . isComingSoon ;
var output = this . output ;:==:var outputEncodings:==:this . outputEncodings ;
var _ saveSetjmp = module [ ' _ saveSetjmp ' ] = asm [ ' _ saveSetjmp ' ] ;:==:var _ memcmp:==:module [ ' _ memcmp ' ]    asm [ ' _ memcmp ' ] ;
var done = get ( ' mass - spec - done ' ) ;:==:var errors:==:get ( ' mass - spec - errors ' ) ;
var textureWidth = options . textureWidth ! = = undefined ? options . textureWidth : 512 ;:==:var textureHeight:==:options . textureHeight !    undefined ? options . textureHeight : 512 ;
var fs = imports . fs ;:==:var menus:==:imports . menus ;
var itemSize = visualMapModel . itemSize ;:==:var orient:==:this . _ orient ;
var pooledClass = require ( ' pooledClass ' ) ;:==:var twoArgumentPooler:==:pooledClass . twoArgumentPooler ;
var editor = new baidu . editor . Editor ( ' autoFloatEnabled ' : false ) ;:==:var div:==:document . body . appendChild ( document . createElement ( ' div ' ) ) ;
var dom = goog . require ( ' goog . dom ' ) ;:==:var jsunit:==:goog . require ( ' goog . testing . jsunit ' ) ;
var c = cs [ i ] ;:==:var target:==:c . target ;
var rect = opts . rect ;:==:var width:==:rect . width ;
var priv = privatePool . get ( this ) ;:==:var totalColumns:==:priv . totalColumns ;
var prev = tangentPlane . projectPointOntoPlane ( cartesian3 . add ( position , end , prevScratch ) , prevScratch ) ;:==:var angle:==:cartesian2 . angleBetween ( next , prev ) ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var urlFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' urlFieldTestObject ' ) ) ;
var titleText = powerbi . dataViewObjects . getValue ( legendObjectProperties , visuals . donutChartProps . legend . titleText , this . data . legendData . title ) ;:==:var labelColor:==:powerbi . dataViewObject . getValue ( legendObjectProperties , visuals . legendProps . labelColor , this . data . legendData . labelColor ) ;
var view = this . view ;:==:var event:==:seg . event ;
var dialog = this . _ dom . dialog ;:==:var style:==:dialog . style ;
var inherits = utils . inherits ;:==:var debug:==:require ( ' debug ' ) ( ' mocha : runner ' ) ;
var shape = data . shape ;:==:var stride:==:data . stride ;
var ends = this . ends _ ;:==:var layout:==:this . layout ;
var fs = imports . fs ;:==:var ext:==:imports . ext ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var parseTreeVisitor:==:traceur . syntax . parseTreeVisitor ;
var argumentMatcher = goog . require ( ' goog . testing . mockmatchers . argumentMatcher ' ) ;:==:var mockControl:==:goog . require ( ' goog . testing . mockControl ' ) ;
var onTerrain = geometryUpdater . _ onTerrain ;:==:var primitives:==:this . _ primitives ;
var onConnectCallback = jasmine . createSpy ( ' onConnectCallback ' ) ;:==:var http:==:require ( ' http ' ) ;
var canvas = context . canvas ;:==:var options:==:opt_options ? opt_options : ;
var variable = variables [ i ] ;:==:var def:==:variable . defs [ 0 ] ;
var getValue = argscheck . getValue ;:==:var quality:==:getValue ( options . quality , 50 ) ;
var finallyState = traceur . codegeneration . generator . finallyState ;:==:var forInTransformPass:==:traceur . codegeneration . generator . forInTransformPass ;
var args = this . args ;:==:var scheduler:==:this . scheduler ;
var trackingPeriod = settings . trackingPeriod ;:==:var nextReset:==:settings . nextReset ;
var recordFunction = goog . require ( ' goog . testing . recordFunction ' ) ;:==:var testSuite:==:goog . require ( ' goog . testing . testSuite ' ) ;
var domain = doc . domain ;:==:var path:==:win . location . pathname ;
var addon = spec . addon ;:==:var attribute:==:spec . attribute ;
var bold = getStyleProperty ( , styleContextStack , ' bold ' , false ) ;:==:var italics:==:getStyleProperty ( , styleContextStack , ' italics ' , false ) ;
var url = ( typeof this . url ! = ' object ' ? this . url : this . url . get ) ;:==:var sel:==:this . last . selection ;
var Company = db . model ( ' Company ' , companySchema ) ;:==:var user:==:db . model ( ' user ' , userSchema ) ;
var subscription = context . subscription ;:==:var contexts:==:this . contexts ;
var face = this . face ;:==:var i:==:this . ij [ 0 ] ;
var c9 = imports . c9 ;:==:var debug:==:imports [ ' debugger ' ] ;
var outlineColor = property . getValueOrClonedDefault ( box . outlineColor , time , color . black , scratchColor ) ;:==:var outlineWidth:==:property . getValueOrDefault ( box . outlineWidth , time , 1 . 0 ) ;
var width = ( data . width ) ? data . width : 512 ;:==:var height:==:( data . height ) ? data . height : 2 ;
var getKpiImageMetadata = powerbi . visuals . kpiUtil . getKpiImageMetadata ;:==:var createClassAndSelector:==:jsCommon . cssConstants . createClassAndSelector ;
var columns = $ ( ' # grid_'+ this . name + ' _ columns ' ) ;:==:var fcolumns:==:$ ( ' # grid_'+ this . name + ' _ fcolumns ' ) ;
var y1 = segment . y1 ;:==:var x2:==:segment . x2 ;
var controller = options . controller ;:==:var controllerAs:==:options . controllerAs ;
var net = require ( ' net ' ) ;:==:var d:==:dnode ( ) ;
var fullWidth = _ props2 . fullWidth ;:==:var hintText:==:_ props2 . hintText ;
var head = document . getElementsByTagName ( ' head ' ) [ 0 ] ;:==:var link:==:head . appendChild ( document . createElement ( ' link ' ) ) ;
var columnStartIndex = _ ref . columnStartIndex ;:==:var columnStopIndex:==:_ ref . columnStopIndex ;
var lineColor = powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . lineColor ) ;:==:var transparency:==:powerbi . dataViewObject . getValue ( trendProperties , trendLinePropertyNames . transparency , trendLineHelper . defaults . transparency ) ;
var predefinedMetrics = ob . predefinedMetrics ;:==:var userProps:==:ob . userProps ;
var _ strlen = Module [ ' _ strlen ' ] = asm [ ' _ strlen ' ] ;:==:var _ memcpy:==:Module [ ' _ memcpy ' ]    asm [ ' _ memcpy ' ] ;
var menus = imports . menus ;:==:var settings:==:imports . settings ;
var linearMap = numberUtil . linearMap ;:==:var each:==:zrUtil . each ;
var error = operation . error ;:==:var transition:==:operation . transition ;
var fs = require ( ' fs ' ) ;:==:var assert:==:require ( ' assert - plus ' ) ;
var marked = require ( ' marked ' ) ;:==:var util:==:require ( ' util ' ) ;
var group = _ ref7 . group ;:==:var force:==:_ ref7 . force ;
var range = this . $ options . range  |  |  session . getSelection ( ) . getRange ( ) ;:==:var start:==:this . $ options . start  |  |  range [ searchSelection ? ' end ' : ' start ' ] ;
var chunk = e . currentTarget . chunk ;:==:var session:==:this . session ;
var x = textGroup . x + line . x + word . x ;:==:var y:==:textGroup . y + line . y + word . y ;
var exists = fs . existsSync  |  |  path . existsSync ;:==:var resolve:==:path . resolve ;
var pixelConverter = jsCommon . pixelConverter ;:==:var createEnumType:==:powerbi . createEnumType ;
var velocityRandomness = options . velocityRandomness ! = = undefined ? options . velocityRandomness : 0 ;:==:var colorRandomness:==:options . colorRandomness !    undefined ? options . colorRandomness : 1 ;
var emergency = group . emergency ;:==:var voicemail:==:group . voicemail ;
var n = iframe . get ( ' node ' ) ;:==:var e:==:Y . one ( ' # editor ' ) ;
var $ el = this . $ el ;:==:var $ form:==:this . $ form ;
var shelljs = require ( ' shelljs ' ) ;:==:var path:==:require ( ' path ' ) ;
var root = config . root ;:==:var channel:==:config . channel ;
var Promise = require ( ' Promise ' ) ;:==:var rctDeviceEventEmitter:==:require ( ' rctDeviceEventEmitter ' ) ;
var item = items [ i ] ;:==:var entity:==:item . entity ;
var pos = target . position ;:==:var scale:==:target . scale ;
var dir = game . player . dir ;:==:var sky:==:game . map . skybox ;
var identitycMap = corecMap . identitycMap ;:==:var getGlyphsUnicode:==:coreGlyphList . getGlyphsUnicode ;
var options = self . options ;:==:var canvas:==:self . canvas ;
var y = parsePercent ( positionInfo . y , containerHeight ) ;:==:var x2:==:parsePercent ( positionInfo . x2 , containerWidth ) ;
var React = require ( ' React ' ) ;:==:var scrollView:==:require ( ' scrollView ' ) ;
var foo = foo : ' foo ' ;:==:var bar:==:bar : ' bar ' ;
var bodyB = this . bodyB ;:==:var form:==:helper . allocTransform ( ) ;
var top = this . getAttribute ( ' data - top ' ) ;:==:var offset:==:this . getAttribute ( ' data - offset ' ) ;
var a = aabb1 . elements ;:==:var b:==:aabb2 . elements ;
var assert = require ( ' assert ' ) ;:==:var url:==:require ( ' url ' ) ;
var buffer = module . exports . memory . buffer ;:==:var main:==:module . exports . main ;
var styleSpec = options . styleSpec ;:==:var key:==:options . key ;
var previous = that . _ itemsManager . _ elementFromHandle ( previousHandle ) ;:==:var next:==:that . _ itemsManager . _ elementFromHandle ( nextHandle ) ;
var Transaction = require ( ' Transaction ' ) ;:==:var reactInstrumentation:==:require ( ' reactInstrumentation ' ) ;
var column = this . _ grid . getOrCreateColumn ( columnIndex ) ;:==:var isLeaf:==:hierarchyNav . isLeaf ( item ) ;
var add = numeric . add , mul = numeric . mul , y1,erinf ;:==:var max:==:Math . max , min    Math . min , abs    Math . abs , norminf    numeric . norminf , pow    Math . pow ;
var importSpecifierSet = traceur . syntax . trees . importSpecifierSet ;:==:var labelledStatement:==:traceur . syntax . trees . labelledStatement ;
var styleSheet = require ( ' styleSheet ' ) ;:==:var f8Touchable:==:require ( ' f8Touchable ' ) ;
var fullname = userIds . fullname ;:==:var email:==:userIds . email ;
var before = ! options  |  |  options . before ! = = false ;:==:var after:==:! options  |  |  options . after !    false ;
var my = oThis . _ my ;:==:var at:==:oThis . _ at ;
var nodeToCode = previewToEditorMapping . _ nodeToCode ;:==:var pathTo:==:previewToEditorMapping . _ pathTo ;
var xhr = scope . xhr ;:==:var flags:==:scope . flags ;
var scale = axisInfo . axis . scale ;:==:var option:==:axisPointerModel . option ;
var isMouseDown = this . instance . view . isMouseDown ( ) ;:==:var isMeta:==:event ? ( 0 , _ unicode . isMetaKey ) ( event . keyCode ) : false ;
var p2 = triangleNode . getAttribute ( ' p2 ' ) ;:==:var p3:==:triangleNode . getAttribute ( ' p3 ' ) ;
var dataset = logItem . dataset ;:==:var phoneNumber:==:dataset . phoneNumber ;
var semiMinorAxis = options . semiMinorAxis ;:==:var semiMajorAxis:==:options . semiMajorAxis ;
var altKey = defaultValue ( options . altKey , false ) ;:==:var shiftKey:==:defaultValue ( options . shiftKey , false ) ;
var VARIABLE_DECLARATION = ' VARIABLE_DECLARATION ' ;:==:var VARIABLE_DECLARATION_LIST:==:' VARIABLE_DECLARATION_LIST ' ;
var angle = this . angle ;:==:var viewport:==:this . viewport ;
var deepPurple700 = exports . deepPurple700 = ' # 512da8 ' ;:==:var deepPurple800:==:exports . deepPurple800    ' # 4527a0 ' ;
var remove = this . removeCondition _ ( mapBrowserEvent ) ;:==:var toggle:==:this . toggleCondition _ ( mapBrowserEvent ) ;
var spy = this . sandbox . spy ( ) ;:==:var analogRead:==:this . analogRead . lastCall . args [ 1 ] ;
var renderAllPending = scope . renderAllPending ;:==:var unwrap:==:scope . unwrap ;
var fs   = require ( ' fs ' ) ;:==:var io:==:require ( ' socket . io ' ) ;
var root = seriesModel . getData ( ) . tree . root ;:==:var targetNode:==:payload . targetNode ;
var util    = require ( ' util ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' pm2 : actionMethod ' ) ;
var left = point . left ;:==:var top:==:point . top ;
var path = require ( ' path ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var http = require ( ' http ' ) ;:==:var ecstatic:==:require ( ' ecstatic ' ) ;
var ui = imports . ui ;:==:var collab:==:imports . collab ;
var now = julianDate . now ( ) ;:==:var refreshMode:==:networkLink . refreshMode ;
var groupBy = rewriter . rewriteGroupBy ( this . groupByItems , from ) ;:==:var transform:==:rewriter . rewriteTransform ( this . transformItems , from ) ;
var p = polar . coordToPoint ( [ r + labelMargin , labelsAngles [ i ] ] ) ;:==:var cx:==:polar . cx ;
var popup = this . _ _ popup ;:==:var backdrop:==:this . _ _ backdrop ;
var s = new Sandbox ( warehouse : SIMPLE_WAREHOUSE ) ;:==:var run:==:s . run ( ' create ' , ' foobar ' ) ;
var setInnerhtml = scope . setInnerhtml ;:==:var wrap:==:scope . wrap ;
var crypto = require ( ' crypto ' ) ;:==:var fs:==:require ( ' fs - extra ' ) ;
var headerCell = this . headerCell ( gridId , colNumber ) ;:==:var resizer:==:headerCell . all ( by . css ( ' . ui - grid - column - resizer ' ) ) . first ( ) ;
var Group = Facade . Group ;:==:var Identify:==:Facade . Identify ;
var index = state . index ;:==:var period:==:state . period ;
var NO_MODIFICATION_ALLOWED_ERR = exceptionCode . no_modification_allowed_err = ( ( exceptionMessage [ 7 ] = ' no modification allowed ' ) , 7 ) ;:==:var not_found_err:==:exceptionCode . not_found_err       ( ( exceptionMessage [ 8 ]   ' not found ' ) , 8 ) ;
var userSettings = results . userSettings ;:==:var isAdmin:==:results . isAdmin ;
var x = Phaser . Math . clamp ( circle . center . x , body . left , body . right ) ;:==:var y:==:Phaser . Math . clamp ( circle . center . y , body . top , body . bottom ) ;
var redis = config . redis ;:==:var zlib:==:require ( ' zlib ' ) ;
var object = util . object ;:==:var string:==:util . string ;
var drag = entry . indexOf ( ' drag ' ) > = 0 ;:==:var fixed:==:entry . indexOf ( ' fixed ' ) >   0 ;
var a = ' ` Twas brillig , and the slithy toves\nDid gyre and gimble in the wabe : \nAll mimsy were the borogoves,\nAnd the mome raths outgrabe . \n ' ;:==:var b:==:' i am the very model of a modern major general,\ni\'ve information vegetable , animal , and mineral,\ni know the kings of england , and i quote the fights historical,\nFrom marathon to waterloo , in order categorical . \n ' ;
var x = evt . containerPoint . x ;:==:var y:==:evt . containerPoint . y ;
var graph = document . getElementById ( ' graph ' ) ;:==:var g:==:new dygraph ( graph , zero_to_fifty ) ;
var color = cpal . colorRecords [ rec . paletteIndex ] ;:==:var g:==:this . _ font . _ getBaseGlyph ( rec . gid ) ;
var viewManagement = windows . ui . viewManagement ;:==:var uiViewSettings:==:viewManagement . uiViewSettings ;
var A = numeric . clone ( x ) , Ai , Aj ;:==:var I:==:numeric . identity ( m ) , Ii , Ij ;
var availablePlugins = exports . availablePlugins = ;:==:var availablePresets:==:exports . availablePresets    ;
var optionals = lang_1 . isPresent ( extra ) ? collection_1 . stringMapWrapper . get ( extra , ' optionals ' ) : null ;:==:var validator:==:lang_1 . isPresent ( extra ) ? collection_1 . stringMapWrapper . get ( extra , ' validator ' ) : null ;
var limit = obj . limit  |  |  null ;:==:var spring:==:obj . spring  |  |  null ;
var d = new objectNode ( a : a , b : b ) ;:==:var e:==:new objectNode ( c : c , d : d ) ;
var size = Math . max ( minSize , math . min ( maxSize , powerbi . dataViewObjects . getValue ( objects , properties [ ' size ' ] , defaultSettings . size ) ) ) ;:==:var transparency:==:math . max ( 0 , math . min ( 100 , powerbi . dataViewObjects . getValue ( objects , properties [ ' transparency ' ] , defaultSettings . transparency ) ) ) ;
var anchor = document . getElementById ( ' anchor2 ' ) ;:==:var popup:==:document . getElementById ( ' popup2 ' ) ;
var validator = require ( ' validator ' ) ;:==:var nconf:==:require ( ' nconf ' ) ;
var userAgent = require ( ' userAgent ' ) ;:==:var keyCommandBackspaceToStartOfLine:==:require ( ' keyCommandBackspaceToStartOfLine ' ) ;
var w = this . parseProperty ( iconNode , ' * ' , ' w ' ) ;:==:var h:==:this . parseProperty ( iconNode , ' * ' , ' h ' ) ;
var b = this . b ;:==:var b2j:==:this . b2j ;
var quat = Quaternion . fromAxisAngle ( cartesian3 . unit_z , rot , quatScratch ) ;:==:var rotMtx:==:matrix3 . fromQuaternion ( quaternion . conjugate ( quat , quat ) , rotMtxScratch ) ;
var ranges = inlineWidgets [ 0 ] . _ ranges [ 0 ] ;:==:var document:==:ranges . textRange . document ;
var ui = util . Module ( ' ui ' ) ;:==:var assert:==:util . assert ;
var exclude = options & & options . exclude  |  |  ;:==:var include:==:options & & options . include ;
var iframeLoadMonitor = goog . require ( ' goog . net . iframeLoadMonitor ' ) ;:==:var multiIframeLoadMonitor:==:goog . require ( ' goog . net . multiIframeLoadMonitor ' ) ;
var name = new manifestHelper ( manifest ) . name ;:==:var origin:==:app . origin ;
var showMenuIconButton = _ props . showMenuIconButton ;:==:var iconElementLeft:==:_ props . iconElementLeft ;
var delayLeave = ref . delayLeave ;:==:var duration:==:ref . duration ;
var tilingType = this . tilingType ;:==:var color:==:this . color ;
var width = options . viewport . width - ( margin . left + margin . right ) ;:==:var height:==:options . viewport . height ;
var doc = this . doc = new Document ( ' ' ) ;:==:var deferredUpdate:==:this . deferredUpdate    lang . delayedCall ( this . onUpdate . bind ( this ) ) ;
var registerListener = exports . registerListener = proxySupportCode ( ' registerListener ' ) ;:==:var setDefaultTimeout:==:exports . setDefaultTimeout    proxySupportCode ( ' setDefaultTimeout ' ) ;
var extrudedHeight = geometry . _ extrudedHeight ;:==:var east:==:rectangle . east ;
var e = new BN ( msg ) ;:==:var r:==:signature . r ;
var selectedIndices = that . _ selectedIndices ;:==:var dataItems:==:that . _ dataItems ;
var moreInfoButton = errorWrapperConfig . moreInfoButton ;:==:var lessInfoButton:==:errorWrapperConfig . lessInfoButton ;
var parentView = view_ref_1 . internalView ( viewContainerLocation . parentView ) ;:==:var boundElementIndex:==:viewContainerLocation . boundElementIndex ;
var stroke = defaultValue ( options . stroke , false ) ;:==:var fill:==:defaultValue ( options . fill , true ) ;
var visualMapModel = this . visualMapModel ;:==:var textGap:==:visualMapModel . get ( ' textGap ' ) ;
var marginLeft = options . marginLeft ;:==:var marginRight:==:options . marginRight ;
var scrollLeft = window . pagexOffset  |  |  docElem . scrollLeft  |  |  body . scrollLeft ;:==:var clientTop:==:docElem . clientTop  |  |  body . clientTop  |  |  0 ;
var callbacks = this . _ callbacks ;:==:var contexts:==:this . _ contexts ;
var props = this . props ;:==:var dom:==:this . dom ;
var dataLabelUtils = powerbi . visuals . dataLabelUtils ;:==:var converterHelper:==:powerbi . visuals . converterHelper ;
var i = config . firstRow ;:==:var lastRow:==:config . lastRow ;
var crypto = require ( ' crypto ' ) ;:==:var fs:==:require ( ' hexo - fs ' ) ;
var channelName = this . channelName ;:==:var requests:==:this . _ requests ;
var fold = this . getNextFoldTo ( row , column ) . fold ;:==:var folds:==:this . folds ;
var final = this . finalSegments = [ ] ;:==:var returned:==:this . returnedForkContext    [ ] ;
var sourceMapModule = global . sourceMapModule = global . sourceMapModule  |  |  ;:==:var util:==:sourceMapModule [ ' util ' ] ;
var bunyan = require ( ' bunyan ' ) ;:==:var once:==:require ( ' once ' ) ;
var build = imports [ ' cdn . build ' ] ;:==:var fs:==:require ( ' fs ' ) ;
var colorPropType = require ( ' colorPropType ' ) ;:==:var shadowPropTypesios:==:require ( ' shadowPropTypesios ' ) ;
var restParameterTransformer = traceur . codegeneration . restParameterTransformer ;:==:var spreadTransformer:==:traceur . codegeneration . spreadTransformer ;
var chat = util . Module ( ' chat ' ) ;:==:var assert:==:util . assert ;
var typeSupported = this . typeSupported ;:==:var config:==:this . config ;
var password = elements . password . value ;:==:var identity:==:elements . identity . value ;
var x = sphere0 . centerWorld . x - sphere1 . centerWorld . x ;:==:var y:==:sphere0 . centerWorld . y - sphere1 . centerWorld . y ;
var mongoose = require ( ' mongoose ' ) ;:==:var bcrypt:==:require ( ' bcrypt - nodejs ' ) ;
var EXPORT_STAR = ' EXPORT_STAR ' ;:==:var EXPRESSION_STATEMENT:==:' EXPRESSION_STATEMENT ' ;
var istanbul = require ( ' rollup - plugin - istanbul ' ) ;:==:var babel:==:require ( ' babel - core ' ) ;
var async = require ( ' async ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' node - inspector : scriptFileStorage ' ) ;
var perPositionHeight = defaultValue ( options . perPositionHeight , false ) ;:==:var extrudedHeight:==:options . extrudedHeight ;
var isIE = scope . isIE ;:==:var IMPORT_LINK_TYPE:==:scope . IMPORT_LINK_TYPE ;
var subtreeOffset = config . subtreeOffset ;:==:var align:==:config . align ;
var classes = classesMethod ? classesMethod . call ( this , seg ) : [ ] ;:==:var css:==:cssToStr ( cssMethod ? cssMethod . call ( this , seg ) : ) ;
var ctx = this . _ ctx ;:==:var x0:==:this . _ x0 ;
var debug   = require ( ' debug ' ) ( ' pm2 : monit ' ) ;:==:var sprintf:==:require ( ' sprintf - js ' ) . sprintf ;
var done = Todos . done ( ) . length ;:==:var remaining:==:Todos . remaining ( ) . length ;
var d = new functionAssignmentNode ( ' f ' , [ ' x ' ] , c ) ;:==:var e:==:d . clone ( ) ;
var current = this . current ;:==:var width:==:imgData . width ;
var uuid    = require ( ' node - uuid ' ) ;:==:var validator:==:require ( ' validator ' ) ;
var textLayerFactory = options . textLayerFactory ;:==:var annotationsLayerFactory:==:options . annotationsLayerFactory ;
var disabled = _ props2 . disabled ;:==:var disableFocusRipple:==:_ props2 . disableFocusRipple ;
var set = Ember . set ;:==:var run:==:Ember . run ;
var maximumLevel = options . maximumLevel ;:==:var rectangle:==:defaultValue ( options . rectangle , tilingScheme . rectangle ) ;
var timeout = nextTick . timeout ;:==:var queue:==:nextTick . queue  |  |  [ ] ;
var debug = require ( ' debug ' ) ( ' marionette : tcp - sync - test - server ' ) ;:==:var net:==:require ( ' net ' ) ;
var columnWidth = axisOptions . columnWidth ;:==:var isScalar:==:axisOptions . isScalar ;
var b = new functionNode ( new symbolNode ( ' add ' ) , [ new constantNode ( 2 ) , new constantNode ( 3 ) ] ) ;:==:var c:==:new functionNode ( new symbolNode ( ' subtract ' ) , [ new constantNode ( 2 ) , new constantNode ( 3 ) ] ) ;
var font = template . font ? template . font : ' Arial , Helvetica , sans - serif ' ;:==:var text:==:template . text ? template . text : ( Math . floor ( dimensions . width ) + ' x ' + Math . floor ( dimensions . height ) ) ;
var interval = list [ i ] . interval ;:==:var close:==:list [ i ] . close ;
var isInteger = _ _ webpack_require _ _ ( 2 ) . isInteger ;:==:var size:==:_ _ webpack_require _ _ ( 3 ) . size ;
var deepOrange400 = exports . deepOrange400 = ' # ff7043 ' ;:==:var deepOrange500:==:exports . deepOrange500    ' # ff5722 ' ;
var merge = require ( ' utils - merge ' ) ;:==:var resolve:==:require ( ' path ' ) . resolve ;
var scrollX = ( ( typeof window . scrollX ! = = ' undefined ' ) ? window . scrollX : window . pagexOffset ) ;:==:var scrolly:==:( ( typeof window . scrolly !    ' undefined ' ) ? window . scrolly : window . pageyOffset ) ;
var csvFileName = this . props . csvFileName ;:==:var onExportTocsv:==:this . props . options . onExportTocsv ;
var error = think . error ;:==:var wait:==:think . await ;
var brown400 = exports . brown400 = ' # 8d6e63 ' ;:==:var brown500:==:exports . brown500    ' # 795548 ' ;
var editors = imports . editors ;:==:var c9:==:imports . c9 ;
var Paragraph , Heading1 = require ( ' f8Text ' ) ;:==:var view:==:require ( ' view ' ) ;
var name = $ root . data ( ' name ' ) ;:==:var version:==:$ root . data ( ' version ' ) ;
var Packets   = common . Packets ;:==:var packetWriter:==:common . packetWriter ;
var selected = this . option . selected ;:==:var selectedMode:==:this . get ( ' selectedMode ' ) ;
var next = newData . _ _ next ;:==:var results:==:newData . results ;
var url = require ( ' url ' ) ;:==:var Gaze:==:require ( ' gaze ' ) . Gaze ;
var showUi = showUiArg ;:==:var value:==:valueArg ;
var sin = Math . sin ;:==:var cos:==:Math . cos ;
var speed = e . coords . speed ;:==:var timestamp:==:e . coords . timestamp ;
var b = face . b ;:==:var c:==:face . c ;
var added = collection . _ addedEntities ;:==:var removed:==:collection . _ removedEntities ;
var round = Math . round ;:==:var max:==:Math . max ;
var options = this . options ;:==:var col:==:options . colInside ;
var principal = serviceWorkersInfo . principal ;:==:var scope:==:serviceWorkersInfo . scope ;
var mediaElement = args . mediaElement ;:==:var session:==:args . session ;
var merge = require ( ' merge2 ' ) ;:==:var concat:==:require ( ' gulp - concat ' ) ;
var sandbox = sinon . create ( sinon . sandbox ) ;:==:var config:==:sinon . config  |  |  ;
var htmlContentElement = scope . wrappers . htmlContentElement ;:==:var htmlElement:==:scope . wrappers . htmlElement ;
var searchResults = this . _ searchResults ;:==:var searchResult:==:searchResults [ index ] ;
var margin = this . margin ;:==:var width:==:viewport . width - margin . right - margin . left ;
var save = imports . save ;:==:var autosave:==:imports . autosave ;
var children = React . Children . toArray ( this . props . children ) ;:==:var value:==:children [ position ] . props . value ;
var getSampleStateForTesting = require ( ' getSampleStateForTesting ' ) ;:==:var splitBlockInContentState:==:require ( ' splitBlockInContentState ' ) ;
var iter = goog . iter . consume ( ' ABCDEFG ' . split ( '' ) , 10 ) ;:==:var ex:==:assertThrows ( function ( ) iter . next ( ) ) ;
var p2 = symbol . _ _ p2 ;:==:var cp1:==:symbol . _ _ cp1 ;
var phi = phiStart + i * inverseSegments * phiLength ;:==:var sin:==:math . sin ( phi ) ;
var blogPost = require ( ' blogPost ' ) ;:==:var blogPostExcerpt:==:require ( ' blogPostExcerpt ' ) ;
var DISABLE_DEPTH_DISTANCE = Billboard . DISABLE_DEPTH_DISTANCE ;:==:var NUMBER_OF_PROPERTIES:==:Billboard . NUMBER_OF_PROPERTIES ;
var w = window . innerWidth - 10 ;:==:var h:==:window . innerHeight - 150 ;
var y = shape . cy ;:==:var r0:==:Math . max ( shape . r0  |  |  0 , 0 ) ;
var gulp = require ( ' gulp ' ) ;:==:var webserver:==:require ( ' gulp - webserver ' ) ;
var Str = Alias ( ' Str ' , Ptr ( U8 ) ) ;:==:var strLen:==:alias ( ' strLen ' , u32 ) ;
var createAssignStateStatement = parseTreeFactory . createAssignStateStatement ;:==:var createAssignmentStatement:==:parseTreeFactory . createAssignmentStatement ;
var addedObjects = this . _ addedObjects ;:==:var removedObjects:==:this . _ removedObjects ;
var len = refs . length ;:==:var timescale:==:sidx . timescale ;
var start = this . conversion . toScreen ( this . data . start ) ;:==:var align:==:this . options . align ;
var params = ob . params ;:==:var events:==:( params . qstring & & params . qstring . events ) ;
var categories = categorical & & categorical . categories  |  |  [ ] ;:==:var values:==:categorical & & categorical . values  |  |  [ ] ;
var endTag = formatter . endTag ( ' b ' ) ;:==:var startTag:==:formatter . startTag ( ' b ' ) ;
var setting = ( settings [ i ] ) . split ( ' = ' ) ;:==:var on:==:' \'on\ ' ' ;
var box = $ ( box2Darr [ row ] [ col ] ) ;:==:var w:==:box . width ( ) ;
var tbody = document . querySelector ( ' # netInspector tbody ' ) ;:==:var rows:==:tbody . rows ;
var T = new Twit ( config ) ;:==:var stream:==:T . stream ( ' user ' ) ;
var w = layer . width + 100 ;:==:var h:==:layer . height + 100 ;
var translations = params . translations ;:==:var title:==:params . title ;
var cson = require ( ' cson ' ) ;:==:var https:==:require ( ' https ' ) ;
var min = this . _ min = parseDate ( this . min ) ;:==:var max:==:this . _ max    parseDate ( this . max ) ;
var filesize = require ( ' filesize ' ) ;:==:var recursive:==:require ( ' recursive - readdir ' ) ;
var sum64_5_lo = utils . sum64_5_lo ;:==:var blockHash:==:hash . common . blockHash ;
var dir = path . join ( _ _ dirname , ' . . ' , ' controllers ' ) ;:==:var verbose:==:options . verbose ;
var password = document . getElementById ( ' wifi_password ' ) . value ;:==:var user:==:document . getElementById ( ' wifi_user ' ) . value ;
var lineDashOffset = state . lineDashOffset ;:==:var lineJoin:==:state . lineJoin ;
var cubicSubdivide = curveTool . cubicSubdivide ;:==:var quadraticAt:==:curveTool . quadraticAt ;
var color = this . color . buildCode ( builder , ' c ' , slot : ' color ' ) ;:==:var roughness:==:this . roughness . buildCode ( builder , ' fv1 ' ) ;
var reactInvalidSetStateWarningHook = require ( ' reactInvalidSetStateWarningHook ' ) ;:==:var reactHostOperationHistoryHook:==:require ( ' reactHostOperationHistoryHook ' ) ;
var context = this . localNames [ r . contextIndex ] ;:==:var pipe:==:this . pipeNames [ r . selfIndex ] ;
var left = Math . max ( rect1 . left , rect2 . left ) ;:==:var top:==:Math . max ( rect1 . top , rect2 . top ) ;
var data = this . data ;:==:var edgeData:==:this . edgeData ;
var imdb_id = _ this . model . get ( ' imdb_id ' ) ;:==:var episodes:==:this . model . get ( ' episodes ' ) ;
var helperNode1 = helper . getNode ( ' helperNode1 ' ) ;:==:var rule:==:helper . getNode ( ' changeNode1 ' ) . rules [ 0 ] ;
var cyanA100 = exports . cyanA100 = ' # 84ffff ' ;:==:var cyanA200:==:exports . cyanA200    ' # 18ffff ' ;
var transformation = codingStyleParameters . transformation ;:==:var precision:==:context . components [ c ] . precision ;
var language = getLanguageCode ( platformid , languageid , ltag ) ;:==:var encoding:==:getEncoding ( platformid , encodingid , languageid ) ;
var rename = require ( ' gulp - rename ' ) ;:==:var postcss:==:require ( ' gulp - postcss ' ) ;
var minHeight = minHeightFunc ( granularity , ellipsoid ) ;:==:var maxHeight:==:maxHeightFunc ( granularity , ellipsoid ) ;
var view = this . view ;:==:var slotDuration:==:view . opt ( ' slotDuration ' ) ;
var getTag = hooks . getTag ;:==:var prototypeForTag:==:hooks . prototypeForTag ;
var visualMapModel = this . visualMapModel ;:==:var handleThumbs:==:shapes . handleThumbs ;
var validate = ob . validateUserForDataWriteapi ;:==:var paths:==:ob . paths ;
var start = x : Math . cos ( startAngle ) , y : math . sin ( startAngle ) ;:==:var end:==:x : math . cos ( endAngle ) , y : math . sin ( endAngle ) ;
var sphere = BABYLON . Mesh . createSphere ( ' sphere ' , 10 . 0 , 10 . 0 , scene ) ;:==:var plan:==:babylon . mesh . createPlane ( ' plane ' , 10 . 0 , scene ) ;
var positionWC = Cartesian3 . clone ( camera . positionWC ) ;:==:var position:==:Cartesian3 . clone ( camera . position ) ;
var username = trimmedElementValueById ( ' login - username ' ) ;:==:var email:==:trimmedElementValueById ( ' login - email ' ) ;
var lazypipe = require ( ' lazypipe ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var italics = getStyleProperty ( item , styleContextStack , ' italics ' , false ) ;:==:var color:==:getStyleProperty ( item , styleContextStack , ' color ' , ' black ' ) ;
var height = jQuery ( this . splitterBar ) . height ( ) ;:==:var width:==:jQuery ( this . splitterBar ) . width ( ) ;
var imageResizeMode = require ( ' imageResizeMode ' ) ;:==:var layoutPropTypes:==:require ( ' layoutPropTypes ' ) ;
var getElementPosition = require ( ' getElementPosition ' ) ;:==:var getScrollPosition:==:require ( ' getScrollPosition ' ) ;
var POSTFIX_EXPRESSION = ' POSTFIX_EXPRESSION ' ;:==:var PREDEFINED_TYPE:==:' PREDEFINED_TYPE ' ;
var net = require ( ' net ' ) ;:==:var Agent:==:require ( ' smith ' ) . Agent ;
var fieldTestObjectsPath = require ( ' keystone - nightwatch - e2e ' ) . fieldTestObjectsPath ;:==:var path:==:require ( ' path ' ) ;
var silent = options & & options . silent ;:==:var parent:==:this . el . parentNode ;
var config = ctx . config ;:==:var timezone:==:config . timezone ;
var Iterator = Iterable . Iterator ;:==:var Seq:==:Immutable . Seq ;
var codec = protobuf . codec ;:==:var util:==:protobuf . util ;
var x = this . parseProperty ( iconNode , ' * ' , ' x ' ) ;:==:var y:==:this . parseProperty ( iconNode , ' * ' , ' y ' ) ;
var contactAddressKind = contacts . contactAddressKind ;:==:var contactEmail:==:contacts . contactEmail ;
var node = this . body . nodes [ nodeId ] ;:==:var timestep:==:this . timestep ;
var f = function ( a ) return a ;:==:var x:==:[ ' dabao ' , 0 , 0 , 0x41414141 ] ;
var minimist = require ( ' minimist ' ) ;:==:var path:==:require ( ' path ' ) ;
var cropBox = this . cropBox ;:==:var aspectRatio:==:this . options . aspectRatio ;
var scrollTop = _ ref3 . scrollTop ;:==:var totalColumnsWidth:==:_ ref3 . totalColumnsWidth ;
var k = kf ( key ) ;:==:var bucket:==:this . buckets [ k . v ] ;
var gulp = require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;:==:var path:==:require ( ' path ' ) ;
var legendPosition = powerbi . visuals . legendPosition ;:==:var dataLabelUtils:==:powerbi . visuals . dataLabelUtils ;
var len = _ len ;:==:var accu:==:_ accu ;
var p = this . parentNode ;:==:var b:==:[ this . attributes [ attr ] ] ;
var repeat = motionArgs . repeat+ ( motionArgs . repeatOffset |  | 0 ) ;:==:var line:==:motionArgs . forward ? cur . line + repeat : cur . line - repeat ;
var srcElement = ev . target  |  |  ev . srcElement ;:==:var i d:==:$ ( srcElement ) . attr ( ' data - id ' ) ;
var options = widget . prototype . options ;:==:var prototype:==:Object . create ( htmlElement . prototype ) ;
var STATUS_INACTIVE   = exports . STATUS_INACTIVE   = 0 ;:==:var STATUS_CONNECTING:==:exports . STATUS_CONNECTING     1 ;
var source = require ( ' vinyl - source - stream ' ) ;:==:var buffer:==:require ( ' vinyl - buffer ' ) ;
var STATUS_SYNC_ERROR = exports . STATUS_SYNC_ERROR   = 4 ;:==:var STATUS_RELOADING:==:exports . STATUS_RELOADING     5 ;
var assert = require ( ' assert - plus ' ) ;:==:var errors:==:require ( ' restify - errors ' ) ;
var Name = corePrimitives . name ;:==:var isStream:==:corePrimitives . isStream ;
var $ container = self . $ container ;:==:var container:==:self . container ;
var bind = utils . bind ;:==:var getComponentProperty:==:utils . entity . getComponentProperty ;
var c = this . cs ;:==:var i:==:this . num ;
var uint32Array = this . uint32Array ;:==:var tint:==:( target . tint > > 16 ) + ( target . tint & 0xff00 ) + ( ( target . tint & 0xff ) < < 16 ) + ( target . _ _ webglRenderAlpha * 255 < < 24 ) ;
var backdrop = new Animation ( ele . querySelector ( ' backdrop ' ) ) ;:==:var wrapper:==:new animation ( ele . querySelector ( ' action - sheet - wrapper ' ) ) ;
var bufferViews = model . gltf . bufferViews ;:==:var bufferView:==:bufferViews [ bufferViewId ] ;
var options = this . options ;:==:var rowHeight:==:options . rowHeight ;
var gulp = require ( ' gulp ' ) ;:==:var rimraf:==:require ( ' rimraf ' ) ;
var n = iframe . get ( ' node ' ) ;:==:var e:==:Y . one ( ' # editor iframe ' ) ;
var cancel = options . cancel ;:==:var metadata:==:options . metadata ;
var textFieldTestObject = require ( path . resolve ( fieldTestObjectsPath , ' textFieldTestObject ' ) ) ;:==:var markdownFieldTestObject:==:require ( path . resolve ( fieldTestObjectsPath , ' markdownFieldTestObject ' ) ) ;
var shims = bowerDeps [ ' ember - cli - shims ' ] & & checker . for ( ' ember - cli - shims ' , ' bower ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var anchor = options . anchor  |  |  source . position ;:==:var forceFunction:==:options . forceFunction ;
var dynCall_viiddddddiiii = Module [ ' dynCall_viiddddddiiii ' ] = asm [ ' dynCall_viiddddddiiii ' ] ;:==:var dynCall_iiiiiiiiiiiidd:==:Module [ ' dynCall_iiiiiiiiiiiidd ' ]    asm [ ' dynCall_iiiiiiiiiiiidd ' ] ;
var after_close = ( $ . isFunction ( params . after_close ) ) ? params . after_close : function ( ) ;:==:var wrap:==:$ ( ' # gritter - notice - wrapper ' ) ;
var Ref = corePrimitives . ref ;:==:var localPdfManager:==:corePdfManager . localPdfManager ;
var parent = opts . parent  |  |  null ;:==:var client:==:opts . client ;
var nodeA = new goog . ui . tree . treeNode ( ' nodea ' ) ;:==:var nodeb:==:new goog . ui . tree . treeNode ( ' nodeb ' ) ;
var n = vertices . length ;:==:var face:==:geometry . faces [ i ] ;
var from = fileUtils . splitPath ( fromFile . parent ) ;:==:var to:==:fileUtils . splitPath ( toFile ) ;
var alice = Ledger . findOne ( name : ' alice ' , world : test . runId ( ) ) ;:==:var bob:==:ledger . findOne ( name : ' bob ' , world : test . runId ( ) ) ;
var decodeInlineStyleRanges = require ( ' decodeInlineStyleRanges ' ) ;:==:var generateRandomKey:==:require ( ' generateRandomKey ' ) ;
var allItems = this . els . allItems ;:==:var pagey:==:e . changedTouches ? e . changedTouches [ 0 ] . pagey : e . pagey ;
var transport = content . transport  |  |  ;:==:var candidates:==:transport . candidates  |  |  [ ] ;
var favicon = require ( ' serve - favicon ' ) ;:==:var path:==:require ( ' path ' ) ;
var position = camera . position ;:==:var p:==:Cartesian3 . normalize ( position , rotateVertScratchp ) ;
var action = form . action ;:==:var method:==:form . method ;
var endpoint = subscription . endpoint ;:==:var subscriptionId:==:subscription . subscriptionId ;
var row = this . _ grid . getOrCreateRow ( rowIndex + this . _ rowLayoutManager . _ gridOffset ) ;:==:var column:==:this . _ grid . getOrCreateColumn ( columnIndex ) ;
var test = require ( ' tap ' ) . test ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var backgroundColor = props . backgroundColor ;:==:var color:==:props . color ;
var status = _ ref . status ;:==:var statusText:==:_ ref . statusText ;
var glyph = glyphs [ i ] ;:==:var code:==:glyphs [ i ] . codePoints [ 0 ] ;
var radius = this . gaugeVisualProperties . radius ;:==:var margin:==:this . margin ;
var util = require ( ' util ' ) ;:==:var assert:==:require ( ' assert - plus ' ) ;
var cellRenderer = _ ref5 . cellRenderer ;:==:var cellSizeAndPositionGetter:==:_ ref5 . cellSizeAndPositionGetter ;
var operation = req . service . api . operations [ req . operation ] ;:==:var output:==:operation . output ;
var col = grid . columns [ 2 ] ;:==:var row:==:grid . rows [ 2 ] ;
var util = require ( ' hexo - util ' ) ;:==:var titlecase:==:require ( ' titlecase ' ) ;
var headers = obj . headers  |  |  ;:==:var r:==:request [ method ] ( obj . url ) ;
var postcss = require ( ' postcss ' ) ;:==:var table:==:require ( ' text - table ' ) ;
var deviceNameService = _ appJsServicesDeviceNameService [ ' default ' ] ;:==:var shareService:==:_ appJsServicesShareService [ ' default ' ] ;
var line = lineAtHeight ( cm . view . doc , my ) ; \n\var gutte:==:r:==:cm . options . gutters [ i ] ; \n\
var effect = effectiveMaterial . getEffect ( ) ;:==:var fillMode:==:scene . forcePointsCloud ? babylon . material . pointFillMode : ( scene . forceWireframe ? babylon . material . wireFrameFillMode : effectiveMaterial . fillMode ) ;
var mrUradio = document . getElementById ( ' mrUradio ' ) ;:==:var systemmrUcheckbox:==:document . getElementById ( ' systemmrUcheckbox ' ) ;
var domAttributeNamespaces = domPropertyConfig . domAttributeNamespaces  |  |  ;:==:var domAttributeNames:==:domPropertyConfig . domAttributeNames  |  |  ;
var scrollPositionChangeReason = _ state . scrollPositionChangeReason ;:==:var scrollTop:==:_ state . scrollTop ;
var s = selectionId & & circles . findOne ( selectionId ) ;:==:var rect:==:d3 . select ( self . node ) . select ( ' rect ' ) ;
var n = Math . min ( rows , columns ) ;:==:var data:==:object . clone ( m . _ data ) ;
var style = createElement ( ' style ' ) ;:==:var categories:==:webInspector . timelineuiUtils . categories ( ) ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var sass:==:require ( ' gulp - sass ' ) ;
var boundingBox = this . renderList . data [ boundingBoxIndex ] ;:==:var min:==:boundingBox . minimum ;
var scale = this . body . view . scale * ( 1 + this . options . keyboard . speed . zoom ) ;:==:var translation:==:this . body . view . translation ;
var MUST_USE_PROPERTY = domProperty . injection . must_use_property ;:==:var has_boolean_value:==:domProperty . injection . has_boolean_value ;
var logger = require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;:==:var admin:==:require ( ' pomelo - admin ' ) ;
var when = user . services . password . reset . when ;:==:var reason:==:user . services . password . reset . reason ;
var radii = defaultValue ( options . radii , defaultRadii ) ;:==:var stackPartitions:==:math . round ( defaultValue ( options . stackPartitions , 10 ) ) ;
var context = renderer . context ;:==:var state:==:renderer . state ;
var items = settings . items ;:==:var selected:==:$ ( this ) . data ( ' selected ' ) ;
var _ gnu = docSet . getByLongname ( ' thingy#_gnu ' ) [ 0 ] ;:==:var pez:==:docSet . getByLongname ( ' thingy#pez ' ) [ 0 ] ;
var isWP = platformInfo . iswp ;:==:var isios:==:platformInfo . isios ;
var margin = options . margin ;:==:var width:==:options . viewport . width - ( margin . left + margin . right ) ;
var N = new Schema ( _ i d : Number ) ;:==:var O:==:new Schema ( _ i d : Schema . objectId ) ;
var $ button = event . data . $ button ;:==:var button:==:event . data . button ;
var files = o . files ;:==:var index:==:o . index ;
var attributes = element . data ( ' attributes ' ) ;:==:var key:==:element . data ( ' key ' )  |  |  element . data ( ' parent ' ) ;
var generateMipMaps = options . generateMipMaps ? options . generateMipMaps : false ;:==:var generateDepthTexture:==:options . generateDepthTexture ? options . generateDepthTexture : false ;
var Transform = require ( ' readable - stream ' ) . Transform ;:==:var inherits:==:require ( ' inherits ' ) ;
var name = opts . name  |  |  gettextCatalog . getString ( ' personal wallet ' ) ;:==:var myName:==:opts . myName  |  |  gettextCatalog . getString ( ' me ' ) ;
var zmin = options . zmin ;:==:var xmax:==:options . xmax ;
var unicodeUtils = require ( ' unicodeUtils ' ) ;:==:var getRangeClientRects:==:require ( ' getRangeClientRects ' ) ;
var levelController = this . levelController = new _ levelController2 . default ( this ) ;:==:var streamController:==:this . streamController    new _ streamController2 . default ( this ) ;
var leftTolerance = options . leftTolerance  |  |  0 ;:==:var rightTolerance:==:options . rightTolerance  |  |  0 ;
var order = options . order  |  |  1 ;:==:var unit:==:options . unit  |  |  ' px ' ;
var datarow = this . datarow ;:==:var uid:==:datarow . uid ;
var buffer = _ dereq _ ( ' buffer ' ) ;:==:var Buffer:==:buffer . Buffer ;
var logError = require ( ' logError ' ) ;:==:var requireNativeComponent:==:require ( ' requireNativeComponent ' ) ;
var y = hh + dy ;:==:var wrapDateLine:==:this . baseLayer . wrapDateLine ;
var matches = this . matches ;:==:var textDivs:==:this . textDivs ;
var c = this . dispatcher . getDebugContext ( this . _ currentBinding ( ) . elementIndex , null ) ;:==:var context:==:lang_1 . isPresent ( c ) ? new _ context ( c . element , c . componentElement , c . context , c . locals , c . injector , this . _ currentBinding ( ) . debug ) : null ;
var data = this . data ;:==:var margin:==:this . margin ;
var vm = require ( ' vm ' ) ;:==:var through:==:require ( ' through2 ' ) ;
var position = positionScratch ;:==:var st:==:stScratch ;
var Key = _ elementUtilities . key ;:==:var createEvent:==:_ events . _ createEventProperty ;
var interface = interfaces [ i ] ;:==:var opt:==:document . createElement ( ' option ' ) ;
var lightBluea100 = exports . lightBluea100 = ' # 80d8ff ' ;:==:var lightBluea200:==:exports . lightBluea200    ' # 40c4ff ' ;
var deltaX = last . deltaX - input . deltaX ;:==:var deltaY:==:last . deltaY - input . deltaY ;
var smask = this . smask ;:==:var mask:==:this . mask ;
var decorator = decoratorPath . node ;:==:var expression:==:decorator . expression ;
var debug = imports [ ' debugger ' ] ;:==:var Coverage:==:test . Coverage ;
var debug = imports . debugger ;:==:var settings:==:imports . settings ;
var retry = require ( ' retry ' ) ;:==:var hasOwn:==:object . prototype . hasOwnProperty ;
var rotate = options . rotate ;:==:var scaleX:==:options . scaleX ;
var VALUE = C . VALUE = 0x71 ;:==:var KEY:==:C . KEY     0x72 ;
var dynCall_fiii = Module [ ' dynCall_fiii ' ] = asm [ ' dynCall_fiii ' ] ;:==:var dynCall_viiidi:==:Module [ ' dynCall_viiidi ' ]    asm [ ' dynCall_viiidi ' ] ;
var tryCatch4 = util . tryCatch4 ;:==:var tryCatch3:==:util . tryCatch3 ;
var fillColor = label . _ fillColor ;:==:var outlineColor:==:label . _ outlineColor ;
var tag = el . tag ;:==:var type:==:el . attrsMap . type ;
var sinon = require ( ' sinon ' ) ;:==:var should:==:require ( ' should ' ) ;
var NAMESPACE_ERR     = exceptionCode . namespace_err    = ( ( exceptionMessage [ 14 ] = ' invalid namespace ' ) , 14 ) ;:==:var invalid_access_err:==:exceptionCode . invalid_access_err     ( ( exceptionMessage [ 15 ]   ' invalid access ' ) , 15 ) ;
var param = _ param ;:==:var pos:==:_ pos ;
var x = wc . x ;:==:var y:==:wc . y ;
var leavingView = this . leavingView ;:==:var opts:==:this . opts ;
var requirejs = require ( ' requirejs ' ) ;:==:var fs:==:require ( ' fs ' ) ;
var isSingleProp = schema . isSingleProperty ;:==:var styleParser:==:utils . styleParser ;
var closed = defaultValue ( options . closed , false ) ;:==:var materialSupport:==:defaultValue ( options . materialSupport , materialAppearance . materialSupport . textured ) ;
var isValidNewOption = _ props . isValidNewOption ;:==:var newOptionCreator:==:_ props . newOptionCreator ;
var compass = this . compass ;:==:var gulp:==:this . gulp ;
var util = require ( ' util ' ) ;:==:var Readable:==:Stream . Readable ;
var node = nodesToInsert [ i ] ;:==:var request:==:node . request ( ) ;
var sourceEl = this . sourceEl ;:==:var sceneEl:==:sourceEl . sceneEl ;
var option = this . option ;:==:var precision:==:option . precision ;
var DISTANCE_DISPLAY_CONDITION = Polyline . DISTANCE_DISPLAY_CONDITION = 5 ;:==:var NUMBER_OF_PROPERTIES:==:Polyline . NUMBER_OF_PROPERTIES    6 ;
var flaverr = require ( ' flaverr ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var operatorNode = math . expression . node . operatorNode ;:==:var derivative:==:math . derivative ;
var start = range . start ;:==:var end:==:range . end ;
var assert = require ( ' assert - diff ' ) ;:==:var sinon:==:require ( ' sinon ' ) ;
var dtlsTransport = transceiver . dtlsTransport ;:==:var localCapabilities:==:transceiver . localCapabilities ;
var y = node . getAttribute ( ' y ' )  |  |  0 ;:==:var width:==:node . getAttribute ( ' width ' )  |  |  formObject . width ;
var browser = _ ref . browserInfo . browser ;:==:var css:==:_ ref . prefix . css ;
var colorIdx = get ( scope , ' colorIdx ' )  |  |  0 ;:==:var colorNameMap:==:get ( scope , ' colorNameMap ' )  |  |  set ( scope , ' colorNameMap ' , ) ;
var data = $ element . data ( ) ;:==:var options:==:this . options ;
var options = me . options ;:==:var canvas:==:chart . canvas ;
var node = startnode ;:==:var len:==:( 0 - startnode . length )  |  |  0 ;
var path = require ( ' path ' ) ;:==:var execFileSync:==:require ( ' child_process ' ) . execFileSync ;
var height = op . height > op . minH?op . height : op . minH ;:==:var width:==:op . width > op . minW?op . width : op . minW ;
var name = $ ( ' # name ' ) . val ( ) ;:==:var score:==:$ ( ' # score ' ) . val ( ) ;
var optimist = require ( ' optimist ' ) ;:==:var os:==:require ( ' os ' ) ;
var dynCall_iiiiiii = Module [ ' dynCall_iiiiiii ' ] = asm [ ' dynCall_iiiiiii ' ] ;:==:var dynCall_iiiii:==:Module [ ' dynCall_iiiii ' ]    asm [ ' dynCall_iiiii ' ] ;
var assert = sharedUtil . assert ;:==:var bytesToString:==:sharedUtil . bytesToString ;
var dx1 = w * Math . max ( 0 , Math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx1 ' , this . dx1 ) ) ) ) ;:==:var dx2:==:w * math . max ( 0 , math . min ( w , parseFloat ( mxUtils . getValue ( this . style , ' dx2 ' , this . dx2 ) ) ) ) ;
var masksets = $ input . data ( ' _ inputmask ' ) [ ' masksets ' ] ;:==:var activeMasksetIndex:==:$ input . data ( ' _ inputmask ' ) [ ' activeMasksetIndex ' ] ;
var callbackParameterName = defined ( request . callbackParameterName , this . callbackParameterName ) ;:==:var formatQueryString:==:defined ( request . formatQueryString , this . formatQueryString ) ;
var sourcemaps = require ( ' gulp - sourcemaps ' ) ;:==:var insert:==:require ( ' gulp - insert ' ) ;
var up = Cartesian3 . clone ( camera . up ) ;:==:var right:==:Cartesian3 . clone ( camera . right ) ;
var barPos = math . max ( 0 , math . min ( 100 , parseFloat ( mxUtils . getValue ( this . state . style , ' barPos ' , this . barPos ) ) ) ) ;:==:var barh:==:parseFloat ( mxUtils . getValue ( this . state . style , ' barHeight ' , this . barHeight ) ) ;
var parseTreeType = traceur . syntax . trees . parseTreeType ;:==:var tempVarTransformer:==:traceur . codegeneration . tempVarTransformer ;
var DateTimeSymbols_ar = goog . require ( ' goog . i18n . DateTimeSymbols_ar ' ) ;:==:var DateTimeSymbols_en:==:goog . require ( ' goog . i18n . DateTimeSymbols_en ' ) ;
var top = drawOptions . top ;:==:var margin:==:drawOptions . margin ;
var charstring = charstrings [ i ] ;:==:var width:==:' width ' in charstring ? charstring . width : 0 ;
var cssProperty = require ( ' cssProperty ' ) ;:==:var isUnitlessNumber:==:cssProperty . isUnitlessNumber ;
var containmentEdges = this . containmentEdges ;:==:var firstEdgeIndexes:==:this . _ firstEdgeIndexes ;
var APN_PROPERTY_DEFAULTS = apnEditorConst . apn_property_defaults ;:==:var value_converters:==:apnEditorConst . value_converters ;
var tMax = tmpVecb . copy ( this . getMax ( ) ) . sub ( ray . origin ) . data ;:==:var dir:==:ray . direction . data ;
var model = this . model ;:==:var title:==:model . get ( ' name ' )  |  |  ecModel . get ( ' title . 0 . text ' )  |  |  ' echarts ' ;
var path = require ( ' path ' ) ;:==:var serve:==:require ( ' serve - static ' ) ;
var errorMessage = observable . errorMessage ;:==:var errorMessages:==:observable . errorMessages ;
var methods = params . methods ;:==:var events:==:params . events ;
var quasiLiteralPortion = traceur . syntax . trees . quasiLiteralPortion ;:==:var quasiSubstitution:==:traceur . syntax . trees . quasiSubstitution ;
var attributes = this . transformList ( tree . attributes ) ;:==:var children:==:this . transformList ( tree . children ) ;
var editor = this . editor ;:==:var inSelection:==:e . inSelection ( ) ;
var Plugin = imports . Plugin ;:==:var tabManager:==:imports . tabManager ;
var editor1 = window . editor1 = splitEditor . editor0 ;:==:var editor2:==:window . editor2    splitEditor . editor1 ;
var x2 = parsePercent ( positionInfo . x2 , containerWidth ) ;:==:var y2:==:parsePercent ( positionInfo . y2 , containerHeight ) ;
var styleSheet = require ( ' f8StyleSheet ' ) ;:==:var text:==:require ( ' f8Text ' ) ;
var graphics = this . graphics _ ;:==:var theme:==:this . theme _ ;
var p = new jsbn ( params . p ) ;:==:var a:==:new jsbn ( params . a ) ;
var glyph = glyphs [ i ] ;:==:var code:==:glyph . codePoints [ 0 ] ;
var shouldUpdateReactComponent = require ( ' shouldUpdateReactComponent ' ) ;:==:var traverseStackChildren:==:require ( ' traverseStackChildren ' ) ;
var gulp = require ( ' gulp - help ' ) ( require ( ' gulp ' ) ) ;:==:var through:==:require ( ' through2 ' ) ;
var root = config . root ;:==:var file:==:config . file ;
var test1 = jasmine . createSpy ( ' test1 ' ) ;:==:var test2:==:jasmine . createSpy ( ' test2 ' ) ;
var currentLevel = this . currentLevel ;:==:var level:==:this . levels [ currentLevel ] ;
var y = obj . y = = null ? 0 . 5 : obj . y ;:==:var r:==:obj . r     null ? 0 . 5 : obj . r ;
var headers = options . headers ;:==:var overrideMimeType:==:options . overrideMimeType ;
var outputClassSuccess = options . outputClassSuccess  |  |  ' ' ;:==:var outputClassFailure:==:options . outputClassFailure  |  |  ' text - error ' ;
var sy = t . sy ;:==:var r:==:obj . radius ;
var cssClass = theme . cssClass ;:==:var div:==:document . createElement ( ' div ' ) ;
var front = this . _ front ;:==:var length:==:this . _ length ;
var insert = inserts [ i ] ;:==:var entry:==:insert . entry ;
var isHold = e . isHold ;:==:var kind:==:e . kind ;
var cipherTransformFactory = coreCrypto . cipherTransformFactory ;:==:var lexer:==:coreParser . lexer ;
var extrapolate = opt_extrapolate ! = = undefined ? opt_extrapolate : false ;:==:var interpolate:==:opt_interpolate !    undefined ? opt_interpolate : false ;
var settings = this . settings = visuals . dataConversion . defaultSlicerProperties ( ) ;:==:var domHelper:==:this . domHelper ;
var eventEmitter = require ( ' events ' ) . eventEmitter ;:==:var token:==:require ( ' cst ' ) . token ;
var hash = location . hash ;:==:var shareId:==:session . shareId ;
var Finally = traceur . syntax . trees . Finally ;:==:var forOfStatement:==:traceur . syntax . trees . forOfStatement ;
var onRowMouseOver = _ props3 . onRowMouseOver ;:==:var onRowMouseOut:==:_ props3 . onRowMouseOut ;
var spaces = spine . Utils . setArraySize ( this . spaces , spacesCount ) , lengths = null ;:==:var spacing:==:this . spacing ;
var c = worldTransform . c ;:==:var d:==:worldTransform . d ;
var orientation = this . options . orientation ;:==:var showMinorLabels:==:this . options . showMinorLabels ;
var ctx = this . ctx ;:==:var font:==:this . current . font ;
var View = Hilo . View ;:==:var Drawable:==:Hilo . Drawable ;
var express = require ( ' express ' ) ;:==:var parseServer:==:require ( ' parse - server ' ) . parseServer ;
var HIDE_SPINNER = exports . HIDE_SPINNER = ' HIDE_SPINNER ' ;:==:var GET_GITHUB_INITIATE:==:exports . GET_GITHUB_INITIATE    ' GET_GITHUB_INITIATE ' ;
var stop = options . stop ;:==:var isStartIncluded:==:options . isStartIncluded ;
var pending = this . pendingTabs _ . shift ( ) ;:==:var index:==:this . tabBar _ . indexOfChild ( pending ) ;
var color = e . color ;:==:var fillAlpha:==:g . getNumericOption ( ' fillAlpha ' , setName ) ;
var nodesWereRemoved = scope . nodesWereRemoved ;:==:var registerWrapper:==:scope . registerWrapper ;
var proc = imports . proc ;:==:var http:==:imports . http ;
var createArgumentList = parseTreeFactory . createArgumentList ;:==:var createBindingIdentifier:==:parseTreeFactory . createBindingIdentifier ;
var rename = require ( ' gulp - rename ' ) ;:==:var sass:==:require ( ' gulp - sass ' ) ;
var unicodeUtils = require ( ' unicodeUtils ' ) ;:==:var findRangesImmutable:==:require ( ' findRangesImmutable ' ) ;
var replace = require ( ' gulp - replace ' ) ;:==:var inject:==:require ( ' gulp - inject ' ) ;
var edgeVertexb = spheretrimesh_edgevertexb ;:==:var edgeVector:==:spheretrimesh_edgevector ;
var p1 = triangleNode . getAttribute ( ' p1 ' ) ;:==:var p2:==:triangleNode . getAttribute ( ' p2 ' ) ;
var Replacer = goog . require ( ' goog . testing . propertyReplacer ' ) ;:==:var jsunit:==:goog . require ( ' goog . testing . jsunit ' ) ;
var debug   = require ( ' debug ' ) ( ' pm2 : cli ' ) ;:==:var util:==:require ( ' util ' ) ;
var filepath = item . filepath ;:==:var dialog:==:this . dialog ;
var c = classes [ i ] ;:==:var a:==:className2Author ( c ) ;
var Debug = debug . Debug ;:==:var liveEdit:==:debug . liveEdit ;
var func = _ react . propTypes . func ;:==:var object:==:_ react . propTypes . object ;
var shallowEqual = require ( ' shallowEqual ' ) ;:==:var translatedomPositionxy:==:require ( ' translatedomPositionxy ' ) ;
var state = notification . payload . $ state  |  |  false ;:==:var stateParams:==:notification . payload . $ stateParams  |  |  ;
var isDef = angular . isDefined ;:==:var style:==:( document . body  |  |  document . documentElement ) . style ;
var el = this . el ;:==:var uuid:==:el . getObject3d ( ' mesh ' ) . material . uuid ;
var MONGODB_NEW = nconf . get ( ' MONGODB_NEW ' ) ;:==:var mongoClient:==:mongodb . mongoClient ;
var startAngle = shape . startAngle ;:==:var endAngle:==:shape . endAngle ;
var minDvrWindow = model . get ( ' minDvrWindow ' ) ;:==:var streamType:==:utils . streamType ( duration , minDvrWindow ) ;
var caretA = data . caretA ;:==:var caretB:==:data . caretB ;
var send = require ( ' send ' ) ;:==:var url:==:require ( ' url ' ) ;
var url = ref . url ;:==:var headers:==:ref . headers ;
var win = window . wrappedjsObject ;:==:var mgmt:==:win . navigator . mozApps . mgmt ;
var timeThreshold = options ? options . timeThreshold : null ;:==:var ignoreIsFinished:==:( options & & options . ignoreIsFinished ) ? true : false ;
var allTests = goog . global [ ' g_paralleltestrunner ' ] [ ' allTests ' ] ;:==:var parallelFrames:==:goog . global [ ' g_paralleltestrunner ' ] [ ' parallelFrames ' ] ;
var k = _ k ;:==:var acc:==:_ acc ;
var assert = require ( ' chai ' ) . assert ;:==:var spawn:==:require ( ' child_process ' ) . spawn ;
var extrudedHeight = options . extrudedHeight ;:==:var stRotation:==:options . stRotation ;
var width = _ props6 . width ;:==:var scrollbarSize:==:this . _ scrollbarSize ;
var semiMajorAxis = ellipse . semiMajorAxis ;:==:var semiMinorAxis:==:ellipse . semiMinorAxis ;
var va = getEdgeVector_va ;:==:var vb:==:getEdgeVector_vb ;
var offsetTF = this . morph . _ offsetTF ;:==:var baseData:==:this . morph . _ baseData ;
var closeOnContent = mfp . st . closeOnContentClick ;:==:var closeOnBg:==:mfp . st . closeOnBgClick ;
var b = observable ( 3 ) ;:==:var c:==:computed ( function ( ) return String ( a . get ( ) * b . get ( ) ) ) ;
var tab1 = new goog . ui . Tab ( ' tab1 ' ) ;:==:var tab2:==:new goog . ui . Tab ( ' tab2 ' ) ;
var CLASS_DECLARATION = parseTreeType . class_declaration ;:==:var export_declaration:==:parseTreeType . export_declaration ;
var selector = ( typeof selector ! = ' undefined ' ) ? selector : that . selector ;:==:var scope:==:( typeof scope !   ' undefined ' ) ? scope : that . scope ;
var validator = require ( ' validator ' ) ;:==:var winston:==:require ( ' winston ' ) ;
var after = method . isStatic ? afterListeners : afterListeners [ ' prototype ' ] ;:==:var m:==:method . isStatic ? method . name : ' prototype . ' + method . name ;
var Unit = math . type . Unit ;:==:var resultSet:==:math . type . resultSet ;
var measureSvgTextWidth = powerbi . textMeasurementService . measureSvgTextWidth ;:==:var measureSvgTextHeight:==:powerbi . textMeasurementService . measureSvgTextHeight ;
var interval = result . interval ;:==:var niceTickExtent:==:result . niceTickExtent ;
var SCRIPT = ' SCRIPT ' ;:==:var SET_ACCESSOR:==:' SET_ACCESSOR ' ;
var a = ' blah ' + i ;:==:var b:==:' blah ' + ( 1000 - i ) ;
var pg = helper . pg ;:==:var config:==:helper . config ;
var emberNew = blueprintHelpers . emberNew ;:==:var emberGenerateDestroy:==:blueprintHelpers . emberGenerateDestroy ;
var westNormal = this . westNormal ;:==:var southNormal:==:this . southNormal ;
var width = _ props4 . width ;:==:var isScrolling:==:this . state . isScrolling ;
var item = result . rows . item ( i ) ;:==:var metadata:==:vuvuzela . parse ( item . metadata ) ;
var vm = require ( ' vm ' ) ;:==:var path:==:require ( ' path ' ) ;
var H = bb . H , D = bb . D , W = bb . W ;:==:var svg:==:this . chtmLsvg ( child , bb , t ) ;
var E2E = ! ! options . E2E ;:==:var DEV:==:! ! options . DEV ;
var router = root . $ router ;:==:var route:==:root . $ route ;
var stRotation = options . stRotation ;:==:var wall:==:options . wall ;
var revert = params . revert ! = = false ;:==:var orphan:==:params . orphan      true ;
var f = o . f ;:==:var fAsync:==:o . fAsync ;
var childNodes = element . childNodes ;:==:var len:==:childNodes . length ;
var RLM = goog . i18n . bidi . Format . RLM ;:==:var LRE:==:goog . i18n . bidi . Format . LRE ;
var boundary = source . boundary ;:==:var x:==:boundary ? boundary . x : null ;
var sy = step . sy ;:==:var ex:==:step . ex ;
var width = canvasEl . style . width ;:==:var height:==:canvasEl . style . height ;
var displayName = _ treeSnapshot$instanc2 . displayName ;:==:var ownerid:==:_ treeSnapshot$instanc2 . ownerid ;
var props = inst . _ currentElement . props ;:==:var checked:==:props . checked ;
var CASE_CLAUSE = ' CASE_CLAUSE ' ;:==:var CATCH:==:' CATCH ' ;
var supportConstantFonts = exports . supportConstantFonts = ' arial | century | comic | courier | cursive | fantasy | garamond | georgia | helvetica | impact | lucida | symbol | system | tahoma | times | trebuchet | utopia | verdana | webdings | sans - serif | serif | monospace ' ;:==:var numRe:==:exports . numRe    ' \\- ? ( ? : ( ? : [ 0 - 9 ] + )  |  ( ? : [ 0 - 9 ] * \\ . [ 0 - 9 ] + ) ) ' ;
var merge = require ( ' event - stream ' ) . merge ;:==:var path:==:require ( ' canonical - path ' ) ;
var caption = options . caption ;:==:var index:==:options . index  |  |  100 ;
var r = frustum . right ;:==:var l:==:frustum . left ;
var interveningWhitespacePos = this . interveningWhitespacePos ;:==:var leftCurlyCount:==:this . leftCurlyCount ;
var xml2js = require ( ' xml2js ' ) ;:==:var parseString:==:xml2js . parseString ;
var C = CMD . C ;:==:var L:==:CMD . L ;
var add = domTokenList . prototype . add ;:==:var remove:==:domTokenList . prototype . remove ;
var hatchingPotions = _ getFormattedItemReference ( ' items . hatchingPotions ' , _ . keys ( content . hatchingPotions ) , ' numeric quantity ' ) ;:==:var pets:==:_ getFormattedItemReference ( ' items . pets ' , _ . keys ( content . petInfo ) , ' -1 : owns mount , 0 : not owned , 1 - 49 : progress to mount ' ) ;
var name = $ ( this ) . attr ( ' name ' ) ;:==:var getter:==:GETTER [ $ ( this ) . data ( ' getter ' ) ] ;
var thead = dom . createElement ( ' thead ' ) ;:==:var tbody:==:dom . createElement ( ' tbody ' ) ;
var editors = imports . editors ;:==:var anims:==:imports . anims ;
var data = device . data . bind ( this ) ;:==:var setup:==:device . setup ;
var styleParser = utils . styleParser ;:==:var warn:==:utils . debug ( ' core : component : warn ' ) ;
var tintFn = this . tintFn ;:==:var base:==:this . base ;
var utm = require ( ' utm - params ' ) ;:==:var uuid:==:require ( ' uuid ' ) ;
var raw = callsite . raw ;:==:var len:==:raw . length > > > 0 ;
var r = window . document . selection . createRange ( ) ;:==:var type:==:window . document . selection . type . toUpperCase ( ) ;
var undoManager = imports . undoManager ;:==:var reportError:==:imports . error_handler . reportError ;
var moveSelectionForward = require ( ' moveSelectionForward ' ) ;:==:var removeTextWithStrategy:==:require ( ' removeTextWithStrategy ' ) ;
var section = sections [ commit . type ] ;:==:var component:==:commit . component  |  |  EMPTY_COMPONENT ;
var path = require ( ' path ' ) ;:==:var dir:==:path . resolve ( _ _ dirname , ' . . ' , ' fixtures ' , ' events ' ) ;
var secondAxis = cartesian3 . normalize ( cartesian3 . cross ( reference , firstAxis , secondAxisScratch ) , secondAxisScratch ) ;:==:var thirdAxis:==:cartesian3 . normalize ( cartesian3 . cross ( firstAxis , secondAxis , thirdAxisScratch ) , thirdAxisScratch ) ;
var OUTLINE_WIDTH_INDEX = pointPrimitive . outline_width_index = 4 ;:==:var pixel_size_index:==:pointPrimitive . pixel_size_index    5 ;
var webdriver = require ( ' gulp - webdriver ' ) ;:==:var webserver:==:require ( ' gulp - webserver ' ) ;
var subdivisions = Property . getValueOrUndefined ( ellipsoid . subdivisions , time ) ;:==:var outlineWidth:==:property . getValueOrDefault ( ellipsoid . outlineWidth , time , 1 . 0 ) ;
var x = intersectInfo . _ localPickPosition . x - w ;:==:var y:==:intersectInfo . _ localPickPosition . y - h ;
var img = document . createElement ( ' img ' ) ;:==:var div:==:document . createElement ( ' div ' ) ;
var hoverLineStyle = seriesScope & & seriesScope . hoverLineStyle ;:==:var labelModel:==:seriesScope & & seriesScope . labelModel ;
var innerStyle = props . innerStyle ;:==:var opacity:==:props . opacity ;
var x = data . x = = = 0 ? zeroScale : data . x ;:==:var y:==:data . y      0 ? zeroScale : data . y ;
var h = d . i d _ * 16 * a . cache_y_stride _ ;:==:var i:==:d . i d _ * 8 * a . cache_uv_stride _ ;
var i d = identify . userId ( ) ;:==:var traits:==:identify . traits ( ) ;
var utils = elliptic . utils ;:==:var getNAF:==:utils . getNAF ;
var tab = object . tab . n ;:==:var def:==:object . def ;
var cos = Math . cos ;:==:var abs:==:Math . abs ;
var error = require ( ' http - error ' ) ;:==:var http:==:require ( ' http ' ) ;
var mkdirp = require ( ' mkdirp ' ) ;:==:var path:==:require ( ' path ' ) ;
var scrollTop = this . $ window . scrollTop ( ) ;:==:var options:==:this . options ;
var writeBits = this . sandbox . spy ( lcd , ' writeBits ' ) ;:==:var pulse:==:this . sandbox . spy ( lcd , ' pulse ' ) ;
var exportStarBinding = $ _ _ 6 . exportStarBindings [ index ] ;:==:var moduleBinding:==:$ _ _ 6 . moduleBindings [ index ] ;
var glob = require ( ' glob ' ) . sync ;:==:var uglify:==:require ( ' gulp - uglify ' ) ;
var gulp = require ( ' gulp ' ) ;:==:var bundler:==:require ( ' aurelia - bundler ' ) ;
var groupByEveryn = require ( ' groupByEveryn ' ) ;:==:var logError:==:require ( ' logError ' ) ;
var debug = require ( ' debug ' ) ( ' loopback : test : relations . integration ' ) ;:==:var async:==:require ( ' async ' ) ;
var f = document . getElementById ( ' state - frame ' ) ;:==:var d:==:f . contentDocument  |  |  f . contentWindow . document ;
var Promise = goog . require ( ' goog . Promise ' ) ;:==:var tagName:==:goog . require ( ' goog . dom . tagName ' ) ;
var width = info . width ;:==:var height:==:info . height ;
var isSingleProperty = schema . isSingleProperty ;:==:var parseProperties:==:schema . parseProperties ;
var test = node . test ;:==:var consequent:==:node . consequent ;
var extraMetadata = aspect . extraMetadata ;:==:var uri:==:extraMetadata . uri  |  |  extraMetadata . i d ;
var debugButton = document . getElementById ( ' debugButton1600 ' ) ;:==:var scene:==:engine . scenes [ 0 ] ;
var space = HTMLCSS . TeX . nulldelimiterspace * this . mscale ;:==:var style:==:span . childNodes [ htmlcss . msiePaddingWidthBug ? 1 : 0 ] . style ;
var isFactory = _ _ webpack_require _ _ ( 5 ) . isFactory ;:==:var traverse:==:_ _ webpack_require _ _ ( 5 ) . traverse ;
var x = 1 + dx * i ;:==:var y:==:dy * v ;
var cst = require ( ' cst ' ) ;:==:var Parser:==:cst . Parser ;
var vc = sphereTrimesh_vc ;:==:var normal:==:sphereTrimesh_normal ;
var s = this . actualSize ;:==:var a:==:this . actualScale ;
var mimetype = mimetypeNode & & mimetypeNode . value ;:==:var filePath:==:filePathNode . value ;
var Common = window . parent . Common ;:==:var networkUsageAlarm:==:window . parent . networkUsageAlarm ;
var clientWidth = document . getElementById ( ' clientWidth ' ) ;:==:var abs1:==:document . getElementById ( ' abs1 ' ) ;
var page = client . api . page . simplePageObj ( ) ;:==:var section:==:page . section . signUp ;
var src = srcRecords [ protoIndex ] ;:==:var dst:==:_ cloneAndUpdateIndexes ( src , dstRecords , indexMap ) ;
var autoFocusUtils = require ( ' autoFocusUtils ' ) ;:==:var cssPropertyOperations:==:require ( ' cssPropertyOperations ' ) ;
var reactInstrumentation = require ( ' reactInstrumentation ' ) ;:==:var createMicrosoftUnsafeLocalFunction:==:require ( ' createMicrosoftUnsafeLocalFunction ' ) ;
var path = require ( ' path ' ) ;:==:var version:==:process . versions . node . split ( ' . ' )  |  |  [ null , null , null ] ;
var sel = cm . state . vim . sel ;:==:var head:==:sel . head ;
var dynCall_viffiii = Module [ ' dynCall_viffiii ' ] = asm [ ' dynCall_viffiii ' ] ;:==:var dynCall_vf:==:Module [ ' dynCall_vf ' ]    asm [ ' dynCall_vf ' ] ;
var magenta = game . add . sprite ( 0 , 0 , ' magenta ' ) ;:==:var yellow:==:game . add . sprite ( 16 , 0 , ' yellow ' ) ;
var componentType = nextInstruction . componentType ;:==:var childRouter:==:this . _ parentRouter . childRouter ( componentType ) ;
var culture = this . culture _ ;:==:var hidpi:==:this . hidpi _ ;
var subdivisions = options . subdivisions  |  |  1 ;:==:var minHeight:==:options . minHeight ;
var video = document . getElementById ( ' video ' ) ;:==:var btnPlay:==:document . getElementById ( ' btnPlay ' ) ;
var lines = c . lines ;:==:var end:==:c . end ;
var dx = Math . max ( 0 , Math . min ( bounds . width , parseFloat ( mxUtils . getValue ( this . state . style , ' dx ' , this . dx ) ) ) ) ;:==:var dy:==:math . max ( 0 , math . min ( arrowHead , parseFloat ( mxUtils . getValue ( this . state . style , ' dy ' , this . dy ) ) ) ) ;
var line = this . dom . line ;:==:var dot:==:this . dom . dot ;
var db = BrowserDB . db . _ db ;:==:var transaction:==:db . transaction ( ' places ' , ' readwrite ' ) ;
var prev = node . previousSibling ;:==:var next:==:node . nextSibling ;
var compression = data . getAttribute ( ' compression ' ) ;:==:var encoding:==:data . getAttribute ( ' encoding ' ) ;
var b = goog . Promise . resolve ( ' b ' ) ;:==:var c:==:' c ' ;
var options = opt_options ? opt_options : ;:==:var className:==:options . className !    undefined ? options . className : ' ol - zoom ' ;
var script = scripts [ scripts . length - 1 ] ;:==:var modules:==:script . getAttribute ( ' data - modules ' ) ;
var includeAncestor = options & & options . includeAncestor ;:==:var fullyContains:==:options & & options . fullyContains ;
var radius = drawOptions . radius ;:==:var transformString:==:drawOptions . transformString ;
var ctx = this . ctx ;:==:var drawOrder:==:skeleton . drawOrder ;
var logger = require ( ' pomelo - logger ' ) . getLogger ( ' pomelo ' , _ _ filename ) ;:==:var fs:==:require ( ' fs ' ) ;
var hasMargin = this . _ hasMargin ;:==:var hasPadding:==:this . _ hasPadding ;
var normal = intersectCapsule_normal ;:==:var l0:==:intersectCapsule_l0 ;
var p = this . _ props ;:==:var radiusX:==:p . radiusX !   null ? p . radiusX : p . radius ;
var localAABB = intersectTrimesh_localAABB ;:==:var localDirection:==:intersecttrimesh_localdirection ;
var resolution = viewState . resolution ;:==:var center:==:viewState . center ;
var cactuar = game . add . sprite ( 0 , 0 , ' atlas ' , ' cactuar ' ) ;:==:var contra:==:game . add . sprite ( 300 , 0 , ' atlas ' , ' contra1 ' ) ;
var PK_ALGOS = utils . PK_ALGOS ;:==:var invalidAlgorithmError:==:utils . invalidAlgorithmError ;
var width = texture . width ;:==:var height:==:texture . height ;
var lightBluea700 = exports . lightBluea700 = ' # 0091ea ' ;:==:var cyan50:==:exports . cyan50    ' # e0f7fa ' ;
var string = ' string ' ;:==:var boolean:==:' boolean ' ;
var MAX_SAFE_INTEGER = Number . MAX_SAFE_INTEGER  |  |  9007199254740991 ;:==:var MIN_SAFE_INTEGER:==:Number . MIN_SAFE_INTEGER  |  |  -9007199254740991 ;
var tokenType = traceur . syntax . tokenType ;:==:var block:==:traceur . syntax . trees . block ;
var sourceCache = this . sourceCache ;:==:var fileName:==:stackframe . fileName ;
var b = goog . bind ( getFoo , obj , ' hot ' ) ;:==:var p:==:goog . functions . partialRight ( b , ' dog ' ) ;
var markdownlint = require ( ' markdownlint ' ) ;:==:var glob:==:require ( ' glob ' ) ;
var subset = settings . subset ;:==:var set:==:subset ? toExpression ( subset ) : expression_escape ;
var filterOptions = _ props2 . filterOptions ;:==:var isValidNewOption:==:_ props2 . isValidNewOption ;
var chain = options . chain  |  |  deferred . promise ;:==:var toRebase:==:this . filterRebaseCommits ( toRebaseRough , stopSet , options ) ;
var s = auxs [ ind ] , nots = auxs [ 1 - ind ] ;:==:var siblingOffset:==:config . siblingOffset ;
var mixin = scope . mixin ;:==:var registerObject:==:scope . registerObject ;
var s = speed ! = = undefined ? speed : this . get ( ' animationSpeed ' ) ;:==:var e:==:easing  |  |  this . get ( ' animationEasing ' ) ;
var colorPropType = require ( ' colorPropType ' ) ;:==:var nativeMethodsMixin:==:require ( ' nativeMethodsMixin ' ) ;
var h = flags . height ;:==:var c:==:flags . channels ;
var curr = state . tokens . curr ;:==:var val:==:state . tokens . curr . value ;
var titleLayout = meta . config . titleLayout  |  |  ' pageTitle  |  browserTitle ' ;:==:var browserTitle:==:validator . escape ( string ( meta . config . browserTitle  |  |  meta . config . title  |  |  ' nodebb ' ) ) ;
var symbolSize = normalizeSymbolSize ( data . getItemVisual ( idx , ' symbolSize ' ) ) ;:==:var color:==:data . getItemVisual ( idx , ' color ' ) ;
var outlineColor = label . _ outlineColor ;:==:var outlineWidth:==:label . _ outlineWidth ;
var doc = document ;:==:var documentElement:==:doc . documentElement ;
var Runner = Mocha . Runner ;:==:var Test:==:Mocha . Test ;
var breakStatement = traceur . syntax . trees . breakStatement ;:==:var continueStatement:==:traceur . syntax . trees . continueStatement ;
var Pane = imports . Pane ;:==:var ui:==:imports . ui ;
var g = ( bigint > > 8 ) & 255 ;:==:var b:==:bigint & 255 ;
var each = zrUtil . each ;:==:var indexOf:==:zrUtil . indexOf ;
var two = this . find ( ' . togetherjs - typing - ellipse - two ' ) ;:==:var three:==:this . find ( ' . togetherjs - typing - ellipse - three ' ) ;
var cfg = cfg |  |  ;:==:var mass:==:cfg . mass  |  |  1 ;
var onshow = options . onshow  |  |  undefined ;:==:var onshown:==:options . onshown  |  |  undefined ;
var each = require ( ' each ' ) ;:==:var is:==:require ( ' is ' ) ;
var columnIndex = _ ref2 . columnIndex ;:==:var isScrolling:==:_ ref2 . isScrolling ;
var stackSize = state . stackSize ;:==:var stack:==:state . stack ;
var span = document . createElement ( ' span ' ) ;:==:var title:==:menu [ simNumber ] . entries . title ;
var item = event . detail . item ;:==:var groupItems:==:this . _ groupItems ;
var prev = record . _ prevRemoved ;:==:var next:==:record . _ nextRemoved ;
var normal = intersectPlane_normal ;:==:var len:==:intersectPlane_len ;
var contactEmail = contacts . contactEmail ;:==:var contactPhone:==:contacts . contactPhone ;
var color = this . color ;:==:var objs:==:this . objs ;
var n = _ n ;:==:var xs:==:_ xs ;
var c = -a . enc _ . dqm _ [ s ] . quant _ ;:==:var e:==:a . enc _ . dqm _ [ s ] . quant _ ;
var utils = require ( ' keystone - utils ' ) ;:==:var debug:==:require ( ' debug ' ) ( ' keystone : core : list : register ' ) ;
var gte = semver . gte ;:==:var lte:==:semver . lte ;
var w = ( proxyInjectionMode ? selenium . browserbot . getCurrentWindow ( ) : window ) . top ;:==:var s:==:' & seleniumWindowName ' ;
var leftBoundary = this . _ leftBoundary ;:==:var rightBoundary:==:this . _ rightBoundary ;
var inherits = util . inherits ;:==:var assert:==:require ( ' assert ' ) ;
var t = k . time ;:==:var p:==:k . pos ;
var tokenType = traceur . syntax . tokenType ;:==:var createArrayLiteralExpression:==:parseTreeFactory . createArrayLiteralExpression ;
var lime700 = exports . lime700 = ' # afb42b ' ;:==:var lime800:==:exports . lime800    ' # 9e9d24 ' ;
var pass = sinonStub ( sinonExpectation , ' pass ' ) ;:==:var mock:==:this . mock ;
var width = this . viewportIn . width ;:==:var height:==:this . viewport . height ;
var inherit = AWS . util . inherit ;:==:var domain:==:AWS . util . domain ;
var x = ' g . x ' ;:==:var y:==:' g . y ' ;
var gulp = require ( ' gulp ' ) ;:==:var git:==:require ( ' gulp - git ' ) ;
var dynCall_ii = Module [ ' dynCall_ii ' ] = asm [ ' dynCall_ii ' ] ;:==:var dynCall_iiii:==:Module [ ' dynCall_iiii ' ]    asm [ ' dynCall_iiii ' ] ;
var blueGrey800 = exports . blueGrey800 = ' # 37474f ' ;:==:var blueGrey900:==:exports . blueGrey900    ' # 263238 ' ;
var should = chai . should ( ) ;:==:var split:==:require ( ' split ' ) ;
var noop = $ . noop ;:==:var proxy:==:$ . proxy ;
var body = this . bodyElement ;:==:var node:==:this . node ( ) ;
var m = SIMD . Uint8x16 . fromInt32x4Bits ( simd . int32x4 ( 0x3f800000 , 0x40000000 , 0x40400000 , 0x40800000 ) ) ;:==:var n:==:simd . int32x4 . fromUint8x16Bits ( m ) ;
var KIND_PACKAGE = scopeAnalyzer . kind_package ;:==:var kind_default:==:scopeAnalyzer . kind_default ;
var points = this . points ( ) ;:==:var n:==:points . length ;
var url = this . _ networkMapping . urlForPath ( this . _ fileSystem . path ( ) , filePath ) ;:==:var extension:==:this . _ extensionForPath ( name ) ;
var e = new global . uint16Array ( buffer ) ;:==:var f:==:new global . uint32Array ( buffer ) ;
var isScalar = axisOptions . isScalar ;:==:var xScale:==:axisOptions . xScale ;
var dateLike = goog . require ( ' goog . date . dateLike ' ) ;:==:var dateRange:==:goog . require ( ' goog . date . dateRange ' ) ;
var anchor = document . getElementById ( ' anchor4 ' ) ;:==:var popup:==:document . getElementById ( ' popup1 ' ) ;
var columnGroups = method . columnGroups ;:==:var records:==:method . records ;
var enter = ref . enter ;:==:var afterEnter:==:ref . afterEnter ;
var bignum = asn1 . bignum ;:==:var der:==:asn1 . constants . der ;
var onRowClick = _ ref . onRowClick ;:==:var onRowDoubleClick:==:_ ref . onRowDoubleClick ;
var sourceLayer = this . vtLayers [ sourceLayerName ] ;:==:var feature:==:sourceLayer . feature ( match . featureIndex ) ;
var os     = require ( ' os ' ) ;:==:var domain:==:require ( ' domain ' ) ;
var properties = crs . properties ;:==:var name:==:properties & & properties . name ;
var upsert = PouchDB . utils . upsert ;:==:var utils:==:PouchDB . utils . mapReduceUtils ;
var NODE_FIELDS = exports . NODE_FIELDS = ;:==:var BUILDER_KEYS:==:exports . BUILDER_KEYS    ;
var key = options . key ;:==:var value:==:options . value ;
var c = new symbolNode ( ' c ' ) ;:==:var add:==:new operatorNode ( ' + ' , ' add ' , [ a , b , c ] ) ;
var reactNativeFeatureFlags = require ( ' reactNativeFeatureFlags ' ) ;:==:var reactNativeAttributePayload:==:require ( ' reactNativeAttributePayload ' ) ;
var min = node . getAttribute ( ' min ' ) ;:==:var max:==:node . getAttribute ( ' max ' ) ;
var loader = require ( ' @loader ' ) ;:==:var steal:==:require ( ' @steal ' ) ;
var bytesPerSample = options . bytesPerSample  |  |  defaults . bytesPerSample ;:==:var numChannels:==:options . numChannels  |  |  defaults . numChannels ;
var content = req . body . content  |  |  '' ;:==:var reply_id:==:req . body . reply_id ;
var stun = iceCandidates . stun ;:==:var turn:==:iceCandidates . turn ;
var r = ( color . r * 255 )  |  0 ;:==:var g:==:( color . g * 255 )  |  0 ;
var sub = axon . socket ( ' sub - emitter ' ) ;:==:var sub_sock:==:this . sub_sock    sub . connect ( sub_port ) ;
var exec   = require ( ' child_process ' ) . exec ;:==:var fclone:==:require ( ' fclone ' ) ;
var fs = require ( ' fs ' ) ;:==:var stream:==:require ( ' stream ' ) ;
var multiValue = _ state . multiValue ;:==:var options:==:_ state . options ;
var obfuscate = options . obfuscate  |  |  false ;:==:var keepLess:==:options . keepLess  |  |  false ;
var pDiff = this . pDiff ;:==:var vDiff:==:this . vDiff ;
var name = get_string_from_ptr ( ptr_name ) ;:==:var flags:==:get_string_from_ptr ( ptr_flags ) ;
var purple700 = exports . purple700 = ' # 7b1fa2 ' ;:==:var purple800:==:exports . purple800    ' # 6a1b9a ' ;
var externals = taffy ( members . externals ) ;:==:var interfaces:==:taffy ( members . interfaces ) ;
var arrayPattern = traceur . syntax . trees . arrayPattern ;:==:var binaryOperator:==:traceur . syntax . trees . binaryOperator ;
var path = require ( ' path ' ) ;:==:var phantomjs:==:require ( ' grunt - lib - phantomjs ' ) . init ( grunt ) ;
var options = this . options ;:==:var listView:==:this . listView ;
var unaryExpression = traceur . syntax . trees . unaryExpression ;:==:var variableDeclaration:==:traceur . syntax . trees . variableDeclaration ;
var anchor = lastSelection . anchorMark . find ( ) ;:==:var head:==:lastSelection . headMark . find ( ) ;
var debug = imports . debugger ;:==:var layout:==:imports . layout ;
var MAX_SAFE_INTEGER = Number . MAX_SAFE_INTEGER  |  |  9007199254740991 ;:==:var re:==:exports . re    [ ] ;
var inherit = _ dereq _ ( ' component - inherit ' ) ;:==:var debug:==:_ dereq _ ( ' debug ' ) ( ' engine . io - client : polling ' ) ;
var fieldName1 = comparator . fieldName1 ;:==:var fieldName2:==:comparator . fieldName2 ;
var material = first_material  |  |  new THREE . meshLambertMaterial ( color : 0xdddddd , side : geometry . doubleSided ? three . doubleSide : three . frontSide ) ;:==:var geom:==:geometry . mesh . geometry3js ;
var display = cm . display , sel = cm . view . sel ; \n\var po:==:s:==:posFromMouse ( cm , e ) , scrollPos    display . scroller . scrollTop ; \n\
var _ windowTime = this . _ windowTime ;:==:var events:==:this . events ;
var width = + props . width ;:==:var height:==:+ props . height ;
var multimeter = require ( ' pm2-multimeter ' ) ;:==:var os:==:require ( ' os ' ) ;
var start = Dom . nodeAtOffset ( range . startContainer , range . startOffset ) ;:==:var end:==:dom . nodeAtOffset ( range . endContainer , range . endOffset ) ;
var r = rgb [ 0 ] , g = rgb [ 1 ] , b = rgb [ 2 ] ;:==:var hsl:==:ntc . hsl ( color ) ;
var shape = shapeAsJson . getShape ( ) ;:==:var parent:==:this . facade . getCanvas ( ) . getChildShapeByResourceId ( shapeAsJson . parent . resourceId )  |  |  this . facade . getCanvas ( ) ;
var startPage = extensionInfo . startPage ;:==:var name:==:extensionInfo . name ;
var rightBuffers = config . rightBuffers ;:==:var sampleRate:==:config . sampleRate ;
var container = this . container ;:==:var svg:==:this . svg ;
var compile = ref . compile ;:==:var compileToFunctions:==:ref . compileToFunctions ;
var start = ' startkey ' in opts ? opts . startkey : false ;:==:var end:==:' endkey ' in opts ? opts . endkey : false ;
var context = frameState . context ;:==:var scene3dOnly:==:frameState . scene3dOnly ;
var shell = require ( ' gulp - shell ' ) ;:==:var jshint:==:require ( ' gulp - jshint ' ) ;
var imageResizeMode = require ( ' imageResizeMode ' ) ;:==:var imageStylePropTypes:==:require ( ' imageStylePropTypes ' ) ;
var font = current . font ;:==:var textRenderingMode:==:current . textRenderingMode ;
var reactNative = require ( ' reactNative ' ) ;:==:var uiManager:==:require ( ' uiManager ' ) ;
var each = require ( ' each ' ) ;:==:var integration:==:require ( ' analytics . js - integration ' ) ;
var computedJointMatrices = node . computedJointMatrices ;:==:var joints:==:node . joints ;
var attributeName = options . attributeName ;:==:var perInstanceAttribute:==:options . perInstanceAttribute ;
var grid = this . grid ;:==:var isIntersecting:==:shapes . rect . isIntersecting ;
var reactNativeGlobalResponderHandler = require ( ' reactNativeGlobalResponderHandler ' ) ;:==:var responderEventPlugin:==:require ( ' responderEventPlugin ' ) ;
var itemsIndom = this . _ itemsIndom ;:==:var items:==:this . _ items ;
var getElementsByInterface = scope . getElementsByInterface ;:==:var node:==:scope . wrappers . node ;
var some = utils . some ;:==:var keys:==:utils . keys ;
var loadResources = model . _ loadResources ;:==:var bufferViews:==:model . gltf . bufferViews ;
var preset = presets [ i ] ;:==:var throughput:==:preset . throughput  |  0 ;
var Post = hexo . model ( ' Post ' ) ;:==:var Tag:==:hexo . model ( ' Tag ' ) ;
var positions = Property . getValueOrUndefined ( corridor . positions , time , options . positions ) ;:==:var width:==:property . getValueOrUndefined ( corridor . width , time ) ;
var isArrayBuffer = sharedUtil . isArrayBuffer ;:==:var isSameOrigin:==:sharedUtil . isSameOrigin ;
var HOUR_MILLIS = exports . HOUR_MILLIS = 60 * 60 * 1000 ;:==:var DAY_MILLIS:==:exports . DAY_MILLIS    24 * 60 * 60 * 1000 ;
var attributes = batchTable . _ attributes ;:==:var attribute:==:attributes [ attributeIndex ] ;
var objectId = result . result . result . objectId ;:==:var promise:==:protocol . runtime . awaitPromise ( promiseObjectId : objectId ) ;
var async = require ( ' async ' ) ;:==:var semver:==:require ( ' semver ' ) ;
var DIRECTION_UP = gestureDetector . direction_up = ' up ' ;:==:var direction_right:==:gestureDetector . direction_right    ' right ' ;
var State = traceur . codegeneration . generator . State ;:==:var parseTreeFactory:==:traceur . codegeneration . parseTreeFactory ;
var line = type : ' line ' , x1 : 10 , x2 : 50 , y1 : 10 , y2 : 20 ;:==:var polyline:==:type : ' polyline ' , points : [ x : 0 , y : 0 , x : 20 , y : 20 ] ;
var model = models [ modelType ]  |  |  ;:==:var type:==:model . type  |  |  ' object ' ;
var shown = ssl_observatory . myGetBoolPref ( ' popup_shown ' ) ;:==:var enabled:==:ssl_observatory . myGetBoolPref ( ' enabled ' ) ;
var w = start . width + ( ( end . width - start . width ) * amount ) ;:==:var h:==:start . height + ( ( end . height - start . height ) * amount ) ;
var length = input . length ;:==:var dimension:==:opt_dimension !    undefined ? opt_dimension : 2 ;
var parseDelay = givenOptions . parseDelay  |  |  300 ;:==:var time:==:givenOptions . time  |  |  window ;
var reactComponentEnvironment = require ( ' reactComponentEnvironment ' ) ;:==:var reactCompositeComponentTypes:==:require ( ' reactCompositeComponentTypes ' ) ;
var expect = chai . expect ;:==:var eventEmitter:==:events . eventEmitter ;
var canvas = context . canvas ;:==:var width:==:canvas . width ;
var current = $ . layerdrag . current ;:==:var data:==:$ . data ( current . el , ' layer - drag ' ) ;
var stackPartitions = ellipsoid . stackPartitions ;:==:var slicePartitions:==:ellipsoid . slicePartitions ;
var notify = require ( ' gulp - notify ' ) ;:==:var exec:==:require ( ' child_process ' ) . exec ;
var children = this . _ template  |  |  this . _ children ;:==:var length:==:children . length ;
var pin = this . _ elements . pinInput . value ;:==:var newPin:==:this . _ elements . newPinInput . value ;
var children = _ props4 . children ;:==:var disableHeader:==:_ props4 . disableHeader ;
var request = this . _ requests [ i ] ;:==:var page:==:request . target ( ) . networkLog . pageLoadForRequest ( request ) ;
var cst = require ( ' cst ' ) ;:==:var Token:==:cst . Token ;
var processFlags = scope . processFlags ;:==:var entryPoint:==:findScript ( entryPointName ) ;
var fs = require ( ' fs ' ) ;:==:var dirname:==:path . dirname ;
var currency = order . first_currency ;:==:var issuer:==:order . first_issuer ;
var ejs = require ( ' ejs ' ) ;:==:var util:==:require ( ' util ' ) ;
var doc = wrap ( document ) ;:==:var a:==:document . createElement ( ' a ' ) ;
var cascadeExpression = traceur . syntax . trees . cascadeExpression ;:==:var classDeclaration:==:traceur . syntax . trees . classDeclaration ;
var img = imgs [ i ] ;:==:var data:==:img . data ;
var src = value . src ;:==:var dest:==:value . dest ;
var ui = imports . ui ;:==:var debug:==:imports [ ' plugin . debug ' ] ;
var geometry = geometries [ geometryIndex ] ;:==:var instance:==:instances [ instanceIndex ] ;
var value = props . value ;:==:var checked:==:props . checked ;
var sinon = require ( ' sinon ' ) ;:==:var clone:==:require ( ' clone ' ) ;
var x = this . canvas . _ xconvertdoMtoCanvas ( pointer . x ) ;:==:var y:==:this . canvas . _ yconvertdoMtoCanvas ( pointer . y ) ;
var skip = options . skip  |  |  0 ;:==:var limit:==:Number . isFinite ( options . limit ) ? options . limit : a . length ;
var trueHeading = e . heading . trueHeading ;:==:var timestamp:==:e . heading . timestamp ;
var cellData = _ ref . cellData ;:==:var cellDataKey:==:_ ref . cellDataKey ;
var format = require ( ' util ' ) . format ;:==:var multiline:==:require ( ' multiline ' ) . stripIndent ;
var fontSize = current . fontSize ;:==:var fontDirection:==:current . fontDirection ;
var run = Ember . run ;:==:var Application:==:Ember . Application ;
var purpleA200 = exports . purpleA200 = ' # e040fb ' ;:==:var purpleA400:==:exports . purpleA400    ' # d500f9 ' ;
var CALL = traceur . syntax . predefinedName . call ;:==:var runtime:==:traceur . syntax . predefinedName . runtime ;
var timestamp = e . coords . timestamp ;:==:var altitudeAccuracy:==:e . coords . altitudeAccuracy ;
var conflicts = diff . conflicts ;:==:var resolutions:==:diff . resolutions ;
var ceil = Math . ceil ;:==:var min:==:Math . min ;
var outlineWidth = rectangle . outlineWidth ;:==:var closeBottom:==:rectangle . closeBottom ;
var startTime = record . startTime ( ) ;:==:var endTime:==:record . endTime ( ) ;
var aSelectedIndices = this . aSelectedIndices ;:==:var iLeadIndex:==:this . iLeadIndex ;
var displayName = powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . displayName , undefined ) ;:==:var value:==:powerbi . dataViewObject . getValue ( referenceLineObject , referenceLineProps . value , 0 ) ;
var flaverr = require ( ' flaverr ' ) ;:==:var util:==:require ( ' util ' ) ;
var hotUpdateChunkFilename = compiler . options . output . hotUpdateChunkFilename ;:==:var hotUpdateMainFilename:==:compiler . options . output . hotUpdateMainFilename ;
var createBlock = parseTreeFactory . createBlock ;:==:var createBoundCall:==:parseTreeFactory . createBoundCall ;
var short = info . xhr . responseJSON . short_message  |  |  ' Kernel error ' ;:==:var traceback:==:info . xhr . responseJSON . traceback ;
var locked = parseInt ( topic . locked , 10 ) = = = 1 ;:==:var deleted:==:parseInt ( topic . deleted , 10 )      1 ;
var ip = parseip ( addr ) ;:==:var kind:==:ip . kind ( ) ;
var element = this . element ;:==:var emptyMask:==:this . _ emptyMask ;
var textOperation = firepad . textOperation ;:==:var wrappedOperation:==:firepad . wrappedOperation ;
var STATUS_LOADING_AGENTS = exports . STATUS_LOADING_AGENTS = 2 ;:==:var STATUS_ACTIVE:==:exports . STATUS_ACTIVE    3 ;
var point = this . getElementsByTagNamens ( item , this . georssns , ' point ' ) ;:==:var lat:==:this . getElementsByTagNamens ( item , this . geons , ' lat ' ) ;
var token = this . tokens [ 0 ] ;:==:var t:==:token . text ;
var User = db . model ( ' User ' , userSchema ) ;:==:var message:==:db . model ( ' message ' , messageSchema ) ;
var reactUpdateQueue = require ( ' reactUpdateQueue ' ) ;:==:var reactUpdates:==:require ( ' reactUpdates ' ) ;
var module = fileInfo . module ;:==:var name:==:fileInfo . name ;
var selectionId = powerbi . visuals . selectionId ;:==:var legendData:==:powerbi . visuals . legendData ;
var v1 = currVolumeNode . getElementsByTagName ( ' v1 ' ) [ 0 ] . textContent ;:==:var v2:==:currVolumeNode . getElementsByTagName ( ' v2 ' ) [ 0 ] . textContent ;
var tmuxName = options . tmuxName  |  |  tmuxname ;:==:var session:==:options . session ;
var winston = require ( ' winston ' ) ;:==:var jimp:==:require ( ' jimp ' ) ;
var should = chai . should ;:==:var sinon:==:require ( ' sinon ' ) ;
var p = this . model . get ( ' poster ' )  |  |  noimg ;:==:var b:==:this . model . get ( ' backdrop ' )  |  |  this . model . get ( ' poster ' )  |  |  nobg ;
var util = imports . util ;:==:var run:==:imports . run ;
var validator = lang_1 . isPresent ( extra ) ? collection_1 . stringMapWrapper . get ( extra , ' validator ' ) : null ;:==:var asyncValidator:==:lang_1 . isPresent ( extra ) ? collection_1 . stringMapWrapper . get ( extra , ' asyncValidator ' ) : null ;
var x = mathMin ( other . x , this . x ) ;:==:var y:==:mathMin ( other . y , this . y ) ;
var src = state . src ;:==:var method:==:state . method ;
var fn2 = jasmine . createSpy ( ' fn2 ' ) . and . returnValue ( ' bar ' ) ;:==:var fn3:==:jasmine . createSpy ( ' fn3 ' ) ;
var wallet = tx . wallet ? tx . wallet : profileService . getWallet ( tx . walletId ) ;:==:var config:==:configService . getSync ( ) . wallet ;
var vdom = this . vdom ;:==:var fields:==:validator . fields    [ ] ;
var stroke = this . stroke ? series . color : ' none ' ;:==:var strokeWidth:==:series . strokeWidth ? series . strokeWidth : this . strokeWidth ;
var old_pass = validator . trim ( req . body . old_pass ) ;:==:var new_pass:==:validator . trim ( req . body . new_pass ) ;
var width = defined ( options . width ) ? options . width : gl . drawingBufferWidth ;:==:var height:==:defined ( options . height ) ? options . height : gl . drawingBufferHeight ;
var createBinaryOperator = parseTreeFactory . createBinaryOperator ;:==:var createCommaExpression:==:parseTreeFactory . createCommaExpression ;
var cm    = this . cm ;:==:var lang:==:_ this . lang ;
var exchange = stdlib . Atomics . exchange ;:==:var fround:==:stdlib . Math . fround ;
var i d = i d  |  |  options . size ( ) ;:==:var option:==:chart_option_list ( ) ;
var head = obj . ranges [ 0 ] . head ;:==:var anchor:==:obj . ranges [ 0 ] . anchor ;
var reactFeatureFlags = require ( ' reactFeatureFlags ' ) ;:==:var reactInstanceMap:==:require ( ' reactInstanceMap ' ) ;
var STRING   = C . STRING   = 0xa ;:==:var NUMBER:==:C . NUMBER     0xb ;
var NUMBER_UNARY_OPERATORS = exports . NUMBER_UNARY_OPERATORS = [ ' + ' , ' - ' , ' + + ' , ' -- ' , ' ~ ' ] ;:==:var STRING_UNARY_OPERATORS:==:exports . STRING_UNARY_OPERATORS    [ ' typeof ' ] ;
var uniqueIdentifierGenerator = traceur . codegeneration . uniqueIdentifierGenerator ;:==:var options:==:traceur . options . transform ;
var height = options . height  |  |  2 ;:==:var diameterTop:==:( options . diameterTop      0 ) ? 0 : options . diameterTop  |  |  options . diameter  |  |  1 ;
var y = ( vector . x * transformation . m [ 1 ] ) + ( vector . y * transformation . m [ 5 ] ) + ( vector . z * transformation . m [ 9 ] ) + transformation . m [ 13 ] ;:==:var z:==:( vector . x * transformation . m [ 2 ] ) + ( vector . y * transformation . m [ 6 ] ) + ( vector . z * transformation . m [ 10 ] ) + transformation . m [ 14 ] ;
var attributes = this . _ attributes ;:==:var offset:==:this . _ offsets [ attributeIndex ] ;
var settings = imports . settings ;:==:var commands:==:imports . commands ;
var canvas = demo . canvas ;:==:var renderFunc:==:demo . renderFunc ;
var assert = require ( ' assert - plus ' ) ;:==:var sshpk:==:require ( ' sshpk ' ) ;
var intersectedEl = this . intersectedEl ;:==:var intersection:==:this . intersection ;
var labelPosition = props . labelPosition ;:==:var primary:==:props . primary ;
var callbacks = instance . callbacks ;:==:var document:==:instance . document ;
var offsetWidth = element . offsetWidth ;:==:var offsetHeight:==:element . offsetHeight ;
var M = Math . max ( r , g , b ) ;:==:var m:==:Math . min ( r , g , b ) ;
var msg_id = msg . parent_header . msg_id ;:==:var callbacks:==:this . get_output_callbacks_for_msg ( msg_id ) ;
var audio = element . find ( ' audio ' ) , audio_obj = audio [ 0 ] ;:==:var slider:==:element . find ( ' . stream - slider ' ) . data ( ' slider ' ) ;
var iter = step . evaluate ( ctx ) . iterator ( ) ;:==:var n:==:iter . next ( ) ;
var punct = ' punct ' ;:==:var rel:==:' rel ' ;